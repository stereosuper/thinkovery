{"version":3,"sources":["webpack:///./wp-content/themes/think/src/js/plugins/DrawSVGPlugin.js","webpack:///./wp-content/themes/think/src/js/plugins/MorphSVGPlugin.js"],"names":["_doc","_gsScope","document","_computedStyleScope","window","defaultView","getComputedStyle","_getComputedStyle","e","_numbersExp","_isEdge","navigator","userAgent","indexOf","_types","rect","circle","ellipse","line","DrawSVGPlugin","getDistance","x1","y1","x2","y2","scaleX","scaleY","parseFloat","Math","sqrt","unwrap","element","nodeType","TweenLite","selector","length","parse","value","defaultStart","i","s","undefined","substr","getLength","type","tagName","toLowerCase","bbox","points","prevPoint","rx","ry","getAttribute","getScreenCTM","a","b","d","c","getBBox","console","log","width","height","x","y","abs","style","strokeDasharray","getTotalLength","match","push","PI","getPosition","cs","dash","offset","strokeDashoffset","max","_gsDefine","plugin","propName","API","version","global","overwriteProps","init","target","tween","index","start","end","overage","_style","_target","_length","_dash","_offset","_offsetPT","_addTween","_dashPT","strokeLinecap","strokeLinejoin","strokeMiterlimit","_live","set","ratio","_firstPT","lengthRatio","_super","setRatio","call","_PI","_DEG2RAD","_svgPathExp","_selectorExp","_commands","_scientific","_atan2","atan2","_cos","cos","_sin","sin","_sqrt","_2PI","_angleMin","_angleMax","_lastLinkedAnchor","globals","_log","message","_arcToBeziers","lastX","lastY","angle","largeArcFlag","sweepFlag","angleRad","cosAngle","sinAngle","dx2","dy2","x1_sq","y1_sq","radiiCheck","rx_sq","ry_sq","sq","coef","cx1","cy1","sx2","sy2","cx","cy","ux","uy","vx","vy","temp","angleStart","acos","angleExtent","segments","ceil","rawPath","angleIncrement","controlLength","ma","mb","mc","md","_stringToRawPath","replace","m","n","path","relativeX","relativeY","twoThirds","elements","errorMessage","sx","sy","ex","ey","difX","difY","segment","j","command","isRelative","startX","startY","beziers","prevCommand","isNaN","toUpperCase","closed","totalPoints","_subdivideSegment","quantity","tally","l","newPointsPerSegment","ax","ay","cp1x","cp1y","cp2x","cp2y","bx","by","t","floor","splice","_rawPathToString","precision","space","rnd","pow","_reverseBezier","reversed","_getAverageXY","_getSize","xMax","xMin","yMax","yMin","centerX","centerY","size","_getTotalSize","samplesPerBezier","inc","k","inv","x3","x4","y3","y4","left","top","_sortByComplexity","_sortBySize","sizeA","sizeB","_offsetSegment","shapeIndex","slice","wrap","_getTotalMovement","sb","eb","offsetX","offsetY","_getClosestShapeIndex","checkReverse","sCenter","eCenter","min","minIndex","copy","_getClosestAnchor","bezier","closestDistance","closestX","closestY","dx","dy","_getClosestSegment","pool","startIndex","sortRatio","minSize","_equalizeSegmentQuantity","map","fillSafe","dif","longer","shorter","added","sortMethod","shapeIndices","reverse","sort","join","_pathFilter","precompile","_offsetPoints","text","parseInt","_equalizePointQuantity","factor","nextX","nextY","toFixed","_pointsFilter","startNums","endNums","_buildPointsFilter","_createPath","ignore","createElementNS","attr","Array","prototype","attributes","name","nodeName","setAttributeNS","nodeValue","_typeAttrs","_attrToObj","attrs","props","split","obj","_convertToPath","swap","circ","data","r","rcirc","rycirc","w","h","x5","x6","y5","y6","shift","setAttribute","_gsRawPath","parentNode","insertBefore","removeChild","_parseShape","shape","forcePath","isString","test","getAttributeNS","_populateSmoothData","tolerance","limit","smooth","a2","isSmooth","smoothData","_parseOriginFactors","v","trim","_shortAngle","_morphMessage","MorphSVGPlugin","fill","fillRule","origins","origin","p","pt","isPoly","startSmooth","endSmooth","startSeg","endSeg","precompiled","sData","eData","originFactors","useRotation","prop","defaultMap","_prop","_render","render","defaultRender","_apply","updateTarget","defaultUpdateTarget","_rnd","_tween","defaultType","smoothTolerance","_origin","_eOrigin","_rawPath","_controlPT","_next","l1s","l1c","l2s","l2c","_tweenRotation","_overwriteProps","endProp","controlPT","anchorPT","_anchorPT","easeInOut","sa","ca","sl","cl","linkedPT","so","eo","angleDif","short","pathFilter","pointsFilter","getTotalSize","subdivideRawBezier","subdivideSegment","rawPathToString","stringToRawPath","pathDataToRawBezier","equalizeSegmentQuantity","convertToPath","targets","pathDataToBezier","vars","prefix","matrix","align","relative"],"mappings":"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","file":"learningAnim~minions.js","sourcesContent":["/*!\n * VERSION: 0.2.1\n * DATE: 2019-02-07\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * DrawSVGPlugin is a Club GreenSock membership benefit; You must have a valid membership to use\n * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.\n * This work is subject to the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n */\n/* eslint-disable */\n\nimport { _gsScope } from \"gsap/TweenLite.js\";\n\nvar _doc = _gsScope.document,\n\t\t_computedStyleScope = (typeof(window) !== \"undefined\" ? window : _doc.defaultView || {getComputedStyle:function() {}}),\n\t\t_getComputedStyle = function(e) {\n\t\t\treturn _computedStyleScope.getComputedStyle(e); //to avoid errors in Microsoft Edge, we need to call getComputedStyle() from a specific scope, typically window.\n\t\t},\n\t\t_numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t\t_isEdge = (((_gsScope.navigator || {}).userAgent || \"\").indexOf(\"Edge\") !== -1), //Microsoft Edge has a bug that causes it not to redraw the path correctly if the stroke-linecap is anything other than \"butt\" (like \"round\") and it doesn't match the stroke-linejoin. A way to trigger it is to change the stroke-miterlimit, so we'll only do that if/when we have to (to maximize performance)\n\t\t_types = {rect:[\"width\",\"height\"], circle:[\"r\",\"r\"], ellipse:[\"rx\",\"ry\"], line:[\"x2\",\"y2\"]},\n\t\tDrawSVGPlugin;\n\n\tfunction getDistance(x1, y1, x2, y2, scaleX, scaleY) {\n\t\tx2 = (parseFloat(x2 || 0) - parseFloat(x1 || 0)) * scaleX;\n\t\ty2 = (parseFloat(y2 || 0) - parseFloat(y1 || 0)) * scaleY;\n\t\treturn Math.sqrt(x2 * x2 + y2 * y2);\n\t}\n\n\tfunction unwrap(element) {\n\t\tif (typeof(element) === \"string\" || !element.nodeType) {\n\t\t\telement = _gsScope.TweenLite.selector(element);\n\t\t\tif (element.length) {\n\t\t\t\telement = element[0];\n\t\t\t}\n\t\t}\n\t\treturn element;\n\t}\n\n\t//accepts values like \"100%\" or \"20% 80%\" or \"20 50\" and parses it into an absolute start and end position on the line/stroke based on its length. Returns an an array with the start and end values, like [0, 243]\n\tfunction parse(value, length, defaultStart) {\n\t\tvar i = value.indexOf(\" \"),\n\t\t\ts, e;\n\t\tif (i === -1) {\n\t\t\ts = defaultStart !== undefined ? defaultStart + \"\" : value;\n\t\t\te = value;\n\t\t} else {\n\t\t\ts = value.substr(0, i);\n\t\t\te = value.substr(i+1);\n\t\t}\n\t\ts = (s.indexOf(\"%\") !== -1) ? (parseFloat(s) / 100) * length : parseFloat(s);\n\t\te = (e.indexOf(\"%\") !== -1) ? (parseFloat(e) / 100) * length : parseFloat(e);\n\t\treturn (s > e) ? [e, s] : [s, e];\n\t}\n\n\tfunction getLength(element) {\n\t\tif (!element) {\n\t\t\treturn 0;\n\t\t}\n\t\telement = unwrap(element);\n\t\tvar type = element.tagName.toLowerCase(),\n\t\t\tscaleX = 1,\n\t\t\tscaleY = 1,\n\t\t\tlength, bbox, points, prevPoint, i, rx, ry;\n\t\tif (element.getAttribute(\"vector-effect\") === \"non-scaling-stroke\") { //non-scaling-stroke basically scales the shape and then strokes it at the screen-level (after transforms), thus we need to adjust the length accordingly.\n\t\t\tscaleY = element.getScreenCTM();\n\t\t\tscaleX = Math.sqrt(scaleY.a * scaleY.a + scaleY.b * scaleY.b);\n\t\t\tscaleY = Math.sqrt(scaleY.d * scaleY.d + scaleY.c * scaleY.c);\n\t\t}\n\t\ttry { //IE bug: calling <path>.getTotalLength() locks the repaint area of the stroke to whatever its current dimensions are on that frame/tick. To work around that, we must call getBBox() to force IE to recalculate things.\n\t\t\tbbox = element.getBBox(); //solely for fixing bug in IE - we don't actually use the bbox.\n\t\t} catch (e) {\n\t\t\t//firefox has a bug that throws an error if the element isn't visible.\n\t\t\tconsole.log(\"Error: Some browsers like Firefox won't report measurements of invisible elements (like display:none or masks inside defs).\");\n\t\t}\n\t\tif ((!bbox || (!bbox.width && !bbox.height)) && _types[type]) { //if the element isn't visible, try to discern width/height using its attributes.\n\t\t\tbbox = {\n\t\t\t\twidth: parseFloat( element.getAttribute(_types[type][0]) ),\n\t\t\t\theight: parseFloat( element.getAttribute(_types[type][1]) )\n\t\t\t};\n\t\t\tif (type !== \"rect\" && type !== \"line\") { //double the radius for circles and ellipses\n\t\t\t\tbbox.width *= 2;\n\t\t\t\tbbox.height *= 2;\n\t\t\t}\n\t\t\tif (type === \"line\") {\n\t\t\t\tbbox.x = parseFloat( element.getAttribute(\"x1\") );\n\t\t\t\tbbox.y = parseFloat( element.getAttribute(\"y1\") );\n\t\t\t\tbbox.width = Math.abs(bbox.width - bbox.x);\n\t\t\t\tbbox.height = Math.abs(bbox.height - bbox.y);\n\t\t\t}\n\t\t}\n\t\tif (type === \"path\") {\n\t\t\tprevPoint = element.style.strokeDasharray;\n\t\t\telement.style.strokeDasharray = \"none\";\n\t\t\tlength = element.getTotalLength() || 0;\n\t\t\tif (scaleX !== scaleY) {\n\t\t\t\tconsole.log(\"Warning: <path> length cannot be measured accurately when vector-effect is non-scaling-stroke and the element isn't proportionally scaled.\");\n\t\t\t}\n\t\t\tlength *= (scaleX + scaleY) / 2;\n\t\t\telement.style.strokeDasharray = prevPoint;\n\t\t} else if (type === \"rect\") {\n\t\t\tlength = bbox.width * 2 * scaleX + bbox.height * 2 * scaleY;\n\t\t} else if (type === \"line\") {\n\t\t\tlength = getDistance(bbox.x, bbox.y, bbox.x + bbox.width, bbox.y + bbox.height, scaleX, scaleY);\n\t\t} else if (type === \"polyline\" || type === \"polygon\") {\n\t\t\tpoints = element.getAttribute(\"points\").match(_numbersExp) || [];\n\t\t\tif (type === \"polygon\") {\n\t\t\t\tpoints.push(points[0], points[1]);\n\t\t\t}\n\t\t\tlength = 0;\n\t\t\tfor (i = 2; i < points.length; i+=2) {\n\t\t\t\tlength += getDistance(points[i-2], points[i-1], points[i], points[i+1], scaleX, scaleY) || 0;\n\t\t\t}\n\t\t} else if (type === \"circle\" || type === \"ellipse\") {\n\t\t\trx = (bbox.width / 2) * scaleX;\n\t\t\try = (bbox.height / 2) * scaleY;\n\t\t\tlength = Math.PI * ( 3 * (rx + ry) - Math.sqrt((3 * rx + ry) * (rx + 3 * ry)) );\n\t\t}\n\t\treturn length || 0;\n\t}\n\n\tfunction getPosition(element, length) {\n\t\tif (!element) {\n\t\t\treturn [0, 0];\n\t\t}\n\t\telement = unwrap(element);\n\t\tlength = length || (getLength(element) + 1);\n\t\tvar cs = _getComputedStyle(element),\n\t\t\tdash = cs.strokeDasharray || \"\",\n\t\t\toffset = parseFloat(cs.strokeDashoffset),\n\t\t\ti = dash.indexOf(\",\");\n\t\tif (i < 0) {\n\t\t\ti = dash.indexOf(\" \");\n\t\t}\n\t\tdash = (i < 0) ? length : parseFloat(dash.substr(0, i)) || 0.00001;\n\t\tif (dash > length) {\n\t\t\tdash = length;\n\t\t}\n\t\treturn [Math.max(0, -offset), Math.max(0, dash - offset)];\n\t}\n\n\tDrawSVGPlugin = _gsScope._gsDefine.plugin({\n\t\tpropName: \"drawSVG\",\n\t\tAPI: 2,\n\t\tversion: \"0.2.1\",\n\t\tglobal: true,\n\t\toverwriteProps: [\"drawSVG\"],\n\n\t\tinit: function(target, value, tween, index) {\n\t\t\tif (!target.getBBox) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar length = getLength(target) + 1,\n\t\t\t\tstart, end, overage, cs;\n\t\t\tthis._style = target.style;\n\t\t\tthis._target = target;\n\t\t\tif (typeof(value) === \"function\") {\n\t\t\t\tvalue = value(index, target);\n\t\t\t}\n\t\t\tif (value === true || value === \"true\") {\n\t\t\t\tvalue = \"0 100%\";\n\t\t\t} else if (!value) {\n\t\t\t\tvalue = \"0 0\";\n\t\t\t} else if ((value + \"\").indexOf(\" \") === -1) {\n\t\t\t\tvalue = \"0 \" + value;\n\t\t\t}\n\t\t\tstart = getPosition(target, length);\n\t\t\tend = parse(value, length, start[0]);\n\t\t\tthis._length = length + 10;\n\t\t\tif (start[0] === 0 && end[0] === 0) {\n\t\t\t\toverage = Math.max(0.00001, end[1] - length); //allow people to go past the end, like values of 105% because for some paths, Firefox doesn't return an accurate getTotalLength(), so it could end up coming up short.\n\t\t\t\tthis._dash = length + overage;\n\t\t\t\tthis._offset = length - start[1] + overage;\n\t\t\t\tthis._offsetPT = this._addTween(this, \"_offset\", this._offset, length - end[1] + overage, \"drawSVG\");\n\t\t\t} else {\n\t\t\t\tthis._dash = (start[1] - start[0]) || 0.000001; //some browsers render artifacts if dash is 0, so we use a very small number in that case.\n\t\t\t\tthis._offset = -start[0];\n\t\t\t\tthis._dashPT = this._addTween(this, \"_dash\", this._dash, (end[1] - end[0]) || 0.00001, \"drawSVG\");\n\t\t\t\tthis._offsetPT = this._addTween(this, \"_offset\", this._offset, -end[0], \"drawSVG\");\n\t\t\t}\n\t\t\tif (_isEdge) { //to work around a bug in Microsoft Edge, animate the stroke-miterlimit by 0.0001 just to trigger the repaint (unnecessary if it's \"round\" and stroke-linejoin is also \"round\"). Imperceptible, relatively high-performance, and effective. Another option was to set the \"d\" <path> attribute to its current value on every tick, but that seems like it'd be much less performant.\n\t\t\t\tcs = _getComputedStyle(target);\n\t\t\t\tif (cs.strokeLinecap !== cs.strokeLinejoin) {\n\t\t\t\t\tend = parseFloat(cs.strokeMiterlimit);\n\t\t\t\t\tthis._addTween(target.style, \"strokeMiterlimit\", end, end + 0.0001, \"strokeMiterlimit\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._live = (target.getAttribute(\"vector-effect\") === \"non-scaling-stroke\" || (value + \"\").indexOf(\"live\") !== -1);\n\t\t\treturn true;\n\t\t},\n\n\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\tset: function(ratio) {\n\t\t\tif (this._firstPT) {\n\t\t\t\t//when the element has vector-effect=\"non-scaling-stroke\" and the SVG is resized (like on a window resize), it actually changes the length of the stroke! So we must sense that and make the proper adjustments.\n\t\t\t\tif (this._live) {\n\t\t\t\t\tvar length = getLength(this._target) + 11,\n\t\t\t\t\t\tlengthRatio;\n\t\t\t\t\tif (length !== this._length) {\n\t\t\t\t\t\tlengthRatio = length / this._length;\n\t\t\t\t\t\tthis._length = length;\n\t\t\t\t\t\tthis._offsetPT.s *= lengthRatio;\n\t\t\t\t\t\tthis._offsetPT.c *= lengthRatio;\n\t\t\t\t\t\tif (this._dashPT) {\n\t\t\t\t\t\t\tthis._dashPT.s *= lengthRatio;\n\t\t\t\t\t\t\tthis._dashPT.c *= lengthRatio;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._dash *= lengthRatio;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._super.setRatio.call(this, ratio);\n\t\t\t\tthis._style.strokeDashoffset = this._offset;\n\t\t\t\tif (ratio === 1 || ratio === 0) {\n\t\t\t\t\tthis._style.strokeDasharray = (this._offset < 0.001 && this._length - this._dash <= 10) ? \"none\" : (this._offset === this._dash) ? \"0px, 999999px\" : this._dash + \"px,\" + this._length + \"px\";\n\t\t\t\t} else {\n\t\t\t\t\tthis._style.strokeDasharray = this._dash + \"px,\" + this._length + \"px\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\tDrawSVGPlugin.getLength = getLength;\n\tDrawSVGPlugin.getPosition = getPosition;\n\nexport { DrawSVGPlugin, DrawSVGPlugin as default };","/*!\n * VERSION: 0.9.1\n * DATE: 2019-02-21\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * MorphSVGPlugin is a Club GreenSock membership benefit; You must have a valid membership to use\n * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.\n * This work is subject to the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n */\n/* eslint-disable */\n\nimport { _gsScope } from \"gsap/TweenLite.js\";\n\n\tvar _PI = Math.PI,\n\t\t_DEG2RAD = _PI / 180,\n\t\t_svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t\t_numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t\t_selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/gi,\n\t\t_commands = /[achlmqstvz]/ig,\n\t\t_scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig,\n\t\t_atan2 = Math.atan2,\n\t\t_cos = Math.cos,\n\t\t_sin = Math.sin,\n\t\t_sqrt = Math.sqrt,\n\t\t_2PI = _PI * 2,\n\t\t_angleMin = _PI * 0.3,\n\t\t_angleMax = _PI * 0.7,\n\t\t_lastLinkedAnchor,\n\t\tTweenLite = _gsScope._gsDefine.globals.TweenLite,\n\n\t\t_log = function(message) {\n\t\t\tif (_gsScope.console) {\n\t\t\t\tconsole.log(message);\n\t\t\t}\n\t\t},\n\n\t\t// translates SVG arc data into an array of cubic beziers\n\t\t_arcToBeziers = function(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n\t\t\tif (lastX === x && lastY === y) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trx = Math.abs(rx);\n\t\t\try = Math.abs(ry);\n\t\t\tvar angleRad = (angle % 360) * _DEG2RAD,\n\t\t\t\tcosAngle = _cos(angleRad),\n\t\t\t\tsinAngle = _sin(angleRad),\n\t\t\t\tdx2 = (lastX - x) / 2,\n\t\t\t\tdy2 = (lastY - y) / 2,\n\t\t\t\tx1 = (cosAngle * dx2 + sinAngle * dy2),\n\t\t\t\ty1 = (-sinAngle * dx2 + cosAngle * dy2),\n\t\t\t\tx1_sq = x1 * x1,\n\t\t\t\ty1_sq = y1 * y1,\n\t\t\t\tradiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);\n\t\t\tif (radiiCheck > 1) {\n\t\t\t\trx = _sqrt(radiiCheck) * rx;\n\t\t\t\try = _sqrt(radiiCheck) * ry;\n\t\t\t}\n\t\t\tvar rx_sq = rx * rx,\n\t\t\t\try_sq = ry * ry,\n\t\t\t\tsq = ((rx_sq * ry_sq) - (rx_sq * y1_sq) - (ry_sq * x1_sq)) / ((rx_sq * y1_sq) + (ry_sq * x1_sq));\n\t\t\tif (sq < 0) {\n\t\t\t\tsq = 0;\n\t\t\t}\n\t\t\tvar coef = ((largeArcFlag === sweepFlag) ? -1 : 1) * _sqrt(sq),\n\t\t\t\tcx1 = coef * ((rx * y1) / ry),\n\t\t\t\tcy1 = coef * -((ry * x1) / rx),\n\t\t\t\tsx2 = (lastX + x) / 2,\n\t\t\t\tsy2 = (lastY + y) / 2,\n\t\t\t\tcx = sx2 + (cosAngle * cx1 - sinAngle * cy1),\n\t\t\t\tcy = sy2 + (sinAngle * cx1 + cosAngle * cy1),\n\t\t\t\tux = (x1 - cx1) / rx,\n\t\t\t\tuy = (y1 - cy1) / ry,\n\t\t\t\tvx = (-x1 - cx1) / rx,\n\t\t\t\tvy = (-y1 - cy1) / ry,\n\t\t\t\ttemp = ux * ux + uy * uy,\n\t\t\t\tangleStart = ((uy < 0) ? -1 : 1) * Math.acos(ux / _sqrt(temp)),\n\t\t\t\tangleExtent = ((ux * vy - uy * vx < 0) ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));\n\t\t\tif (!sweepFlag && angleExtent > 0) {\n\t\t\t\tangleExtent -= _2PI;\n\t\t\t} else if (sweepFlag && angleExtent < 0) {\n\t\t\t\tangleExtent += _2PI;\n\t\t\t}\n\t\t\tangleStart %= _2PI;\n\t\t\tangleExtent %= _2PI;\n\t\t\tvar segments = Math.ceil(Math.abs(angleExtent) / (_2PI / 4)),\n\t\t\t\trawPath = [],\n\t\t\t\tangleIncrement = angleExtent / segments,\n\t\t\t\tcontrolLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)),\n\t\t\t\tma = cosAngle * rx,\n\t\t\t\tmb = sinAngle * rx,\n\t\t\t\tmc = sinAngle * -ry,\n\t\t\t\tmd = cosAngle * ry,\n\t\t\t\ti;\n\t\t\tfor (i = 0; i < segments; i++) {\n\t\t\t\tangle = angleStart + i * angleIncrement;\n\t\t\t\tx1 = _cos(angle);\n\t\t\t\ty1 = _sin(angle);\n\t\t\t\tux = _cos(angle += angleIncrement);\n\t\t\t\tuy = _sin(angle);\n\t\t\t\trawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);\n\t\t\t}\n\t\t\t//now transform according to the actual size of the ellipse/arc (the beziers were noramlized, between 0 and 1 on a circle).\n\t\t\tfor (i = 0; i < rawPath.length; i+=2) {\n\t\t\t\tx1 = rawPath[i];\n\t\t\t\ty1 = rawPath[i+1];\n\t\t\t\trawPath[i] = x1 * ma + y1 * mc + cx;\n\t\t\t\trawPath[i+1] = x1 * mb + y1 * md + cy;\n\t\t\t}\n\t\t\trawPath[i-2] = x; //always set the end to exactly where it's supposed to be\n\t\t\trawPath[i-1] = y;\n\t\t\treturn rawPath;\n\t\t},\n\n\t\t//Spits back an array of cubic Bezier segments that use absolute coordinates. Each segment starts with a \"moveTo\" command (x coordinate, then y) and then 2 control points (x, y, x, y), then anchor. The goal is to minimize memory and maximize speed.\n\t\t_stringToRawPath = function(d) {\n\t\t\tvar a = (d + \"\").replace(_scientific, function(m) { var n = +m; return (n < 0.0001 && n > -0.0001) ? 0 : n; }).match(_svgPathExp) || [], //some authoring programs spit out very small numbers in scientific notation like \"1e-5\", so make sure we round that down to 0 first.\n\t\t\t\tpath = [],\n\t\t\t\trelativeX = 0,\n\t\t\t\trelativeY = 0,\n\t\t\t\ttwoThirds = 2 / 3,\n\t\t\t\telements = a.length,\n\t\t\t\tpoints = 0,\n\t\t\t\terrorMessage = \"ERROR: malformed path: \" + d,\n\t\t\t\tline = function(sx, sy, ex, ey) {\n\t\t\t\t\tdifX = (ex - sx) / 3;\n\t\t\t\t\tdifY = (ey - sy) / 3;\n\t\t\t\t\tsegment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);\n\t\t\t\t},\n\t\t\t\ti, j, x, y, command, isRelative, segment, startX, startY, difX, difY, beziers, prevCommand;\n\t\t\tif (!d || !isNaN(a[0]) || isNaN(a[1])) {\n\t\t\t\t_log(errorMessage);\n\t\t\t\treturn path;\n\t\t\t}\n\t\t\tfor (i = 0; i < elements; i++) {\n\t\t\t\tprevCommand = command;\n\t\t\t\tif (isNaN(a[i])) {\n\t\t\t\t\tcommand = a[i].toUpperCase();\n\t\t\t\t\tisRelative = (command !== a[i]); //lower case means relative\n\t\t\t\t} else { //commands like \"C\" can be strung together without any new command characters between.\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t\tx = +a[i + 1];\n\t\t\t\ty = +a[i + 2];\n\t\t\t\tif (isRelative) {\n\t\t\t\t\tx += relativeX;\n\t\t\t\t\ty += relativeY;\n\t\t\t\t}\n\t\t\t\tif (!i) {\n\t\t\t\t\tstartX = x;\n\t\t\t\t\tstartY = y;\n\t\t\t\t}\n\n\t\t\t\t// \"M\" (move)\n\t\t\t\tif (command === \"M\") {\n\t\t\t\t\tif (segment) {\n\t\t\t\t\t\tif (segment.length < 8) { //if the path data was funky and just had a M with no actual drawing anywhere, skip it.\n\t\t\t\t\t\t\tpath.length -= 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpoints += segment.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trelativeX = startX = x;\n\t\t\t\t\trelativeY = startY = y;\n\t\t\t\t\tsegment = [x, y];\n\t\t\t\t\tpath.push(segment);\n\t\t\t\t\ti += 2;\n\t\t\t\t\tcommand = \"L\"; //an \"M\" with more than 2 values gets interpreted as \"lineTo\" commands (\"L\").\n\n\t\t\t\t// \"C\" (cubic bezier)\n\t\t\t\t} else if (command === \"C\") {\n\t\t\t\t\tif (!segment) {\n\t\t\t\t\t\tsegment = [0, 0];\n\t\t\t\t\t}\n\t\t\t\t\tif (!isRelative) {\n\t\t\t\t\t\trelativeX = relativeY = 0;\n\t\t\t\t\t}\n\t\t\t\t\t//note: \"*1\" is just a fast/short way to cast the value as a Number. WAAAY faster in Chrome, slightly slower in Firefox.\n\t\t\t\t\tsegment.push(x,\ty, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, (relativeX += a[i + 5] * 1),\t(relativeY += a[i + 6] * 1));\n\t\t\t\t\ti += 6;\n\n\t\t\t\t// \"S\" (continuation of cubic bezier)\n\t\t\t\t} else if (command === \"S\") {\n\t\t\t\t\tdifX = relativeX;\n\t\t\t\t\tdifY = relativeY;\n\t\t\t\t\tif (prevCommand === \"C\" || prevCommand === \"S\") {\n\t\t\t\t\t\tdifX += relativeX - segment[segment.length - 4];\n\t\t\t\t\t\tdifY += relativeY - segment[segment.length - 3];\n\t\t\t\t\t}\n\t\t\t\t\tif (!isRelative) {\n\t\t\t\t\t\trelativeX = relativeY = 0;\n\t\t\t\t\t}\n\t\t\t\t\tsegment.push(difX, difY, x,\ty, (relativeX += a[i + 3] * 1), (relativeY += a[i + 4] * 1));\n\t\t\t\t\ti += 4;\n\n\t\t\t\t// \"Q\" (quadratic bezier)\n\t\t\t\t} else if (command === \"Q\") {\n\t\t\t\t\tdifX = relativeX + (x - relativeX) * twoThirds;\n\t\t\t\t\tdifY = relativeY + (y - relativeY) * twoThirds;\n\t\t\t\t\tif (!isRelative) {\n\t\t\t\t\t\trelativeX = relativeY = 0;\n\t\t\t\t\t}\n\t\t\t\t\trelativeX += a[i + 3] * 1;\n\t\t\t\t\trelativeY += a[i + 4] * 1;\n\t\t\t\t\tsegment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);\n\t\t\t\t\ti += 4;\n\n\t\t\t\t// \"T\" (continuation of quadratic bezier)\n\t\t\t\t} else if (command === \"T\") {\n\t\t\t\t\tdifX = relativeX - segment[segment.length - 4];\n\t\t\t\t\tdifY = relativeY - segment[segment.length - 3];\n\t\t\t\t\tsegment.push(relativeX + difX, relativeY + difY, x + ((relativeX + difX * 1.5) - x) * twoThirds, y + ((relativeY + difY * 1.5) - y) * twoThirds, (relativeX = x), (relativeY = y));\n\t\t\t\t\ti += 2;\n\n\t\t\t\t// \"H\" (horizontal line)\n\t\t\t\t} else if (command === \"H\") {\n\t\t\t\t\tline(relativeX, relativeY, (relativeX = x), relativeY);\n\t\t\t\t\ti += 1;\n\n\t\t\t\t// \"V\" (vertical line)\n\t\t\t\t} else if (command === \"V\") {\n\t\t\t\t\t//adjust values because the first (and only one) isn't x in this case, it's y.\n\t\t\t\t\tline(relativeX, relativeY, relativeX, (relativeY = x + (isRelative ? relativeY - relativeX : 0)));\n\t\t\t\t\ti += 1;\n\n\t\t\t\t// \"L\" (line) or \"Z\" (close)\n\t\t\t\t} else if (command === \"L\" || command === \"Z\") {\n\t\t\t\t\tif (command === \"Z\") {\n\t\t\t\t\t\tx = startX;\n\t\t\t\t\t\ty = startY;\n\t\t\t\t\t\tsegment.closed = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (command === \"L\" || Math.abs(relativeX - x) > 0.5 || Math.abs(relativeY - y) > 0.5) {\n\t\t\t\t\t\tline(relativeX, relativeY, x, y);\n\t\t\t\t\t\tif (command === \"L\") {\n\t\t\t\t\t\t\ti += 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trelativeX = x;\n\t\t\t\t\trelativeY = y;\n\n\t\t\t\t// \"A\" (arc)\n\t\t\t\t} else if (command === \"A\") {\n\t\t\t\t\tbeziers = _arcToBeziers(relativeX, relativeY, +a[i+1], +a[i+2], +a[i+3], +a[i+4], +a[i+5], (isRelative ? relativeX : 0) + a[i+6]*1, (isRelative ? relativeY : 0) + a[i+7]*1);\n\t\t\t\t\tif (beziers) {\n\t\t\t\t\t\tfor (j = 0; j < beziers.length; j++) {\n\t\t\t\t\t\t\tsegment.push(beziers[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trelativeX = segment[segment.length-2];\n\t\t\t\t\trelativeY = segment[segment.length-1];\n\t\t\t\t\ti += 7;\n\n\t\t\t\t} else {\n\t\t\t\t\t_log(errorMessage);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = segment.length;\n\t\t\tif (segment[0] === segment[i-2] && segment[1] === segment[i-1]) {\n\t\t\t\tsegment.closed = true;\n\t\t\t}\n\t\t\tpath.totalPoints = points + i;\n\t\t\treturn path;\n\t\t},\n\n\t\t//adds a certain number of Beziers while maintaining the path shape (so that the start/end values can have a matching quantity of points to animate). Only pass in ONE segment of the Bezier at a time. Format: [xAnchor, yAnchor, xControlPoint1, yControlPoint1, xControlPoint2, yControlPoint2, xAnchor, yAnchor, xControlPoint1, etc...]\n\t\t_subdivideSegment = function(segment, quantity) {\n\t\t\tvar tally = 0,\n\t\t\t\tmax = 0.999999,\n\t\t\t\tl = segment.length,\n\t\t\t\tnewPointsPerSegment = quantity / ((l - 2) / 6),\n\t\t\t\tax, ay, cp1x, cp1y, cp2x, cp2y, bx, by,\n\t\t\t\tx1, y1, x2, y2, i, t;\n\t\t\tfor (i = 2; i < l; i += 6) {\n\t\t\t\ttally += newPointsPerSegment;\n\t\t\t\twhile (tally > max) { //compare with 0.99999 instead of 1 in order to prevent rounding errors\n\t\t\t\t\tax = segment[i-2];\n\t\t\t\t\tay = segment[i-1];\n\t\t\t\t\tcp1x = segment[i];\n\t\t\t\t\tcp1y = segment[i+1];\n\t\t\t\t\tcp2x = segment[i+2];\n\t\t\t\t\tcp2y = segment[i+3];\n\t\t\t\t\tbx = segment[i+4];\n\t\t\t\t\tby = segment[i+5];\n\t\t\t\t\tt = 1 / ((Math.floor(tally) || 1) + 1); //progress along the bezier (value between 0 and 1)\n\t\t\t\t\tx1 = ax + (cp1x - ax) * t;\n\t\t\t\t\tx2 = cp1x + (cp2x - cp1x) * t;\n\t\t\t\t\tx1 += (x2 - x1) * t;\n\t\t\t\t\tx2 += ((cp2x + (bx - cp2x) * t) - x2) * t;\n\n\t\t\t\t\ty1 = ay + (cp1y - ay) * t;\n\t\t\t\t\ty2 = cp1y + (cp2y - cp1y) * t;\n\t\t\t\t\ty1 += (y2 - y1) * t;\n\t\t\t\t\ty2 += ((cp2y + (by - cp2y) * t) - y2) * t;\n\n\t\t\t\t\tsegment.splice(i, 4,\n\t\t\t\t\t\tax + (cp1x - ax) * t,   //first control point\n\t\t\t\t\t\tay + (cp1y - ay) * t,\n\t\t\t\t\t\tx1,                     //second control point\n\t\t\t\t\t\ty1,\n\t\t\t\t\t\tx1 + (x2 - x1) * t,     //new fabricated anchor on line\n\t\t\t\t\t\ty1 + (y2 - y1) * t,\n\t\t\t\t\t\tx2,                     //third control point\n\t\t\t\t\t\ty2,\n\t\t\t\t\t\tcp2x + (bx - cp2x) * t, //fourth control point\n\t\t\t\t\t\tcp2y + (by - cp2y) * t\n\t\t\t\t\t);\n\t\t\t\t\ti += 6;\n\t\t\t\t\tl += 6;\n\t\t\t\t\ttally--;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn segment;\n\t\t},\n\t\t_rawPathToString = function(rawPath, precision) {\n\t\t\tvar s = \"\",\n\t\t\t\tspace = \" \",\n\t\t\t\tl = rawPath.length,\n\t\t\t\trnd = Math.pow(10, precision || 2),\n\t\t\t\ti, j, segment;\n\t\t\tfor (j = 0; j < rawPath.length; j++) {\n\t\t\t\tsegment = rawPath[j];\n\t\t\t\tl = segment.length;\n\t\t\t\ts += \"M\" + (((segment[0] * rnd) | 0) / rnd) + space + (((segment[1] * rnd) | 0) / rnd) + \" C\";\n\t\t\t\tfor (i = 2; i < l; i++) { //this is actually faster than just doing a join() on the array, possibly because the numbers have so many decimal places\n\t\t\t\t\ts += (((segment[i] * rnd) | 0) / rnd) + space;\n\t\t\t\t}\n\t\t\t\tif (segment.closed) {\n\t\t\t\t\ts += \"z\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn s;\n\t\t},\n\t\t_reverseBezier = function(segment) {\n\t\t\tvar a = [],\n\t\t\t\ti = segment.length - 1,\n\t\t\t\tl = 0;\n\t\t\twhile (--i > -1) {\n\t\t\t\ta[l++] = segment[i];\n\t\t\t\ta[l++] = segment[i+1];\n\t\t\t\ti--;\n\t\t\t}\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tsegment[i] = a[i];\n\t\t\t}\n\t\t\tsegment.reversed = !segment.reversed;\n\t\t},\n\t\t_getAverageXY = function(segment) {\n\t\t\tvar l = segment.length,\n\t\t\t\tx = 0,\n\t\t\t\ty = 0,\n\t\t\t\ti;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tx += segment[i++];\n\t\t\t\ty += segment[i];\n\t\t\t}\n\t\t\treturn [x / (l / 2), y / (l / 2)];\n\t\t},\n\t\t_getSize = function(segment) { //rough estimate of the bounding box (based solely on the anchors) of a single segment. sets \"size\", \"centerX\", and \"centerY\" properties on the bezier array itself, and returns the size (width * height)\n\t\t\tvar l = segment.length,\n\t\t\t\txMax = segment[0],\n\t\t\t\txMin = xMax,\n\t\t\t\tyMax = segment[1],\n\t\t\t\tyMin = yMax,\n\t\t\t\tx, y, i;\n\t\t\tfor (i = 6; i < l; i+=6) {\n\t\t\t\tx = segment[i];\n\t\t\t\ty = segment[i+1];\n\t\t\t\tif (x > xMax) {\n\t\t\t\t\txMax = x;\n\t\t\t\t} else if (x < xMin) {\n\t\t\t\t\txMin = x;\n\t\t\t\t}\n\t\t\t\tif (y > yMax) {\n\t\t\t\t\tyMax = y;\n\t\t\t\t} else if (y < yMin) {\n\t\t\t\t\tyMin = y;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsegment.centerX = (xMax + xMin) / 2;\n\t\t\tsegment.centerY = (yMax + yMin) / 2;\n\t\t\treturn (segment.size = (xMax - xMin) * (yMax - yMin));\n\t\t},\n\t\t_getTotalSize = function(rawPath, samplesPerBezier) { //rough estimate of the bounding box of the entire list of Bezier segments (based solely on the anchors). sets \"size\", \"centerX\", and \"centerY\" properties on the bezier array itself, and returns the size (width * height)\n\t\t\tsamplesPerBezier = samplesPerBezier || 3;\n\t\t\tvar j = rawPath.length,\n\t\t\t\txMax = rawPath[0][0],\n\t\t\t\txMin = xMax,\n\t\t\t\tyMax = rawPath[0][1],\n\t\t\t\tyMin = yMax,\n\t\t\t\tinc = 1 / samplesPerBezier,\n\t\t\t\tl, x, y, i, segment, k, t, inv, x1, y1, x2, x3, x4, y2, y3, y4;\n\t\t\twhile (--j > -1) {\n\t\t\t\tsegment = rawPath[j];\n\t\t\t\tl = segment.length;\n\t\t\t\tfor (i = 6; i < l; i+=6) {\n\t\t\t\t\tx1 = segment[i];\n\t\t\t\t\ty1 = segment[i+1];\n\t\t\t\t\tx2 = segment[i+2] - x1;\n\t\t\t\t\ty2 = segment[i+3] - y1;\n\t\t\t\t\tx3 = segment[i+4] - x1;\n\t\t\t\t\ty3 = segment[i+5] - y1;\n\t\t\t\t\tx4 = segment[i+6] - x1;\n\t\t\t\t\ty4 = segment[i+7] - y1;\n\t\t\t\t\tk = samplesPerBezier;\n\t\t\t\t\twhile (--k > -1) {\n\t\t\t\t\t\tt = inc * k;\n\t\t\t\t\t\tinv = 1 - t;\n\t\t\t\t\t\tx = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t + x1;\n\t\t\t\t\t\ty = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t + y1;\n\t\t\t\t\t\tif (x > xMax) {\n\t\t\t\t\t\t\txMax = x;\n\t\t\t\t\t\t} else if (x < xMin) {\n\t\t\t\t\t\t\txMin = x;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (y > yMax) {\n\t\t\t\t\t\t\tyMax = y;\n\t\t\t\t\t\t} else if (y < yMin) {\n\t\t\t\t\t\t\tyMin = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\trawPath.centerX = (xMax + xMin) / 2;\n\t\t\trawPath.centerY = (yMax + yMin) / 2;\n\t\t\trawPath.left = xMin;\n\t\t\trawPath.width = (xMax - xMin);\n\t\t\trawPath.top = yMin;\n\t\t\trawPath.height = (yMax - yMin);\n\t\t\treturn (rawPath.size = (xMax - xMin) * (yMax - yMin));\n\t\t},\n\t\t_sortByComplexity = function(a, b) {\n\t\t\treturn b.length - a.length;\n\t\t},\n\t\t_sortBySize = function(a, b) {\n\t\t\tvar sizeA = a.size || _getSize(a),\n\t\t\t\tsizeB = b.size || _getSize(b);\n\t\t\treturn (Math.abs(sizeB - sizeA) < (sizeA + sizeB) / 20) ? (b.centerX - a.centerX) || (b.centerY - a.centerY) : sizeB - sizeA; //if the size is within 10% of each other, prioritize position from left to right, then top to bottom.\n\t\t},\n\t\t_offsetSegment = function(segment, shapeIndex) {\n\t\t\tvar a = segment.slice(0),\n\t\t\t\tl = segment.length,\n\t\t\t\twrap = l - 2,\n\t\t\t\ti, index;\n\t\t\tshapeIndex = shapeIndex | 0;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tindex = (i + shapeIndex) % wrap;\n\t\t\t\tsegment[i++] = a[index];\n\t\t\t\tsegment[i] = a[index+1];\n\t\t\t}\n\t\t},\n\t\t_getTotalMovement = function(sb, eb, shapeIndex, offsetX, offsetY) {\n\t\t\tvar l = sb.length,\n\t\t\t\td = 0,\n\t\t\t\twrap = l - 2,\n\t\t\t\tindex, i, x, y;\n\t\t\tshapeIndex *= 6;\n\t\t\tfor (i = 0; i < l; i += 6) {\n\t\t\t\tindex = (i + shapeIndex) % wrap;\n\t\t\t\ty = sb[index] - (eb[i] - offsetX);\n\t\t\t\tx = sb[index+1] - (eb[i+1] - offsetY);\n\t\t\t\td += _sqrt(x * x + y * y);\n\t\t\t}\n\t\t\treturn d;\n\t\t},\n\t\t_getClosestShapeIndex = function(sb, eb, checkReverse) { //finds the index in a closed cubic bezier array that's closest to the angle provided (angle measured from the center or average x/y).\n\t\t\tvar l = sb.length,\n\t\t\t\tsCenter = _getAverageXY(sb), //when comparing distances, adjust the coordinates as if the shapes are centered with each other.\n\t\t\t\teCenter = _getAverageXY(eb),\n\t\t\t\toffsetX = eCenter[0] - sCenter[0],\n\t\t\t\toffsetY = eCenter[1] - sCenter[1],\n\t\t\t\tmin = _getTotalMovement(sb, eb, 0, offsetX, offsetY),\n\t\t\t\tminIndex = 0,\n\t\t\t\tcopy, d, i;\n\t\t\tfor (i = 6; i < l; i += 6) {\n\t\t\t\td = _getTotalMovement(sb, eb, i / 6, offsetX, offsetY);\n\t\t\t\tif (d < min) {\n\t\t\t\t\tmin = d;\n\t\t\t\t\tminIndex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkReverse) {\n\t\t\t\tcopy = sb.slice(0);\n\t\t\t\t_reverseBezier(copy);\n\t\t\t\tfor (i = 6; i < l; i += 6) {\n\t\t\t\t\td = _getTotalMovement(copy, eb, i / 6, offsetX, offsetY);\n\t\t\t\t\tif (d < min) {\n\t\t\t\t\t\tmin = d;\n\t\t\t\t\t\tminIndex = -i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn minIndex / 6;\n\t\t},\n\t\t_getClosestAnchor = function(bezier, x, y) { //finds the x/y of the anchor that's closest to the provided x/y coordinate (returns an array, like [x, y]). The bezier should be the top-level type that contains an array for each segment.\n\t\t\tvar j = bezier.length,\n\t\t\t\tclosestDistance = 99999999999,\n\t\t\t\tclosestX = 0,\n\t\t\t\tclosestY = 0,\n\t\t\t\tb, dx, dy, d, i, l;\n\t\t\twhile (--j > -1) {\n\t\t\t\tb = bezier[j];\n\t\t\t\tl = b.length;\n\t\t\t\tfor (i = 0; i < l; i += 6) {\n\t\t\t\t\tdx = b[i] - x;\n\t\t\t\t\tdy = b[i+1] - y;\n\t\t\t\t\td = _sqrt(dx * dx + dy * dy);\n\t\t\t\t\tif (d < closestDistance) {\n\t\t\t\t\t\tclosestDistance = d;\n\t\t\t\t\t\tclosestX = b[i];\n\t\t\t\t\t\tclosestY = b[i+1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [closestX, closestY];\n\t\t},\n\t\t_getClosestSegment = function(bezier, pool, startIndex, sortRatio, offsetX, offsetY) { //matches the bezier to the closest one in a pool (array) of beziers, assuming they are in order of size and we shouldn't drop more than 20% of the size, otherwise prioritizing location (total distance to the center). Extracts the segment out of the pool array and returns it.\n\t\t\tvar l = pool.length,\n\t\t\t\tindex = 0,\n\t\t\t\tminSize = Math.min(bezier.size || _getSize(bezier), pool[startIndex].size || _getSize(pool[startIndex])) * sortRatio, //limit things based on a percentage of the size of either the bezier or the next element in the array, whichever is smaller.\n\t\t\t\tmin = 999999999999,\n\t\t\t\tcx = bezier.centerX + offsetX,\n\t\t\t\tcy = bezier.centerY + offsetY,\n\t\t\t\tsize, i, dx, dy, d;\n\t\t\tfor (i = startIndex; i < l; i++) {\n\t\t\t\tsize = pool[i].size || _getSize(pool[i]);\n\t\t\t\tif (size < minSize) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdx = pool[i].centerX - cx;\n\t\t\t\tdy = pool[i].centerY - cy;\n\t\t\t\td = _sqrt(dx * dx + dy * dy);\n\t\t\t\tif (d < min) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tmin = d;\n\t\t\t\t}\n\t\t\t}\n\t\t\td = pool[index];\n\t\t\tpool.splice(index, 1);\n\t\t\treturn d;\n\t\t},\n\t\t_equalizeSegmentQuantity = function(start, end, shapeIndex, map, fillSafe) { //returns an array of shape indexes, 1 for each segment.\n\t\t\tvar dif = end.length - start.length,\n\t\t\t\tlonger = dif > 0 ? end : start,\n\t\t\t\tshorter = dif > 0 ? start : end,\n\t\t\t\tadded = 0,\n\t\t\t\tsortMethod = (map === \"complexity\") ? _sortByComplexity : _sortBySize,\n\t\t\t\tsortRatio = (map === \"position\") ? 0 : (typeof(map) === \"number\") ? map : 0.8,\n\t\t\t\ti = shorter.length,\n\t\t\t\tshapeIndices = (typeof(shapeIndex) === \"object\" && shapeIndex.push) ? shapeIndex.slice(0) : [shapeIndex],\n\t\t\t\treverse = (shapeIndices[0] === \"reverse\" || shapeIndices[0] < 0),\n\t\t\t\tlog = (shapeIndex === \"log\"),\n\t\t\t\teb, sb, b, x, y, offsetX, offsetY;\n\t\t\tif (!shorter[0]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (longer.length > 1) {\n\t\t\t\tstart.sort(sortMethod);\n\t\t\t\tend.sort(sortMethod);\n\t\t\t\toffsetX = longer.size || _getTotalSize(longer); //ensures centerX and centerY are defined (used below).\n\t\t\t\toffsetX = shorter.size || _getTotalSize(shorter);\n\t\t\t\toffsetX = longer.centerX - shorter.centerX;\n\t\t\t\toffsetY = longer.centerY - shorter.centerY;\n\t\t\t\tif (sortMethod === _sortBySize) {\n\t\t\t\t\tfor (i = 0; i < shorter.length; i++) {\n\t\t\t\t\t\tlonger.splice(i, 0, _getClosestSegment(shorter[i], longer, i, sortRatio, offsetX, offsetY));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dif) {\n\t\t\t\tif (dif < 0) {\n\t\t\t\t\tdif = -dif;\n\t\t\t\t}\n\t\t\t\tif (longer[0].length > shorter[0].length) { //since we use shorter[0] as the one to map the origination point of any brand new fabricated segments, do any subdividing first so that there are more points to choose from (if necessary)\n\t\t\t\t\t_subdivideSegment(shorter[0], ((longer[0].length - shorter[0].length)/6) | 0);\n\t\t\t\t}\n\t\t\t\ti = shorter.length;\n\t\t\t\twhile (added < dif) {\n\t\t\t\t\tx = longer[i].size || _getSize(longer[i]); //just to ensure centerX and centerY are calculated which we use on the next line.\n\t\t\t\t\tb = _getClosestAnchor(shorter, longer[i].centerX, longer[i].centerY);\n\t\t\t\t\tx = b[0];\n\t\t\t\t\ty = b[1];\n\t\t\t\t\tshorter[i++] = [x, y, x, y, x, y, x, y];\n\t\t\t\t\tshorter.totalPoints += 8;\n\t\t\t\t\tadded++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; i < start.length; i++) {\n\t\t\t\teb = end[i];\n\t\t\t\tsb = start[i];\n\t\t\t\tdif = eb.length - sb.length;\n\t\t\t\tif (dif < 0) {\n\t\t\t\t\t_subdivideSegment(eb, (-dif/6) | 0);\n\t\t\t\t} else if (dif > 0) {\n\t\t\t\t\t_subdivideSegment(sb, (dif/6) | 0);\n\t\t\t\t}\n\t\t\t\tif (reverse && fillSafe !== false && !sb.reversed) {\n\t\t\t\t\t_reverseBezier(sb);\n\t\t\t\t}\n\t\t\t\tshapeIndex = (shapeIndices[i] || shapeIndices[i] === 0) ? shapeIndices[i] : \"auto\";\n\t\t\t\tif (shapeIndex) {\n\t\t\t\t\t//if start shape is closed, find the closest point to the start/end, and re-organize the bezier points accordingly so that the shape morphs in a more intuitive way.\n\t\t\t\t\tif (sb.closed || (Math.abs(sb[0] - sb[sb.length - 2]) < 0.5 && Math.abs(sb[1] - sb[sb.length - 1]) < 0.5)) {\n\t\t\t\t\t\tif (shapeIndex === \"auto\" || shapeIndex === \"log\") {\n\t\t\t\t\t\t\tshapeIndices[i] = shapeIndex = _getClosestShapeIndex(sb, eb, (!i || fillSafe === false));\n\t\t\t\t\t\t\tif (shapeIndex < 0) {\n\t\t\t\t\t\t\t\treverse = true;\n\t\t\t\t\t\t\t\t_reverseBezier(sb);\n\t\t\t\t\t\t\t\tshapeIndex = -shapeIndex;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_offsetSegment(sb, shapeIndex * 6);\n\n\t\t\t\t\t\t} else if (shapeIndex !== \"reverse\") {\n\t\t\t\t\t\t\tif (i && shapeIndex < 0) { //only happens if an array is passed as shapeIndex and a negative value is defined for an index beyond 0. Very rare, but helpful sometimes.\n\t\t\t\t\t\t\t\t_reverseBezier(sb);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_offsetSegment(sb, (shapeIndex < 0 ? -shapeIndex : shapeIndex) * 6);\n\t\t\t\t\t\t}\n\t\t\t\t\t//otherwise, if it's not a closed shape, consider reversing it if that would make the overall travel less\n\t\t\t\t\t} else if (!reverse && (shapeIndex === \"auto\" && (Math.abs(eb[0] - sb[0]) + Math.abs(eb[1] - sb[1]) + Math.abs(eb[eb.length - 2] - sb[sb.length - 2]) + Math.abs(eb[eb.length - 1] - sb[sb.length - 1]) > Math.abs(eb[0] - sb[sb.length - 2]) + Math.abs(eb[1] - sb[sb.length - 1]) + Math.abs(eb[eb.length - 2] - sb[0]) + Math.abs(eb[eb.length - 1] - sb[1])) || (shapeIndex % 2))) {\n\t\t\t\t\t\t_reverseBezier(sb);\n\t\t\t\t\t\tshapeIndices[i] = -1;\n\t\t\t\t\t\treverse = true;\n\t\t\t\t\t} else if (shapeIndex === \"auto\") {\n\t\t\t\t\t\tshapeIndices[i] = 0;\n\t\t\t\t\t} else if (shapeIndex === \"reverse\") {\n\t\t\t\t\t\tshapeIndices[i] = -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (sb.closed !== eb.closed) { //if one is closed and one isn't, don't close either one otherwise the tweening will look weird (but remember, the beginning and final states will honor the actual values, so this only affects the inbetween state)\n\t\t\t\t\t\tsb.closed = eb.closed = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (log) {\n\t\t\t\t_log(\"shapeIndex:[\" + shapeIndices.join(\",\") + \"]\");\n\t\t\t}\n\t\t\tstart.shapeIndex = shapeIndices;\n\t\t\treturn shapeIndices;\n\t\t},\n\t\t_pathFilter = function(a, shapeIndex, map, precompile, fillSafe) {\n\t\t\tvar start = _stringToRawPath(a[0]),\n\t\t\t\tend = _stringToRawPath(a[1]);\n\t\t\tif (!_equalizeSegmentQuantity(start, end, (shapeIndex || shapeIndex === 0) ? shapeIndex : \"auto\", map, fillSafe)) {\n\t\t\t\treturn; //malformed path data or null target\n\t\t\t}\n\t\t\ta[0] = _rawPathToString(start);\n\t\t\ta[1] = _rawPathToString(end);\n\t\t\tif (precompile === \"log\" || precompile === true) {\n\t\t\t\t_log('precompile:[\"' + a[0] + '\",\"' + a[1] + '\"]');\n\t\t\t}\n\t\t},\n\t\t/*\n\t\t_buildPathFilter = function(shapeIndex, map, precompile) {\n\t\t\treturn (map || precompile || shapeIndex || shapeIndex === 0) ? function(a) {\n\t\t\t\t_pathFilter(a, shapeIndex, map, precompile);\n\t\t\t} : _pathFilter;\n\t\t},\n\t\t*/\n\t\t_offsetPoints = function(text, offset) {\n\t\t\tif (!offset) {\n\t\t\t\treturn text;\n\t\t\t}\n\t\t\tvar a = text.match(_numbersExp) || [],\n\t\t\t\tl = a.length,\n\t\t\t\ts = \"\",\n\t\t\t\tinc, i, j;\n\t\t\tif (offset === \"reverse\") {\n\t\t\t\ti = l-1;\n\t\t\t\tinc = -2;\n\t\t\t} else {\n\t\t\t\ti = (((parseInt(offset, 10) || 0) * 2 + 1) + l * 100) % l;\n\t\t\t\tinc = 2;\n\t\t\t}\n\t\t\tfor (j = 0; j < l; j += 2) {\n\t\t\t\ts += a[i-1] + \",\" + a[i] + \" \";\n\t\t\t\ti = (i + inc) % l;\n\t\t\t}\n\t\t\treturn s;\n\t\t},\n\t\t//adds a certain number of points while maintaining the polygon/polyline shape (so that the start/end values can have a matching quantity of points to animate). Returns the revised string.\n\t\t_equalizePointQuantity = function(a, quantity) {\n\t\t\tvar tally = 0,\n\t\t\t\tx = parseFloat(a[0]),\n\t\t\t\ty = parseFloat(a[1]),\n\t\t\t\ts = x + \",\" + y + \" \",\n\t\t\t\tmax = 0.999999,\n\t\t\t\tnewPointsPerSegment, i, l, j, factor, nextX, nextY;\n\t\t\tl = a.length;\n\t\t\tnewPointsPerSegment = quantity * 0.5 / (l * 0.5 - 1);\n\t\t\tfor (i = 0; i < l-2; i += 2) {\n\t\t\t\ttally += newPointsPerSegment;\n\t\t\t\tnextX = parseFloat(a[i+2]);\n\t\t\t\tnextY = parseFloat(a[i+3]);\n\t\t\t\tif (tally > max) { //compare with 0.99999 instead of 1 in order to prevent rounding errors\n\t\t\t\t\tfactor = 1 / (Math.floor(tally) + 1);\n\t\t\t\t\tj = 1;\n\t\t\t\t\twhile (tally > max) {\n\t\t\t\t\t\ts += (x + (nextX - x) * factor * j).toFixed(2) + \",\" + (y + (nextY - y) * factor * j).toFixed(2) + \" \";\n\t\t\t\t\t\ttally--;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts += nextX + \",\" + nextY + \" \";\n\t\t\t\tx = nextX;\n\t\t\t\ty = nextY;\n\t\t\t}\n\t\t\treturn s;\n\t\t},\n\t\t_pointsFilter = function(a) {\n\t\t\tvar startNums = a[0].match(_numbersExp) || [],\n\t\t\t\tendNums = a[1].match(_numbersExp) || [],\n\t\t\t\tdif = endNums.length - startNums.length;\n\t\t\tif (dif > 0) {\n\t\t\t\ta[0] = _equalizePointQuantity(startNums, dif);\n\t\t\t} else {\n\t\t\t\ta[1] = _equalizePointQuantity(endNums, -dif);\n\t\t\t}\n\t\t},\n\t\t_buildPointsFilter = function(shapeIndex) {\n\t\t\treturn !isNaN(shapeIndex) ? function(a) {\n\t\t\t\t_pointsFilter(a);\n\t\t\t\ta[1] = _offsetPoints(a[1], parseInt(shapeIndex, 10));\n\t\t\t} : _pointsFilter;\n\t\t},\n\t\t_createPath = function(e, ignore) {\n\t\t\tvar path = _gsScope.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"),\n\t\t\t\tattr = Array.prototype.slice.call(e.attributes),\n\t\t\t\ti = attr.length,\n\t\t\t\tname;\n\t\t\tignore = \",\" + ignore + \",\";\n\t\t\twhile (--i > -1) {\n\t\t\t\tname = attr[i].nodeName.toLowerCase(); //in Microsoft Edge, if you don't set the attribute with a lowercase name, it doesn't render correctly! Super weird.\n\t\t\t\tif (ignore.indexOf(\",\" + name + \",\") === -1) {\n\t\t\t\t\tpath.setAttributeNS(null, name, attr[i].nodeValue);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn path;\n\t\t},\n\t\t_typeAttrs = {\n\t\t\trect:\"rx,ry,x,y,width,height\",\n\t\t\tcircle:\"r,cx,cy\",\n\t\t\tellipse:\"rx,ry,cx,cy\",\n\t\t\tline:\"x1,x2,y1,y2\"\n\t\t},\n\t\t_attrToObj = function(e, attrs) {\n\t\t\tvar props = attrs ? attrs.split(\",\") : [],\n\t\t\t\tobj = {},\n\t\t\t\ti = props.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tobj[props[i]] = +e.getAttribute(props[i]) || 0;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\t\t_convertToPath = function(e, swap) {\n\t\t\tvar type = e.tagName.toLowerCase(),\n\t\t\t\tcirc = 0.552284749831,\n\t\t\t\tdata, x, y, r, ry, path, rcirc, rycirc, points, w, h, x2, x3, x4, x5, x6, y2, y3, y4, y5, y6, attr;\n\t\t\tif (type === \"path\" || !e.getBBox) {\n\t\t\t\treturn e;\n\t\t\t}\n\t\t\tpath = _createPath(e, \"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points\");\n\t\t\tattr = _attrToObj(e, _typeAttrs[type]);\n\t\t\tif (type === \"rect\") {\n\t\t\t\tr = attr.rx;\n\t\t\t\try = attr.ry;\n\t\t\t\tx = attr.x;\n\t\t\t\ty = attr.y;\n\t\t\t\tw = attr.width - r * 2;\n\t\t\t\th = attr.height - ry * 2;\n\t\t\t\tif (r || ry) { //if there are rounded corners, render cubic beziers\n\t\t\t\t\tx2 = x + r * (1 - circ);\n\t\t\t\t\tx3 = x + r;\n\t\t\t\t\tx4 = x3 + w;\n\t\t\t\t\tx5 = x4 + r * circ;\n\t\t\t\t\tx6 = x4 + r;\n\t\t\t\t\ty2 = y + ry * (1 - circ);\n\t\t\t\t\ty3 = y + ry;\n\t\t\t\t\ty4 = y3 + h;\n\t\t\t\t\ty5 = y4 + ry * circ;\n\t\t\t\t\ty6 = y4 + ry;\n\t\t\t\t\tdata = \"M\" + x6 + \",\" + y3 + \" V\" + y4 + \" C\" + [x6, y5, x5, y6, x4, y6, x4 - (x4 - x3) / 3, y6, x3 + (x4 - x3) / 3, y6, x3, y6, x2, y6, x, y5, x, y4, x, y4 - (y4 - y3) / 3, x, y3 + (y4 - y3) / 3, x, y3, x, y2, x2, y, x3, y, x3 + (x4 - x3) / 3, y, x4 - (x4 - x3) / 3, y, x4, y, x5, y, x6, y2, x6, y3].join(\",\") + \"z\";\n\t\t\t\t} else {\n\t\t\t\t\tdata = \"M\" + (x + w) + \",\" + y + \" v\" + h + \" h\" + (-w) + \" v\" + (-h) + \" h\" + w + \"z\";\n\t\t\t\t}\n\n\t\t\t} else if (type === \"circle\" || type === \"ellipse\") {\n\t\t\t\tif (type === \"circle\") {\n\t\t\t\t\tr = ry = attr.r;\n\t\t\t\t\trycirc = r * circ;\n\t\t\t\t} else {\n\t\t\t\t\tr = attr.rx;\n\t\t\t\t\try = attr.ry;\n\t\t\t\t\trycirc = ry * circ;\n\t\t\t\t}\n\t\t\t\tx = attr.cx;\n\t\t\t\ty = attr.cy;\n\t\t\t\trcirc = r * circ;\n\t\t\t\tdata = \"M\" + (x+r) + \",\" + y + \" C\" + [x+r, y + rycirc, x + rcirc, y + ry, x, y + ry, x - rcirc, y + ry, x - r, y + rycirc, x - r, y, x - r, y - rycirc, x - rcirc, y - ry, x, y - ry, x + rcirc, y - ry, x + r, y - rycirc, x + r, y].join(\",\") + \"z\";\n\t\t\t} else if (type === \"line\") {\n\t\t\t\tdata = \"M\" + attr.x1 + \",\" + attr.y1 + \" L\" + attr.x2 + \",\" + attr.y2; //previously, we just converted to \"Mx,y Lx,y\" but Safari has bugs that cause that not to render properly when using a stroke-dasharray that's not fully visible! Using a cubic bezier fixes that issue.\n\t\t\t} else if (type === \"polyline\" || type === \"polygon\") {\n\t\t\t\tpoints = (e.getAttribute(\"points\") + \"\").match(_numbersExp) || [];\n\t\t\t\tx = points.shift();\n\t\t\t\ty = points.shift();\n\t\t\t\tdata = \"M\" + x + \",\" + y + \" L\" + points.join(\",\");\n\t\t\t\tif (type === \"polygon\") {\n\t\t\t\t\tdata += \",\" + x + \",\" + y + \"z\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tpath.setAttribute(\"d\", _rawPathToString(path._gsRawPath = _stringToRawPath(data)));\n\t\t\tif (swap && e.parentNode) {\n\t\t\t\te.parentNode.insertBefore(path, e);\n\t\t\t\te.parentNode.removeChild(e);\n\t\t\t}\n\n\t\t\treturn path;\n\t\t},\n\t\t_parseShape = function(shape, forcePath, target) {\n\t\t\tvar isString = typeof(shape) === \"string\",\n\t\t\t\te, type;\n\t\t\tif (!isString || _selectorExp.test(shape) || (shape.match(_numbersExp) || []).length < 3) {\n\t\t\t\te = isString ? TweenLite.selector(shape) : (shape && shape[0]) ? shape : [shape]; //allow array-like objects like jQuery objects.\n\t\t\t\tif (e && e[0]) {\n\t\t\t\t\te = e[0];\n\t\t\t\t\ttype = (e.nodeName + \"\").toUpperCase();\n\t\t\t\t\tif (forcePath && type !== \"PATH\") { //if we were passed an element (or selector text for an element) that isn't a path, convert it.\n\t\t\t\t\t\te = _convertToPath(e, false);\n\t\t\t\t\t\ttype = \"PATH\";\n\t\t\t\t\t}\n\t\t\t\t\tshape = e.getAttribute(type === \"PATH\" ? \"d\" : \"points\") || \"\";\n\t\t\t\t\tif (e === target) { //if the shape matches the target element, the user wants to revert to the original which should have been stored in the data-original attribute\n\t\t\t\t\t\tshape = e.getAttributeNS(null, \"data-original\") || shape;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t_log(\"WARNING: invalid morph to: \" + shape);\n\t\t\t\t\tshape = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn shape;\n\t\t},\n\t\t//adds an \"isSmooth\" array to each segment and populates it with a boolean value indicating whether or not it's smooth (the control points have basically the same slope). For any smooth control points, it converts the coordinates into angle (x, in radians) and length (y) and puts them into the same index value in a smoothData array.\n\t\t_populateSmoothData = function(rawPath, tolerance) {\n\t\t\tvar j = rawPath.length,\n\t\t\t\tlimit = 0.2 * (tolerance || 1),\n\t\t\t\tsmooth, segment, x, y, x2, y2, i, l, a, a2, isSmooth, smoothData;\n\t\t\twhile (--j > -1) {\n\t\t\t\tsegment = rawPath[j];\n\t\t\t\tisSmooth = segment.isSmooth = segment.isSmooth || [0, 0, 0, 0];\n\t\t\t\tsmoothData = segment.smoothData = segment.smoothData || [0, 0, 0, 0];\n\t\t\t\tisSmooth.length = 4;\n\t\t\t\tl = segment.length - 2;\n\t\t\t\tfor (i = 6; i < l; i += 6) {\n\t\t\t\t\tx = segment[i] - segment[i - 2];\n\t\t\t\t\ty = segment[i + 1] - segment[i - 1];\n\t\t\t\t\tx2 = segment[i + 2] - segment[i];\n\t\t\t\t\ty2 = segment[i + 3] - segment[i + 1];\n\t\t\t\t\ta = _atan2(y, x);\n\t\t\t\t\ta2 = _atan2(y2, x2);\n\t\t\t\t\tsmooth = (Math.abs(a - a2) < limit);\n\t\t\t\t\tif (smooth) {\n\t\t\t\t\t\tsmoothData[i - 2] = a;\n\t\t\t\t\t\tsmoothData[i + 2] = a2;\n\t\t\t\t\t\tsmoothData[i - 1] = _sqrt(x * x + y * y);\n\t\t\t\t\t\tsmoothData[i + 3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t\t\t}\n\t\t\t\t\tisSmooth.push(smooth, smooth, 0, 0, smooth, smooth);\n\t\t\t\t}\n\t\t\t\t//if the first and last points are identical, check to see if there's a smooth transition. We must handle this a bit differently due to their positions in the array.\n\t\t\t\tif (segment[l] === segment[0] && segment[l+1] === segment[1]) {\n\t\t\t\t\tx = segment[0] - segment[l-2];\n\t\t\t\t\ty = segment[1] - segment[l-1];\n\t\t\t\t\tx2 = segment[2] - segment[0];\n\t\t\t\t\ty2 = segment[3] - segment[1];\n\t\t\t\t\ta = _atan2(y, x);\n\t\t\t\t\ta2 = _atan2(y2, x2);\n\t\t\t\t\tif (Math.abs(a - a2) < limit) {\n\t\t\t\t\t\tsmoothData[l-2] = a;\n\t\t\t\t\t\tsmoothData[2] = a2;\n\t\t\t\t\t\tsmoothData[l-1] = _sqrt(x * x + y * y);\n\t\t\t\t\t\tsmoothData[3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t\t\t\tisSmooth[l-2] = isSmooth[l-1] = true; //don't change indexes 2 and 3 because we'll trigger everything from the END, and this will optimize file size a bit.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn rawPath;\n\t\t},\n\t\t_parseOriginFactors = function(v) {\n\t\t\tvar a = v.trim().split(\" \"),\n\t\t\t\tx = (v.indexOf(\"left\") >= 0) ? 0 : (v.indexOf(\"right\") >= 0) ? 100 : isNaN(parseFloat(a[0])) ? 50 : parseFloat(a[0]),\n\t\t\t\ty = (v.indexOf(\"top\") >= 0) ? 0 : (v.indexOf(\"bottom\") >= 0) ? 100 : isNaN(parseFloat(a[1])) ? 50 : parseFloat(a[1]);\n\t\t\treturn {x:x / 100, y:y / 100};\n\t\t},\n\t\t_shortAngle = function(dif) {\n\t\t\treturn (dif !== dif % _PI) ? dif + ((dif < 0) ? _2PI : -_2PI) : dif;\n\t\t},\n\t\t_morphMessage = \"Use MorphSVGPlugin.convertToPath(elementOrSelectorText) to convert to a path before morphing.\",\n\n\n\n\t\tMorphSVGPlugin = _gsScope._gsDefine.plugin({\n\t\t\tpropName: \"morphSVG\",\n\t\t\tAPI: 2,\n\t\t\tglobal: true,\n\t\t\tversion: \"0.9.1\",\n\n\t\t\t//called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\t\tinit: function(target, value, tween, index) {\n\t\t\t\tvar cs = target.nodeType ? window.getComputedStyle(target) : {},\n\t\t\t\t\tfill = cs.fill + \"\",\n\t\t\t\t\tfillSafe = !(fill === \"none\" || (fill.match(_numbersExp) || [])[3] === \"0\" || cs.fillRule === \"evenodd\"),\n\t\t\t\t\torigins = (value.origin || \"50 50\").split(\",\"),\n\t\t\t\t\ttype, p, pt, shape, isPoly, shapeIndex, map, startSmooth, endSmooth, start, end, i, j, l, startSeg, endSeg, precompiled, sData, eData, originFactors, useRotation, offset;\n\t\t\t\tif (typeof(value) === \"function\") {\n\t\t\t\t\tvalue = value(index, target);\n\t\t\t\t}\n\t\t\t\ttype = (target.nodeName + \"\").toUpperCase();\n\t\t\t\tisPoly = (type === \"POLYLINE\" || type === \"POLYGON\");\n\t\t\t\tif (type !== \"PATH\" && !isPoly && !value.prop) {\n\t\t\t\t\t_log(\"WARNING: cannot morph a <\" + type + \"> element. \" + _morphMessage);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tp = (type === \"PATH\") ? \"d\" : \"points\";\n\t\t\t\tif (typeof(value) === \"string\" || value.getBBox || value[0]) {\n\t\t\t\t\tvalue = {shape:value};\n\t\t\t\t}\n\t\t\t\tif (!value.prop && typeof(target.setAttribute) !== \"function\") {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tshape = _parseShape(value.shape || value.d || value.points || \"\", (p === \"d\"), target);\n\t\t\t\tif (isPoly && _commands.test(shape)) {\n\t\t\t\t\t_log(\"WARNING: a <\" + type + \"> cannot accept path data. \" + _morphMessage);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tshapeIndex = (value.shapeIndex || value.shapeIndex === 0) ? value.shapeIndex : \"auto\";\n\t\t\t\tmap = value.map || MorphSVGPlugin.defaultMap;\n\t\t\t\tthis._prop = value.prop;\n\t\t\t\tthis._render = value.render || MorphSVGPlugin.defaultRender;\n\t\t\t\tthis._apply = (\"updateTarget\" in value) ? value.updateTarget : MorphSVGPlugin.defaultUpdateTarget;\n\t\t\t\tthis._rnd = Math.pow(10, isNaN(value.precision) ? 2 : +value.precision);\n\t\t\t\tthis._tween = tween;\n\t\t\t\tif (shape) {\n\t\t\t\t\tthis._target = target;\n\t\t\t\t\tprecompiled = (typeof(value.precompile) === \"object\");\n\t\t\t\t\tstart = this._prop ? target[this._prop] : target.getAttribute(p);\n\t\t\t\t\tif (!this._prop && !target.getAttributeNS(null, \"data-original\")) {\n\t\t\t\t\t\ttarget.setAttributeNS(null, \"data-original\", start); //record the original state in a data-original attribute so that we can revert to it later.\n\t\t\t\t\t}\n\t\t\t\t\tif (p === \"d\" || this._prop) {\n\t\t\t\t\t\tstart = _stringToRawPath(precompiled ? value.precompile[0] : start);\n\t\t\t\t\t\tend = _stringToRawPath(precompiled ? value.precompile[1] : shape);\n\t\t\t\t\t\tif (!precompiled && !_equalizeSegmentQuantity(start, end, shapeIndex, map, fillSafe)) {\n\t\t\t\t\t\t\treturn false; //malformed path data or null target\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value.precompile === \"log\" || value.precompile === true) {\n\t\t\t\t\t\t\t_log('precompile:[\"' + _rawPathToString(start) + '\",\"' + _rawPathToString(end) + '\"]');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tuseRotation = (value.type || MorphSVGPlugin.defaultType) !== \"linear\";\n\n\t\t\t\t\t\tif (useRotation) {\n\t\t\t\t\t\t\tstart = _populateSmoothData(start, value.smoothTolerance);\n\t\t\t\t\t\t\tend = _populateSmoothData(end, value.smoothTolerance   );\n\t\t\t\t\t\t\tif (!start.size) {\n\t\t\t\t\t\t\t\t_getTotalSize(start); //adds top/left/width/height values\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!end.size) {\n\t\t\t\t\t\t\t\t_getTotalSize(end);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginFactors = _parseOriginFactors(origins[0]);\n\t\t\t\t\t\t\tthis._origin = start.origin = {x:start.left + originFactors.x * start.width, y:start.top + originFactors.y * start.height};\n\t\t\t\t\t\t\tif (origins[1]) {\n\t\t\t\t\t\t\t\toriginFactors = _parseOriginFactors(origins[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._eOrigin = {x:end.left + originFactors.x * end.width, y:end.top + originFactors.y * end.height};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._rawPath = target._gsRawPath =  start;\n\n\t\t\t\t\t\tj = start.length;\n\t\t\t\t\t\twhile (--j > -1) {\n\t\t\t\t\t\t\tstartSeg = start[j];\n\t\t\t\t\t\t\tendSeg = end[j];\n\t\t\t\t\t\t\tstartSmooth = startSeg.isSmooth || [];\n\t\t\t\t\t\t\tendSmooth = endSeg.isSmooth || [];\n\t\t\t\t\t\t\tl = startSeg.length;\n\t\t\t\t\t\t\t_lastLinkedAnchor = 0; //reset; we use _lastLinkedAnchor in the _tweenRotation() method to help make sure that close points don't get ripped apart and rotate opposite directions. Typically we want to go the shortest direction, but if the previous anchor is going a different direction, we override this logic (within certain thresholds)\n\t\t\t\t\t\t\tfor (i = 0; i < l; i+=2) {\n\t\t\t\t\t\t\t\tif (endSeg[i] !== startSeg[i] || endSeg[i+1] !== startSeg[i+1]) {\n\t\t\t\t\t\t\t\t\tif (useRotation) {\n\t\t\t\t\t\t\t\t\t\tif (startSmooth[i] && endSmooth[i]) { //if BOTH starting and ending values are smooth (meaning control points have basically the same slope), interpolate the rotation and length instead of the coordinates (this is what makes things smooth).\n\t\t\t\t\t\t\t\t\t\t\tsData = startSeg.smoothData;\n\t\t\t\t\t\t\t\t\t\t\teData = endSeg.smoothData;\n\t\t\t\t\t\t\t\t\t\t\toffset = i + ((i === l - 4) ? 7 - l : 5); //helps us accommodate wrapping (like if the end and start anchors are identical and the control points are smooth).\n\t\t\t\t\t\t\t\t\t\t\tthis._controlPT = {_next:this._controlPT, i:i, j:j, l1s:sData[i+1], l1c:eData[i+1] - sData[i+1], l2s:sData[offset], l2c:eData[offset] - sData[offset]};\n\t\t\t\t\t\t\t\t\t\t\tpt = this._tweenRotation(startSeg, endSeg, i+2);\n\t\t\t\t\t\t\t\t\t\t\tthis._tweenRotation(startSeg, endSeg, i, pt);\n\t\t\t\t\t\t\t\t\t\t\tthis._tweenRotation(startSeg, endSeg, offset-1, pt);\n\t\t\t\t\t\t\t\t\t\t\ti+=4;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthis._tweenRotation(startSeg, endSeg, i);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis._addTween(startSeg, i, startSeg[i], endSeg[i]);\n\t\t\t\t\t\t\t\t\t\tpt = this._addTween(startSeg, i+1, startSeg[i+1], endSeg[i+1]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = this._addTween(target, \"setAttribute\", target.getAttribute(p) + \"\", shape + \"\", \"morphSVG\", false, p, _buildPointsFilter(shapeIndex));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (useRotation) {\n\t\t\t\t\t\tthis._addTween(this._origin, \"x\", this._origin.x, this._eOrigin.x);\n\t\t\t\t\t\tpt = this._addTween(this._origin, \"y\", this._origin.y, this._eOrigin.y);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pt) {\n\t\t\t\t\t\tthis._overwriteProps.push(\"morphSVG\");\n\t\t\t\t\t\tpt.end = shape;\n\t\t\t\t\t\tpt.endProp = p;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\tset: function(ratio) {\n\t\t\t\tvar rawPath = this._rawPath,\n\t\t\t\t\tcontrolPT = this._controlPT,\n\t\t\t\t\tanchorPT = this._anchorPT,\n\t\t\t\t\trnd = this._rnd,\n\t\t\t\t\ttarget = this._target,\n\t\t\t\t\ts, space, easeInOut, pt, segment, l, angle, i, j, x, y, sin, cos, offset;\n\t\t\t\tthis._super.setRatio.call(this, ratio);\n\t\t\t\tif (ratio === 1 && this._apply) {\n\t\t\t\t\tpt = this._firstPT;\n\t\t\t\t\twhile (pt) {\n\t\t\t\t\t\tif (pt.end) {\n\t\t\t\t\t\t\tif (this._prop) {\n\t\t\t\t\t\t\t\ttarget[this._prop] = pt.end;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.setAttribute(pt.endProp, pt.end); //make sure the end value is exactly as specified (in case we had to add fabricated points during the tween)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpt = pt._next;\n\t\t\t\t\t}\n\t\t\t\t} else if (rawPath) {\n\n\t\t\t\t\t//rotationally position the anchors\n\t\t\t\t\twhile (anchorPT) {\n\t\t\t\t\t\tangle = anchorPT.sa + ratio * anchorPT.ca;\n\t\t\t\t\t\tl = anchorPT.sl + ratio * anchorPT.cl;    //length\n\t\t\t\t\t\tanchorPT.t[anchorPT.i] = this._origin.x + _cos(angle) * l;\n\t\t\t\t\t\tanchorPT.t[anchorPT.i + 1] = this._origin.y + _sin(angle) * l;\n\t\t\t\t\t\tanchorPT = anchorPT._next;\n\t\t\t\t\t}\n\n\t\t\t\t\t//smooth out the control points\n\t\t\t\t\teaseInOut = ratio < 0.5 ? 2 * ratio * ratio : (4 - 2 * ratio) * ratio - 1;\n\t\t\t\t\twhile (controlPT) {\n\t\t\t\t\t\ti = controlPT.i;\n\t\t\t\t\t\tsegment = rawPath[controlPT.j];\n\t\t\t\t\t\toffset = i + ((i === segment.length - 4) ? 7 - segment.length : 5); //accommodates wrapping around of smooth points, like if the start and end anchors are on top of each other and their handles are smooth.\n\t\t\t\t\t\tangle = _atan2(segment[offset] - segment[i+1], segment[offset-1] - segment[i]); //average the angles\n\t\t\t\t\t\tsin = _sin(angle);\n\t\t\t\t\t\tcos = _cos(angle);\n\t\t\t\t\t\tx = segment[i+2];\n\t\t\t\t\t\ty = segment[i+3];\n\t\t\t\t\t\tl = controlPT.l1s + easeInOut * controlPT.l1c;    //length\n\t\t\t\t\t\tsegment[i] = x - cos * l;\n\t\t\t\t\t\tsegment[i+1] = y - sin * l;\n\t\t\t\t\t\tl = controlPT.l2s + easeInOut * controlPT.l2c;\n\t\t\t\t\t\tsegment[offset-1] = x + cos * l;\n\t\t\t\t\t\tsegment[offset] = y + sin * l;\n\t\t\t\t\t\tcontrolPT = controlPT._next;\n\t\t\t\t\t}\n\n\t\t\t\t\ttarget._gsRawPath = rawPath;\n\n\t\t\t\t\tif (this._apply) {\n\t\t\t\t\t\ts = \"\";\n\t\t\t\t\t\tspace = \" \";\n\t\t\t\t\t\tfor (j = 0; j < rawPath.length; j++) {\n\t\t\t\t\t\t\tsegment = rawPath[j];\n\t\t\t\t\t\t\tl = segment.length;\n\t\t\t\t\t\t\ts += \"M\" + (((segment[0] * rnd) | 0) / rnd) + space + (((segment[1] * rnd) | 0) / rnd) + \" C\";\n\t\t\t\t\t\t\tfor (i = 2; i < l; i++) { //this is actually faster than just doing a join() on the array, possibly because the numbers have so many decimal places\n\t\t\t\t\t\t\t\ts += (((segment[i] * rnd) | 0) / rnd) + space;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._prop) {\n\t\t\t\t\t\t\ttarget[this._prop] = s;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.setAttribute(\"d\", s);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this._render && rawPath) {\n\t\t\t\t\tthis._render.call(this._tween, rawPath, target);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\n\tMorphSVGPlugin.prototype._tweenRotation = function(start, end, i, linkedPT) {\n\t\tvar so = this._origin,              //starting origin\n\t\t\teo = this._eOrigin,             //ending origin\n\t\t\tdx = start[i] - so.x,\n\t\t\tdy = start[i+1] - so.y,\n\t\t\td = _sqrt(dx * dx + dy * dy),   //length from starting origin to starting point\n\t\t\tsa = _atan2(dy, dx),\n\t\t\tangleDif, short;\n\t\tdx = end[i] - eo.x;\n\t\tdy = end[i+1] - eo.y;\n\t\tangleDif = _atan2(dy, dx) - sa;\n\t\tshort = _shortAngle(angleDif);\n\t\t//in the case of control points, we ALWAYS link them to their anchor so that they don't get torn apart and rotate the opposite direction. If it's not a control point, we look at the most recently linked point as long as they're within a certain rotational range of each other.\n\t\tif (!linkedPT && _lastLinkedAnchor && Math.abs(short + _lastLinkedAnchor.ca) < _angleMin) {\n\t\t\tlinkedPT = _lastLinkedAnchor;\n\t\t}\n\t\treturn (this._anchorPT = _lastLinkedAnchor = {\n\t\t\t_next:this._anchorPT,\n\t\t\tt:start,\n\t\t\tsa:sa,                              //starting angle\n\t\t\tca:(linkedPT && short * linkedPT.ca < 0 && Math.abs(short) > _angleMax) ? angleDif : short,  //change in angle\n\t\t\tsl:d,                               //starting length\n\t\t\tcl:_sqrt(dx * dx + dy * dy) - d,    //change in length\n\t\t\ti:i\n\t\t});\n\t};\n\n\tMorphSVGPlugin.pathFilter = _pathFilter;\n\tMorphSVGPlugin.pointsFilter = _pointsFilter;\n\tMorphSVGPlugin.getTotalSize = _getTotalSize;\n\tMorphSVGPlugin.subdivideRawBezier = MorphSVGPlugin.subdivideSegment = _subdivideSegment;\n\tMorphSVGPlugin.rawPathToString = _rawPathToString;\n\tMorphSVGPlugin.defaultType = \"linear\";\n\tMorphSVGPlugin.defaultUpdateTarget = true;\n\tMorphSVGPlugin.defaultMap = \"size\";\n\tMorphSVGPlugin.stringToRawPath = MorphSVGPlugin.pathDataToRawBezier = function(data) {\n\t\treturn _stringToRawPath(_parseShape(data, true));\n\t};\n\tMorphSVGPlugin.equalizeSegmentQuantity = _equalizeSegmentQuantity;\n\n\tMorphSVGPlugin.convertToPath = function(targets, swap) {\n\t\tif (typeof(targets) === \"string\") {\n\t\t\ttargets = TweenLite.selector(targets);\n\t\t}\n\t\tvar a = (!targets || targets.length === 0) ? [] : (targets.length && targets[0] && targets[0].nodeType) ? Array.prototype.slice.call(targets, 0) : [targets],\n\t\t\ti = a.length;\n\t\twhile (--i > -1) {\n\t\t\ta[i] = _convertToPath(a[i], (swap !== false));\n\t\t}\n\t\treturn a;\n\t};\n\n\tMorphSVGPlugin.pathDataToBezier = function(data, vars) { //converts SVG path data into an array of {x, y} objects that can be plugged directly into a bezier tween. You can optionally pass in a 2D matrix like [a, b, c, d, tx, ty] containing numbers that should transform each point.\n\t\tvar bezier = _stringToRawPath(_parseShape(data, true))[0] || [],\n\t\t\tprefix = 0,\n\t\t\ta, i, l, matrix, offsetX, offsetY, bbox, e;\n\t\tvars = vars || {};\n\t\te = vars.align || vars.relative;\n\t\tmatrix = vars.matrix || [1,0,0,1,0,0];\n\t\toffsetX = vars.offsetX || 0;\n\t\toffsetY = vars.offsetY || 0;\n\t\tif (e === \"relative\" || e === true) {\n\t\t\toffsetX -= bezier[0] * matrix[0] + bezier[1] * matrix[2];\n\t\t\toffsetY -= bezier[0] * matrix[1] + bezier[1] * matrix[3];\n\t\t\tprefix = \"+=\";\n\t\t} else {\n\t\t\toffsetX += matrix[4];\n\t\t\toffsetY += matrix[5];\n\t\t\tif (e) {\n\t\t\t\te = (typeof(e) === \"string\") ? TweenLite.selector(e) : (e && e[0]) ? e : [e]; //allow array-like objects like jQuery objects.\n\t\t\t\tif (e && e[0]) {\n\t\t\t\t\tbbox = e[0].getBBox() || {x:0, y:0};\n\t\t\t\t\toffsetX -= bbox.x;\n\t\t\t\t\toffsetY -= bbox.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ta = [];\n\t\tl = bezier.length;\n\t\tif (matrix && matrix.join(\",\") !== \"1,0,0,1,0,0\") {\n\t\t\tfor (i = 0; i < l; i+=2) {\n\t\t\t\ta.push({x:prefix + (bezier[i] * matrix[0] + bezier[i+1] * matrix[2] + offsetX), y:prefix + (bezier[i] * matrix[1] + bezier[i+1] * matrix[3] + offsetY)});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0; i < l; i+=2) {\n\t\t\t\ta.push({x:prefix + (bezier[i] + offsetX), y:prefix + (bezier[i+1] + offsetY)});\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\n\nexport { MorphSVGPlugin, MorphSVGPlugin as default };"],"sourceRoot":""}