{"version":3,"sources":["webpack:///./wp-content/themes/think/src/js/components/learningAnim.js"],"names":["learningAnimHandler","animSchema","schema","document","getElementById","pathBezier","MorphSVGPlugin","pathDataToBezier","querySelector","minions","querySelectorAll","tls","resizeTimer","init","forEach","minion","i","TimelineMax","paused","repeat","to","bezier","values","type","ease","Linear","easeNone","progress","play","TweenMax","set","opacity","getComputedStyle","display","win","addResizeFunction","clearTimeout","setTimeout","animElts","svg","section","samplesNumber","thresholdSamples","index","observer","path","shadow1","shadow2","shadow3","shadow4","shadow5","img1","img2","img3","animLaunched","drawSVG","delay","intersectionCallback","entries","entry","intersectionRatio","IntersectionObserver","root","rootMargin","threshold","observe"],"mappings":"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","file":"learningAnim.js","sourcesContent":["import { TweenMax, TimelineMax } from 'gsap';\nimport { forEach } from '../utils';\nimport win from '../utils/Window';\nimport '../plugins/DrawSVGPlugin';\nimport '../plugins/MorphSVGPlugin';\n\nconst learningAnimHandler = () => {\n    const animSchema = () => {\n        const schema = document.getElementById('learning-anim');\n\n        if (!schema) return;\n\n        const pathBezier = MorphSVGPlugin.pathDataToBezier(\n            schema.querySelector('circle')\n        );\n        const minions = schema.querySelectorAll('.shape');\n        const tls = [];\n        let resizeTimer;\n\n        const init = () => {\n            forEach(minions, (minion, i) => {\n                tls[i] = new TimelineMax({ paused: true, repeat: -1 });\n\n                tls[i].to(minion, 50, {\n                    bezier: { values: pathBezier, type: 'cubic' },\n                    ease: Linear.easeNone,\n                });\n                tls[i].progress(i * 0.2);\n                tls[i].play();\n\n                TweenMax.set(minion, { opacity: 1 });\n            });\n        };\n\n        // launch anim if schema is visible (window width > 960)\n        if (getComputedStyle(schema).display !== 'none') init();\n\n        win.addResizeFunction(() => {\n            clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(() => {\n\n                if( getComputedStyle(schema).display !== 'none' ){\n                    init();\n                }\n\n            }, 500);\n        });\n    };\n\n    const animElts = () => {\n        const svg = document.getElementById('elts-svg');\n        const section = document.getElementById('learning-elts');\n\n        if (!svg || !section) return;\n\n        // Constants used to create the intersection observer threshold array\n        const samplesNumber = 10;\n        const thresholdSamples = [];\n        let index = 0;\n        let observer = null;\n\n        const path = svg.querySelector('.path');\n        const shadow1 = svg.querySelector('.shadow1');\n        const shadow2 = svg.querySelector('.shadow2');\n        const shadow3 = svg.querySelector('.shadow3');\n        const shadow4 = svg.querySelector('.shadow4');\n        const shadow5 = svg.querySelector('.shadow5');\n        const img1 = svg.querySelector('.img1');\n        const img2 = svg.querySelector('.img2');\n        const img3 = svg.querySelector('.img3');\n\n        let animLaunched = false;\n\n        const init = () => {\n            animLaunched = true;\n\n            TweenMax.to(path, 2, { drawSVG: '100%' });\n            TweenMax.to(shadow1, 0.2, { opacity: 0.6, delay: 0.4 });\n            TweenMax.to(shadow2, 0.2, { opacity: 0.6, delay: 0.5 });\n            TweenMax.to(img1, 0.3, { opacity: 1, delay: 0.6 });\n            TweenMax.to(shadow3, 0.2, { opacity: 0.6, delay: 0.9 });\n            TweenMax.to(shadow4, 0.2, { opacity: 0.6, delay: 1 });\n            TweenMax.to(img2, 0.3, { opacity: 1, delay: 1.1 });\n            TweenMax.to(shadow5, 0.2, { opacity: 0.6, delay: 1.7 });\n            TweenMax.to(img3, 0.3, { opacity: 1, delay: 1.7 });\n        };\n\n        const intersectionCallback = entries => {\n            forEach(entries, entry => {\n                if (entry.intersectionRatio < 0.5 || animLaunched) return;\n                init();\n            });\n        };\n\n        TweenMax.set(path, { drawSVG: 0 });\n        TweenMax.set([shadow1, shadow2, shadow3, shadow4, shadow5], {\n            opacity: 0,\n        });\n        TweenMax.set([img1, img2, img3], { opacity: 0 });\n\n        for (index; index <= samplesNumber; index++) {\n            thresholdSamples[index] = index / samplesNumber;\n        }\n\n        observer = new IntersectionObserver(intersectionCallback, {\n            root: null,\n            rootMargin: '0px',\n            threshold: thresholdSamples,\n        });\n\n        observer.observe(section);\n    };\n\n    animElts();\n    animSchema();\n};\n\nexport default learningAnimHandler;\n"],"sourceRoot":""}