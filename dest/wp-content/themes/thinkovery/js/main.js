!function t(e,i,n){function r(o,a){if(!i[o]){if(!e[o]){var l="function"==typeof require&&require;if(!a&&l)return l(o,!0);if(s)return s(o,!0);var u=new Error("Cannot find module '"+o+"'");throw u.code="MODULE_NOT_FOUND",u}var h=i[o]={exports:{}};e[o][0].call(h.exports,function(t){var i=e[o][1][t];return r(i?i:t)},h,h.exports,t,e,i,n)}return i[o].exports}for(var s="function"==typeof require&&require,o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,i){(function(t){var i="undefined"!=typeof e&&e.exports&&"undefined"!=typeof t?t:this||window;(i._gsQueue||(i._gsQueue=[])).push(function(){"use strict";i._gsDefine("TweenMax",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var n=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},r=function(t,e,i){var n,r,s=t.cycle;for(n in s)r=s[n],t[n]="function"==typeof r?r(i,e[i]):r[i%r.length];delete t.cycle},s=function(t,e,n){i.call(this,t,e,n),this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=s.prototype.render},o=1e-10,a=i._internals,l=a.isSelector,u=a.isArray,h=s.prototype=i.to({},.1,{}),c=[];s.version="1.19.0",h.constructor=s,h.kill()._gc=!1,s.killTweensOf=s.killDelayedCallsTo=i.killTweensOf,s.getTweensOf=i.getTweensOf,s.lagSmoothing=i.lagSmoothing,s.ticker=i.ticker,s.render=i.render,h.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),i.prototype.invalidate.call(this)},h.updateTo=function(t,e){var n,r=this.ratio,s=this.vars.immediateRender||t.immediateRender;e&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(n in t)this.vars[n]=t[n];if(this._initted||s)if(e)this._initted=!1,s&&this.render(0,!0,!0);else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&i._onPluginEvent("_onDisable",this),this._time/this._duration>.998){var o=this._totalTime;this.render(0,!0,!1),this._initted=!1,this.render(o,!0,!1)}else if(this._initted=!1,this._init(),this._time>0||s)for(var a,l=1/(1-r),u=this._firstPT;u;)a=u.s+u.c,u.c*=l,u.s=a-u.c,u=u._next;return this},h.render=function(t,e,i){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var n,r,s,l,u,h,c,f,p=this._dirty?this.totalDuration():this._totalDuration,d=this._time,_=this._totalTime,m=this._cycle,g=this._duration,v=this._rawPrevTime;if(t>=p-1e-7?(this._totalTime=p,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=g,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(n=!0,r="onComplete",i=i||this._timeline.autoRemoveChildren),0===g&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(v<0||t<=0&&t>=-1e-7||v===o&&"isPause"!==this.data)&&v!==t&&(i=!0,v>o&&(r="onReverseComplete")),this._rawPrevTime=f=!e||t||v===t?t:o)):t<1e-7?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==_||0===g&&v>0)&&(r="onReverseComplete",n=this._reversed),t<0&&(this._active=!1,0===g&&(this._initted||!this.vars.lazy||i)&&(v>=0&&(i=!0),this._rawPrevTime=f=!e||t||v===t?t:o)),this._initted||(i=!0)):(this._totalTime=this._time=t,0!==this._repeat&&(l=g+this._repeatDelay,this._cycle=this._totalTime/l>>0,0!==this._cycle&&this._cycle===this._totalTime/l&&_<=t&&this._cycle--,this._time=this._totalTime-this._cycle*l,this._yoyo&&0!==(1&this._cycle)&&(this._time=g-this._time),this._time>g?this._time=g:this._time<0&&(this._time=0)),this._easeType?(u=this._time/g,h=this._easeType,c=this._easePower,(1===h||3===h&&u>=.5)&&(u=1-u),3===h&&(u*=2),1===c?u*=u:2===c?u*=u*u:3===c?u*=u*u*u:4===c&&(u*=u*u*u*u),1===h?this.ratio=1-u:2===h?this.ratio=u:this._time/g<.5?this.ratio=u/2:this.ratio=1-u/2):this.ratio=this._ease.getRatio(this._time/g)),d===this._time&&!i&&m===this._cycle)return void(_!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate")));if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=d,this._totalTime=_,this._rawPrevTime=v,this._cycle=m,a.lazyTweens.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/g):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==d&&t>=0&&(this._active=!0),0===_&&(2===this._initted&&t>0&&this._init(),this._startAt&&(t>=0?this._startAt.render(t,e,i):r||(r="_dummyGS")),this.vars.onStart&&(0===this._totalTime&&0!==g||e||this._callback("onStart"))),s=this._firstPT;s;)s.f?s.t[s.p](s.c*this.ratio+s.s):s.t[s.p]=s.c*this.ratio+s.s,s=s._next;this._onUpdate&&(t<0&&this._startAt&&this._startTime&&this._startAt.render(t,e,i),e||(this._totalTime!==_||r)&&this._callback("onUpdate")),this._cycle!==m&&(e||this._gc||this.vars.onRepeat&&this._callback("onRepeat")),r&&(this._gc&&!i||(t<0&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(t,e,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this._callback(r),0===g&&this._rawPrevTime===o&&f!==o&&(this._rawPrevTime=0)))},s.to=function(t,e,i){return new s(t,e,i)},s.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new s(t,e,i)},s.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new s(t,e,n)},s.staggerTo=s.allTo=function(t,e,o,a,h,f,p){a=a||0;var d,_,m,g,v=0,y=[],x=function(){o.onComplete&&o.onComplete.apply(o.onCompleteScope||this,arguments),h.apply(p||o.callbackScope||this,f||c)},b=o.cycle,T=o.startAt&&o.startAt.cycle;for(u(t)||("string"==typeof t&&(t=i.selector(t)||t),l(t)&&(t=n(t))),t=t||[],a<0&&(t=n(t),t.reverse(),a*=-1),d=t.length-1,m=0;m<=d;m++){_={};for(g in o)_[g]=o[g];if(b&&(r(_,t,m),null!=_.duration&&(e=_.duration,delete _.duration)),T){T=_.startAt={};for(g in o.startAt)T[g]=o.startAt[g];r(_.startAt,t,m)}_.delay=v+(_.delay||0),m===d&&h&&(_.onComplete=x),y[m]=new s(t[m],e,_),v+=a}return y},s.staggerFrom=s.allFrom=function(t,e,i,n,r,o,a){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,s.staggerTo(t,e,i,n,r,o,a)},s.staggerFromTo=s.allFromTo=function(t,e,i,n,r,o,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,s.staggerTo(t,e,n,r,o,a,l)},s.delayedCall=function(t,e,i,n,r){return new s(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,onReverseCompleteParams:i,immediateRender:!1,useFrames:r,overwrite:0})},s.set=function(t,e){return new s(t,0,e)},s.isTweening=function(t){return i.getTweensOf(t,!0).length>0};var f=function(t,e){for(var n=[],r=0,s=t._first;s;)s instanceof i?n[r++]=s:(e&&(n[r++]=s),n=n.concat(f(s,e)),r=n.length),s=s._next;return n},p=s.getAllTweens=function(e){return f(t._rootTimeline,e).concat(f(t._rootFramesTimeline,e))};s.killAll=function(t,i,n,r){null==i&&(i=!0),null==n&&(n=!0);var s,o,a,l=p(0!=r),u=l.length,h=i&&n&&r;for(a=0;a<u;a++)o=l[a],(h||o instanceof e||(s=o.target===o.vars.onComplete)&&n||i&&!s)&&(t?o.totalTime(o._reversed?0:o.totalDuration()):o._enabled(!1,!1))},s.killChildTweensOf=function(t,e){if(null!=t){var r,o,h,c,f,p=a.tweenLookup;if("string"==typeof t&&(t=i.selector(t)||t),l(t)&&(t=n(t)),u(t))for(c=t.length;--c>-1;)s.killChildTweensOf(t[c],e);else{r=[];for(h in p)for(o=p[h].target.parentNode;o;)o===t&&(r=r.concat(p[h].tweens)),o=o.parentNode;for(f=r.length,c=0;c<f;c++)e&&r[c].totalTime(r[c].totalDuration()),r[c]._enabled(!1,!1)}}};var d=function(t,i,n,r){i=i!==!1,n=n!==!1,r=r!==!1;for(var s,o,a=p(r),l=i&&n&&r,u=a.length;--u>-1;)o=a[u],(l||o instanceof e||(s=o.target===o.vars.onComplete)&&n||i&&!s)&&o.paused(t)};return s.pauseAll=function(t,e,i){d(!0,t,e,i)},s.resumeAll=function(t,e,i){d(!1,t,e,i)},s.globalTimeScale=function(e){var n=t._rootTimeline,r=i.ticker.time;return arguments.length?(e=e||o,n._startTime=r-(r-n._startTime)*n._timeScale/e,n=t._rootFramesTimeline,r=i.ticker.frame,n._startTime=r-(r-n._startTime)*n._timeScale/e,n._timeScale=t._rootTimeline._timeScale=e,e):n._timeScale},h.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},h.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},h.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},h.duration=function(e){return arguments.length?t.prototype.duration.call(this,e):this._duration},h.totalDuration=function(t){return arguments.length?this._repeat===-1?this:this.duration((t-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=this._repeat===-1?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},h.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},h.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},h.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},s},!0),i._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,n){var r=function(t){e.call(this,t),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],u(i)&&i.join("").indexOf("{self}")!==-1&&(r[n]=this._swapSelfInParams(i));u(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},s=1e-10,o=n._internals,a=r._internals={},l=o.isSelector,u=o.isArray,h=o.lazyTweens,c=o.lazyRender,f=i._gsDefine.globals,p=function(t){var e,i={};for(e in t)i[e]=t[e];return i},d=function(t,e,i){var n,r,s=t.cycle;for(n in s)r=s[n],t[n]="function"==typeof r?r.call(e[i],i):r[i%r.length];delete t.cycle},_=a.pauseCallback=function(){},m=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},g=r.prototype=new e;return r.version="1.19.0",g.constructor=r,g.kill()._gc=g._forcingPlayhead=g._hasPause=!1,g.to=function(t,e,i,r){var s=i.repeat&&f.TweenMax||n;return e?this.add(new s(t,e,i),r):this.set(t,i,r)},g.from=function(t,e,i,r){return this.add((i.repeat&&f.TweenMax||n).from(t,e,i),r)},g.fromTo=function(t,e,i,r,s){var o=r.repeat&&f.TweenMax||n;return e?this.add(o.fromTo(t,e,i,r),s):this.set(t,r,s)},g.staggerTo=function(t,e,i,s,o,a,u,h){var c,f,_=new r({onComplete:a,onCompleteParams:u,callbackScope:h,smoothChildTiming:this.smoothChildTiming}),g=i.cycle;for("string"==typeof t&&(t=n.selector(t)||t),t=t||[],l(t)&&(t=m(t)),s=s||0,s<0&&(t=m(t),t.reverse(),s*=-1),f=0;f<t.length;f++)c=p(i),c.startAt&&(c.startAt=p(c.startAt),c.startAt.cycle&&d(c.startAt,t,f)),g&&(d(c,t,f),null!=c.duration&&(e=c.duration,delete c.duration)),_.to(t[f],e,c,f*s);return this.add(_,o)},g.staggerFrom=function(t,e,i,n,r,s,o,a){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(t,e,i,n,r,s,o,a)},g.staggerFromTo=function(t,e,i,n,r,s,o,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(t,e,n,r,s,o,a,l)},g.call=function(t,e,i,r){return this.add(n.delayedCall(0,t,e,i),r)},g.set=function(t,e,i){return i=this._parseTimeOrLabel(i,0,!0),null==e.immediateRender&&(e.immediateRender=i===this._time&&!this._paused),this.add(new n(t,0,e),i)},r.exportRoot=function(t,e){t=t||{},null==t.smoothChildTiming&&(t.smoothChildTiming=!0);var i,s,o=new r(t),a=o._timeline;for(null==e&&(e=!0),a._remove(o,!0),o._startTime=0,o._rawPrevTime=o._time=o._totalTime=a._time,i=a._first;i;)s=i._next,e&&i instanceof n&&i.target===i.vars.onComplete||o.add(i,i._startTime-i._delay),i=s;return a.add(o,0),o},g.add=function(i,s,o,a){var l,h,c,f,p,d;if("number"!=typeof s&&(s=this._parseTimeOrLabel(s,0,!0,i)),!(i instanceof t)){if(i instanceof Array||i&&i.push&&u(i)){for(o=o||"normal",a=a||0,l=s,h=i.length,c=0;c<h;c++)u(f=i[c])&&(f=new r({tweens:f})),this.add(f,l),"string"!=typeof f&&"function"!=typeof f&&("sequence"===o?l=f._startTime+f.totalDuration()/f._timeScale:"start"===o&&(f._startTime-=f.delay())),l+=a;return this._uncache(!0)}if("string"==typeof i)return this.addLabel(i,s);if("function"!=typeof i)throw"Cannot add "+i+" into the timeline; it is not a tween, timeline, function, or string.";i=n.delayedCall(0,i)}if(e.prototype.add.call(this,i,s),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(p=this,d=p.rawTime()>i._startTime;p._timeline;)d&&p._timeline.smoothChildTiming?p.totalTime(p._totalTime,!0):p._gc&&p._enabled(!0,!1),p=p._timeline;return this},g.remove=function(e){if(e instanceof t){this._remove(e,!1);var i=e._timeline=e.vars.useFrames?t._rootFramesTimeline:t._rootTimeline;return e._startTime=(e._paused?e._pauseTime:i._time)-(e._reversed?e.totalDuration()-e._totalTime:e._totalTime)/e._timeScale,this}if(e instanceof Array||e&&e.push&&u(e)){for(var n=e.length;--n>-1;)this.remove(e[n]);return this}return"string"==typeof e?this.removeLabel(e):this.kill(null,e)},g._remove=function(t,i){e.prototype._remove.call(this,t,i);var n=this._last;return n?this._time>n._startTime+n._totalDuration/n._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},g.append=function(t,e){return this.add(t,this._parseTimeOrLabel(null,e,!0,t))},g.insert=g.insertMultiple=function(t,e,i,n){return this.add(t,e||0,i,n)},g.appendMultiple=function(t,e,i,n){return this.add(t,this._parseTimeOrLabel(null,e,!0,t),i,n)},g.addLabel=function(t,e){return this._labels[t]=this._parseTimeOrLabel(e),this},g.addPause=function(t,e,i,r){var s=n.delayedCall(0,_,i,r||this);return s.vars.onComplete=s.vars.onReverseComplete=e,s.data="isPause",this._hasPause=!0,this.add(s,t)},g.removeLabel=function(t){return delete this._labels[t],this},g.getLabelTime=function(t){return null!=this._labels[t]?this._labels[t]:-1},g._parseTimeOrLabel=function(e,i,n,r){var s;if(r instanceof t&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&u(r)))for(s=r.length;--s>-1;)r[s]instanceof t&&r[s].timeline===this&&this.remove(r[s]);if("string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof e&&null==this._labels[i]?e-this.duration():0,n);if(i=i||0,"string"!=typeof e||!isNaN(e)&&null==this._labels[e])null==e&&(e=this.duration());else{if(s=e.indexOf("="),s===-1)return null==this._labels[e]?n?this._labels[e]=this.duration()+i:i:this._labels[e]+i;i=parseInt(e.charAt(s-1)+"1",10)*Number(e.substr(s+1)),e=s>1?this._parseTimeOrLabel(e.substr(0,s-1),0,n):this.duration()}return Number(e)+i},g.seek=function(t,e){return this.totalTime("number"==typeof t?t:this._parseTimeOrLabel(t),e!==!1)},g.stop=function(){return this.paused(!0)},g.gotoAndPlay=function(t,e){return this.play(t,e)},g.gotoAndStop=function(t,e){return this.pause(t,e)},g.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,r,o,a,l,u,f,p=this._dirty?this.totalDuration():this._totalDuration,d=this._time,_=this._startTime,m=this._timeScale,g=this._paused;if(t>=p-1e-7)this._totalTime=this._time=p,this._reversed||this._hasPausedChild()||(r=!0,a="onComplete",l=!!this._timeline.autoRemoveChildren,0===this._duration&&(t<=0&&t>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===s)&&this._rawPrevTime!==t&&this._first&&(l=!0,this._rawPrevTime>s&&(a="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,t=p+1e-4;else if(t<1e-7)if(this._totalTime=this._time=0,(0!==d||0===this._duration&&this._rawPrevTime!==s&&(this._rawPrevTime>0||t<0&&this._rawPrevTime>=0))&&(a="onReverseComplete",r=this._reversed),t<0)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(l=r=!0,a="onReverseComplete"):this._rawPrevTime>=0&&this._first&&(l=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,0===t&&r)for(n=this._first;n&&0===n._startTime;)n._duration||(r=!1),n=n._next;t=0,this._initted||(l=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!e){if(t>=d)for(n=this._first;n&&n._startTime<=t&&!u;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(u=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!u;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(u=n),n=n._prev;u&&(this._time=t=u._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=t}if(this._time!==d&&this._first||i||l||u){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==d&&t>0&&(this._active=!0),0===d&&this.vars.onStart&&(0===this._time&&this._duration||e||this._callback("onStart")),f=this._time,f>=d)for(n=this._first;n&&(o=n._next,f===this._time&&(!this._paused||g));)(n._active||n._startTime<=f&&!n._paused&&!n._gc)&&(u===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,f===this._time&&(!this._paused||g));){if(n._active||n._startTime<=d&&!n._paused&&!n._gc){if(u===n){for(u=n._prev;u&&u.endTime()>this._time;)u.render(u._reversed?u.totalDuration()-(t-u._startTime)*u._timeScale:(t-u._startTime)*u._timeScale,e,i),u=u._prev;u=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(h.length&&c(),this._callback("onUpdate"))),a&&(this._gc||_!==this._startTime&&m===this._timeScale||(0===this._time||p>=this.totalDuration())&&(r&&(h.length&&c(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[a]&&this._callback(a)))}},g._hasPausedChild=function(){for(var t=this._first;t;){if(t._paused||t instanceof r&&t._hasPausedChild())return!0;t=t._next}return!1},g.getChildren=function(t,e,i,r){r=r||-9999999999;for(var s=[],o=this._first,a=0;o;)o._startTime<r||(o instanceof n?e!==!1&&(s[a++]=o):(i!==!1&&(s[a++]=o),t!==!1&&(s=s.concat(o.getChildren(!0,e,i)),a=s.length))),o=o._next;return s},g.getTweensOf=function(t,e){var i,r,s=this._gc,o=[],a=0;for(s&&this._enabled(!0,!0),i=n.getTweensOf(t),r=i.length;--r>-1;)(i[r].timeline===this||e&&this._contains(i[r]))&&(o[a++]=i[r]);return s&&this._enabled(!1,!0),o},g.recent=function(){return this._recent},g._contains=function(t){for(var e=t.timeline;e;){if(e===this)return!0;e=e.timeline}return!1},g.shiftChildren=function(t,e,i){i=i||0;for(var n,r=this._first,s=this._labels;r;)r._startTime>=i&&(r._startTime+=t),r=r._next;if(e)for(n in s)s[n]>=i&&(s[n]+=t);return this._uncache(!0)},g._kill=function(t,e){if(!t&&!e)return this._enabled(!1,!1);for(var i=e?this.getTweensOf(e):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(t,e)&&(r=!0);return r},g.clear=function(t){var e=this.getChildren(!1,!0,!0),i=e.length;for(this._time=this._totalTime=0;--i>-1;)e[i]._enabled(!1,!1);return t!==!1&&(this._labels={}),this._uncache(!0)},g.invalidate=function(){for(var e=this._first;e;)e.invalidate(),e=e._next;return t.prototype.invalidate.call(this)},g._enabled=function(t,i){if(t===this._gc)for(var n=this._first;n;)n._enabled(t,!0),n=n._next;return e.prototype._enabled.call(this,t,i)},g.totalTime=function(e,i,n){this._forcingPlayhead=!0;var r=t.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,r},g.duration=function(t){return arguments.length?(0!==this.duration()&&0!==t&&this.timeScale(this._duration/t),this):(this._dirty&&this.totalDuration(),this._duration)},g.totalDuration=function(t){if(!arguments.length){if(this._dirty){for(var e,i,n=0,r=this._last,s=999999999999;r;)e=r._prev,r._dirty&&r.totalDuration(),r._startTime>s&&this._sortChildren&&!r._paused?this.add(r,r._startTime-r._delay):s=r._startTime,r._startTime<0&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale),this.shiftChildren(-r._startTime,!1,-9999999999),s=0),i=r._startTime+r._totalDuration/r._timeScale,i>n&&(n=i),r=e;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return t&&this.totalDuration()?this.timeScale(this._totalDuration/t):this},g.paused=function(e){if(!e)for(var i=this._first,n=this._time;i;)i._startTime===n&&"isPause"===i.data&&(i._rawPrevTime=0),i=i._next;return t.prototype.paused.apply(this,arguments)},g.usesFrames=function(){for(var e=this._timeline;e._timeline;)e=e._timeline;return e===t._rootFramesTimeline},g.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},r},!0),i._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(t,e,n){var r=function(e){t.call(this,e),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},s=1e-10,o=e._internals,a=o.lazyTweens,l=o.lazyRender,u=i._gsDefine.globals,h=new n(null,null,1,0),c=r.prototype=new t;return c.constructor=r,c.kill()._gc=!1,r.version="1.19.0",c.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),t.prototype.invalidate.call(this)},c.addCallback=function(t,i,n,r){return this.add(e.delayedCall(0,t,n,r),i)},c.removeCallback=function(t,e){if(t)if(null==e)this._kill(null,t);else for(var i=this.getTweensOf(t,!1),n=i.length,r=this._parseTimeOrLabel(e);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},c.removePause=function(e){return this.removeCallback(t._internals.pauseCallback,e)},c.tweenTo=function(t,i){i=i||{};var n,r,s,o={ease:h,useFrames:this.usesFrames(),immediateRender:!1},a=i.repeat&&u.TweenMax||e;for(r in i)o[r]=i[r];return o.time=this._parseTimeOrLabel(t),n=Math.abs(Number(o.time)-this._time)/this._timeScale||.001,s=new a(this,n,o),o.onStart=function(){s.target.paused(!0),s.vars.time!==s.target.time()&&n===s.duration()&&s.duration(Math.abs(s.vars.time-s.target.time())/s.target._timeScale),i.onStart&&s._callback("onStart")},s},c.tweenFromTo=function(t,e,i){i=i||{},t=this._parseTimeOrLabel(t),i.startAt={onComplete:this.seek,onCompleteParams:[t],callbackScope:this},i.immediateRender=i.immediateRender!==!1;var n=this.tweenTo(e,i);return n.duration(Math.abs(n.vars.time-t)/this._timeScale||.001)},c.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,r,o,u,h,c,f,p,d=this._dirty?this.totalDuration():this._totalDuration,_=this._duration,m=this._time,g=this._totalTime,v=this._startTime,y=this._timeScale,x=this._rawPrevTime,b=this._paused,T=this._cycle;if(t>=d-1e-7)this._locked||(this._totalTime=d,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(r=!0,u="onComplete",h=!!this._timeline.autoRemoveChildren,0===this._duration&&(t<=0&&t>=-1e-7||x<0||x===s)&&x!==t&&this._first&&(h=!0,x>s&&(u="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:s,this._yoyo&&0!==(1&this._cycle)?this._time=t=0:(this._time=_,t=_+1e-4);else if(t<1e-7)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==m||0===_&&x!==s&&(x>0||t<0&&x>=0)&&!this._locked)&&(u="onReverseComplete",r=this._reversed),t<0)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(h=r=!0,u="onReverseComplete"):x>=0&&this._first&&(h=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=_||!e||t||this._rawPrevTime===t?t:s,0===t&&r)for(n=this._first;n&&0===n._startTime;)n._duration||(r=!1),n=n._next;t=0,this._initted||(h=!0)}else if(0===_&&x<0&&(h=!0),this._time=this._rawPrevTime=t,this._locked||(this._totalTime=t,0!==this._repeat&&(c=_+this._repeatDelay,this._cycle=this._totalTime/c>>0,0!==this._cycle&&this._cycle===this._totalTime/c&&g<=t&&this._cycle--,this._time=this._totalTime-this._cycle*c,this._yoyo&&0!==(1&this._cycle)&&(this._time=_-this._time),this._time>_?(this._time=_,t=_+1e-4):this._time<0?this._time=t=0:t=this._time)),this._hasPause&&!this._forcingPlayhead&&!e){if(t=this._time,t>=m)for(n=this._first;n&&n._startTime<=t&&!f;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(f=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!f;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(f=n),n=n._prev;f&&(this._time=t=f._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==T&&!this._locked){var w=this._yoyo&&0!==(1&T),P=w===(this._yoyo&&0!==(1&this._cycle)),k=this._totalTime,C=this._cycle,S=this._rawPrevTime,O=this._time;if(this._totalTime=T*_,this._cycle<T?w=!w:this._totalTime+=_,this._time=m,this._rawPrevTime=0===_?x-1e-4:x,this._cycle=T,this._locked=!0,m=w?0:_,this.render(m,e,0===_),e||this._gc||this.vars.onRepeat&&this._callback("onRepeat"),m!==this._time)return;if(P&&(m=w?_+1e-4:-1e-4,this.render(m,!0,!1)),this._locked=!1,this._paused&&!b)return;this._time=O,this._totalTime=k,this._cycle=C,this._rawPrevTime=S}if(!(this._time!==m&&this._first||i||h||f))return void(g!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate")));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==g&&t>0&&(this._active=!0),0===g&&this.vars.onStart&&(0===this._totalTime&&this._totalDuration||e||this._callback("onStart")),p=this._time,p>=m)for(n=this._first;n&&(o=n._next,p===this._time&&(!this._paused||b));)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(f===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,p===this._time&&(!this._paused||b));){if(n._active||n._startTime<=m&&!n._paused&&!n._gc){if(f===n){for(f=n._prev;f&&f.endTime()>this._time;)f.render(f._reversed?f.totalDuration()-(t-f._startTime)*f._timeScale:(t-f._startTime)*f._timeScale,e,i),f=f._prev;f=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(a.length&&l(),this._callback("onUpdate"))),u&&(this._locked||this._gc||v!==this._startTime&&y===this._timeScale||(0===this._time||d>=this.totalDuration())&&(r&&(a.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[u]&&this._callback(u)))},c.getActive=function(t,e,i){null==t&&(t=!0),null==e&&(e=!0),null==i&&(i=!1);var n,r,s=[],o=this.getChildren(t,e,i),a=0,l=o.length;for(n=0;n<l;n++)r=o[n],r.isActive()&&(s[a++]=r);return s},c.getLabelAfter=function(t){t||0!==t&&(t=this._time);var e,i=this.getLabelsArray(),n=i.length;for(e=0;e<n;e++)if(i[e].time>t)return i[e].name;return null},c.getLabelBefore=function(t){null==t&&(t=this._time);for(var e=this.getLabelsArray(),i=e.length;--i>-1;)if(e[i].time<t)return e[i].name;return null},c.getLabelsArray=function(){var t,e=[],i=0;for(t in this._labels)e[i++]={time:this._labels[t],name:t};return e.sort(function(t,e){return t.time-e.time}),e},c.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},c.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},c.totalDuration=function(e){return arguments.length?this._repeat!==-1&&e?this.timeScale(this.totalDuration()/e):this:(this._dirty&&(t.prototype.totalDuration.call(this),this._totalDuration=this._repeat===-1?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},c.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},c.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},c.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},c.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},c.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.getLabelBefore(this._time+1e-8)},r},!0),function(){var t=180/Math.PI,e=[],n=[],r=[],s={},o=i._gsDefine.globals,a=function(t,e,i,n){i===n&&(i=n-(n-e)/1e6),t===e&&(e=t+(i-t)/1e6),this.a=t,this.b=e,this.c=i,this.d=n,this.da=n-t,this.ca=i-t,this.ba=e-t},l=",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",u=function(t,e,i,n){var r={a:t},s={},o={},a={c:n},l=(t+e)/2,u=(e+i)/2,h=(i+n)/2,c=(l+u)/2,f=(u+h)/2,p=(f-c)/8;return r.b=l+(t-l)/4,s.b=c+p,r.c=s.a=(r.b+s.b)/2,s.c=o.a=(c+f)/2,o.b=f-p,a.b=h+(n-h)/4,o.c=a.a=(o.b+a.b)/2,[r,s,o,a]},h=function(t,i,s,o,a){var l,h,c,f,p,d,_,m,g,v,y,x,b,T=t.length-1,w=0,P=t[0].a;for(l=0;l<T;l++)p=t[w],h=p.a,c=p.d,f=t[w+1].d,a?(y=e[l],x=n[l],b=(x+y)*i*.25/(o?.5:r[l]||.5),d=c-(c-h)*(o?.5*i:0!==y?b/y:0),_=c+(f-c)*(o?.5*i:0!==x?b/x:0),m=c-(d+((_-d)*(3*y/(y+x)+.5)/4||0))):(d=c-(c-h)*i*.5,_=c+(f-c)*i*.5,m=c-(d+_)/2),d+=m,_+=m,p.c=g=d,0!==l?p.b=P:p.b=P=p.a+.6*(p.c-p.a),p.da=c-h,p.ca=g-h,p.ba=P-h,s?(v=u(h,P,g,c),t.splice(w,1,v[0],v[1],v[2],v[3]),w+=4):w++,P=_;p=t[w],p.b=P,p.c=P+.4*(p.d-P),p.da=p.d-p.a,p.ca=p.c-p.a,p.ba=P-p.a,s&&(v=u(p.a,P,p.c,p.d),t.splice(w,1,v[0],v[1],v[2],v[3]))},c=function(t,i,r,s){var o,l,u,h,c,f,p=[];if(s)for(t=[s].concat(t),l=t.length;--l>-1;)"string"==typeof(f=t[l][i])&&"="===f.charAt(1)&&(t[l][i]=s[i]+Number(f.charAt(0)+f.substr(2)));if(o=t.length-2,o<0)return p[0]=new a(t[0][i],0,0,t[o<-1?0:1][i]),p;for(l=0;l<o;l++)u=t[l][i],h=t[l+1][i],p[l]=new a(u,0,0,h),r&&(c=t[l+2][i],e[l]=(e[l]||0)+(h-u)*(h-u),n[l]=(n[l]||0)+(c-h)*(c-h));return p[l]=new a(t[l][i],0,0,t[l+1][i]),p},f=function(t,i,o,a,u,f){var p,d,_,m,g,v,y,x,b={},T=[],w=f||t[0];u="string"==typeof u?","+u+",":l,null==i&&(i=1);for(d in t[0])T.push(d);if(t.length>1){for(x=t[t.length-1],y=!0,p=T.length;--p>-1;)if(d=T[p],Math.abs(w[d]-x[d])>.05){y=!1;break}y&&(t=t.concat(),f&&t.unshift(f),t.push(t[1]),f=t[t.length-3])}for(e.length=n.length=r.length=0,p=T.length;--p>-1;)d=T[p],s[d]=u.indexOf(","+d+",")!==-1,b[d]=c(t,d,s[d],f);for(p=e.length;--p>-1;)e[p]=Math.sqrt(e[p]),n[p]=Math.sqrt(n[p]);if(!a){for(p=T.length;--p>-1;)if(s[d])for(_=b[T[p]],v=_.length-1,m=0;m<v;m++)g=_[m+1].da/n[m]+_[m].da/e[m]||0,r[m]=(r[m]||0)+g*g;for(p=r.length;--p>-1;)r[p]=Math.sqrt(r[p])}for(p=T.length,m=o?4:1;--p>-1;)d=T[p],_=b[d],h(_,i,o,a,s[d]),y&&(_.splice(0,m),_.splice(_.length-m,m));return b},p=function(t,e,i){e=e||"soft";var n,r,s,o,l,u,h,c,f,p,d,_={},m="cubic"===e?3:2,g="soft"===e,v=[];if(g&&i&&(t=[i].concat(t)),null==t||t.length<m+1)throw"invalid Bezier data";for(f in t[0])v.push(f);for(u=v.length;--u>-1;){for(f=v[u],_[f]=l=[],p=0,c=t.length,h=0;h<c;h++)n=null==i?t[h][f]:"string"==typeof(d=t[h][f])&&"="===d.charAt(1)?i[f]+Number(d.charAt(0)+d.substr(2)):Number(d),g&&h>1&&h<c-1&&(l[p++]=(n+l[p-2])/2),l[p++]=n;for(c=p-m+1,p=0,h=0;h<c;h+=m)n=l[h],r=l[h+1],s=l[h+2],o=2===m?0:l[h+3],l[p++]=d=3===m?new a(n,r,s,o):new a(n,(2*r+n)/3,(2*r+s)/3,s);l.length=p}return _},d=function(t,e,i){for(var n,r,s,o,a,l,u,h,c,f,p,d=1/i,_=t.length;--_>-1;)for(f=t[_],
s=f.a,o=f.d-s,a=f.c-s,l=f.b-s,n=r=0,h=1;h<=i;h++)u=d*h,c=1-u,n=r-(r=(u*u*o+3*c*(u*a+c*l))*u),p=_*i+h-1,e[p]=(e[p]||0)+n*n},_=function(t,e){e=e>>0||6;var i,n,r,s,o=[],a=[],l=0,u=0,h=e-1,c=[],f=[];for(i in t)d(t[i],o,e);for(r=o.length,n=0;n<r;n++)l+=Math.sqrt(o[n]),s=n%e,f[s]=l,s===h&&(u+=l,s=n/e>>0,c[s]=f,a[s]=u,l=0,f=[]);return{length:u,lengths:a,segments:c}},m=i._gsDefine.plugin({propName:"bezier",priority:-1,version:"1.3.7",API:2,global:!0,init:function(t,e,i){this._target=t,e instanceof Array&&(e={values:e}),this._func={},this._mod={},this._props=[],this._timeRes=null==e.timeResolution?6:parseInt(e.timeResolution,10);var n,r,s,o,a,l=e.values||[],u={},h=l[0],c=e.autoRotate||i.vars.orientToBezier;this._autoRotate=c?c instanceof Array?c:[["x","y","rotation",c===!0?0:Number(c)||0]]:null;for(n in h)this._props.push(n);for(s=this._props.length;--s>-1;)n=this._props[s],this._overwriteProps.push(n),r=this._func[n]="function"==typeof t[n],u[n]=r?t[n.indexOf("set")||"function"!=typeof t["get"+n.substr(3)]?n:"get"+n.substr(3)]():parseFloat(t[n]),a||u[n]!==l[0][n]&&(a=u);if(this._beziers="cubic"!==e.type&&"quadratic"!==e.type&&"soft"!==e.type?f(l,isNaN(e.curviness)?1:e.curviness,!1,"thruBasic"===e.type,e.correlate,a):p(l,e.type,u),this._segCount=this._beziers[n].length,this._timeRes){var d=_(this._beziers,this._timeRes);this._length=d.length,this._lengths=d.lengths,this._segments=d.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(c=this._autoRotate)for(this._initialRotations=[],c[0]instanceof Array||(this._autoRotate=c=[c]),s=c.length;--s>-1;){for(o=0;o<3;o++)n=c[s][o],this._func[n]="function"==typeof t[n]&&t[n.indexOf("set")||"function"!=typeof t["get"+n.substr(3)]?n:"get"+n.substr(3)];n=c[s][2],this._initialRotations[s]=(this._func[n]?this._func[n].call(this._target):this._target[n])||0,this._overwriteProps.push(n)}return this._startRatio=i.vars.runBackwards?1:0,!0},set:function(e){var i,n,r,s,o,a,l,u,h,c,f=this._segCount,p=this._func,d=this._target,_=e!==this._startRatio;if(this._timeRes){if(h=this._lengths,c=this._curSeg,e*=this._length,r=this._li,e>this._l2&&r<f-1){for(u=f-1;r<u&&(this._l2=h[++r])<=e;);this._l1=h[r-1],this._li=r,this._curSeg=c=this._segments[r],this._s2=c[this._s1=this._si=0]}else if(e<this._l1&&r>0){for(;r>0&&(this._l1=h[--r])>=e;);0===r&&e<this._l1?this._l1=0:r++,this._l2=h[r],this._li=r,this._curSeg=c=this._segments[r],this._s1=c[(this._si=c.length-1)-1]||0,this._s2=c[this._si]}if(i=r,e-=this._l1,r=this._si,e>this._s2&&r<c.length-1){for(u=c.length-1;r<u&&(this._s2=c[++r])<=e;);this._s1=c[r-1],this._si=r}else if(e<this._s1&&r>0){for(;r>0&&(this._s1=c[--r])>=e;);0===r&&e<this._s1?this._s1=0:r++,this._s2=c[r],this._si=r}a=(r+(e-this._s1)/(this._s2-this._s1))*this._prec||0}else i=e<0?0:e>=1?f-1:f*e>>0,a=(e-i*(1/f))*f;for(n=1-a,r=this._props.length;--r>-1;)s=this._props[r],o=this._beziers[s][i],l=(a*a*o.da+3*n*(a*o.ca+n*o.ba))*a+o.a,this._mod[s]&&(l=this._mod[s](l,d)),p[s]?d[s](l):d[s]=l;if(this._autoRotate){var m,g,v,y,x,b,T,w=this._autoRotate;for(r=w.length;--r>-1;)s=w[r][2],b=w[r][3]||0,T=w[r][4]===!0?1:t,o=this._beziers[w[r][0]],m=this._beziers[w[r][1]],o&&m&&(o=o[i],m=m[i],g=o.a+(o.b-o.a)*a,y=o.b+(o.c-o.b)*a,g+=(y-g)*a,y+=(o.c+(o.d-o.c)*a-y)*a,v=m.a+(m.b-m.a)*a,x=m.b+(m.c-m.b)*a,v+=(x-v)*a,x+=(m.c+(m.d-m.c)*a-x)*a,l=_?Math.atan2(x-v,y-g)*T+b:this._initialRotations[r],this._mod[s]&&(l=this._mod[s](l,d)),p[s]?d[s](l):d[s]=l)}}}),g=m.prototype;m.bezierThrough=f,m.cubicToQuadratic=u,m._autoCSS=!0,m.quadraticToCubic=function(t,e,i){return new a(t,(2*e+t)/3,(2*e+i)/3,i)},m._cssRegister=function(){var t=o.CSSPlugin;if(t){var e=t._internals,i=e._parseToProxy,n=e._setPluginRatio,r=e.CSSPropTween;e._registerComplexSpecialProp("bezier",{parser:function(t,e,s,o,a,l){e instanceof Array&&(e={values:e}),l=new m;var u,h,c,f=e.values,p=f.length-1,d=[],_={};if(p<0)return a;for(u=0;u<=p;u++)c=i(t,f[u],o,a,l,p!==u),d[u]=c.end;for(h in e)_[h]=e[h];return _.values=d,a=new r(t,"bezier",0,0,c.pt,2),a.data=c,a.plugin=l,a.setRatio=n,0===_.autoRotate&&(_.autoRotate=!0),!_.autoRotate||_.autoRotate instanceof Array||(u=_.autoRotate===!0?0:Number(_.autoRotate),_.autoRotate=null!=c.end.left?[["left","top","rotation",u,!1]]:null!=c.end.x&&[["x","y","rotation",u,!1]]),_.autoRotate&&(o._transform||o._enableTransforms(!1),c.autoRotate=o._target._gsTransform,c.proxy.rotation=c.autoRotate.rotation||0,o._overwriteProps.push("rotation")),l._onInitTween(c.proxy,_,o._tween),a}})}},g._mod=function(t){for(var e,i=this._overwriteProps,n=i.length;--n>-1;)e=t[i[n]],e&&"function"==typeof e&&(this._mod[i[n]]=e)},g._kill=function(t){var e,i,n=this._props;for(e in this._beziers)if(e in t)for(delete this._beziers[e],delete this._func[e],i=n.length;--i>-1;)n[i]===e&&n.splice(i,1);if(n=this._autoRotate)for(i=n.length;--i>-1;)t[n[i][2]]&&n.splice(i,1);return this._super._kill.call(this,t)}}(),i._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],function(t,e){var n,r,s,o,a=function(){t.call(this,"css"),this._overwriteProps.length=0,this.setRatio=a.prototype.setRatio},l=i._gsDefine.globals,u={},h=a.prototype=new t("css");h.constructor=a,a.version="1.19.0",a.API=2,a.defaultTransformPerspective=0,a.defaultSkewType="compensated",a.defaultSmoothOrigin=!0,h="px",a.suffixMap={top:h,right:h,bottom:h,left:h,width:h,height:h,fontSize:h,padding:h,margin:h,perspective:h,lineHeight:""};var c,f,p,d,_,m,g,v,y=/(?:\-|\.|\b)(\d|\.|e\-)+/g,x=/(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,b=/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,T=/(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,w=/(?:\d|\-|\+|=|#|\.)*/g,P=/opacity *= *([^)]*)/i,k=/opacity:([^;]*)/i,C=/alpha\(opacity *=.+?\)/i,S=/^(rgb|hsl)/,O=/([A-Z])/g,A=/-([a-z])/gi,D=/(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,R=function(t,e){return e.toUpperCase()},N=/(?:Left|Right|Width)/i,E=/(M11|M12|M21|M22)=[\d\-\.e]+/gi,M=/progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,F=/,(?=[^\)]*(?:\(|$))/gi,L=/[\s,\(]/i,j=Math.PI/180,I=180/Math.PI,z={},q=document,B=function(t){return q.createElementNS?q.createElementNS("http://www.w3.org/1999/xhtml",t):q.createElement(t)},X=B("div"),H=B("img"),W=a._internals={_specialProps:u},Y=navigator.userAgent,$=function(){var t=Y.indexOf("Android"),e=B("a");return p=Y.indexOf("Safari")!==-1&&Y.indexOf("Chrome")===-1&&(t===-1||Number(Y.substr(t+8,1))>3),_=p&&Number(Y.substr(Y.indexOf("Version/")+8,1))<6,d=Y.indexOf("Firefox")!==-1,(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(Y)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(Y))&&(m=parseFloat(RegExp.$1)),!!e&&(e.style.cssText="top:1px;opacity:.55;",/^0.55/.test(e.style.opacity))}(),U=function(t){return P.test("string"==typeof t?t:(t.currentStyle?t.currentStyle.filter:t.style.filter)||"")?parseFloat(RegExp.$1)/100:1},V=function(t){window.console&&console.log(t)},Z="",G="",Q=function(t,e){e=e||X;var i,n,r=e.style;if(void 0!==r[t])return t;for(t=t.charAt(0).toUpperCase()+t.substr(1),i=["O","Moz","ms","Ms","Webkit"],n=5;--n>-1&&void 0===r[i[n]+t];);return n>=0?(G=3===n?"ms":i[n],Z="-"+G.toLowerCase()+"-",G+t):null},K=q.defaultView?q.defaultView.getComputedStyle:function(){},J=a.getStyle=function(t,e,i,n,r){var s;return $||"opacity"!==e?(!n&&t.style[e]?s=t.style[e]:(i=i||K(t))?s=i[e]||i.getPropertyValue(e)||i.getPropertyValue(e.replace(O,"-$1").toLowerCase()):t.currentStyle&&(s=t.currentStyle[e]),null==r||s&&"none"!==s&&"auto"!==s&&"auto auto"!==s?s:r):U(t)},tt=W.convertToPixels=function(t,i,n,r,s){if("px"===r||!r)return n;if("auto"===r||!n)return 0;var o,l,u,h=N.test(i),c=t,f=X.style,p=n<0,d=1===n;if(p&&(n=-n),d&&(n*=100),"%"===r&&i.indexOf("border")!==-1)o=n/100*(h?t.clientWidth:t.clientHeight);else{if(f.cssText="border:0 solid red;position:"+J(t,"position")+";line-height:0;","%"!==r&&c.appendChild&&"v"!==r.charAt(0)&&"rem"!==r)f[h?"borderLeftWidth":"borderTopWidth"]=n+r;else{if(c=t.parentNode||q.body,l=c._gsCache,u=e.ticker.frame,l&&h&&l.time===u)return l.width*n/100;f[h?"width":"height"]=n+r}c.appendChild(X),o=parseFloat(X[h?"offsetWidth":"offsetHeight"]),c.removeChild(X),h&&"%"===r&&a.cacheWidths!==!1&&(l=c._gsCache=c._gsCache||{},l.time=u,l.width=o/n*100),0!==o||s||(o=tt(t,i,n,r,!0))}return d&&(o/=100),p?-o:o},et=W.calculateOffset=function(t,e,i){if("absolute"!==J(t,"position",i))return 0;var n="left"===e?"Left":"Top",r=J(t,"margin"+n,i);return t["offset"+n]-(tt(t,e,parseFloat(r),r.replace(w,""))||0)},it=function(t,e){var i,n,r,s={};if(e=e||K(t,null))if(i=e.length)for(;--i>-1;)r=e[i],r.indexOf("-transform")!==-1&&At!==r||(s[r.replace(A,R)]=e.getPropertyValue(r));else for(i in e)i.indexOf("Transform")!==-1&&Ot!==i||(s[i]=e[i]);else if(e=t.currentStyle||t.style)for(i in e)"string"==typeof i&&void 0===s[i]&&(s[i.replace(A,R)]=e[i]);return $||(s.opacity=U(t)),n=Xt(t,e,!1),s.rotation=n.rotation,s.skewX=n.skewX,s.scaleX=n.scaleX,s.scaleY=n.scaleY,s.x=n.x,s.y=n.y,Rt&&(s.z=n.z,s.rotationX=n.rotationX,s.rotationY=n.rotationY,s.scaleZ=n.scaleZ),s.filters&&delete s.filters,s},nt=function(t,e,i,n,r){var s,o,a,l={},u=t.style;for(o in i)"cssText"!==o&&"length"!==o&&isNaN(o)&&(e[o]!==(s=i[o])||r&&r[o])&&o.indexOf("Origin")===-1&&("number"!=typeof s&&"string"!=typeof s||(l[o]="auto"!==s||"left"!==o&&"top"!==o?""!==s&&"auto"!==s&&"none"!==s||"string"!=typeof e[o]||""===e[o].replace(T,"")?s:0:et(t,o),void 0!==u[o]&&(a=new vt(u,o,u[o],a))));if(n)for(o in n)"className"!==o&&(l[o]=n[o]);return{difs:l,firstMPT:a}},rt={width:["Left","Right"],height:["Top","Bottom"]},st=["marginLeft","marginRight","marginTop","marginBottom"],ot=function(t,e,i){if("svg"===(t.nodeName+"").toLowerCase())return(i||K(t))[e]||0;if(t.getBBox&&zt(t))return t.getBBox()[e]||0;var n=parseFloat("width"===e?t.offsetWidth:t.offsetHeight),r=rt[e],s=r.length;for(i=i||K(t,null);--s>-1;)n-=parseFloat(J(t,"padding"+r[s],i,!0))||0,n-=parseFloat(J(t,"border"+r[s]+"Width",i,!0))||0;return n},at=function(t,e){if("contain"===t||"auto"===t||"auto auto"===t)return t+" ";null!=t&&""!==t||(t="0 0");var i,n=t.split(" "),r=t.indexOf("left")!==-1?"0%":t.indexOf("right")!==-1?"100%":n[0],s=t.indexOf("top")!==-1?"0%":t.indexOf("bottom")!==-1?"100%":n[1];if(n.length>3&&!e){for(n=t.split(", ").join(",").split(","),t=[],i=0;i<n.length;i++)t.push(at(n[i]));return t.join(",")}return null==s?s="center"===r?"50%":"0":"center"===s&&(s="50%"),("center"===r||isNaN(parseFloat(r))&&(r+"").indexOf("=")===-1)&&(r="50%"),t=r+" "+s+(n.length>2?" "+n[2]:""),e&&(e.oxp=r.indexOf("%")!==-1,e.oyp=s.indexOf("%")!==-1,e.oxr="="===r.charAt(1),e.oyr="="===s.charAt(1),e.ox=parseFloat(r.replace(T,"")),e.oy=parseFloat(s.replace(T,"")),e.v=t),e||t},lt=function(t,e){return"function"==typeof t&&(t=t(v,g)),"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2)):parseFloat(t)-parseFloat(e)||0},ut=function(t,e){return"function"==typeof t&&(t=t(v,g)),null==t?e:"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2))+e:parseFloat(t)||0},ht=function(t,e,i,n){var r,s,o,a,l,u=1e-6;return"function"==typeof t&&(t=t(v,g)),null==t?a=e:"number"==typeof t?a=t:(r=360,s=t.split("_"),l="="===t.charAt(1),o=(l?parseInt(t.charAt(0)+"1",10)*parseFloat(s[0].substr(2)):parseFloat(s[0]))*(t.indexOf("rad")===-1?1:I)-(l?0:e),s.length&&(n&&(n[i]=e+o),t.indexOf("short")!==-1&&(o%=r,o!==o%(r/2)&&(o=o<0?o+r:o-r)),t.indexOf("_cw")!==-1&&o<0?o=(o+9999999999*r)%r-(o/r|0)*r:t.indexOf("ccw")!==-1&&o>0&&(o=(o-9999999999*r)%r-(o/r|0)*r)),a=e+o),a<u&&a>-u&&(a=0),a},ct={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},ft=function(t,e,i){return t=t<0?t+1:t>1?t-1:t,255*(6*t<1?e+(i-e)*t*6:t<.5?i:3*t<2?e+(i-e)*(2/3-t)*6:e)+.5|0},pt=a.parseColor=function(t,e){var i,n,r,s,o,a,l,u,h,c,f;if(t)if("number"==typeof t)i=[t>>16,t>>8&255,255&t];else{if(","===t.charAt(t.length-1)&&(t=t.substr(0,t.length-1)),ct[t])i=ct[t];else if("#"===t.charAt(0))4===t.length&&(n=t.charAt(1),r=t.charAt(2),s=t.charAt(3),t="#"+n+n+r+r+s+s),t=parseInt(t.substr(1),16),i=[t>>16,t>>8&255,255&t];else if("hsl"===t.substr(0,3))if(i=f=t.match(y),e){if(t.indexOf("=")!==-1)return t.match(x)}else o=Number(i[0])%360/360,a=Number(i[1])/100,l=Number(i[2])/100,r=l<=.5?l*(a+1):l+a-l*a,n=2*l-r,i.length>3&&(i[3]=Number(t[3])),i[0]=ft(o+1/3,n,r),i[1]=ft(o,n,r),i[2]=ft(o-1/3,n,r);else i=t.match(y)||ct.transparent;i[0]=Number(i[0]),i[1]=Number(i[1]),i[2]=Number(i[2]),i.length>3&&(i[3]=Number(i[3]))}else i=ct.black;return e&&!f&&(n=i[0]/255,r=i[1]/255,s=i[2]/255,u=Math.max(n,r,s),h=Math.min(n,r,s),l=(u+h)/2,u===h?o=a=0:(c=u-h,a=l>.5?c/(2-u-h):c/(u+h),o=u===n?(r-s)/c+(r<s?6:0):u===r?(s-n)/c+2:(n-r)/c+4,o*=60),i[0]=o+.5|0,i[1]=100*a+.5|0,i[2]=100*l+.5|0),i},dt=function(t,e){var i,n,r,s=t.match(_t)||[],o=0,a=s.length?"":t;for(i=0;i<s.length;i++)n=s[i],r=t.substr(o,t.indexOf(n,o)-o),o+=r.length+n.length,n=pt(n,e),3===n.length&&n.push(1),a+=r+(e?"hsla("+n[0]+","+n[1]+"%,"+n[2]+"%,"+n[3]:"rgba("+n.join(","))+")";return a+t.substr(o)},_t="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";for(h in ct)_t+="|"+h+"\\b";_t=new RegExp(_t+")","gi"),a.colorStringFilter=function(t){var e,i=t[0]+t[1];_t.test(i)&&(e=i.indexOf("hsl(")!==-1||i.indexOf("hsla(")!==-1,t[0]=dt(t[0],e),t[1]=dt(t[1],e)),_t.lastIndex=0},e.defaultStringFilter||(e.defaultStringFilter=a.colorStringFilter);var mt=function(t,e,i,n){if(null==t)return function(t){return t};var r,s=e?(t.match(_t)||[""])[0]:"",o=t.split(s).join("").match(b)||[],a=t.substr(0,t.indexOf(o[0])),l=")"===t.charAt(t.length-1)?")":"",u=t.indexOf(" ")!==-1?" ":",",h=o.length,c=h>0?o[0].replace(y,""):"";return h?r=e?function(t){var e,f,p,d;if("number"==typeof t)t+=c;else if(n&&F.test(t)){for(d=t.replace(F,"|").split("|"),p=0;p<d.length;p++)d[p]=r(d[p]);return d.join(",")}if(e=(t.match(_t)||[s])[0],f=t.split(e).join("").match(b)||[],p=f.length,h>p--)for(;++p<h;)f[p]=i?f[(p-1)/2|0]:o[p];return a+f.join(u)+u+e+l+(t.indexOf("inset")!==-1?" inset":"")}:function(t){var e,s,f;if("number"==typeof t)t+=c;else if(n&&F.test(t)){for(s=t.replace(F,"|").split("|"),f=0;f<s.length;f++)s[f]=r(s[f]);return s.join(",")}if(e=t.match(b)||[],f=e.length,h>f--)for(;++f<h;)e[f]=i?e[(f-1)/2|0]:o[f];return a+e.join(u)+l}:function(t){return t}},gt=function(t){return t=t.split(","),function(e,i,n,r,s,o,a){var l,u=(i+"").split(" ");for(a={},l=0;l<4;l++)a[t[l]]=u[l]=u[l]||u[(l-1)/2>>0];return r.parse(e,a,s,o)}},vt=(W._setPluginRatio=function(t){this.plugin.setRatio(t);for(var e,i,n,r,s,o=this.data,a=o.proxy,l=o.firstMPT,u=1e-6;l;)e=a[l.v],l.r?e=Math.round(e):e<u&&e>-u&&(e=0),l.t[l.p]=e,l=l._next;if(o.autoRotate&&(o.autoRotate.rotation=o.mod?o.mod(a.rotation,this.t):a.rotation),1===t||0===t)for(l=o.firstMPT,s=1===t?"e":"b";l;){if(i=l.t,i.type){if(1===i.type){for(r=i.xs0+i.s+i.xs1,n=1;n<i.l;n++)r+=i["xn"+n]+i["xs"+(n+1)];i[s]=r}}else i[s]=i.s+i.xs0;l=l._next}},function(t,e,i,n,r){this.t=t,this.p=e,this.v=i,this.r=r,n&&(n._prev=this,this._next=n)}),yt=(W._parseToProxy=function(t,e,i,n,r,s){var o,a,l,u,h,c=n,f={},p={},d=i._transform,_=z;for(i._transform=null,z=e,n=h=i.parse(t,e,n,r),z=_,s&&(i._transform=d,c&&(c._prev=null,c._prev&&(c._prev._next=null)));n&&n!==c;){if(n.type<=1&&(a=n.p,p[a]=n.s+n.c,f[a]=n.s,s||(u=new vt(n,"s",a,u,n.r),n.c=0),1===n.type))for(o=n.l;--o>0;)l="xn"+o,a=n.p+"_"+l,p[a]=n.data[l],f[a]=n[l],s||(u=new vt(n,l,a,u,n.rxp[l]));n=n._next}return{proxy:f,end:p,firstMPT:u,pt:h}},W.CSSPropTween=function(t,e,i,r,s,a,l,u,h,c,f){this.t=t,this.p=e,this.s=i,this.c=r,this.n=l||e,t instanceof yt||o.push(this.n),this.r=u,this.type=a||0,h&&(this.pr=h,n=!0),this.b=void 0===c?i:c,this.e=void 0===f?i+r:f,s&&(this._next=s,s._prev=this)}),xt=function(t,e,i,n,r,s){var o=new yt(t,e,i,n-i,r,(-1),s);return o.b=i,o.e=o.xs0=n,o},bt=a.parseComplex=function(t,e,i,n,r,s,o,l,u,h){i=i||s||"","function"==typeof n&&(n=n(v,g)),o=new yt(t,e,0,0,o,h?2:1,null,(!1),l,i,n),n+="",r&&_t.test(n+i)&&(n=[i,n],a.colorStringFilter(n),i=n[0],n=n[1]);var f,p,d,_,m,b,T,w,P,k,C,S,O,A=i.split(", ").join(",").split(" "),D=n.split(", ").join(",").split(" "),R=A.length,N=c!==!1;for(n.indexOf(",")===-1&&i.indexOf(",")===-1||(A=A.join(" ").replace(F,", ").split(" "),D=D.join(" ").replace(F,", ").split(" "),R=A.length),R!==D.length&&(A=(s||"").split(" "),R=A.length),o.plugin=u,o.setRatio=h,_t.lastIndex=0,f=0;f<R;f++)if(_=A[f],m=D[f],w=parseFloat(_),w||0===w)o.appendXtra("",w,lt(m,w),m.replace(x,""),N&&m.indexOf("px")!==-1,!0);else if(r&&_t.test(_))S=m.indexOf(")")+1,S=")"+(S?m.substr(S):""),O=m.indexOf("hsl")!==-1&&$,_=pt(_,O),m=pt(m,O),P=_.length+m.length>6,P&&!$&&0===m[3]?(o["xs"+o.l]+=o.l?" transparent":"transparent",o.e=o.e.split(D[f]).join("transparent")):($||(P=!1),O?o.appendXtra(P?"hsla(":"hsl(",_[0],lt(m[0],_[0]),",",!1,!0).appendXtra("",_[1],lt(m[1],_[1]),"%,",!1).appendXtra("",_[2],lt(m[2],_[2]),P?"%,":"%"+S,!1):o.appendXtra(P?"rgba(":"rgb(",_[0],m[0]-_[0],",",!0,!0).appendXtra("",_[1],m[1]-_[1],",",!0).appendXtra("",_[2],m[2]-_[2],P?",":S,!0),P&&(_=_.length<4?1:_[3],o.appendXtra("",_,(m.length<4?1:m[3])-_,S,!1))),_t.lastIndex=0;else if(b=_.match(y)){if(T=m.match(x),!T||T.length!==b.length)return o;for(d=0,p=0;p<b.length;p++)C=b[p],k=_.indexOf(C,d),o.appendXtra(_.substr(d,k-d),Number(C),lt(T[p],C),"",N&&"px"===_.substr(k+C.length,2),0===p),d=k+C.length;o["xs"+o.l]+=_.substr(d)}else o["xs"+o.l]+=o.l||o["xs"+o.l]?" "+m:m;if(n.indexOf("=")!==-1&&o.data){for(S=o.xs0+o.data.s,f=1;f<o.l;f++)S+=o["xs"+f]+o.data["xn"+f];o.e=S+o["xs"+f]}return o.l||(o.type=-1,o.xs0=o.e),o.xfirst||o},Tt=9;for(h=yt.prototype,h.l=h.pr=0;--Tt>0;)h["xn"+Tt]=0,h["xs"+Tt]="";h.xs0="",h._next=h._prev=h.xfirst=h.data=h.plugin=h.setRatio=h.rxp=null,h.appendXtra=function(t,e,i,n,r,s){var o=this,a=o.l;return o["xs"+a]+=s&&(a||o["xs"+a])?" "+t:t||"",i||0===a||o.plugin?(o.l++,o.type=o.setRatio?2:1,o["xs"+o.l]=n||"",a>0?(o.data["xn"+a]=e+i,o.rxp["xn"+a]=r,o["xn"+a]=e,o.plugin||(o.xfirst=new yt(o,"xn"+a,e,i,o.xfirst||o,0,o.n,r,o.pr),o.xfirst.xs0=0),o):(o.data={s:e+i},o.rxp={},o.s=e,o.c=i,o.r=r,o)):(o["xs"+a]+=e+(n||""),o)};var wt=function(t,e){e=e||{},this.p=e.prefix?Q(t)||t:t,u[t]=u[this.p]=this,this.format=e.formatter||mt(e.defaultValue,e.color,e.collapsible,e.multi),e.parser&&(this.parse=e.parser),this.clrs=e.color,this.multi=e.multi,this.keyword=e.keyword,this.dflt=e.defaultValue,this.pr=e.priority||0},Pt=W._registerComplexSpecialProp=function(t,e,i){"object"!=typeof e&&(e={parser:i});var n,r,s=t.split(","),o=e.defaultValue;for(i=i||[o],n=0;n<s.length;n++)e.prefix=0===n&&e.prefix,e.defaultValue=i[n]||o,r=new wt(s[n],e)},kt=W._registerPluginProp=function(t){if(!u[t]){var e=t.charAt(0).toUpperCase()+t.substr(1)+"Plugin";Pt(t,{parser:function(t,i,n,r,s,o,a){var h=l.com.greensock.plugins[e];return h?(h._cssRegister(),u[n].parse(t,i,n,r,s,o,a)):(V("Error: "+e+" js file not loaded."),s)}})}};h=wt.prototype,h.parseComplex=function(t,e,i,n,r,s){var o,a,l,u,h,c,f=this.keyword;if(this.multi&&(F.test(i)||F.test(e)?(a=e.replace(F,"|").split("|"),l=i.replace(F,"|").split("|")):f&&(a=[e],l=[i])),l){for(u=l.length>a.length?l.length:a.length,o=0;o<u;o++)e=a[o]=a[o]||this.dflt,i=l[o]=l[o]||this.dflt,f&&(h=e.indexOf(f),c=i.indexOf(f),h!==c&&(c===-1?a[o]=a[o].split(f).join(""):h===-1&&(a[o]+=" "+f)));e=a.join(", "),i=l.join(", ")}return bt(t,this.p,e,i,this.clrs,this.dflt,n,this.pr,r,s)},h.parse=function(t,e,i,n,r,o,a){return this.parseComplex(t.style,this.format(J(t,this.p,s,!1,this.dflt)),this.format(e),r,o)},a.registerSpecialProp=function(t,e,i){Pt(t,{parser:function(t,n,r,s,o,a,l){var u=new yt(t,r,0,0,o,2,r,(!1),i);return u.plugin=a,u.setRatio=e(t,n,s._tween,r),u},priority:i})},a.useSVGTransformAttr=p||d;var Ct,St="scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),Ot=Q("transform"),At=Z+"transform",Dt=Q("transformOrigin"),Rt=null!==Q("perspective"),Nt=W.Transform=function(){this.perspective=parseFloat(a.defaultTransformPerspective)||0,this.force3D=!(a.defaultForce3D===!1||!Rt)&&(a.defaultForce3D||"auto")},Et=window.SVGElement,Mt=function(t,e,i){var n,r=q.createElementNS("http://www.w3.org/2000/svg",t),s=/([a-z])([A-Z])/g;for(n in i)r.setAttributeNS(null,n.replace(s,"$1-$2").toLowerCase(),i[n]);return e.appendChild(r),r},Ft=q.documentElement,Lt=function(){var t,e,i,n=m||/Android/i.test(Y)&&!window.chrome;return q.createElementNS&&!n&&(t=Mt("svg",Ft),e=Mt("rect",t,{width:100,height:50,x:100}),i=e.getBoundingClientRect().width,e.style[Dt]="50% 50%",e.style[Ot]="scaleX(0.5)",n=i===e.getBoundingClientRect().width&&!(d&&Rt),Ft.removeChild(t)),n}(),jt=function(t,e,i,n,r,s){var o,l,u,h,c,f,p,d,_,m,g,v,y,x,b=t._gsTransform,T=Bt(t,!0);b&&(y=b.xOrigin,x=b.yOrigin),(!n||(o=n.split(" ")).length<2)&&(p=t.getBBox(),e=at(e).split(" "),o=[(e[0].indexOf("%")!==-1?parseFloat(e[0])/100*p.width:parseFloat(e[0]))+p.x,(e[1].indexOf("%")!==-1?parseFloat(e[1])/100*p.height:parseFloat(e[1]))+p.y]),i.xOrigin=h=parseFloat(o[0]),i.yOrigin=c=parseFloat(o[1]),n&&T!==qt&&(f=T[0],p=T[1],d=T[2],_=T[3],m=T[4],g=T[5],v=f*_-p*d,l=h*(_/v)+c*(-d/v)+(d*g-_*m)/v,u=h*(-p/v)+c*(f/v)-(f*g-p*m)/v,h=i.xOrigin=o[0]=l,c=i.yOrigin=o[1]=u),b&&(s&&(i.xOffset=b.xOffset,i.yOffset=b.yOffset,b=i),r||r!==!1&&a.defaultSmoothOrigin!==!1?(l=h-y,u=c-x,b.xOffset+=l*T[0]+u*T[2]-l,b.yOffset+=l*T[1]+u*T[3]-u):b.xOffset=b.yOffset=0),s||t.setAttribute("data-svg-origin",o.join(" "))},It=function(t){try{return t.getBBox()}catch(t){}},zt=function(t){return!!(Et&&t.getBBox&&t.getCTM&&It(t)&&(!t.parentNode||t.parentNode.getBBox&&t.parentNode.getCTM))},qt=[1,0,0,1,0,0],Bt=function(t,e){var i,n,r,s,o,a,l=t._gsTransform||new Nt,u=1e5,h=t.style;if(Ot?n=J(t,At,null,!0):t.currentStyle&&(n=t.currentStyle.filter.match(E),n=n&&4===n.length?[n[0].substr(4),Number(n[2].substr(4)),Number(n[1].substr(4)),n[3].substr(4),l.x||0,l.y||0].join(","):""),i=!n||"none"===n||"matrix(1, 0, 0, 1, 0, 0)"===n,i&&Ot&&((a="none"===K(t).display)||!t.parentNode)&&(a&&(s=h.display,h.display="block"),t.parentNode||(o=1,Ft.appendChild(t)),n=J(t,At,null,!0),i=!n||"none"===n||"matrix(1, 0, 0, 1, 0, 0)"===n,s?h.display=s:a&&$t(h,"display"),o&&Ft.removeChild(t)),(l.svg||t.getBBox&&zt(t))&&(i&&(h[Ot]+"").indexOf("matrix")!==-1&&(n=h[Ot],i=0),r=t.getAttribute("transform"),i&&r&&(r.indexOf("matrix")!==-1?(n=r,i=0):r.indexOf("translate")!==-1&&(n="matrix(1,0,0,1,"+r.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",")+")",i=0))),i)return qt;for(r=(n||"").match(y)||[],Tt=r.length;--Tt>-1;)s=Number(r[Tt]),r[Tt]=(o=s-(s|=0))?(o*u+(o<0?-.5:.5)|0)/u+s:s;return e&&r.length>6?[r[0],r[1],r[4],r[5],r[12],r[13]]:r},Xt=W.getTransform=function(t,i,n,r){if(t._gsTransform&&n&&!r)return t._gsTransform;var s,o,l,u,h,c,f=n?t._gsTransform||new Nt:new Nt,p=f.scaleX<0,d=2e-5,_=1e5,m=Rt?parseFloat(J(t,Dt,i,!1,"0 0 0").split(" ")[2])||f.zOrigin||0:0,g=parseFloat(a.defaultTransformPerspective)||0;if(f.svg=!(!t.getBBox||!zt(t)),f.svg&&(jt(t,J(t,Dt,i,!1,"50% 50%")+"",f,t.getAttribute("data-svg-origin")),Ct=a.useSVGTransformAttr||Lt),s=Bt(t),s!==qt){if(16===s.length){var v,y,x,b,T,w=s[0],P=s[1],k=s[2],C=s[3],S=s[4],O=s[5],A=s[6],D=s[7],R=s[8],N=s[9],E=s[10],M=s[12],F=s[13],L=s[14],j=s[11],z=Math.atan2(A,E);f.zOrigin&&(L=-f.zOrigin,M=R*L-s[12],F=N*L-s[13],L=E*L+f.zOrigin-s[14]),f.rotationX=z*I,z&&(b=Math.cos(-z),T=Math.sin(-z),v=S*b+R*T,y=O*b+N*T,x=A*b+E*T,R=S*-T+R*b,N=O*-T+N*b,E=A*-T+E*b,j=D*-T+j*b,S=v,O=y,A=x),z=Math.atan2(-k,E),f.rotationY=z*I,z&&(b=Math.cos(-z),T=Math.sin(-z),v=w*b-R*T,y=P*b-N*T,x=k*b-E*T,N=P*T+N*b,E=k*T+E*b,j=C*T+j*b,w=v,P=y,k=x),z=Math.atan2(P,w),f.rotation=z*I,z&&(b=Math.cos(-z),T=Math.sin(-z),w=w*b+S*T,y=P*b+O*T,O=P*-T+O*b,A=k*-T+A*b,P=y),f.rotationX&&Math.abs(f.rotationX)+Math.abs(f.rotation)>359.9&&(f.rotationX=f.rotation=0,f.rotationY=180-f.rotationY),f.scaleX=(Math.sqrt(w*w+P*P)*_+.5|0)/_,f.scaleY=(Math.sqrt(O*O+N*N)*_+.5|0)/_,f.scaleZ=(Math.sqrt(A*A+E*E)*_+.5|0)/_,f.rotationX||f.rotationY?f.skewX=0:(f.skewX=S||O?Math.atan2(S,O)*I+f.rotation:f.skewX||0,Math.abs(f.skewX)>90&&Math.abs(f.skewX)<270&&(p?(f.scaleX*=-1,f.skewX+=f.rotation<=0?180:-180,f.rotation+=f.rotation<=0?180:-180):(f.scaleY*=-1,f.skewX+=f.skewX<=0?180:-180))),f.perspective=j?1/(j<0?-j:j):0,f.x=M,f.y=F,f.z=L,f.svg&&(f.x-=f.xOrigin-(f.xOrigin*w-f.yOrigin*S),f.y-=f.yOrigin-(f.yOrigin*P-f.xOrigin*O))}else if(!Rt||r||!s.length||f.x!==s[4]||f.y!==s[5]||!f.rotationX&&!f.rotationY){var q=s.length>=6,B=q?s[0]:1,X=s[1]||0,H=s[2]||0,W=q?s[3]:1;f.x=s[4]||0,f.y=s[5]||0,l=Math.sqrt(B*B+X*X),u=Math.sqrt(W*W+H*H),h=B||X?Math.atan2(X,B)*I:f.rotation||0,c=H||W?Math.atan2(H,W)*I+h:f.skewX||0,Math.abs(c)>90&&Math.abs(c)<270&&(p?(l*=-1,c+=h<=0?180:-180,h+=h<=0?180:-180):(u*=-1,c+=c<=0?180:-180)),f.scaleX=l,f.scaleY=u,f.rotation=h,f.skewX=c,Rt&&(f.rotationX=f.rotationY=f.z=0,f.perspective=g,f.scaleZ=1),f.svg&&(f.x-=f.xOrigin-(f.xOrigin*B+f.yOrigin*H),f.y-=f.yOrigin-(f.xOrigin*X+f.yOrigin*W))}f.zOrigin=m;for(o in f)f[o]<d&&f[o]>-d&&(f[o]=0)}return n&&(t._gsTransform=f,f.svg&&(Ct&&t.style[Ot]?e.delayedCall(.001,function(){$t(t.style,Ot)}):!Ct&&t.getAttribute("transform")&&e.delayedCall(.001,function(){t.removeAttribute("transform")}))),f},Ht=function(t){var e,i,n=this.data,r=-n.rotation*j,s=r+n.skewX*j,o=1e5,a=(Math.cos(r)*n.scaleX*o|0)/o,l=(Math.sin(r)*n.scaleX*o|0)/o,u=(Math.sin(s)*-n.scaleY*o|0)/o,h=(Math.cos(s)*n.scaleY*o|0)/o,c=this.t.style,f=this.t.currentStyle;if(f){i=l,l=-u,u=-i,e=f.filter,c.filter="";var p,d,_=this.t.offsetWidth,g=this.t.offsetHeight,v="absolute"!==f.position,y="progid:DXImageTransform.Microsoft.Matrix(M11="+a+", M12="+l+", M21="+u+", M22="+h,x=n.x+_*n.xPercent/100,b=n.y+g*n.yPercent/100;if(null!=n.ox&&(p=(n.oxp?_*n.ox*.01:n.ox)-_/2,d=(n.oyp?g*n.oy*.01:n.oy)-g/2,x+=p-(p*a+d*l),b+=d-(p*u+d*h)),v?(p=_/2,d=g/2,y+=", Dx="+(p-(p*a+d*l)+x)+", Dy="+(d-(p*u+d*h)+b)+")"):y+=", sizingMethod='auto expand')",e.indexOf("DXImageTransform.Microsoft.Matrix(")!==-1?c.filter=e.replace(M,y):c.filter=y+" "+e,0!==t&&1!==t||1===a&&0===l&&0===u&&1===h&&(v&&y.indexOf("Dx=0, Dy=0")===-1||P.test(e)&&100!==parseFloat(RegExp.$1)||e.indexOf(e.indexOf("Alpha"))===-1&&c.removeAttribute("filter")),!v){var T,k,C,S=m<8?1:-1;for(p=n.ieOffsetX||0,d=n.ieOffsetY||0,n.ieOffsetX=Math.round((_-((a<0?-a:a)*_+(l<0?-l:l)*g))/2+x),n.ieOffsetY=Math.round((g-((h<0?-h:h)*g+(u<0?-u:u)*_))/2+b),Tt=0;Tt<4;Tt++)k=st[Tt],T=f[k],i=T.indexOf("px")!==-1?parseFloat(T):tt(this.t,k,parseFloat(T),T.replace(w,""))||0,C=i!==n[k]?Tt<2?-n.ieOffsetX:-n.ieOffsetY:Tt<2?p-n.ieOffsetX:d-n.ieOffsetY,c[k]=(n[k]=Math.round(i-C*(0===Tt||2===Tt?1:S)))+"px"}}},Wt=W.set3DTransformRatio=W.setTransformRatio=function(t){var e,i,n,r,s,o,a,l,u,h,c,f,p,_,m,g,v,y,x,b,T,w,P,k=this.data,C=this.t.style,S=k.rotation,O=k.rotationX,A=k.rotationY,D=k.scaleX,R=k.scaleY,N=k.scaleZ,E=k.x,M=k.y,F=k.z,L=k.svg,I=k.perspective,z=k.force3D;if(((1===t||0===t)&&"auto"===z&&(this.tween._totalTime===this.tween._totalDuration||!this.tween._totalTime)||!z)&&!F&&!I&&!A&&!O&&1===N||Ct&&L||!Rt)return void(S||k.skewX||L?(S*=j,w=k.skewX*j,P=1e5,e=Math.cos(S)*D,r=Math.sin(S)*D,i=Math.sin(S-w)*-R,s=Math.cos(S-w)*R,w&&"simple"===k.skewType&&(v=Math.tan(w-k.skewY*j),v=Math.sqrt(1+v*v),i*=v,s*=v,k.skewY&&(v=Math.tan(k.skewY*j),v=Math.sqrt(1+v*v),e*=v,r*=v)),L&&(E+=k.xOrigin-(k.xOrigin*e+k.yOrigin*i)+k.xOffset,M+=k.yOrigin-(k.xOrigin*r+k.yOrigin*s)+k.yOffset,Ct&&(k.xPercent||k.yPercent)&&(_=this.t.getBBox(),E+=.01*k.xPercent*_.width,M+=.01*k.yPercent*_.height),_=1e-6,E<_&&E>-_&&(E=0),M<_&&M>-_&&(M=0)),x=(e*P|0)/P+","+(r*P|0)/P+","+(i*P|0)/P+","+(s*P|0)/P+","+E+","+M+")",L&&Ct?this.t.setAttribute("transform","matrix("+x):C[Ot]=(k.xPercent||k.yPercent?"translate("+k.xPercent+"%,"+k.yPercent+"%) matrix(":"matrix(")+x):C[Ot]=(k.xPercent||k.yPercent?"translate("+k.xPercent+"%,"+k.yPercent+"%) matrix(":"matrix(")+D+",0,0,"+R+","+E+","+M+")");if(d&&(_=1e-4,D<_&&D>-_&&(D=N=2e-5),R<_&&R>-_&&(R=N=2e-5),!I||k.z||k.rotationX||k.rotationY||(I=0)),S||k.skewX)S*=j,m=e=Math.cos(S),g=r=Math.sin(S),k.skewX&&(S-=k.skewX*j,m=Math.cos(S),g=Math.sin(S),"simple"===k.skewType&&(v=Math.tan((k.skewX-k.skewY)*j),v=Math.sqrt(1+v*v),m*=v,g*=v,k.skewY&&(v=Math.tan(k.skewY*j),v=Math.sqrt(1+v*v),e*=v,r*=v))),i=-g,s=m;else{if(!(A||O||1!==N||I||L))return void(C[Ot]=(k.xPercent||k.yPercent?"translate("+k.xPercent+"%,"+k.yPercent+"%) translate3d(":"translate3d(")+E+"px,"+M+"px,"+F+"px)"+(1!==D||1!==R?" scale("+D+","+R+")":""));e=s=1,i=r=0}u=1,n=o=a=l=h=c=0,f=I?-1/I:0,p=k.zOrigin,_=1e-6,b=",",T="0",S=A*j,S&&(m=Math.cos(S),g=Math.sin(S),a=-g,h=f*-g,n=e*g,o=r*g,u=m,f*=m,e*=m,r*=m),S=O*j,S&&(m=Math.cos(S),g=Math.sin(S),v=i*m+n*g,y=s*m+o*g,l=u*g,c=f*g,n=i*-g+n*m,o=s*-g+o*m,u*=m,f*=m,i=v,s=y),1!==N&&(n*=N,o*=N,u*=N,f*=N),1!==R&&(i*=R,s*=R,l*=R,c*=R),1!==D&&(e*=D,r*=D,a*=D,h*=D),(p||L)&&(p&&(E+=n*-p,M+=o*-p,F+=u*-p+p),L&&(E+=k.xOrigin-(k.xOrigin*e+k.yOrigin*i)+k.xOffset,M+=k.yOrigin-(k.xOrigin*r+k.yOrigin*s)+k.yOffset),E<_&&E>-_&&(E=T),M<_&&M>-_&&(M=T),F<_&&F>-_&&(F=0)),x=k.xPercent||k.yPercent?"translate("+k.xPercent+"%,"+k.yPercent+"%) matrix3d(":"matrix3d(",x+=(e<_&&e>-_?T:e)+b+(r<_&&r>-_?T:r)+b+(a<_&&a>-_?T:a),x+=b+(h<_&&h>-_?T:h)+b+(i<_&&i>-_?T:i)+b+(s<_&&s>-_?T:s),O||A||1!==N?(x+=b+(l<_&&l>-_?T:l)+b+(c<_&&c>-_?T:c)+b+(n<_&&n>-_?T:n),x+=b+(o<_&&o>-_?T:o)+b+(u<_&&u>-_?T:u)+b+(f<_&&f>-_?T:f)+b):x+=",0,0,0,0,1,0,",x+=E+b+M+b+F+b+(I?1+-F/I:1)+")",C[Ot]=x};h=Nt.prototype,h.x=h.y=h.z=h.skewX=h.skewY=h.rotation=h.rotationX=h.rotationY=h.zOrigin=h.xPercent=h.yPercent=h.xOffset=h.yOffset=0,h.scaleX=h.scaleY=h.scaleZ=1,Pt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",{parser:function(t,e,i,n,r,o,l){if(n._lastParsedTransform===l)return r;n._lastParsedTransform=l;var u;"function"==typeof l[i]&&(u=l[i],l[i]=e);var h,c,f,p,d,_,m,y,x,b=t._gsTransform,T=t.style,w=1e-6,P=St.length,k=l,C={},S="transformOrigin",O=Xt(t,s,!0,k.parseTransform),A=k.transform&&("function"==typeof k.transform?k.transform(v,g):k.transform);if(n._transform=O,A&&"string"==typeof A&&Ot)c=X.style,c[Ot]=A,c.display="block",c.position="absolute",q.body.appendChild(X),h=Xt(X,null,!1),O.svg&&(_=O.xOrigin,m=O.yOrigin,h.x-=O.xOffset,h.y-=O.yOffset,(k.transformOrigin||k.svgOrigin)&&(A={},jt(t,at(k.transformOrigin),A,k.svgOrigin,k.smoothOrigin,!0),_=A.xOrigin,m=A.yOrigin,h.x-=A.xOffset-O.xOffset,h.y-=A.yOffset-O.yOffset),(_||m)&&(y=Bt(X,!0),h.x-=_-(_*y[0]+m*y[2]),h.y-=m-(_*y[1]+m*y[3]))),q.body.removeChild(X),h.perspective||(h.perspective=O.perspective),null!=k.xPercent&&(h.xPercent=ut(k.xPercent,O.xPercent)),null!=k.yPercent&&(h.yPercent=ut(k.yPercent,O.yPercent));else if("object"==typeof k){if(h={scaleX:ut(null!=k.scaleX?k.scaleX:k.scale,O.scaleX),scaleY:ut(null!=k.scaleY?k.scaleY:k.scale,O.scaleY),scaleZ:ut(k.scaleZ,O.scaleZ),x:ut(k.x,O.x),y:ut(k.y,O.y),z:ut(k.z,O.z),xPercent:ut(k.xPercent,O.xPercent),yPercent:ut(k.yPercent,O.yPercent),perspective:ut(k.transformPerspective,O.perspective)},d=k.directionalRotation,null!=d)if("object"==typeof d)for(c in d)k[c]=d[c];else k.rotation=d;"string"==typeof k.x&&k.x.indexOf("%")!==-1&&(h.x=0,h.xPercent=ut(k.x,O.xPercent)),"string"==typeof k.y&&k.y.indexOf("%")!==-1&&(h.y=0,h.yPercent=ut(k.y,O.yPercent)),h.rotation=ht("rotation"in k?k.rotation:"shortRotation"in k?k.shortRotation+"_short":"rotationZ"in k?k.rotationZ:O.rotation-O.skewY,O.rotation-O.skewY,"rotation",C),Rt&&(h.rotationX=ht("rotationX"in k?k.rotationX:"shortRotationX"in k?k.shortRotationX+"_short":O.rotationX||0,O.rotationX,"rotationX",C),h.rotationY=ht("rotationY"in k?k.rotationY:"shortRotationY"in k?k.shortRotationY+"_short":O.rotationY||0,O.rotationY,"rotationY",C)),h.skewX=ht(k.skewX,O.skewX-O.skewY),(h.skewY=ht(k.skewY,O.skewY))&&(h.skewX+=h.skewY,
h.rotation+=h.skewY)}for(Rt&&null!=k.force3D&&(O.force3D=k.force3D,p=!0),O.skewType=k.skewType||O.skewType||a.defaultSkewType,f=O.force3D||O.z||O.rotationX||O.rotationY||h.z||h.rotationX||h.rotationY||h.perspective,f||null==k.scale||(h.scaleZ=1);--P>-1;)x=St[P],A=h[x]-O[x],(A>w||A<-w||null!=k[x]||null!=z[x])&&(p=!0,r=new yt(O,x,O[x],A,r),x in C&&(r.e=C[x]),r.xs0=0,r.plugin=o,n._overwriteProps.push(r.n));return A=k.transformOrigin,O.svg&&(A||k.svgOrigin)&&(_=O.xOffset,m=O.yOffset,jt(t,at(A),h,k.svgOrigin,k.smoothOrigin),r=xt(O,"xOrigin",(b?O:h).xOrigin,h.xOrigin,r,S),r=xt(O,"yOrigin",(b?O:h).yOrigin,h.yOrigin,r,S),_===O.xOffset&&m===O.yOffset||(r=xt(O,"xOffset",b?_:O.xOffset,O.xOffset,r,S),r=xt(O,"yOffset",b?m:O.yOffset,O.yOffset,r,S)),A=Ct?null:"0px 0px"),(A||Rt&&f&&O.zOrigin)&&(Ot?(p=!0,x=Dt,A=(A||J(t,x,s,!1,"50% 50%"))+"",r=new yt(T,x,0,0,r,(-1),S),r.b=T[x],r.plugin=o,Rt?(c=O.zOrigin,A=A.split(" "),O.zOrigin=(A.length>2&&(0===c||"0px"!==A[2])?parseFloat(A[2]):c)||0,r.xs0=r.e=A[0]+" "+(A[1]||"50%")+" 0px",r=new yt(O,"zOrigin",0,0,r,(-1),r.n),r.b=c,r.xs0=r.e=O.zOrigin):r.xs0=r.e=A):at(A+"",O)),p&&(n._transformType=O.svg&&Ct||!f&&3!==this._transformType?2:3),u&&(l[i]=u),r},prefix:!0}),Pt("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),Pt("borderRadius",{defaultValue:"0px",parser:function(t,e,i,n,o,a){e=this.format(e);var l,u,h,c,f,p,d,_,m,g,v,y,x,b,T,w,P=["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],k=t.style;for(m=parseFloat(t.offsetWidth),g=parseFloat(t.offsetHeight),l=e.split(" "),u=0;u<P.length;u++)this.p.indexOf("border")&&(P[u]=Q(P[u])),f=c=J(t,P[u],s,!1,"0px"),f.indexOf(" ")!==-1&&(c=f.split(" "),f=c[0],c=c[1]),p=h=l[u],d=parseFloat(f),y=f.substr((d+"").length),x="="===p.charAt(1),x?(_=parseInt(p.charAt(0)+"1",10),p=p.substr(2),_*=parseFloat(p),v=p.substr((_+"").length-(_<0?1:0))||""):(_=parseFloat(p),v=p.substr((_+"").length)),""===v&&(v=r[i]||y),v!==y&&(b=tt(t,"borderLeft",d,y),T=tt(t,"borderTop",d,y),"%"===v?(f=b/m*100+"%",c=T/g*100+"%"):"em"===v?(w=tt(t,"borderLeft",1,"em"),f=b/w+"em",c=T/w+"em"):(f=b+"px",c=T+"px"),x&&(p=parseFloat(f)+_+v,h=parseFloat(c)+_+v)),o=bt(k,P[u],f+" "+c,p+" "+h,!1,"0px",o);return o},prefix:!0,formatter:mt("0px 0px 0px 0px",!1,!0)}),Pt("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius",{defaultValue:"0px",parser:function(t,e,i,n,r,o){return bt(t.style,i,this.format(J(t,i,s,!1,"0px 0px")),this.format(e),!1,"0px",r)},prefix:!0,formatter:mt("0px 0px",!1,!0)}),Pt("backgroundPosition",{defaultValue:"0 0",parser:function(t,e,i,n,r,o){var a,l,u,h,c,f,p="background-position",d=s||K(t,null),_=this.format((d?m?d.getPropertyValue(p+"-x")+" "+d.getPropertyValue(p+"-y"):d.getPropertyValue(p):t.currentStyle.backgroundPositionX+" "+t.currentStyle.backgroundPositionY)||"0 0"),g=this.format(e);if(_.indexOf("%")!==-1!=(g.indexOf("%")!==-1)&&g.split(",").length<2&&(f=J(t,"backgroundImage").replace(D,""),f&&"none"!==f)){for(a=_.split(" "),l=g.split(" "),H.setAttribute("src",f),u=2;--u>-1;)_=a[u],h=_.indexOf("%")!==-1,h!==(l[u].indexOf("%")!==-1)&&(c=0===u?t.offsetWidth-H.width:t.offsetHeight-H.height,a[u]=h?parseFloat(_)/100*c+"px":parseFloat(_)/c*100+"%");_=a.join(" ")}return this.parseComplex(t.style,_,g,r,o)},formatter:at}),Pt("backgroundSize",{defaultValue:"0 0",formatter:function(t){return t+="",at(t.indexOf(" ")===-1?t+" "+t:t)}}),Pt("perspective",{defaultValue:"0px",prefix:!0}),Pt("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),Pt("transformStyle",{prefix:!0}),Pt("backfaceVisibility",{prefix:!0}),Pt("userSelect",{prefix:!0}),Pt("margin",{parser:gt("marginTop,marginRight,marginBottom,marginLeft")}),Pt("padding",{parser:gt("paddingTop,paddingRight,paddingBottom,paddingLeft")}),Pt("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(t,e,i,n,r,o){var a,l,u;return m<9?(l=t.currentStyle,u=m<8?" ":",",a="rect("+l.clipTop+u+l.clipRight+u+l.clipBottom+u+l.clipLeft+")",e=this.format(e).split(",").join(u)):(a=this.format(J(t,this.p,s,!1,this.dflt)),e=this.format(e)),this.parseComplex(t.style,a,e,r,o)}}),Pt("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),Pt("autoRound,strictUnits",{parser:function(t,e,i,n,r){return r}}),Pt("border",{defaultValue:"0px solid #000",parser:function(t,e,i,n,r,o){var a=J(t,"borderTopWidth",s,!1,"0px"),l=this.format(e).split(" "),u=l[0].replace(w,"");return"px"!==u&&(a=parseFloat(a)/tt(t,"borderTopWidth",1,u)+u),this.parseComplex(t.style,this.format(a+" "+J(t,"borderTopStyle",s,!1,"solid")+" "+J(t,"borderTopColor",s,!1,"#000")),l.join(" "),r,o)},color:!0,formatter:function(t){var e=t.split(" ");return e[0]+" "+(e[1]||"solid")+" "+(t.match(_t)||["#000"])[0]}}),Pt("borderWidth",{parser:gt("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),Pt("float,cssFloat,styleFloat",{parser:function(t,e,i,n,r,s){var o=t.style,a="cssFloat"in o?"cssFloat":"styleFloat";return new yt(o,a,0,0,r,(-1),i,(!1),0,o[a],e)}});var Yt=function(t){var e,i=this.t,n=i.filter||J(this.data,"filter")||"",r=this.s+this.c*t|0;100===r&&(n.indexOf("atrix(")===-1&&n.indexOf("radient(")===-1&&n.indexOf("oader(")===-1?(i.removeAttribute("filter"),e=!J(this.data,"filter")):(i.filter=n.replace(C,""),e=!0)),e||(this.xn1&&(i.filter=n=n||"alpha(opacity="+r+")"),n.indexOf("pacity")===-1?0===r&&this.xn1||(i.filter=n+" alpha(opacity="+r+")"):i.filter=n.replace(P,"opacity="+r))};Pt("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(t,e,i,n,r,o){var a=parseFloat(J(t,"opacity",s,!1,"1")),l=t.style,u="autoAlpha"===i;return"string"==typeof e&&"="===e.charAt(1)&&(e=("-"===e.charAt(0)?-1:1)*parseFloat(e.substr(2))+a),u&&1===a&&"hidden"===J(t,"visibility",s)&&0!==e&&(a=0),$?r=new yt(l,"opacity",a,e-a,r):(r=new yt(l,"opacity",100*a,100*(e-a),r),r.xn1=u?1:0,l.zoom=1,r.type=2,r.b="alpha(opacity="+r.s+")",r.e="alpha(opacity="+(r.s+r.c)+")",r.data=t,r.plugin=o,r.setRatio=Yt),u&&(r=new yt(l,"visibility",0,0,r,(-1),null,(!1),0,0!==a?"inherit":"hidden",0===e?"hidden":"inherit"),r.xs0="inherit",n._overwriteProps.push(r.n),n._overwriteProps.push(i)),r}});var $t=function(t,e){e&&(t.removeProperty?("ms"!==e.substr(0,2)&&"webkit"!==e.substr(0,6)||(e="-"+e),t.removeProperty(e.replace(O,"-$1").toLowerCase())):t.removeAttribute(e))},Ut=function(t){if(this.t._gsClassPT=this,1===t||0===t){this.t.setAttribute("class",0===t?this.b:this.e);for(var e=this.data,i=this.t.style;e;)e.v?i[e.p]=e.v:$t(i,e.p),e=e._next;1===t&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute("class")!==this.e&&this.t.setAttribute("class",this.e)};Pt("className",{parser:function(t,e,i,r,o,a,l){var u,h,c,f,p,d=t.getAttribute("class")||"",_=t.style.cssText;if(o=r._classNamePT=new yt(t,i,0,0,o,2),o.setRatio=Ut,o.pr=-11,n=!0,o.b=d,h=it(t,s),c=t._gsClassPT){for(f={},p=c.data;p;)f[p.p]=1,p=p._next;c.setRatio(1)}return t._gsClassPT=o,o.e="="!==e.charAt(1)?e:d.replace(new RegExp("(?:\\s|^)"+e.substr(2)+"(?![\\w-])"),"")+("+"===e.charAt(0)?" "+e.substr(2):""),t.setAttribute("class",o.e),u=nt(t,h,it(t),l,f),t.setAttribute("class",d),o.data=u.firstMPT,t.style.cssText=_,o=o.xfirst=r.parse(t,u.difs,o,a)}});var Vt=function(t){if((1===t||0===t)&&this.data._totalTime===this.data._totalDuration&&"isFromStart"!==this.data.data){var e,i,n,r,s,o=this.t.style,a=u.transform.parse;if("all"===this.e)o.cssText="",r=!0;else for(e=this.e.split(" ").join("").split(","),n=e.length;--n>-1;)i=e[n],u[i]&&(u[i].parse===a?r=!0:i="transformOrigin"===i?Dt:u[i].p),$t(o,i);r&&($t(o,Ot),s=this.t._gsTransform,s&&(s.svg&&(this.t.removeAttribute("data-svg-origin"),this.t.removeAttribute("transform")),delete this.t._gsTransform))}};for(Pt("clearProps",{parser:function(t,e,i,r,s){return s=new yt(t,i,0,0,s,2),s.setRatio=Vt,s.e=e,s.pr=-10,s.data=r._tween,n=!0,s}}),h="bezier,throwProps,physicsProps,physics2D".split(","),Tt=h.length;Tt--;)kt(h[Tt]);h=a.prototype,h._firstPT=h._lastParsedTransform=h._transform=null,h._onInitTween=function(t,e,i,l){if(!t.nodeType)return!1;this._target=g=t,this._tween=i,this._vars=e,v=l,c=e.autoRound,n=!1,r=e.suffixMap||a.suffixMap,s=K(t,""),o=this._overwriteProps;var h,d,m,y,x,b,T,w,P,C=t.style;if(f&&""===C.zIndex&&(h=J(t,"zIndex",s),"auto"!==h&&""!==h||this._addLazySet(C,"zIndex",0)),"string"==typeof e&&(y=C.cssText,h=it(t,s),C.cssText=y+";"+e,h=nt(t,h,it(t)).difs,!$&&k.test(e)&&(h.opacity=parseFloat(RegExp.$1)),e=h,C.cssText=y),e.className?this._firstPT=d=u.className.parse(t,e.className,"className",this,null,null,e):this._firstPT=d=this.parse(t,e,null),this._transformType){for(P=3===this._transformType,Ot?p&&(f=!0,""===C.zIndex&&(T=J(t,"zIndex",s),"auto"!==T&&""!==T||this._addLazySet(C,"zIndex",0)),_&&this._addLazySet(C,"WebkitBackfaceVisibility",this._vars.WebkitBackfaceVisibility||(P?"visible":"hidden"))):C.zoom=1,m=d;m&&m._next;)m=m._next;w=new yt(t,"transform",0,0,null,2),this._linkCSSP(w,null,m),w.setRatio=Ot?Wt:Ht,w.data=this._transform||Xt(t,s,!0),w.tween=i,w.pr=-1,o.pop()}if(n){for(;d;){for(b=d._next,m=y;m&&m.pr>d.pr;)m=m._next;(d._prev=m?m._prev:x)?d._prev._next=d:y=d,(d._next=m)?m._prev=d:x=d,d=b}this._firstPT=y}return!0},h.parse=function(t,e,i,n){var o,a,l,h,f,p,d,_,m,y,x=t.style;for(o in e)p=e[o],"function"==typeof p&&(p=p(v,g)),a=u[o],a?i=a.parse(t,p,o,this,i,n,e):(f=J(t,o,s)+"",m="string"==typeof p,"color"===o||"fill"===o||"stroke"===o||o.indexOf("Color")!==-1||m&&S.test(p)?(m||(p=pt(p),p=(p.length>3?"rgba(":"rgb(")+p.join(",")+")"),i=bt(x,o,f,p,!0,"transparent",i,0,n)):m&&L.test(p)?i=bt(x,o,f,p,!0,null,i,0,n):(l=parseFloat(f),d=l||0===l?f.substr((l+"").length):"",""!==f&&"auto"!==f||("width"===o||"height"===o?(l=ot(t,o,s),d="px"):"left"===o||"top"===o?(l=et(t,o,s),d="px"):(l="opacity"!==o?0:1,d="")),y=m&&"="===p.charAt(1),y?(h=parseInt(p.charAt(0)+"1",10),p=p.substr(2),h*=parseFloat(p),_=p.replace(w,"")):(h=parseFloat(p),_=m?p.replace(w,""):""),""===_&&(_=o in r?r[o]:d),p=h||0===h?(y?h+l:h)+_:e[o],d!==_&&""!==_&&(h||0===h)&&l&&(l=tt(t,o,l,d),"%"===_?(l/=tt(t,o,100,"%")/100,e.strictUnits!==!0&&(f=l+"%")):"em"===_||"rem"===_||"vw"===_||"vh"===_?l/=tt(t,o,1,_):"px"!==_&&(h=tt(t,o,h,_),_="px"),y&&(h||0===h)&&(p=h+l+_)),y&&(h+=l),!l&&0!==l||!h&&0!==h?void 0!==x[o]&&(p||p+""!="NaN"&&null!=p)?(i=new yt(x,o,h||l||0,0,i,(-1),o,(!1),0,f,p),i.xs0="none"!==p||"display"!==o&&o.indexOf("Style")===-1?p:f):V("invalid "+o+" tween value: "+e[o]):(i=new yt(x,o,l,h-l,i,0,o,c!==!1&&("px"===_||"zIndex"===o),0,f,p),i.xs0=_))),n&&i&&!i.plugin&&(i.plugin=n);return i},h.setRatio=function(t){var e,i,n,r=this._firstPT,s=1e-6;if(1!==t||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(t||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;r;){if(e=r.c*t+r.s,r.r?e=Math.round(e):e<s&&e>-s&&(e=0),r.type)if(1===r.type)if(n=r.l,2===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2;else if(3===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3;else if(4===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4;else if(5===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4+r.xn4+r.xs5;else{for(i=r.xs0+e+r.xs1,n=1;n<r.l;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}else r.type===-1?r.t[r.p]=r.xs0:r.setRatio&&r.setRatio(t);else r.t[r.p]=e+r.xs0;r=r._next}else for(;r;)2!==r.type?r.t[r.p]=r.b:r.setRatio(t),r=r._next;else for(;r;){if(2!==r.type)if(r.r&&r.type!==-1)if(e=Math.round(r.s+r.c),r.type){if(1===r.type){for(n=r.l,i=r.xs0+e+r.xs1,n=1;n<r.l;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}}else r.t[r.p]=e+r.xs0;else r.t[r.p]=r.e;else r.setRatio(t);r=r._next}},h._enableTransforms=function(t){this._transform=this._transform||Xt(this._target,s,!0),this._transformType=this._transform.svg&&Ct||!t&&3!==this._transformType?2:3};var Zt=function(t){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};h._addLazySet=function(t,e,i){var n=this._firstPT=new yt(t,e,0,0,this._firstPT,2);n.e=i,n.setRatio=Zt,n.data=this},h._linkCSSP=function(t,e,i,n){return t&&(e&&(e._prev=t),t._next&&(t._next._prev=t._prev),t._prev?t._prev._next=t._next:this._firstPT===t&&(this._firstPT=t._next,n=!0),i?i._next=t:n||null!==this._firstPT||(this._firstPT=t),t._next=e,t._prev=i),t},h._mod=function(t){for(var e=this._firstPT;e;)"function"==typeof t[e.p]&&t[e.p]===Math.round&&(e.r=1),e=e._next},h._kill=function(e){var i,n,r,s=e;if(e.autoAlpha||e.alpha){s={};for(n in e)s[n]=e[n];s.opacity=1,s.autoAlpha&&(s.visibility=1)}for(e.className&&(i=this._classNamePT)&&(r=i.xfirst,r&&r._prev?this._linkCSSP(r._prev,i._next,r._prev._prev):r===this._firstPT&&(this._firstPT=i._next),i._next&&this._linkCSSP(i._next,i._next._next,r._prev),this._classNamePT=null),i=this._firstPT;i;)i.plugin&&i.plugin!==n&&i.plugin._kill&&(i.plugin._kill(e),n=i.plugin),i=i._next;return t.prototype._kill.call(this,s)};var Gt=function(t,e,i){var n,r,s,o;if(t.slice)for(r=t.length;--r>-1;)Gt(t[r],e,i);else for(n=t.childNodes,r=n.length;--r>-1;)s=n[r],o=s.type,s.style&&(e.push(it(s)),i&&i.push(s)),1!==o&&9!==o&&11!==o||!s.childNodes.length||Gt(s,e,i)};return a.cascadeTo=function(t,i,n){var r,s,o,a,l=e.to(t,i,n),u=[l],h=[],c=[],f=[],p=e._internals.reservedProps;for(t=l._targets||l.target,Gt(t,h,f),l.render(i,!0,!0),Gt(t,c),l.render(0,!0,!0),l._enabled(!0),r=f.length;--r>-1;)if(s=nt(f[r],h[r],c[r]),s.firstMPT){s=s.difs;for(o in n)p[o]&&(s[o]=n[o]);a={};for(o in s)a[o]=h[r][o];u.push(e.fromTo(f[r],i,a,s))}return u},t.activate([a]),a},!0),function(){var t=i._gsDefine.plugin({propName:"roundProps",version:"1.6.0",priority:-1,API:2,init:function(t,e,i){return this._tween=i,!0}}),e=function(t){for(;t;)t.f||t.blob||(t.m=Math.round),t=t._next},n=t.prototype;n._onInitAllProps=function(){for(var t,i,n,r=this._tween,s=r.vars.roundProps.join?r.vars.roundProps:r.vars.roundProps.split(","),o=s.length,a={},l=r._propLookup.roundProps;--o>-1;)a[s[o]]=Math.round;for(o=s.length;--o>-1;)for(t=s[o],i=r._firstPT;i;)n=i._next,i.pg?i.t._mod(a):i.n===t&&(2===i.f&&i.t?e(i.t._firstPT):(this._add(i.t,t,i.s,i.c),n&&(n._prev=i._prev),i._prev?i._prev._next=n:r._firstPT===i&&(r._firstPT=n),i._next=i._prev=null,r._propLookup[t]=l)),i=n;return!1},n._add=function(t,e,i,n){this._addTween(t,e,i,i+n,e,Math.round),this._overwriteProps.push(e)}}(),function(){i._gsDefine.plugin({propName:"attr",API:2,version:"0.6.0",init:function(t,e,i,n){var r,s;if("function"!=typeof t.setAttribute)return!1;for(r in e)s=e[r],"function"==typeof s&&(s=s(n,t)),this._addTween(t,"setAttribute",t.getAttribute(r)+"",s+"",r,!1,r),this._overwriteProps.push(r);return!0}})}(),i._gsDefine.plugin({propName:"directionalRotation",version:"0.3.0",API:2,init:function(t,e,i,n){"object"!=typeof e&&(e={rotation:e}),this.finals={};var r,s,o,a,l,u,h=e.useRadians===!0?2*Math.PI:360,c=1e-6;for(r in e)"useRadians"!==r&&(a=e[r],"function"==typeof a&&(a=a(n,t)),u=(a+"").split("_"),s=u[0],o=parseFloat("function"!=typeof t[r]?t[r]:t[r.indexOf("set")||"function"!=typeof t["get"+r.substr(3)]?r:"get"+r.substr(3)]()),a=this.finals[r]="string"==typeof s&&"="===s.charAt(1)?o+parseInt(s.charAt(0)+"1",10)*Number(s.substr(2)):Number(s)||0,l=a-o,u.length&&(s=u.join("_"),s.indexOf("short")!==-1&&(l%=h,l!==l%(h/2)&&(l=l<0?l+h:l-h)),s.indexOf("_cw")!==-1&&l<0?l=(l+9999999999*h)%h-(l/h|0)*h:s.indexOf("ccw")!==-1&&l>0&&(l=(l-9999999999*h)%h-(l/h|0)*h)),(l>c||l<-c)&&(this._addTween(t,r,o,o+l,r),this._overwriteProps.push(r)));return!0},set:function(t){var e;if(1!==t)this._super.setRatio.call(this,t);else for(e=this._firstPT;e;)e.f?e.t[e.p](this.finals[e.p]):e.t[e.p]=this.finals[e.p],e=e._next}})._autoCSS=!0,i._gsDefine("easing.Back",["easing.Ease"],function(t){var e,n,r,s=i.GreenSockGlobals||i,o=s.com.greensock,a=2*Math.PI,l=Math.PI/2,u=o._class,h=function(e,i){var n=u("easing."+e,function(){},!0),r=n.prototype=new t;return r.constructor=n,r.getRatio=i,n},c=t.register||function(){},f=function(t,e,i,n,r){var s=u("easing."+t,{easeOut:new e,easeIn:new i,easeInOut:new n},!0);return c(s,t),s},p=function(t,e,i){this.t=t,this.v=e,i&&(this.next=i,i.prev=this,this.c=i.v-e,this.gap=i.t-t)},d=function(e,i){var n=u("easing."+e,function(t){this._p1=t||0===t?t:1.70158,this._p2=1.525*this._p1},!0),r=n.prototype=new t;return r.constructor=n,r.getRatio=i,r.config=function(t){return new n(t)},n},_=f("Back",d("BackOut",function(t){return(t-=1)*t*((this._p1+1)*t+this._p1)+1}),d("BackIn",function(t){return t*t*((this._p1+1)*t-this._p1)}),d("BackInOut",function(t){return(t*=2)<1?.5*t*t*((this._p2+1)*t-this._p2):.5*((t-=2)*t*((this._p2+1)*t+this._p2)+2)})),m=u("easing.SlowMo",function(t,e,i){e=e||0===e?e:.7,null==t?t=.7:t>1&&(t=1),this._p=1!==t?e:0,this._p1=(1-t)/2,this._p2=t,this._p3=this._p1+this._p2,this._calcEnd=i===!0},!0),g=m.prototype=new t;return g.constructor=m,g.getRatio=function(t){var e=t+(.5-t)*this._p;return t<this._p1?this._calcEnd?1-(t=1-t/this._p1)*t:e-(t=1-t/this._p1)*t*t*t*e:t>this._p3?this._calcEnd?1-(t=(t-this._p3)/this._p1)*t:e+(t-e)*(t=(t-this._p3)/this._p1)*t*t*t:this._calcEnd?1:e},m.ease=new m(.7,.7),g.config=m.config=function(t,e,i){return new m(t,e,i)},e=u("easing.SteppedEase",function(t){t=t||1,this._p1=1/t,this._p2=t+1},!0),g=e.prototype=new t,g.constructor=e,g.getRatio=function(t){return t<0?t=0:t>=1&&(t=.999999999),(this._p2*t>>0)*this._p1},g.config=e.config=function(t){return new e(t)},n=u("easing.RoughEase",function(e){e=e||{};for(var i,n,r,s,o,a,l=e.taper||"none",u=[],h=0,c=0|(e.points||20),f=c,d=e.randomize!==!1,_=e.clamp===!0,m=e.template instanceof t?e.template:null,g="number"==typeof e.strength?.4*e.strength:.4;--f>-1;)i=d?Math.random():1/c*f,n=m?m.getRatio(i):i,"none"===l?r=g:"out"===l?(s=1-i,r=s*s*g):"in"===l?r=i*i*g:i<.5?(s=2*i,r=s*s*.5*g):(s=2*(1-i),r=s*s*.5*g),d?n+=Math.random()*r-.5*r:f%2?n+=.5*r:n-=.5*r,_&&(n>1?n=1:n<0&&(n=0)),u[h++]={x:i,y:n};for(u.sort(function(t,e){return t.x-e.x}),a=new p(1,1,null),f=c;--f>-1;)o=u[f],a=new p(o.x,o.y,a);this._prev=new p(0,0,0!==a.t?a:a.next)},!0),g=n.prototype=new t,g.constructor=n,g.getRatio=function(t){var e=this._prev;if(t>e.t){for(;e.next&&t>=e.t;)e=e.next;e=e.prev}else for(;e.prev&&t<=e.t;)e=e.prev;return this._prev=e,e.v+(t-e.t)/e.gap*e.c},g.config=function(t){return new n(t)},n.ease=new n,f("Bounce",h("BounceOut",function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375}),h("BounceIn",function(t){return(t=1-t)<1/2.75?1-7.5625*t*t:t<2/2.75?1-(7.5625*(t-=1.5/2.75)*t+.75):t<2.5/2.75?1-(7.5625*(t-=2.25/2.75)*t+.9375):1-(7.5625*(t-=2.625/2.75)*t+.984375)}),h("BounceInOut",function(t){var e=t<.5;return t=e?1-2*t:2*t-1,t=t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375,e?.5*(1-t):.5*t+.5})),f("Circ",h("CircOut",function(t){return Math.sqrt(1-(t-=1)*t)}),h("CircIn",function(t){return-(Math.sqrt(1-t*t)-1)}),h("CircInOut",function(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)})),r=function(e,i,n){var r=u("easing."+e,function(t,e){this._p1=t>=1?t:1,this._p2=(e||n)/(t<1?t:1),this._p3=this._p2/a*(Math.asin(1/this._p1)||0),this._p2=a/this._p2},!0),s=r.prototype=new t;return s.constructor=r,s.getRatio=i,s.config=function(t,e){return new r(t,e)},r},f("Elastic",r("ElasticOut",function(t){return this._p1*Math.pow(2,-10*t)*Math.sin((t-this._p3)*this._p2)+1},.3),r("ElasticIn",function(t){return-(this._p1*Math.pow(2,10*(t-=1))*Math.sin((t-this._p3)*this._p2))},.3),r("ElasticInOut",function(t){return(t*=2)<1?-.5*(this._p1*Math.pow(2,10*(t-=1))*Math.sin((t-this._p3)*this._p2)):this._p1*Math.pow(2,-10*(t-=1))*Math.sin((t-this._p3)*this._p2)*.5+1},.45)),f("Expo",h("ExpoOut",function(t){return 1-Math.pow(2,-10*t)}),h("ExpoIn",function(t){return Math.pow(2,10*(t-1))-.001}),h("ExpoInOut",function(t){return(t*=2)<1?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*(t-1)))})),f("Sine",h("SineOut",function(t){return Math.sin(t*l)}),h("SineIn",function(t){return-Math.cos(t*l)+1}),h("SineInOut",function(t){return-.5*(Math.cos(Math.PI*t)-1)})),u("easing.EaseLookup",{find:function(e){return t.map[e]}},!0),c(s.SlowMo,"SlowMo","ease,"),c(n,"RoughEase","ease,"),c(e,"SteppedEase","ease,"),_},!0)}),i._gsDefine&&i._gsQueue.pop()(),function(t,i){"use strict";var n={},r=t.GreenSockGlobals=t.GreenSockGlobals||t;if(!r.TweenLite){var s,o,a,l,u,h=function(t){var e,i=t.split("."),n=r;for(e=0;e<i.length;e++)n[i[e]]=n=n[i[e]]||{};return n},c=h("com.greensock"),f=1e-10,p=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},d=function(){},_=function(){var t=Object.prototype.toString,e=t.call([]);return function(i){return null!=i&&(i instanceof Array||"object"==typeof i&&!!i.push&&t.call(i)===e)}}(),m={},g=function(s,o,a,l){this.sc=m[s]?m[s].sc:[],m[s]=this,this.gsClass=null,this.func=a;var u=[];this.check=function(c){for(var f,p,d,_,v,y=o.length,x=y;--y>-1;)(f=m[o[y]]||new g(o[y],[])).gsClass?(u[y]=f.gsClass,x--):c&&f.sc.push(this);if(0===x&&a){if(p=("com.greensock."+s).split("."),d=p.pop(),_=h(p.join("."))[d]=this.gsClass=a.apply(a,u),l)if(r[d]=n[d]=_,v="undefined"!=typeof e&&e.exports,!v&&"function"==typeof define&&define.amd)define((t.GreenSockAMDPath?t.GreenSockAMDPath+"/":"")+s.split(".").pop(),[],function(){return _});else if(v)if(s===i){e.exports=n[i]=_;for(y in n)_[y]=n[y]}else n[i]&&(n[i][d]=_);for(y=0;y<this.sc.length;y++)this.sc[y].check()}},this.check(!0)},v=t._gsDefine=function(t,e,i,n){return new g(t,e,i,n)},y=c._class=function(t,e,i){return e=e||function(){},v(t,[],function(){return e},i),e};v.globals=r;var x=[0,0,1,1],b=y("easing.Ease",function(t,e,i,n){this._func=t,this._type=i||0,this._power=n||0,this._params=e?x.concat(e):x},!0),T=b.map={},w=b.register=function(t,e,i,n){for(var r,s,o,a,l=e.split(","),u=l.length,h=(i||"easeIn,easeOut,easeInOut").split(",");--u>-1;)for(s=l[u],r=n?y("easing."+s,null,!0):c.easing[s]||{},o=h.length;--o>-1;)a=h[o],T[s+"."+a]=T[a+s]=r[a]=t.getRatio?t:t[a]||new t};for(a=b.prototype,a._calcEnd=!1,a.getRatio=function(t){if(this._func)return this._params[0]=t,this._func.apply(null,this._params);var e=this._type,i=this._power,n=1===e?1-t:2===e?t:t<.5?2*t:2*(1-t);return 1===i?n*=n:2===i?n*=n*n:3===i?n*=n*n*n:4===i&&(n*=n*n*n*n),1===e?1-n:2===e?n:t<.5?n/2:1-n/2},s=["Linear","Quad","Cubic","Quart","Quint,Strong"],o=s.length;--o>-1;)a=s[o]+",Power"+o,w(new b(null,null,1,o),a,"easeOut",!0),w(new b(null,null,2,o),a,"easeIn"+(0===o?",easeNone":"")),w(new b(null,null,3,o),a,"easeInOut");T.linear=c.easing.Linear.easeIn,T.swing=c.easing.Quad.easeInOut;var P=y("events.EventDispatcher",function(t){this._listeners={},this._eventTarget=t||this});a=P.prototype,a.addEventListener=function(t,e,i,n,r){r=r||0;var s,o,a=this._listeners[t],h=0;for(this!==l||u||l.wake(),null==a&&(this._listeners[t]=a=[]),o=a.length;--o>-1;)s=a[o],s.c===e&&s.s===i?a.splice(o,1):0===h&&s.pr<r&&(h=o+1);a.splice(h,0,{c:e,s:i,up:n,pr:r})},a.removeEventListener=function(t,e){var i,n=this._listeners[t];if(n)for(i=n.length;--i>-1;)if(n[i].c===e)return void n.splice(i,1)},a.dispatchEvent=function(t){var e,i,n,r=this._listeners[t];if(r)for(e=r.length,e>1&&(r=r.slice(0)),i=this._eventTarget;--e>-1;)n=r[e],n&&(n.up?n.c.call(n.s||i,{type:t,target:i}):n.c.call(n.s||i))};var k=t.requestAnimationFrame,C=t.cancelAnimationFrame,S=Date.now||function(){return(new Date).getTime()},O=S();for(s=["ms","moz","webkit","o"],o=s.length;--o>-1&&!k;)k=t[s[o]+"RequestAnimationFrame"],C=t[s[o]+"CancelAnimationFrame"]||t[s[o]+"CancelRequestAnimationFrame"];y("Ticker",function(t,e){var i,n,r,s,o,a=this,h=S(),c=!(e===!1||!k)&&"auto",p=500,_=33,m="tick",g=function(t){var e,l,u=S()-O;u>p&&(h+=u-_),O+=u,a.time=(O-h)/1e3,e=a.time-o,(!i||e>0||t===!0)&&(a.frame++,o+=e+(e>=s?.004:s-e),l=!0),t!==!0&&(r=n(g)),l&&a.dispatchEvent(m)};P.call(a),a.time=a.frame=0,a.tick=function(){g(!0)},a.lagSmoothing=function(t,e){p=t||1/f,_=Math.min(e,p,0)},a.sleep=function(){null!=r&&(c&&C?C(r):clearTimeout(r),n=d,r=null,a===l&&(u=!1))},a.wake=function(t){null!==r?a.sleep():t?h+=-O+(O=S()):a.frame>10&&(O=S()-p+5),n=0===i?d:c&&k?k:function(t){return setTimeout(t,1e3*(o-a.time)+1|0)},a===l&&(u=!0),g(2)},a.fps=function(t){return arguments.length?(i=t,s=1/(i||60),o=this.time+s,void a.wake()):i},a.useRAF=function(t){return arguments.length?(a.sleep(),c=t,void a.fps(i)):c},a.fps(t),setTimeout(function(){"auto"===c&&a.frame<5&&"hidden"!==document.visibilityState&&a.useRAF(!1)},1500)}),a=c.Ticker.prototype=new c.events.EventDispatcher,a.constructor=c.Ticker;var A=y("core.Animation",function(t,e){if(this.vars=e=e||{},this._duration=this._totalDuration=t||0,this._delay=Number(e.delay)||0,this._timeScale=1,this._active=e.immediateRender===!0,this.data=e.data,this._reversed=e.reversed===!0,V){u||l.wake();var i=this.vars.useFrames?U:V;i.add(this,i._time),this.vars.paused&&this.paused(!0)}});l=A.ticker=new c.Ticker,a=A.prototype,a._dirty=a._gc=a._initted=a._paused=!1,a._totalTime=a._time=0,a._rawPrevTime=-1,a._next=a._last=a._onUpdate=a._timeline=a.timeline=null,a._paused=!1;var D=function(){u&&S()-O>2e3&&l.wake(),setTimeout(D,2e3)};D(),a.play=function(t,e){return null!=t&&this.seek(t,e),this.reversed(!1).paused(!1)},a.pause=function(t,e){return null!=t&&this.seek(t,e),this.paused(!0)},a.resume=function(t,e){return null!=t&&this.seek(t,e),this.paused(!1)},a.seek=function(t,e){return this.totalTime(Number(t),e!==!1)},a.restart=function(t,e){return this.reversed(!1).paused(!1).totalTime(t?-this._delay:0,e!==!1,!0)},a.reverse=function(t,e){return null!=t&&this.seek(t||this.totalDuration(),e),this.reversed(!0).paused(!1)},a.render=function(t,e,i){},a.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,!this._gc&&this.timeline||this._enabled(!0),this},a.isActive=function(){var t,e=this._timeline,i=this._startTime;return!e||!this._gc&&!this._paused&&e.isActive()&&(t=e.rawTime())>=i&&t<i+this.totalDuration()/this._timeScale},a._enabled=function(t,e){return u||l.wake(),this._gc=!t,this._active=this.isActive(),e!==!0&&(t&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!t&&this.timeline&&this._timeline._remove(this,!0)),!1},a._kill=function(t,e){return this._enabled(!1,!1)},a.kill=function(t,e){return this._kill(t,e),this},a._uncache=function(t){for(var e=t?this:this.timeline;e;)e._dirty=!0,e=e.timeline;return this},a._swapSelfInParams=function(t){for(var e=t.length,i=t.concat();--e>-1;)"{self}"===t[e]&&(i[e]=this);return i},a._callback=function(t){var e=this.vars,i=e[t],n=e[t+"Params"],r=e[t+"Scope"]||e.callbackScope||this,s=n?n.length:0;switch(s){case 0:i.call(r);break;case 1:i.call(r,n[0]);break;case 2:i.call(r,n[0],n[1]);break;default:i.apply(r,n)}},a.eventCallback=function(t,e,i,n){if("on"===(t||"").substr(0,2)){var r=this.vars;if(1===arguments.length)return r[t];null==e?delete r[t]:(r[t]=e,r[t+"Params"]=_(i)&&i.join("").indexOf("{self}")!==-1?this._swapSelfInParams(i):i,r[t+"Scope"]=n),"onUpdate"===t&&(this._onUpdate=e)}return this},a.delay=function(t){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+t-this._delay),this._delay=t,this):this._delay},a.duration=function(t){return arguments.length?(this._duration=this._totalDuration=t,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==t&&this.totalTime(this._totalTime*(t/this._duration),!0),this):(this._dirty=!1,this._duration)},a.totalDuration=function(t){return this._dirty=!1,arguments.length?this.duration(t):this._totalDuration},a.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(t>this._duration?this._duration:t,e)):this._time},a.totalTime=function(t,e,i){if(u||l.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(t<0&&!i&&(t+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var n=this._totalDuration,r=this._timeline;if(t>n&&!i&&(t=n),this._startTime=(this._paused?this._pauseTime:r._time)-(this._reversed?n-t:t)/this._timeScale,r._dirty||this._uncache(!1),r._timeline)for(;r._timeline;)r._timeline._time!==(r._startTime+r._totalTime)/r._timeScale&&r.totalTime(r._totalTime,!0),r=r._timeline}this._gc&&this._enabled(!0,!1),this._totalTime===t&&0!==this._duration||(F.length&&G(),this.render(t,e,!1),F.length&&G())}return this},a.progress=a.totalProgress=function(t,e){var i=this.duration();return arguments.length?this.totalTime(i*t,e):i?this._time/i:this.ratio},a.startTime=function(t){return arguments.length?(t!==this._startTime&&(this._startTime=t,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,t-this._delay)),this):this._startTime},a.endTime=function(t){return this._startTime+(0!=t?this.totalDuration():this.duration())/this._timeScale},a.timeScale=function(t){if(!arguments.length)return this._timeScale;if(t=t||f,this._timeline&&this._timeline.smoothChildTiming){var e=this._pauseTime,i=e||0===e?e:this._timeline.totalTime();this._startTime=i-(i-this._startTime)*this._timeScale/t}return this._timeScale=t,this._uncache(!1)},a.reversed=function(t){return arguments.length?(t!=this._reversed&&(this._reversed=t,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},a.paused=function(t){if(!arguments.length)return this._paused;var e,i,n=this._timeline;return t!=this._paused&&n&&(u||t||l.wake(),e=n.rawTime(),i=e-this._pauseTime,!t&&n.smoothChildTiming&&(this._startTime+=i,this._uncache(!1)),this._pauseTime=t?e:null,this._paused=t,this._active=this.isActive(),!t&&0!==i&&this._initted&&this.duration()&&(e=n.smoothChildTiming?this._totalTime:(e-this._startTime)/this._timeScale,this.render(e,e===this._totalTime,!0))),this._gc&&!t&&this._enabled(!0,!1),this};var R=y("core.SimpleTimeline",function(t){A.call(this,0,t),this.autoRemoveChildren=this.smoothChildTiming=!0});a=R.prototype=new A,a.constructor=R,a.kill()._gc=!1,a._first=a._last=a._recent=null,a._sortChildren=!1,a.add=a.insert=function(t,e,i,n){var r,s;if(t._startTime=Number(e||0)+t._delay,t._paused&&this!==t._timeline&&(t._pauseTime=t._startTime+(this.rawTime()-t._startTime)/t._timeScale),t.timeline&&t.timeline._remove(t,!0),t.timeline=t._timeline=this,t._gc&&t._enabled(!0,!0),r=this._last,this._sortChildren)for(s=t._startTime;r&&r._startTime>s;)r=r._prev;return r?(t._next=r._next,r._next=t):(t._next=this._first,this._first=t),t._next?t._next._prev=t:this._last=t,t._prev=r,this._recent=t,this._timeline&&this._uncache(!0),this},a._remove=function(t,e){return t.timeline===this&&(e||t._enabled(!1,!0),t._prev?t._prev._next=t._next:this._first===t&&(this._first=t._next),t._next?t._next._prev=t._prev:this._last===t&&(this._last=t._prev),t._next=t._prev=t.timeline=null,t===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},a.render=function(t,e,i){var n,r=this._first;for(this._totalTime=this._time=this._rawPrevTime=t;r;)n=r._next,(r._active||t>=r._startTime&&!r._paused)&&(r._reversed?r.render((r._dirty?r.totalDuration():r._totalDuration)-(t-r._startTime)*r._timeScale,e,i):r.render((t-r._startTime)*r._timeScale,e,i)),r=n},a.rawTime=function(){return u||l.wake(),this._totalTime};var N=y("TweenLite",function(e,i,n){if(A.call(this,i,n),this.render=N.prototype.render,null==e)throw"Cannot tween a null target.";this.target=e="string"!=typeof e?e:N.selector(e)||e;var r,s,o,a=e.jquery||e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType),l=this.vars.overwrite;if(this._overwrite=l=null==l?$[N.defaultOverwrite]:"number"==typeof l?l>>0:$[l],(a||e instanceof Array||e.push&&_(e))&&"number"!=typeof e[0])for(this._targets=o=p(e),this._propLookup=[],this._siblings=[],r=0;r<o.length;r++)s=o[r],s?"string"!=typeof s?s.length&&s!==t&&s[0]&&(s[0]===t||s[0].nodeType&&s[0].style&&!s.nodeType)?(o.splice(r--,1),this._targets=o=o.concat(p(s))):(this._siblings[r]=Q(s,this,!1),1===l&&this._siblings[r].length>1&&J(s,this,null,1,this._siblings[r])):(s=o[r--]=N.selector(s),"string"==typeof s&&o.splice(r+1,1)):o.splice(r--,1);else this._propLookup={},this._siblings=Q(e,this,!1),
1===l&&this._siblings.length>1&&J(e,this,null,1,this._siblings);(this.vars.immediateRender||0===i&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-f,this.render(Math.min(0,-this._delay)))},!0),E=function(e){return e&&e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType)},M=function(t,e){var i,n={};for(i in t)Y[i]||i in e&&"transform"!==i&&"x"!==i&&"y"!==i&&"width"!==i&&"height"!==i&&"className"!==i&&"border"!==i||!(!X[i]||X[i]&&X[i]._autoCSS)||(n[i]=t[i],delete t[i]);t.css=n};a=N.prototype=new A,a.constructor=N,a.kill()._gc=!1,a.ratio=0,a._firstPT=a._targets=a._overwrittenProps=a._startAt=null,a._notifyPluginsOfEnabled=a._lazy=!1,N.version="1.19.0",N.defaultEase=a._ease=new b(null,null,1,1),N.defaultOverwrite="auto",N.ticker=l,N.autoSleep=120,N.lagSmoothing=function(t,e){l.lagSmoothing(t,e)},N.selector=t.$||t.jQuery||function(e){var i=t.$||t.jQuery;return i?(N.selector=i,i(e)):"undefined"==typeof document?e:document.querySelectorAll?document.querySelectorAll(e):document.getElementById("#"===e.charAt(0)?e.substr(1):e)};var F=[],L={},j=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,I=function(t){for(var e,i=this._firstPT,n=1e-6;i;)e=i.blob?t?this.join(""):this.start:i.c*t+i.s,i.m?e=i.m(e,this._target||i.t):e<n&&e>-n&&(e=0),i.f?i.fp?i.t[i.p](i.fp,e):i.t[i.p](e):i.t[i.p]=e,i=i._next},z=function(t,e,i,n){var r,s,o,a,l,u,h,c=[t,e],f=0,p="",d=0;for(c.start=t,i&&(i(c),t=c[0],e=c[1]),c.length=0,r=t.match(j)||[],s=e.match(j)||[],n&&(n._next=null,n.blob=1,c._firstPT=c._applyPT=n),l=s.length,a=0;a<l;a++)h=s[a],u=e.substr(f,e.indexOf(h,f)-f),p+=u||!a?u:",",f+=u.length,d?d=(d+1)%5:"rgba("===u.substr(-5)&&(d=1),h===r[a]||r.length<=a?p+=h:(p&&(c.push(p),p=""),o=parseFloat(r[a]),c.push(o),c._firstPT={_next:c._firstPT,t:c,p:c.length-1,s:o,c:("="===h.charAt(1)?parseInt(h.charAt(0)+"1",10)*parseFloat(h.substr(2)):parseFloat(h)-o)||0,f:0,m:d&&d<4?Math.round:0}),f+=h.length;return p+=e.substr(f),p&&c.push(p),c.setRatio=I,c},q=function(t,e,i,n,r,s,o,a,l){"function"==typeof n&&(n=n(l||0,t));var u,h,c="get"===i?t[e]:i,f=typeof t[e],p="string"==typeof n&&"="===n.charAt(1),d={t:t,p:e,s:c,f:"function"===f,pg:0,n:r||e,m:s?"function"==typeof s?s:Math.round:0,pr:0,c:p?parseInt(n.charAt(0)+"1",10)*parseFloat(n.substr(2)):parseFloat(n)-c||0};if("number"!==f&&("function"===f&&"get"===i&&(h=e.indexOf("set")||"function"!=typeof t["get"+e.substr(3)]?e:"get"+e.substr(3),d.s=c=o?t[h](o):t[h]()),"string"==typeof c&&(o||isNaN(c))?(d.fp=o,u=z(c,n,a||N.defaultStringFilter,d),d={t:u,p:"setRatio",s:0,c:1,f:2,pg:0,n:r||e,pr:0,m:0}):p||(d.s=parseFloat(c),d.c=parseFloat(n)-d.s||0)),d.c)return(d._next=this._firstPT)&&(d._next._prev=d),this._firstPT=d,d},B=N._internals={isArray:_,isSelector:E,lazyTweens:F,blobDif:z},X=N._plugins={},H=B.tweenLookup={},W=0,Y=B.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1,id:1},$={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,true:1,false:0},U=A._rootFramesTimeline=new R,V=A._rootTimeline=new R,Z=30,G=B.lazyRender=function(){var t,e=F.length;for(L={};--e>-1;)t=F[e],t&&t._lazy!==!1&&(t.render(t._lazy[0],t._lazy[1],!0),t._lazy=!1);F.length=0};V._startTime=l.time,U._startTime=l.frame,V._active=U._active=!0,setTimeout(G,1),A._updateRoot=N.render=function(){var t,e,i;if(F.length&&G(),V.render((l.time-V._startTime)*V._timeScale,!1,!1),U.render((l.frame-U._startTime)*U._timeScale,!1,!1),F.length&&G(),l.frame>=Z){Z=l.frame+(parseInt(N.autoSleep,10)||120);for(i in H){for(e=H[i].tweens,t=e.length;--t>-1;)e[t]._gc&&e.splice(t,1);0===e.length&&delete H[i]}if(i=V._first,(!i||i._paused)&&N.autoSleep&&!U._first&&1===l._listeners.tick.length){for(;i&&i._paused;)i=i._next;i||l.sleep()}}},l.addEventListener("tick",A._updateRoot);var Q=function(t,e,i){var n,r,s=t._gsTweenID;if(H[s||(t._gsTweenID=s="t"+W++)]||(H[s]={target:t,tweens:[]}),e&&(n=H[s].tweens,n[r=n.length]=e,i))for(;--r>-1;)n[r]===e&&n.splice(r,1);return H[s].tweens},K=function(t,e,i,n){var r,s,o=t.vars.onOverwrite;return o&&(r=o(t,e,i,n)),o=N.onOverwrite,o&&(s=o(t,e,i,n)),r!==!1&&s!==!1},J=function(t,e,i,n,r){var s,o,a,l;if(1===n||n>=4){for(l=r.length,s=0;s<l;s++)if((a=r[s])!==e)a._gc||a._kill(null,t,e)&&(o=!0);else if(5===n)break;return o}var u,h=e._startTime+f,c=[],p=0,d=0===e._duration;for(s=r.length;--s>-1;)(a=r[s])===e||a._gc||a._paused||(a._timeline!==e._timeline?(u=u||tt(e,0,d),0===tt(a,u,d)&&(c[p++]=a)):a._startTime<=h&&a._startTime+a.totalDuration()/a._timeScale>h&&((d||!a._initted)&&h-a._startTime<=2e-10||(c[p++]=a)));for(s=p;--s>-1;)if(a=c[s],2===n&&a._kill(i,t,e)&&(o=!0),2!==n||!a._firstPT&&a._initted){if(2!==n&&!K(a,e))continue;a._enabled(!1,!1)&&(o=!0)}return o},tt=function(t,e,i){for(var n=t._timeline,r=n._timeScale,s=t._startTime;n._timeline;){if(s+=n._startTime,r*=n._timeScale,n._paused)return-100;n=n._timeline}return s/=r,s>e?s-e:i&&s===e||!t._initted&&s-e<2*f?f:(s+=t.totalDuration()/t._timeScale/r)>e+f?0:s-e-f};a._init=function(){var t,e,i,n,r,s,o=this.vars,a=this._overwrittenProps,l=this._duration,u=!!o.immediateRender,h=o.ease;if(o.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),r={};for(n in o.startAt)r[n]=o.startAt[n];if(r.overwrite=!1,r.immediateRender=!0,r.lazy=u&&o.lazy!==!1,r.startAt=r.delay=null,this._startAt=N.to(this.target,0,r),u)if(this._time>0)this._startAt=null;else if(0!==l)return}else if(o.runBackwards&&0!==l)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(u=!1),i={};for(n in o)Y[n]&&"autoCSS"!==n||(i[n]=o[n]);if(i.overwrite=0,i.data="isFromStart",i.lazy=u&&o.lazy!==!1,i.immediateRender=u,this._startAt=N.to(this.target,0,i),u){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=h=h?h instanceof b?h:"function"==typeof h?new b(h,o.easeParams):T[h]||N.defaultEase:N.defaultEase,o.easeParams instanceof Array&&h.config&&(this._ease=h.config.apply(h,o.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(s=this._targets.length,t=0;t<s;t++)this._initProps(this._targets[t],this._propLookup[t]={},this._siblings[t],a?a[t]:null,t)&&(e=!0);else e=this._initProps(this.target,this._propLookup,this._siblings,a,0);if(e&&N._onPluginEvent("_onInitAllProps",this),a&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),o.runBackwards)for(i=this._firstPT;i;)i.s+=i.c,i.c=-i.c,i=i._next;this._onUpdate=o.onUpdate,this._initted=!0},a._initProps=function(e,i,n,r,s){var o,a,l,u,h,c;if(null==e)return!1;L[e._gsTweenID]&&G(),this.vars.css||e.style&&e!==t&&e.nodeType&&X.css&&this.vars.autoCSS!==!1&&M(this.vars,e);for(o in this.vars)if(c=this.vars[o],Y[o])c&&(c instanceof Array||c.push&&_(c))&&c.join("").indexOf("{self}")!==-1&&(this.vars[o]=c=this._swapSelfInParams(c,this));else if(X[o]&&(u=new X[o])._onInitTween(e,this.vars[o],this,s)){for(this._firstPT=h={_next:this._firstPT,t:u,p:"setRatio",s:0,c:1,f:1,n:o,pg:1,pr:u._priority,m:0},a=u._overwriteProps.length;--a>-1;)i[u._overwriteProps[a]]=this._firstPT;(u._priority||u._onInitAllProps)&&(l=!0),(u._onDisable||u._onEnable)&&(this._notifyPluginsOfEnabled=!0),h._next&&(h._next._prev=h)}else i[o]=q.call(this,e,o,"get",c,o,0,null,this.vars.stringFilter,s);return r&&this._kill(r,e)?this._initProps(e,i,n,r,s):this._overwrite>1&&this._firstPT&&n.length>1&&J(e,this,i,this._overwrite,n)?(this._kill(i,e),this._initProps(e,i,n,r,s)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(L[e._gsTweenID]=!0),l)},a.render=function(t,e,i){var n,r,s,o,a=this._time,l=this._duration,u=this._rawPrevTime;if(t>=l-1e-7)this._totalTime=this._time=l,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(n=!0,r="onComplete",i=i||this._timeline.autoRemoveChildren),0===l&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(u<0||t<=0&&t>=-1e-7||u===f&&"isPause"!==this.data)&&u!==t&&(i=!0,u>f&&(r="onReverseComplete")),this._rawPrevTime=o=!e||t||u===t?t:f);else if(t<1e-7)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==a||0===l&&u>0)&&(r="onReverseComplete",n=this._reversed),t<0&&(this._active=!1,0===l&&(this._initted||!this.vars.lazy||i)&&(u>=0&&(u!==f||"isPause"!==this.data)&&(i=!0),this._rawPrevTime=o=!e||t||u===t?t:f)),this._initted||(i=!0);else if(this._totalTime=this._time=t,this._easeType){var h=t/l,c=this._easeType,p=this._easePower;(1===c||3===c&&h>=.5)&&(h=1-h),3===c&&(h*=2),1===p?h*=h:2===p?h*=h*h:3===p?h*=h*h*h:4===p&&(h*=h*h*h*h),1===c?this.ratio=1-h:2===c?this.ratio=h:t/l<.5?this.ratio=h/2:this.ratio=1-h/2}else this.ratio=this._ease.getRatio(t/l);if(this._time!==a||i){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=a,this._rawPrevTime=u,F.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/l):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==a&&t>=0&&(this._active=!0),0===a&&(this._startAt&&(t>=0?this._startAt.render(t,e,i):r||(r="_dummyGS")),this.vars.onStart&&(0===this._time&&0!==l||e||this._callback("onStart"))),s=this._firstPT;s;)s.f?s.t[s.p](s.c*this.ratio+s.s):s.t[s.p]=s.c*this.ratio+s.s,s=s._next;this._onUpdate&&(t<0&&this._startAt&&t!==-1e-4&&this._startAt.render(t,e,i),e||(this._time!==a||n||i)&&this._callback("onUpdate")),r&&(this._gc&&!i||(t<0&&this._startAt&&!this._onUpdate&&t!==-1e-4&&this._startAt.render(t,e,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this._callback(r),0===l&&this._rawPrevTime===f&&o!==f&&(this._rawPrevTime=0)))}},a._kill=function(t,e,i){if("all"===t&&(t=null),null==t&&(null==e||e===this.target))return this._lazy=!1,this._enabled(!1,!1);e="string"!=typeof e?e||this._targets||this.target:N.selector(e)||e;var n,r,s,o,a,l,u,h,c,f=i&&this._time&&i._startTime===this._startTime&&this._timeline===i._timeline;if((_(e)||E(e))&&"number"!=typeof e[0])for(n=e.length;--n>-1;)this._kill(t,e[n],i)&&(l=!0);else{if(this._targets){for(n=this._targets.length;--n>-1;)if(e===this._targets[n]){a=this._propLookup[n]||{},this._overwrittenProps=this._overwrittenProps||[],r=this._overwrittenProps[n]=t?this._overwrittenProps[n]||{}:"all";break}}else{if(e!==this.target)return!1;a=this._propLookup,r=this._overwrittenProps=t?this._overwrittenProps||{}:"all"}if(a){if(u=t||a,h=t!==r&&"all"!==r&&t!==a&&("object"!=typeof t||!t._tempKill),i&&(N.onOverwrite||this.vars.onOverwrite)){for(s in u)a[s]&&(c||(c=[]),c.push(s));if((c||!t)&&!K(this,i,e,c))return!1}for(s in u)(o=a[s])&&(f&&(o.f?o.t[o.p](o.s):o.t[o.p]=o.s,l=!0),o.pg&&o.t._kill(u)&&(l=!0),o.pg&&0!==o.t._overwriteProps.length||(o._prev?o._prev._next=o._next:o===this._firstPT&&(this._firstPT=o._next),o._next&&(o._next._prev=o._prev),o._next=o._prev=null),delete a[s]),h&&(r[s]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return l},a.invalidate=function(){return this._notifyPluginsOfEnabled&&N._onPluginEvent("_onDisable",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],A.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-f,this.render(Math.min(0,-this._delay))),this},a._enabled=function(t,e){if(u||l.wake(),t&&this._gc){var i,n=this._targets;if(n)for(i=n.length;--i>-1;)this._siblings[i]=Q(n[i],this,!0);else this._siblings=Q(this.target,this,!0)}return A.prototype._enabled.call(this,t,e),!(!this._notifyPluginsOfEnabled||!this._firstPT)&&N._onPluginEvent(t?"_onEnable":"_onDisable",this)},N.to=function(t,e,i){return new N(t,e,i)},N.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new N(t,e,i)},N.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new N(t,e,n)},N.delayedCall=function(t,e,i,n,r){return new N(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,onReverseCompleteParams:i,immediateRender:!1,lazy:!1,useFrames:r,overwrite:0})},N.set=function(t,e){return new N(t,0,e)},N.getTweensOf=function(t,e){if(null==t)return[];t="string"!=typeof t?t:N.selector(t)||t;var i,n,r,s;if((_(t)||E(t))&&"number"!=typeof t[0]){for(i=t.length,n=[];--i>-1;)n=n.concat(N.getTweensOf(t[i],e));for(i=n.length;--i>-1;)for(s=n[i],r=i;--r>-1;)s===n[r]&&n.splice(i,1)}else for(n=Q(t).concat(),i=n.length;--i>-1;)(n[i]._gc||e&&!n[i].isActive())&&n.splice(i,1);return n},N.killTweensOf=N.killDelayedCallsTo=function(t,e,i){"object"==typeof e&&(i=e,e=!1);for(var n=N.getTweensOf(t,e),r=n.length;--r>-1;)n[r]._kill(i,t)};var et=y("plugins.TweenPlugin",function(t,e){this._overwriteProps=(t||"").split(","),this._propName=this._overwriteProps[0],this._priority=e||0,this._super=et.prototype},!0);if(a=et.prototype,et.version="1.19.0",et.API=2,a._firstPT=null,a._addTween=q,a.setRatio=I,a._kill=function(t){var e,i=this._overwriteProps,n=this._firstPT;if(null!=t[this._propName])this._overwriteProps=[];else for(e=i.length;--e>-1;)null!=t[i[e]]&&i.splice(e,1);for(;n;)null!=t[n.n]&&(n._next&&(n._next._prev=n._prev),n._prev?(n._prev._next=n._next,n._prev=null):this._firstPT===n&&(this._firstPT=n._next)),n=n._next;return!1},a._mod=a._roundProps=function(t){for(var e,i=this._firstPT;i;)e=t[this._propName]||null!=i.n&&t[i.n.split(this._propName+"_").join("")],e&&"function"==typeof e&&(2===i.f?i.t._applyPT.m=e:i.m=e),i=i._next},N._onPluginEvent=function(t,e){var i,n,r,s,o,a=e._firstPT;if("_onInitAllProps"===t){for(;a;){for(o=a._next,n=r;n&&n.pr>a.pr;)n=n._next;(a._prev=n?n._prev:s)?a._prev._next=a:r=a,(a._next=n)?n._prev=a:s=a,a=o}a=e._firstPT=r}for(;a;)a.pg&&"function"==typeof a.t[t]&&a.t[t]()&&(i=!0),a=a._next;return i},et.activate=function(t){for(var e=t.length;--e>-1;)t[e].API===et.API&&(X[(new t[e])._propName]=t[e]);return!0},v.plugin=function(t){if(!(t&&t.propName&&t.init&&t.API))throw"illegal plugin definition.";var e,i=t.propName,n=t.priority||0,r=t.overwriteProps,s={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_mod",mod:"_mod",initAll:"_onInitAllProps"},o=y("plugins."+i.charAt(0).toUpperCase()+i.substr(1)+"Plugin",function(){et.call(this,i,n),this._overwriteProps=r||[]},t.global===!0),a=o.prototype=new et(i);a.constructor=o,o.API=t.API;for(e in s)"function"==typeof t[e]&&(a[s[e]]=t[e]);return o.version=t.version,et.activate([o]),o},s=t._gsQueue){for(o=0;o<s.length;o++)s[o]();for(a in m)m[a].func||t.console.log("GSAP encountered missing dependency: "+a)}u=!1}}("undefined"!=typeof e&&e.exports&&"undefined"!=typeof t?t:this||window,"TweenMax")}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(t,e,i){!function(t,i){"use strict";"object"==typeof e&&"object"==typeof e.exports?e.exports=t.document?i(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return i(t)}:i(t)}("undefined"!=typeof window?window:this,function(t,e){"use strict";function i(t,e){e=e||X;var i=e.createElement("script");i.text=t,e.head.appendChild(i).parentNode.removeChild(i)}function n(t){var e=!!t&&"length"in t&&t.length,i=et.type(t);return"function"!==i&&!et.isWindow(t)&&("array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t)}function r(t,e,i){return et.isFunction(e)?et.grep(t,function(t,n){return!!e.call(t,n,t)!==i}):e.nodeType?et.grep(t,function(t){return t===e!==i}):"string"!=typeof e?et.grep(t,function(t){return U.call(e,t)>-1!==i}):ct.test(e)?et.filter(e,t,i):(e=et.filter(e,t),et.grep(t,function(t){return U.call(e,t)>-1!==i&&1===t.nodeType}))}function s(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function o(t){var e={};return et.each(t.match(gt)||[],function(t,i){e[i]=!0}),e}function a(t){return t}function l(t){throw t}function u(t,e,i){var n;try{t&&et.isFunction(n=t.promise)?n.call(t).done(e).fail(i):t&&et.isFunction(n=t.then)?n.call(t,e,i):e.call(void 0,t)}catch(t){i.call(void 0,t)}}function h(){X.removeEventListener("DOMContentLoaded",h),t.removeEventListener("load",h),et.ready()}function c(){this.expando=et.expando+c.uid++}function f(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:Pt.test(t)?JSON.parse(t):t)}function p(t,e,i){var n;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(kt,"-$&").toLowerCase(),i=t.getAttribute(n),"string"==typeof i){try{i=f(i)}catch(t){}wt.set(t,e,i)}else i=void 0;return i}function d(t,e,i,n){var r,s=1,o=20,a=n?function(){return n.cur()}:function(){return et.css(t,e,"")},l=a(),u=i&&i[3]||(et.cssNumber[e]?"":"px"),h=(et.cssNumber[e]||"px"!==u&&+l)&&St.exec(et.css(t,e));if(h&&h[3]!==u){u=u||h[3],i=i||[],h=+l||1;do s=s||".5",h/=s,et.style(t,e,h+u);while(s!==(s=a()/l)&&1!==s&&--o)}return i&&(h=+h||+l||0,r=i[1]?h+(i[1]+1)*i[2]:+i[2],n&&(n.unit=u,n.start=h,n.end=r)),r}function _(t){var e,i=t.ownerDocument,n=t.nodeName,r=Rt[n];return r?r:(e=i.body.appendChild(i.createElement(n)),r=et.css(e,"display"),e.parentNode.removeChild(e),"none"===r&&(r="block"),Rt[n]=r,r)}function m(t,e){for(var i,n,r=[],s=0,o=t.length;s<o;s++)n=t[s],n.style&&(i=n.style.display,e?("none"===i&&(r[s]=Tt.get(n,"display")||null,r[s]||(n.style.display="")),""===n.style.display&&At(n)&&(r[s]=_(n))):"none"!==i&&(r[s]="none",Tt.set(n,"display",i)));for(s=0;s<o;s++)null!=r[s]&&(t[s].style.display=r[s]);return t}function g(t,e){var i;return i="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&et.nodeName(t,e)?et.merge([t],i):i}function v(t,e){for(var i=0,n=t.length;i<n;i++)Tt.set(t[i],"globalEval",!e||Tt.get(e[i],"globalEval"))}function y(t,e,i,n,r){for(var s,o,a,l,u,h,c=e.createDocumentFragment(),f=[],p=0,d=t.length;p<d;p++)if(s=t[p],s||0===s)if("object"===et.type(s))et.merge(f,s.nodeType?[s]:s);else if(Lt.test(s)){for(o=o||c.appendChild(e.createElement("div")),a=(Et.exec(s)||["",""])[1].toLowerCase(),l=Ft[a]||Ft._default,o.innerHTML=l[1]+et.htmlPrefilter(s)+l[2],h=l[0];h--;)o=o.lastChild;et.merge(f,o.childNodes),o=c.firstChild,o.textContent=""}else f.push(e.createTextNode(s));for(c.textContent="",p=0;s=f[p++];)if(n&&et.inArray(s,n)>-1)r&&r.push(s);else if(u=et.contains(s.ownerDocument,s),o=g(c.appendChild(s),"script"),u&&v(o),i)for(h=0;s=o[h++];)Mt.test(s.type||"")&&i.push(s);return c}function x(){return!0}function b(){return!1}function T(){try{return X.activeElement}catch(t){}}function w(t,e,i,n,r,s){var o,a;if("object"==typeof e){"string"!=typeof i&&(n=n||i,i=void 0);for(a in e)w(t,a,i,n,e[a],s);return t}if(null==n&&null==r?(r=i,n=i=void 0):null==r&&("string"==typeof i?(r=n,n=void 0):(r=n,n=i,i=void 0)),r===!1)r=b;else if(!r)return t;return 1===s&&(o=r,r=function(t){return et().off(t),o.apply(this,arguments)},r.guid=o.guid||(o.guid=et.guid++)),t.each(function(){et.event.add(this,e,r,n,i)})}function P(t,e){return et.nodeName(t,"table")&&et.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t:t}function k(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function C(t){var e=Wt.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function S(t,e){var i,n,r,s,o,a,l,u;if(1===e.nodeType){if(Tt.hasData(t)&&(s=Tt.access(t),o=Tt.set(e,s),u=s.events)){delete o.handle,o.events={};for(r in u)for(i=0,n=u[r].length;i<n;i++)et.event.add(e,r,u[r][i])}wt.hasData(t)&&(a=wt.access(t),l=et.extend({},a),wt.set(e,l))}}function O(t,e){var i=e.nodeName.toLowerCase();"input"===i&&Nt.test(t.type)?e.checked=t.checked:"input"!==i&&"textarea"!==i||(e.defaultValue=t.defaultValue)}function A(t,e,n,r){e=Y.apply([],e);var s,o,a,l,u,h,c=0,f=t.length,p=f-1,d=e[0],_=et.isFunction(d);if(_||f>1&&"string"==typeof d&&!J.checkClone&&Ht.test(d))return t.each(function(i){var s=t.eq(i);_&&(e[0]=d.call(this,i,s.html())),A(s,e,n,r)});if(f&&(s=y(e,t[0].ownerDocument,!1,t,r),o=s.firstChild,1===s.childNodes.length&&(s=o),o||r)){for(a=et.map(g(s,"script"),k),l=a.length;c<f;c++)u=s,c!==p&&(u=et.clone(u,!0,!0),l&&et.merge(a,g(u,"script"))),n.call(t[c],u,c);if(l)for(h=a[a.length-1].ownerDocument,et.map(a,C),c=0;c<l;c++)u=a[c],Mt.test(u.type||"")&&!Tt.access(u,"globalEval")&&et.contains(h,u)&&(u.src?et._evalUrl&&et._evalUrl(u.src):i(u.textContent.replace(Yt,""),h))}return t}function D(t,e,i){for(var n,r=e?et.filter(e,t):t,s=0;null!=(n=r[s]);s++)i||1!==n.nodeType||et.cleanData(g(n)),n.parentNode&&(i&&et.contains(n.ownerDocument,n)&&v(g(n,"script")),n.parentNode.removeChild(n));return t}function R(t,e,i){var n,r,s,o,a=t.style;return i=i||Vt(t),i&&(o=i.getPropertyValue(e)||i[e],""!==o||et.contains(t.ownerDocument,t)||(o=et.style(t,e)),!J.pixelMarginRight()&&Ut.test(o)&&$t.test(e)&&(n=a.width,r=a.minWidth,s=a.maxWidth,a.minWidth=a.maxWidth=a.width=o,o=i.width,a.width=n,a.minWidth=r,a.maxWidth=s)),void 0!==o?o+"":o}function N(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function E(t){if(t in Jt)return t;for(var e=t[0].toUpperCase()+t.slice(1),i=Kt.length;i--;)if(t=Kt[i]+e,t in Jt)return t}function M(t,e,i){var n=St.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function F(t,e,i,n,r){var s,o=0;for(s=i===(n?"border":"content")?4:"width"===e?1:0;s<4;s+=2)"margin"===i&&(o+=et.css(t,i+Ot[s],!0,r)),n?("content"===i&&(o-=et.css(t,"padding"+Ot[s],!0,r)),"margin"!==i&&(o-=et.css(t,"border"+Ot[s]+"Width",!0,r))):(o+=et.css(t,"padding"+Ot[s],!0,r),"padding"!==i&&(o+=et.css(t,"border"+Ot[s]+"Width",!0,r)));return o}function L(t,e,i){var n,r=!0,s=Vt(t),o="border-box"===et.css(t,"boxSizing",!1,s);if(t.getClientRects().length&&(n=t.getBoundingClientRect()[e]),n<=0||null==n){if(n=R(t,e,s),(n<0||null==n)&&(n=t.style[e]),Ut.test(n))return n;r=o&&(J.boxSizingReliable()||n===t.style[e]),n=parseFloat(n)||0}return n+F(t,e,i||(o?"border":"content"),r,s)+"px"}function j(t){var e=t.match(gt)||[];return e.join(" ")}function I(t){return t.getAttribute&&t.getAttribute("class")||""}function z(t,e,i,n){var r;if(et.isArray(e))et.each(e,function(e,r){i||oe.test(t)?n(t,r):z(t+"["+("object"==typeof r&&null!=r?e:"")+"]",r,i,n)});else if(i||"object"!==et.type(e))n(t,e);else for(r in e)z(t+"["+r+"]",e[r],i,n)}function q(t){return et.isWindow(t)?t:9===t.nodeType&&t.defaultView}var B=[],X=t.document,H=Object.getPrototypeOf,W=B.slice,Y=B.concat,$=B.push,U=B.indexOf,V={},Z=V.toString,G=V.hasOwnProperty,Q=G.toString,K=Q.call(Object),J={},tt="3.1.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/parseXML,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-event/ajax,-effects,-effects/animatedSelector,-effects/Tween,-deprecated",et=function(t,e){return new et.fn.init(t,e)},it=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,nt=/^-ms-/,rt=/-([a-z])/g,st=function(t,e){return e.toUpperCase()};et.fn=et.prototype={jquery:tt,constructor:et,length:0,toArray:function(){return W.call(this)},get:function(t){return null==t?W.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=et.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return et.each(this,t)},map:function(t){return this.pushStack(et.map(this,function(e,i){return t.call(e,i,e)}))},slice:function(){return this.pushStack(W.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(i>=0&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:$,sort:B.sort,splice:B.splice},et.extend=et.fn.extend=function(){var t,e,i,n,r,s,o=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof o&&(u=o,o=arguments[a]||{},a++),"object"==typeof o||et.isFunction(o)||(o={}),a===l&&(o=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)i=o[e],n=t[e],o!==n&&(u&&n&&(et.isPlainObject(n)||(r=et.isArray(n)))?(r?(r=!1,s=i&&et.isArray(i)?i:[]):s=i&&et.isPlainObject(i)?i:{},o[e]=et.extend(u,s,n)):void 0!==n&&(o[e]=n));return o},et.extend({expando:"jQuery"+(tt+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===et.type(t)},isArray:Array.isArray,isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){var e=et.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==Z.call(t)||(e=H(t))&&(i=G.call(e,"constructor")&&e.constructor,"function"!=typeof i||Q.call(i)!==K))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?V[Z.call(t)]||"object":typeof t},globalEval:function(t){i(t)},camelCase:function(t){return t.replace(nt,"ms-").replace(rt,st)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var i,r=0;if(n(t))for(i=t.length;r<i&&e.call(t[r],r,t[r])!==!1;r++);else for(r in t)if(e.call(t[r],r,t[r])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(it,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(n(Object(t))?et.merge(i,"string"==typeof t?[t]:t):$.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:U.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,r=t.length;n<i;n++)t[r++]=e[n];return t.length=r,t},grep:function(t,e,i){for(var n,r=[],s=0,o=t.length,a=!i;s<o;s++)n=!e(t[s],s),n!==a&&r.push(t[s]);return r},map:function(t,e,i){var r,s,o=0,a=[];if(n(t))for(r=t.length;o<r;o++)s=e(t[o],o,i),null!=s&&a.push(s);else for(o in t)s=e(t[o],o,i),null!=s&&a.push(s);return Y.apply([],a)},guid:1,proxy:function(t,e){var i,n,r;if("string"==typeof e&&(i=t[e],e=t,t=i),et.isFunction(t))return n=W.call(arguments,2),r=function(){return t.apply(e||this,n.concat(W.call(arguments)))},r.guid=t.guid=t.guid||et.guid++,r},now:Date.now,support:J}),"function"==typeof Symbol&&(et.fn[Symbol.iterator]=B[Symbol.iterator]),et.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){V["[object "+e+"]"]=e.toLowerCase()});var ot=function(t){function e(t,e,i,n){var r,s,o,a,l,u,h,f=e&&e.ownerDocument,d=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==d&&9!==d&&11!==d)return i;if(!n&&((e?e.ownerDocument||e:B)!==E&&N(e),e=e||E,F)){if(11!==d&&(l=gt.exec(t)))if(r=l[1]){if(9===d){if(!(o=e.getElementById(r)))return i;if(o.id===r)return i.push(o),i}else if(f&&(o=f.getElementById(r))&&z(e,o)&&o.id===r)return i.push(o),i}else{if(l[2])return K.apply(i,e.getElementsByTagName(t)),i;if((r=l[3])&&T.getElementsByClassName&&e.getElementsByClassName)return K.apply(i,e.getElementsByClassName(r)),i}if(T.qsa&&!$[t+" "]&&(!L||!L.test(t))){if(1!==d)f=e,h=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(bt,Tt):e.setAttribute("id",a=q),u=C(t),s=u.length;s--;)u[s]="#"+a+" "+p(u[s]);h=u.join(","),f=vt.test(t)&&c(e.parentNode)||e}if(h)try{return K.apply(i,f.querySelectorAll(h)),i}catch(t){}finally{a===q&&e.removeAttribute("id")}}}return O(t.replace(at,"$1"),e,i,n)}function i(){function t(i,n){return e.push(i+" ")>w.cacheLength&&delete t[e.shift()],t[i+" "]=n}var e=[];return t}function n(t){return t[q]=!0,t}function r(t){var e=E.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function s(t,e){for(var i=t.split("|"),n=i.length;n--;)w.attrHandle[i[n]]=e}function o(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function a(t){return function(e){var i=e.nodeName.toLowerCase();return"input"===i&&e.type===t}}function l(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function u(t){return function(e){return"form"in e?e.parentNode&&e.disabled===!1?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&Pt(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function h(t){return n(function(e){return e=+e,n(function(i,n){for(var r,s=t([],i.length,e),o=s.length;o--;)i[r=s[o]]&&(i[r]=!(n[r]=i[r]))})})}function c(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function f(){}function p(t){for(var e=0,i=t.length,n="";e<i;e++)n+=t[e].value;return n}function d(t,e,i){var n=e.dir,r=e.next,s=r||n,o=i&&"parentNode"===s,a=H++;return e.first?function(e,i,r){for(;e=e[n];)if(1===e.nodeType||o)return t(e,i,r);return!1}:function(e,i,l){var u,h,c,f=[X,a];if(l){for(;e=e[n];)if((1===e.nodeType||o)&&t(e,i,l))return!0}else for(;e=e[n];)if(1===e.nodeType||o)if(c=e[q]||(e[q]={}),h=c[e.uniqueID]||(c[e.uniqueID]={}),r&&r===e.nodeName.toLowerCase())e=e[n]||e;else{if((u=h[s])&&u[0]===X&&u[1]===a)return f[2]=u[2];if(h[s]=f,f[2]=t(e,i,l))return!0}return!1}}function _(t){return t.length>1?function(e,i,n){for(var r=t.length;r--;)if(!t[r](e,i,n))return!1;return!0}:t[0]}function m(t,i,n){for(var r=0,s=i.length;r<s;r++)e(t,i[r],n);return n}function g(t,e,i,n,r){for(var s,o=[],a=0,l=t.length,u=null!=e;a<l;a++)(s=t[a])&&(i&&!i(s,n,r)||(o.push(s),u&&e.push(a)));return o}function v(t,e,i,r,s,o){return r&&!r[q]&&(r=v(r)),s&&!s[q]&&(s=v(s,o)),n(function(n,o,a,l){var u,h,c,f=[],p=[],d=o.length,_=n||m(e||"*",a.nodeType?[a]:a,[]),v=!t||!n&&e?_:g(_,f,t,a,l),y=i?s||(n?t:d||r)?[]:o:v;if(i&&i(v,y,a,l),r)for(u=g(y,p),r(u,[],a,l),h=u.length;h--;)(c=u[h])&&(y[p[h]]=!(v[p[h]]=c));if(n){if(s||t){if(s){for(u=[],h=y.length;h--;)(c=y[h])&&u.push(v[h]=c);s(null,y=[],u,l)}for(h=y.length;h--;)(c=y[h])&&(u=s?tt(n,c):f[h])>-1&&(n[u]=!(o[u]=c))}}else y=g(y===o?y.splice(d,y.length):y),s?s(null,o,y,l):K.apply(o,y)})}function y(t){for(var e,i,n,r=t.length,s=w.relative[t[0].type],o=s||w.relative[" "],a=s?1:0,l=d(function(t){return t===e},o,!0),u=d(function(t){return tt(e,t)>-1},o,!0),h=[function(t,i,n){var r=!s&&(n||i!==A)||((e=i).nodeType?l(t,i,n):u(t,i,n));return e=null,r}];a<r;a++)if(i=w.relative[t[a].type])h=[d(_(h),i)];else{if(i=w.filter[t[a].type].apply(null,t[a].matches),i[q]){for(n=++a;n<r&&!w.relative[t[n].type];n++);return v(a>1&&_(h),a>1&&p(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(at,"$1"),i,a<n&&y(t.slice(a,n)),n<r&&y(t=t.slice(n)),n<r&&p(t))}h.push(i)}return _(h)}function x(t,i){var r=i.length>0,s=t.length>0,o=function(n,o,a,l,u){var h,c,f,p=0,d="0",_=n&&[],m=[],v=A,y=n||s&&w.find.TAG("*",u),x=X+=null==v?1:Math.random()||.1,b=y.length;for(u&&(A=o===E||o||u);d!==b&&null!=(h=y[d]);d++){if(s&&h){for(c=0,o||h.ownerDocument===E||(N(h),a=!F);f=t[c++];)if(f(h,o||E,a)){l.push(h);break}u&&(X=x)}r&&((h=!f&&h)&&p--,n&&_.push(h))}if(p+=d,r&&d!==p){for(c=0;f=i[c++];)f(_,m,o,a);if(n){if(p>0)for(;d--;)_[d]||m[d]||(m[d]=G.call(l));m=g(m)}K.apply(l,m),u&&!n&&m.length>0&&p+i.length>1&&e.uniqueSort(l)}return u&&(X=x,A=v),_};return r?n(o):o}var b,T,w,P,k,C,S,O,A,D,R,N,E,M,F,L,j,I,z,q="sizzle"+1*new Date,B=t.document,X=0,H=0,W=i(),Y=i(),$=i(),U=function(t,e){return t===e&&(R=!0),0},V={}.hasOwnProperty,Z=[],G=Z.pop,Q=Z.push,K=Z.push,J=Z.slice,tt=function(t,e){for(var i=0,n=t.length;i<n;i++)if(t[i]===e)return i;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",it="[\\x20\\t\\r\\n\\f]",nt="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",rt="\\["+it+"*("+nt+")(?:"+it+"*([*^$|!~]?=)"+it+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+nt+"))|)"+it+"*\\]",st=":("+nt+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+rt+")*)|.*)\\)|)",ot=new RegExp(it+"+","g"),at=new RegExp("^"+it+"+|((?:^|[^\\\\])(?:\\\\.)*)"+it+"+$","g"),lt=new RegExp("^"+it+"*,"+it+"*"),ut=new RegExp("^"+it+"*([>+~]|"+it+")"+it+"*"),ht=new RegExp("="+it+"*([^\\]'\"]*?)"+it+"*\\]","g"),ct=new RegExp(st),ft=new RegExp("^"+nt+"$"),pt={
ID:new RegExp("^#("+nt+")"),CLASS:new RegExp("^\\.("+nt+")"),TAG:new RegExp("^("+nt+"|[*])"),ATTR:new RegExp("^"+rt),PSEUDO:new RegExp("^"+st),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+it+"*(even|odd|(([+-]|)(\\d*)n|)"+it+"*(?:([+-]|)"+it+"*(\\d+)|))"+it+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+it+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+it+"*((?:-\\d)?\\d*)"+it+"*\\)|)(?=[^-]|$)","i")},dt=/^(?:input|select|textarea|button)$/i,_t=/^h\d$/i,mt=/^[^{]+\{\s*\[native \w/,gt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,vt=/[+~]/,yt=new RegExp("\\\\([\\da-f]{1,6}"+it+"?|("+it+")|.)","ig"),xt=function(t,e,i){var n="0x"+e-65536;return n!==n||i?e:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},bt=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,Tt=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},wt=function(){N()},Pt=d(function(t){return t.disabled===!0&&("form"in t||"label"in t)},{dir:"parentNode",next:"legend"});try{K.apply(Z=J.call(B.childNodes),B.childNodes),Z[B.childNodes.length].nodeType}catch(t){K={apply:Z.length?function(t,e){Q.apply(t,J.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}T=e.support={},k=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},N=e.setDocument=function(t){var e,i,n=t?t.ownerDocument||t:B;return n!==E&&9===n.nodeType&&n.documentElement?(E=n,M=E.documentElement,F=!k(E),B!==E&&(i=E.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",wt,!1):i.attachEvent&&i.attachEvent("onunload",wt)),T.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),T.getElementsByTagName=r(function(t){return t.appendChild(E.createComment("")),!t.getElementsByTagName("*").length}),T.getElementsByClassName=mt.test(E.getElementsByClassName),T.getById=r(function(t){return M.appendChild(t).id=q,!E.getElementsByName||!E.getElementsByName(q).length}),T.getById?(w.filter.ID=function(t){var e=t.replace(yt,xt);return function(t){return t.getAttribute("id")===e}},w.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&F){var i=e.getElementById(t);return i?[i]:[]}}):(w.filter.ID=function(t){var e=t.replace(yt,xt);return function(t){var i="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}},w.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&F){var i,n,r,s=e.getElementById(t);if(s){if(i=s.getAttributeNode("id"),i&&i.value===t)return[s];for(r=e.getElementsByName(t),n=0;s=r[n++];)if(i=s.getAttributeNode("id"),i&&i.value===t)return[s]}return[]}}),w.find.TAG=T.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):T.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],r=0,s=e.getElementsByTagName(t);if("*"===t){for(;i=s[r++];)1===i.nodeType&&n.push(i);return n}return s},w.find.CLASS=T.getElementsByClassName&&function(t,e){if("undefined"!=typeof e.getElementsByClassName&&F)return e.getElementsByClassName(t)},j=[],L=[],(T.qsa=mt.test(E.querySelectorAll))&&(r(function(t){M.appendChild(t).innerHTML="<a id='"+q+"'></a><select id='"+q+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&L.push("[*^$]="+it+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||L.push("\\["+it+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+q+"-]").length||L.push("~="),t.querySelectorAll(":checked").length||L.push(":checked"),t.querySelectorAll("a#"+q+"+*").length||L.push(".#.+[+~]")}),r(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=E.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&L.push("name"+it+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&L.push(":enabled",":disabled"),M.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&L.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),L.push(",.*:")})),(T.matchesSelector=mt.test(I=M.matches||M.webkitMatchesSelector||M.mozMatchesSelector||M.oMatchesSelector||M.msMatchesSelector))&&r(function(t){T.disconnectedMatch=I.call(t,"*"),I.call(t,"[s!='']:x"),j.push("!=",st)}),L=L.length&&new RegExp(L.join("|")),j=j.length&&new RegExp(j.join("|")),e=mt.test(M.compareDocumentPosition),z=e||mt.test(M.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},U=e?function(t,e){if(t===e)return R=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i?i:(i=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&i||!T.sortDetached&&e.compareDocumentPosition(t)===i?t===E||t.ownerDocument===B&&z(B,t)?-1:e===E||e.ownerDocument===B&&z(B,e)?1:D?tt(D,t)-tt(D,e):0:4&i?-1:1)}:function(t,e){if(t===e)return R=!0,0;var i,n=0,r=t.parentNode,s=e.parentNode,a=[t],l=[e];if(!r||!s)return t===E?-1:e===E?1:r?-1:s?1:D?tt(D,t)-tt(D,e):0;if(r===s)return o(t,e);for(i=t;i=i.parentNode;)a.unshift(i);for(i=e;i=i.parentNode;)l.unshift(i);for(;a[n]===l[n];)n++;return n?o(a[n],l[n]):a[n]===B?-1:l[n]===B?1:0},E):E},e.matches=function(t,i){return e(t,null,null,i)},e.matchesSelector=function(t,i){if((t.ownerDocument||t)!==E&&N(t),i=i.replace(ht,"='$1']"),T.matchesSelector&&F&&!$[i+" "]&&(!j||!j.test(i))&&(!L||!L.test(i)))try{var n=I.call(t,i);if(n||T.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(t){}return e(i,E,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==E&&N(t),z(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==E&&N(t);var i=w.attrHandle[e.toLowerCase()],n=i&&V.call(w.attrHandle,e.toLowerCase())?i(t,e,!F):void 0;return void 0!==n?n:T.attributes||!F?t.getAttribute(e):(n=t.getAttributeNode(e))&&n.specified?n.value:null},e.escape=function(t){return(t+"").replace(bt,Tt)},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,i=[],n=0,r=0;if(R=!T.detectDuplicates,D=!T.sortStable&&t.slice(0),t.sort(U),R){for(;e=t[r++];)e===t[r]&&(n=i.push(r));for(;n--;)t.splice(i[n],1)}return D=null,t},P=e.getText=function(t){var e,i="",n=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=P(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[n++];)i+=P(e);return i},w=e.selectors={cacheLength:50,createPseudo:n,match:pt,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(yt,xt),t[3]=(t[3]||t[4]||t[5]||"").replace(yt,xt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return pt.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&ct.test(i)&&(e=C(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(yt,xt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=W[t+" "];return e||(e=new RegExp("(^|"+it+")"+t+"("+it+"|$)"))&&W(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,i,n){return function(r){var s=e.attr(r,t);return null==s?"!="===i:!i||(s+="","="===i?s===n:"!="===i?s!==n:"^="===i?n&&0===s.indexOf(n):"*="===i?n&&s.indexOf(n)>-1:"$="===i?n&&s.slice(-n.length)===n:"~="===i?(" "+s.replace(ot," ")+" ").indexOf(n)>-1:"|="===i&&(s===n||s.slice(0,n.length+1)===n+"-"))}},CHILD:function(t,e,i,n,r){var s="nth"!==t.slice(0,3),o="last"!==t.slice(-4),a="of-type"===e;return 1===n&&0===r?function(t){return!!t.parentNode}:function(e,i,l){var u,h,c,f,p,d,_=s!==o?"nextSibling":"previousSibling",m=e.parentNode,g=a&&e.nodeName.toLowerCase(),v=!l&&!a,y=!1;if(m){if(s){for(;_;){for(f=e;f=f[_];)if(a?f.nodeName.toLowerCase()===g:1===f.nodeType)return!1;d=_="only"===t&&!d&&"nextSibling"}return!0}if(d=[o?m.firstChild:m.lastChild],o&&v){for(f=m,c=f[q]||(f[q]={}),h=c[f.uniqueID]||(c[f.uniqueID]={}),u=h[t]||[],p=u[0]===X&&u[1],y=p&&u[2],f=p&&m.childNodes[p];f=++p&&f&&f[_]||(y=p=0)||d.pop();)if(1===f.nodeType&&++y&&f===e){h[t]=[X,p,y];break}}else if(v&&(f=e,c=f[q]||(f[q]={}),h=c[f.uniqueID]||(c[f.uniqueID]={}),u=h[t]||[],p=u[0]===X&&u[1],y=p),y===!1)for(;(f=++p&&f&&f[_]||(y=p=0)||d.pop())&&((a?f.nodeName.toLowerCase()!==g:1!==f.nodeType)||!++y||(v&&(c=f[q]||(f[q]={}),h=c[f.uniqueID]||(c[f.uniqueID]={}),h[t]=[X,y]),f!==e)););return y-=r,y===n||y%n===0&&y/n>=0}}},PSEUDO:function(t,i){var r,s=w.pseudos[t]||w.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return s[q]?s(i):s.length>1?(r=[t,t,"",i],w.setFilters.hasOwnProperty(t.toLowerCase())?n(function(t,e){for(var n,r=s(t,i),o=r.length;o--;)n=tt(t,r[o]),t[n]=!(e[n]=r[o])}):function(t){return s(t,0,r)}):s}},pseudos:{not:n(function(t){var e=[],i=[],r=S(t.replace(at,"$1"));return r[q]?n(function(t,e,i,n){for(var s,o=r(t,null,n,[]),a=t.length;a--;)(s=o[a])&&(t[a]=!(e[a]=s))}):function(t,n,s){return e[0]=t,r(e,null,s,i),e[0]=null,!i.pop()}}),has:n(function(t){return function(i){return e(t,i).length>0}}),contains:n(function(t){return t=t.replace(yt,xt),function(e){return(e.textContent||e.innerText||P(e)).indexOf(t)>-1}}),lang:n(function(t){return ft.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(yt,xt).toLowerCase(),function(e){var i;do if(i=F?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return i=i.toLowerCase(),i===t||0===i.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===M},focus:function(t){return t===E.activeElement&&(!E.hasFocus||E.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:u(!1),disabled:u(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!w.pseudos.empty(t)},header:function(t){return _t.test(t.nodeName)},input:function(t){return dt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:h(function(){return[0]}),last:h(function(t,e){return[e-1]}),eq:h(function(t,e,i){return[i<0?i+e:i]}),even:h(function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t}),odd:h(function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t}),lt:h(function(t,e,i){for(var n=i<0?i+e:i;--n>=0;)t.push(n);return t}),gt:h(function(t,e,i){for(var n=i<0?i+e:i;++n<e;)t.push(n);return t})}},w.pseudos.nth=w.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[b]=a(b);for(b in{submit:!0,reset:!0})w.pseudos[b]=l(b);return f.prototype=w.filters=w.pseudos,w.setFilters=new f,C=e.tokenize=function(t,i){var n,r,s,o,a,l,u,h=Y[t+" "];if(h)return i?0:h.slice(0);for(a=t,l=[],u=w.preFilter;a;){n&&!(r=lt.exec(a))||(r&&(a=a.slice(r[0].length)||a),l.push(s=[])),n=!1,(r=ut.exec(a))&&(n=r.shift(),s.push({value:n,type:r[0].replace(at," ")}),a=a.slice(n.length));for(o in w.filter)!(r=pt[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),s.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return i?a.length:a?e.error(t):Y(t,l).slice(0)},S=e.compile=function(t,e){var i,n=[],r=[],s=$[t+" "];if(!s){for(e||(e=C(t)),i=e.length;i--;)s=y(e[i]),s[q]?n.push(s):r.push(s);s=$(t,x(r,n)),s.selector=t}return s},O=e.select=function(t,e,i,n){var r,s,o,a,l,u="function"==typeof t&&t,h=!n&&C(t=u.selector||t);if(i=i||[],1===h.length){if(s=h[0]=h[0].slice(0),s.length>2&&"ID"===(o=s[0]).type&&9===e.nodeType&&F&&w.relative[s[1].type]){if(e=(w.find.ID(o.matches[0].replace(yt,xt),e)||[])[0],!e)return i;u&&(e=e.parentNode),t=t.slice(s.shift().value.length)}for(r=pt.needsContext.test(t)?0:s.length;r--&&(o=s[r],!w.relative[a=o.type]);)if((l=w.find[a])&&(n=l(o.matches[0].replace(yt,xt),vt.test(s[0].type)&&c(e.parentNode)||e))){if(s.splice(r,1),t=n.length&&p(s),!t)return K.apply(i,n),i;break}}return(u||S(t,h))(n,e,!F,i,!e||vt.test(t)&&c(e.parentNode)||e),i},T.sortStable=q.split("").sort(U).join("")===q,T.detectDuplicates=!!R,N(),T.sortDetached=r(function(t){return 1&t.compareDocumentPosition(E.createElement("fieldset"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||s("type|href|height|width",function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),T.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||s("value",function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||s(et,function(t,e,i){var n;if(!i)return t[e]===!0?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null}),e}(t);et.find=ot,et.expr=ot.selectors,et.expr[":"]=et.expr.pseudos,et.uniqueSort=et.unique=ot.uniqueSort,et.text=ot.getText,et.isXMLDoc=ot.isXML,et.contains=ot.contains,et.escapeSelector=ot.escape;var at=function(t,e,i){for(var n=[],r=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&et(t).is(i))break;n.push(t)}return n},lt=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},ut=et.expr.match.needsContext,ht=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,ct=/^.[^:#\[\.,]*$/;et.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?et.find.matchesSelector(n,t)?[n]:[]:et.find.matches(t,et.grep(e,function(t){return 1===t.nodeType}))},et.fn.extend({find:function(t){var e,i,n=this.length,r=this;if("string"!=typeof t)return this.pushStack(et(t).filter(function(){for(e=0;e<n;e++)if(et.contains(r[e],this))return!0}));for(i=this.pushStack([]),e=0;e<n;e++)et.find(t,r[e],i);return n>1?et.uniqueSort(i):i},filter:function(t){return this.pushStack(r(this,t||[],!1))},not:function(t){return this.pushStack(r(this,t||[],!0))},is:function(t){return!!r(this,"string"==typeof t&&ut.test(t)?et(t):t||[],!1).length}});var ft,pt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,dt=et.fn.init=function(t,e,i){var n,r;if(!t)return this;if(i=i||ft,"string"==typeof t){if(n="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:pt.exec(t),!n||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof et?e[0]:e,et.merge(this,et.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:X,!0)),ht.test(n[1])&&et.isPlainObject(e))for(n in e)et.isFunction(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return r=X.getElementById(n[2]),r&&(this[0]=r,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):et.isFunction(t)?void 0!==i.ready?i.ready(t):t(et):et.makeArray(t,this)};dt.prototype=et.fn,ft=et(X);var _t=/^(?:parents|prev(?:Until|All))/,mt={children:!0,contents:!0,next:!0,prev:!0};et.fn.extend({has:function(t){var e=et(t,this),i=e.length;return this.filter(function(){for(var t=0;t<i;t++)if(et.contains(this,e[t]))return!0})},closest:function(t,e){var i,n=0,r=this.length,s=[],o="string"!=typeof t&&et(t);if(!ut.test(t))for(;n<r;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(o?o.index(i)>-1:1===i.nodeType&&et.find.matchesSelector(i,t))){s.push(i);break}return this.pushStack(s.length>1?et.uniqueSort(s):s)},index:function(t){return t?"string"==typeof t?U.call(et(t),this[0]):U.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(et.uniqueSort(et.merge(this.get(),et(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),et.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return at(t,"parentNode")},parentsUntil:function(t,e,i){return at(t,"parentNode",i)},next:function(t){return s(t,"nextSibling")},prev:function(t){return s(t,"previousSibling")},nextAll:function(t){return at(t,"nextSibling")},prevAll:function(t){return at(t,"previousSibling")},nextUntil:function(t,e,i){return at(t,"nextSibling",i)},prevUntil:function(t,e,i){return at(t,"previousSibling",i)},siblings:function(t){return lt((t.parentNode||{}).firstChild,t)},children:function(t){return lt(t.firstChild)},contents:function(t){return t.contentDocument||et.merge([],t.childNodes)}},function(t,e){et.fn[t]=function(i,n){var r=et.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(r=et.filter(n,r)),this.length>1&&(mt[t]||et.uniqueSort(r),_t.test(t)&&r.reverse()),this.pushStack(r)}});var gt=/[^\x20\t\r\n\f]+/g;et.Callbacks=function(t){t="string"==typeof t?o(t):et.extend({},t);var e,i,n,r,s=[],a=[],l=-1,u=function(){for(r=t.once,n=e=!0;a.length;l=-1)for(i=a.shift();++l<s.length;)s[l].apply(i[0],i[1])===!1&&t.stopOnFalse&&(l=s.length,i=!1);t.memory||(i=!1),e=!1,r&&(s=i?[]:"")},h={add:function(){return s&&(i&&!e&&(l=s.length-1,a.push(i)),function e(i){et.each(i,function(i,n){et.isFunction(n)?t.unique&&h.has(n)||s.push(n):n&&n.length&&"string"!==et.type(n)&&e(n)})}(arguments),i&&!e&&u()),this},remove:function(){return et.each(arguments,function(t,e){for(var i;(i=et.inArray(e,s,i))>-1;)s.splice(i,1),i<=l&&l--}),this},has:function(t){return t?et.inArray(t,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return r=a=[],s=i="",this},disabled:function(){return!s},lock:function(){return r=a=[],i||e||(s=i=""),this},locked:function(){return!!r},fireWith:function(t,i){return r||(i=i||[],i=[t,i.slice?i.slice():i],a.push(i),e||u()),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!n}};return h},et.extend({Deferred:function(e){var i=[["notify","progress",et.Callbacks("memory"),et.Callbacks("memory"),2],["resolve","done",et.Callbacks("once memory"),et.Callbacks("once memory"),0,"resolved"],["reject","fail",et.Callbacks("once memory"),et.Callbacks("once memory"),1,"rejected"]],n="pending",r={state:function(){return n},always:function(){return s.done(arguments).fail(arguments),this},catch:function(t){return r.then(null,t)},pipe:function(){var t=arguments;return et.Deferred(function(e){et.each(i,function(i,n){var r=et.isFunction(t[n[4]])&&t[n[4]];s[n[1]](function(){var t=r&&r.apply(this,arguments);t&&et.isFunction(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[n[0]+"With"](this,r?[t]:arguments)})}),t=null}).promise()},then:function(e,n,r){function s(e,i,n,r){return function(){var u=this,h=arguments,c=function(){var t,c;if(!(e<o)){if(t=n.apply(u,h),t===i.promise())throw new TypeError("Thenable self-resolution");c=t&&("object"==typeof t||"function"==typeof t)&&t.then,et.isFunction(c)?r?c.call(t,s(o,i,a,r),s(o,i,l,r)):(o++,c.call(t,s(o,i,a,r),s(o,i,l,r),s(o,i,a,i.notifyWith))):(n!==a&&(u=void 0,h=[t]),(r||i.resolveWith)(u,h))}},f=r?c:function(){try{c()}catch(t){et.Deferred.exceptionHook&&et.Deferred.exceptionHook(t,f.stackTrace),e+1>=o&&(n!==l&&(u=void 0,h=[t]),i.rejectWith(u,h))}};e?f():(et.Deferred.getStackHook&&(f.stackTrace=et.Deferred.getStackHook()),t.setTimeout(f))}}var o=0;return et.Deferred(function(t){i[0][3].add(s(0,t,et.isFunction(r)?r:a,t.notifyWith)),i[1][3].add(s(0,t,et.isFunction(e)?e:a)),i[2][3].add(s(0,t,et.isFunction(n)?n:l))}).promise()},promise:function(t){return null!=t?et.extend(t,r):r}},s={};return et.each(i,function(t,e){var o=e[2],a=e[5];r[e[1]]=o.add,a&&o.add(function(){n=a},i[3-t][2].disable,i[0][2].lock),o.add(e[3].fire),s[e[0]]=function(){return s[e[0]+"With"](this===s?void 0:this,arguments),this},s[e[0]+"With"]=o.fireWith}),r.promise(s),e&&e.call(s,s),s},when:function(t){var e=arguments.length,i=e,n=Array(i),r=W.call(arguments),s=et.Deferred(),o=function(t){return function(i){n[t]=this,r[t]=arguments.length>1?W.call(arguments):i,--e||s.resolveWith(n,r)}};if(e<=1&&(u(t,s.done(o(i)).resolve,s.reject),"pending"===s.state()||et.isFunction(r[i]&&r[i].then)))return s.then();for(;i--;)u(r[i],o(i),s.reject);return s.promise()}});var vt=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;et.Deferred.exceptionHook=function(e,i){t.console&&t.console.warn&&e&&vt.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,i)},et.readyException=function(e){t.setTimeout(function(){throw e})};var yt=et.Deferred();et.fn.ready=function(t){return yt.then(t).catch(function(t){et.readyException(t)}),this},et.extend({isReady:!1,readyWait:1,holdReady:function(t){t?et.readyWait++:et.ready(!0)},ready:function(t){(t===!0?--et.readyWait:et.isReady)||(et.isReady=!0,t!==!0&&--et.readyWait>0||yt.resolveWith(X,[et]))}}),et.ready.then=yt.then,"complete"===X.readyState||"loading"!==X.readyState&&!X.documentElement.doScroll?t.setTimeout(et.ready):(X.addEventListener("DOMContentLoaded",h),t.addEventListener("load",h));var xt=function(t,e,i,n,r,s,o){var a=0,l=t.length,u=null==i;if("object"===et.type(i)){r=!0;for(a in i)xt(t,e,a,i[a],!0,s,o)}else if(void 0!==n&&(r=!0,et.isFunction(n)||(o=!0),u&&(o?(e.call(t,n),e=null):(u=e,e=function(t,e,i){return u.call(et(t),i)})),e))for(;a<l;a++)e(t[a],i,o?n:n.call(t[a],a,e(t[a],i)));return r?t:u?e.call(t):l?e(t[0],i):s},bt=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};c.uid=1,c.prototype={cache:function(t){var e=t[this.expando];return e||(e={},bt(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,r=this.cache(t);if("string"==typeof e)r[et.camelCase(e)]=i;else for(n in e)r[et.camelCase(n)]=e[n];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][et.camelCase(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n=t[this.expando];if(void 0!==n){if(void 0!==e){et.isArray(e)?e=e.map(et.camelCase):(e=et.camelCase(e),e=e in n?[e]:e.match(gt)||[]),i=e.length;for(;i--;)delete n[e[i]]}(void 0===e||et.isEmptyObject(n))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!et.isEmptyObject(e)}};var Tt=new c,wt=new c,Pt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,kt=/[A-Z]/g;et.extend({hasData:function(t){return wt.hasData(t)||Tt.hasData(t)},data:function(t,e,i){return wt.access(t,e,i)},removeData:function(t,e){wt.remove(t,e)},_data:function(t,e,i){return Tt.access(t,e,i)},_removeData:function(t,e){Tt.remove(t,e)}}),et.fn.extend({data:function(t,e){var i,n,r,s=this[0],o=s&&s.attributes;if(void 0===t){if(this.length&&(r=wt.get(s),1===s.nodeType&&!Tt.get(s,"hasDataAttrs"))){for(i=o.length;i--;)o[i]&&(n=o[i].name,0===n.indexOf("data-")&&(n=et.camelCase(n.slice(5)),p(s,n,r[n])));Tt.set(s,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){wt.set(this,t)}):xt(this,function(e){var i;if(s&&void 0===e){if(i=wt.get(s,t),void 0!==i)return i;if(i=p(s,t),void 0!==i)return i}else this.each(function(){wt.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){wt.remove(this,t)})}}),et.extend({queue:function(t,e,i){var n;if(t)return e=(e||"fx")+"queue",n=Tt.get(t,e),i&&(!n||et.isArray(i)?n=Tt.access(t,e,et.makeArray(i)):n.push(i)),n||[]},dequeue:function(t,e){e=e||"fx";var i=et.queue(t,e),n=i.length,r=i.shift(),s=et._queueHooks(t,e),o=function(){et.dequeue(t,e)};"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===e&&i.unshift("inprogress"),delete s.stop,r.call(t,o,s)),!n&&s&&s.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return Tt.get(t,i)||Tt.access(t,i,{empty:et.Callbacks("once memory").add(function(){Tt.remove(t,[e+"queue",i])})})}}),et.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?et.queue(this[0],t):void 0===e?this:this.each(function(){var i=et.queue(this,t,e);et._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&et.dequeue(this,t)})},dequeue:function(t){return this.each(function(){et.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,r=et.Deferred(),s=this,o=this.length,a=function(){--n||r.resolveWith(s,[s])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";o--;)i=Tt.get(s[o],t+"queueHooks"),i&&i.empty&&(n++,i.empty.add(a));return a(),r.promise(e)}});var Ct=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,St=new RegExp("^(?:([+-])=|)("+Ct+")([a-z%]*)$","i"),Ot=["Top","Right","Bottom","Left"],At=function(t,e){return t=e||t,"none"===t.style.display||""===t.style.display&&et.contains(t.ownerDocument,t)&&"none"===et.css(t,"display")},Dt=function(t,e,i,n){var r,s,o={};for(s in e)o[s]=t.style[s],t.style[s]=e[s];r=i.apply(t,n||[]);for(s in e)t.style[s]=o[s];return r},Rt={};et.fn.extend({show:function(){return m(this,!0)},hide:function(){return m(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){At(this)?et(this).show():et(this).hide()})}});var Nt=/^(?:checkbox|radio)$/i,Et=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Mt=/^$|\/(?:java|ecma)script/i,Ft={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Ft.optgroup=Ft.option,Ft.tbody=Ft.tfoot=Ft.colgroup=Ft.caption=Ft.thead,Ft.th=Ft.td;var Lt=/<|&#?\w+;/;!function(){var t=X.createDocumentFragment(),e=t.appendChild(X.createElement("div")),i=X.createElement("input");i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),e.appendChild(i),J.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",J.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var jt=X.documentElement,It=/^key/,zt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,qt=/^([^.]*)(?:\.(.+)|)/;et.event={global:{},add:function(t,e,i,n,r){var s,o,a,l,u,h,c,f,p,d,_,m=Tt.get(t);if(m)for(i.handler&&(s=i,i=s.handler,r=s.selector),r&&et.find.matchesSelector(jt,r),i.guid||(i.guid=et.guid++),(l=m.events)||(l=m.events={}),(o=m.handle)||(o=m.handle=function(e){return"undefined"!=typeof et&&et.event.triggered!==e.type?et.event.dispatch.apply(t,arguments):void 0}),e=(e||"").match(gt)||[""],u=e.length;u--;)a=qt.exec(e[u])||[],p=_=a[1],d=(a[2]||"").split(".").sort(),p&&(c=et.event.special[p]||{},p=(r?c.delegateType:c.bindType)||p,c=et.event.special[p]||{},h=et.extend({type:p,origType:_,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&et.expr.match.needsContext.test(r),namespace:d.join(".")},s),(f=l[p])||(f=l[p]=[],f.delegateCount=0,c.setup&&c.setup.call(t,n,d,o)!==!1||t.addEventListener&&t.addEventListener(p,o)),c.add&&(c.add.call(t,h),h.handler.guid||(h.handler.guid=i.guid)),r?f.splice(f.delegateCount++,0,h):f.push(h),et.event.global[p]=!0)},remove:function(t,e,i,n,r){var s,o,a,l,u,h,c,f,p,d,_,m=Tt.hasData(t)&&Tt.get(t);if(m&&(l=m.events)){for(e=(e||"").match(gt)||[""],u=e.length;u--;)if(a=qt.exec(e[u])||[],p=_=a[1],d=(a[2]||"").split(".").sort(),p){for(c=et.event.special[p]||{},p=(n?c.delegateType:c.bindType)||p,f=l[p]||[],a=a[2]&&new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=s=f.length;s--;)h=f[s],!r&&_!==h.origType||i&&i.guid!==h.guid||a&&!a.test(h.namespace)||n&&n!==h.selector&&("**"!==n||!h.selector)||(f.splice(s,1),h.selector&&f.delegateCount--,c.remove&&c.remove.call(t,h));o&&!f.length&&(c.teardown&&c.teardown.call(t,d,m.handle)!==!1||et.removeEvent(t,p,m.handle),delete l[p])}else for(p in l)et.event.remove(t,p+e[u],i,n,!0);et.isEmptyObject(l)&&Tt.remove(t,"handle events")}},dispatch:function(t){var e,i,n,r,s,o,a=et.event.fix(t),l=new Array(arguments.length),u=(Tt.get(this,"events")||{})[a.type]||[],h=et.event.special[a.type]||{};for(l[0]=a,e=1;e<arguments.length;e++)l[e]=arguments[e];if(a.delegateTarget=this,!h.preDispatch||h.preDispatch.call(this,a)!==!1){for(o=et.event.handlers.call(this,a,u),e=0;(r=o[e++])&&!a.isPropagationStopped();)for(a.currentTarget=r.elem,i=0;(s=r.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!a.rnamespace.test(s.namespace)||(a.handleObj=s,a.data=s.data,n=((et.event.special[s.origType]||{}).handle||s.handler).apply(r.elem,l),void 0!==n&&(a.result=n)===!1&&(a.preventDefault(),a.stopPropagation()));return h.postDispatch&&h.postDispatch.call(this,a),a.result}},handlers:function(t,e){var i,n,r,s,o,a=[],l=e.delegateCount,u=t.target;if(l&&u.nodeType&&!("click"===t.type&&t.button>=1))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==t.type||u.disabled!==!0)){for(s=[],o={},i=0;i<l;i++)n=e[i],r=n.selector+" ",void 0===o[r]&&(o[r]=n.needsContext?et(r,this).index(u)>-1:et.find(r,this,null,[u]).length),o[r]&&s.push(n);s.length&&a.push({elem:u,handlers:s})}return u=this,l<e.length&&a.push({elem:u,handlers:e.slice(l)}),a},addProp:function(t,e){Object.defineProperty(et.Event.prototype,t,{enumerable:!0,configurable:!0,get:et.isFunction(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[et.expando]?t:new et.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==T()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===T()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&et.nodeName(this,"input"))return this.click(),!1},_default:function(t){return et.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},et.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},et.Event=function(t,e){return this instanceof et.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?x:b,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&et.extend(this,e),this.timeStamp=t&&t.timeStamp||et.now(),void(this[et.expando]=!0)):new et.Event(t,e)},et.Event.prototype={constructor:et.Event,isDefaultPrevented:b,isPropagationStopped:b,isImmediatePropagationStopped:b,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=x,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=x,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=x,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},et.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,
screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&It.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&zt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},et.event.addProp),et.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){et.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=this,r=t.relatedTarget,s=t.handleObj;return r&&(r===n||et.contains(n,r))||(t.type=s.origType,i=s.handler.apply(this,arguments),t.type=e),i}}}),et.fn.extend({on:function(t,e,i,n){return w(this,t,e,i,n)},one:function(t,e,i,n){return w(this,t,e,i,n,1)},off:function(t,e,i){var n,r;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,et(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return e!==!1&&"function"!=typeof e||(i=e,e=void 0),i===!1&&(i=b),this.each(function(){et.event.remove(this,t,i,e)})}});var Bt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Xt=/<script|<style|<link/i,Ht=/checked\s*(?:[^=]|=\s*.checked.)/i,Wt=/^true\/(.*)/,Yt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;et.extend({htmlPrefilter:function(t){return t.replace(Bt,"<$1></$2>")},clone:function(t,e,i){var n,r,s,o,a=t.cloneNode(!0),l=et.contains(t.ownerDocument,t);if(!(J.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||et.isXMLDoc(t)))for(o=g(a),s=g(t),n=0,r=s.length;n<r;n++)O(s[n],o[n]);if(e)if(i)for(s=s||g(t),o=o||g(a),n=0,r=s.length;n<r;n++)S(s[n],o[n]);else S(t,a);return o=g(a,"script"),o.length>0&&v(o,!l&&g(t,"script")),a},cleanData:function(t){for(var e,i,n,r=et.event.special,s=0;void 0!==(i=t[s]);s++)if(bt(i)){if(e=i[Tt.expando]){if(e.events)for(n in e.events)r[n]?et.event.remove(i,n):et.removeEvent(i,n,e.handle);i[Tt.expando]=void 0}i[wt.expando]&&(i[wt.expando]=void 0)}}}),et.fn.extend({detach:function(t){return D(this,t,!0)},remove:function(t){return D(this,t)},text:function(t){return xt(this,function(t){return void 0===t?et.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=P(this,t);e.appendChild(t)}})},prepend:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=P(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(et.cleanData(g(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return et.clone(this,t,e)})},html:function(t){return xt(this,function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Xt.test(t)&&!Ft[(Et.exec(t)||["",""])[1].toLowerCase()]){t=et.htmlPrefilter(t);try{for(;i<n;i++)e=this[i]||{},1===e.nodeType&&(et.cleanData(g(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return A(this,arguments,function(e){var i=this.parentNode;et.inArray(this,t)<0&&(et.cleanData(g(this)),i&&i.replaceChild(e,this))},t)}}),et.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){et.fn[t]=function(t){for(var i,n=[],r=et(t),s=r.length-1,o=0;o<=s;o++)i=o===s?this:this.clone(!0),et(r[o])[e](i),$.apply(n,i.get());return this.pushStack(n)}});var $t=/^margin/,Ut=new RegExp("^("+Ct+")(?!px)[a-z%]+$","i"),Vt=function(e){var i=e.ownerDocument.defaultView;return i&&i.opener||(i=t),i.getComputedStyle(e)};!function(){function e(){if(a){a.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",a.innerHTML="",jt.appendChild(o);var e=t.getComputedStyle(a);i="1%"!==e.top,s="2px"===e.marginLeft,n="4px"===e.width,a.style.marginRight="50%",r="4px"===e.marginRight,jt.removeChild(o),a=null}}var i,n,r,s,o=X.createElement("div"),a=X.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",J.clearCloneStyle="content-box"===a.style.backgroundClip,o.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",o.appendChild(a),et.extend(J,{pixelPosition:function(){return e(),i},boxSizingReliable:function(){return e(),n},pixelMarginRight:function(){return e(),r},reliableMarginLeft:function(){return e(),s}}))}();var Zt=/^(none|table(?!-c[ea]).+)/,Gt={position:"absolute",visibility:"hidden",display:"block"},Qt={letterSpacing:"0",fontWeight:"400"},Kt=["Webkit","Moz","ms"],Jt=X.createElement("div").style;et.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=R(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,s,o,a=et.camelCase(e),l=t.style;return e=et.cssProps[a]||(et.cssProps[a]=E(a)||a),o=et.cssHooks[e]||et.cssHooks[a],void 0===i?o&&"get"in o&&void 0!==(r=o.get(t,!1,n))?r:l[e]:(s=typeof i,"string"===s&&(r=St.exec(i))&&r[1]&&(i=d(t,e,r),s="number"),void(null!=i&&i===i&&("number"===s&&(i+=r&&r[3]||(et.cssNumber[a]?"":"px")),J.clearCloneStyle||""!==i||0!==e.indexOf("background")||(l[e]="inherit"),o&&"set"in o&&void 0===(i=o.set(t,i,n))||(l[e]=i))))}},css:function(t,e,i,n){var r,s,o,a=et.camelCase(e);return e=et.cssProps[a]||(et.cssProps[a]=E(a)||a),o=et.cssHooks[e]||et.cssHooks[a],o&&"get"in o&&(r=o.get(t,!0,i)),void 0===r&&(r=R(t,e,n)),"normal"===r&&e in Qt&&(r=Qt[e]),""===i||i?(s=parseFloat(r),i===!0||isFinite(s)?s||0:r):r}}),et.each(["height","width"],function(t,e){et.cssHooks[e]={get:function(t,i,n){if(i)return!Zt.test(et.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?L(t,e,n):Dt(t,Gt,function(){return L(t,e,n)})},set:function(t,i,n){var r,s=n&&Vt(t),o=n&&F(t,e,n,"border-box"===et.css(t,"boxSizing",!1,s),s);return o&&(r=St.exec(i))&&"px"!==(r[3]||"px")&&(t.style[e]=i,i=et.css(t,e)),M(t,i,o)}}}),et.cssHooks.marginLeft=N(J.reliableMarginLeft,function(t,e){if(e)return(parseFloat(R(t,"marginLeft"))||t.getBoundingClientRect().left-Dt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),et.each({margin:"",padding:"",border:"Width"},function(t,e){et.cssHooks[t+e]={expand:function(i){for(var n=0,r={},s="string"==typeof i?i.split(" "):[i];n<4;n++)r[t+Ot[n]+e]=s[n]||s[n-2]||s[0];return r}},$t.test(t)||(et.cssHooks[t+e].set=M)}),et.fn.extend({css:function(t,e){return xt(this,function(t,e,i){var n,r,s={},o=0;if(et.isArray(e)){for(n=Vt(t),r=e.length;o<r;o++)s[e[o]]=et.css(t,e[o],!1,n);return s}return void 0!==i?et.style(t,e,i):et.css(t,e)},t,e,arguments.length>1)}}),et.fn.delay=function(e,i){return e=et.fx?et.fx.speeds[e]||e:e,i=i||"fx",this.queue(i,function(i,n){var r=t.setTimeout(i,e);n.stop=function(){t.clearTimeout(r)}})},function(){var t=X.createElement("input"),e=X.createElement("select"),i=e.appendChild(X.createElement("option"));t.type="checkbox",J.checkOn=""!==t.value,J.optSelected=i.selected,t=X.createElement("input"),t.value="t",t.type="radio",J.radioValue="t"===t.value}();var te,ee=et.expr.attrHandle;et.fn.extend({attr:function(t,e){return xt(this,et.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){et.removeAttr(this,t)})}}),et.extend({attr:function(t,e,i){var n,r,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return"undefined"==typeof t.getAttribute?et.prop(t,e,i):(1===s&&et.isXMLDoc(t)||(r=et.attrHooks[e.toLowerCase()]||(et.expr.match.bool.test(e)?te:void 0)),void 0!==i?null===i?void et.removeAttr(t,e):r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:(t.setAttribute(e,i+""),i):r&&"get"in r&&null!==(n=r.get(t,e))?n:(n=et.find.attr(t,e),null==n?void 0:n))},attrHooks:{type:{set:function(t,e){if(!J.radioValue&&"radio"===e&&et.nodeName(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n=0,r=e&&e.match(gt);if(r&&1===t.nodeType)for(;i=r[n++];)t.removeAttribute(i)}}),te={set:function(t,e,i){return e===!1?et.removeAttr(t,i):t.setAttribute(i,i),i}},et.each(et.expr.match.bool.source.match(/\w+/g),function(t,e){var i=ee[e]||et.find.attr;ee[e]=function(t,e,n){var r,s,o=e.toLowerCase();return n||(s=ee[o],ee[o]=r,r=null!=i(t,e,n)?o:null,ee[o]=s),r}});var ie=/^(?:input|select|textarea|button)$/i,ne=/^(?:a|area)$/i;et.fn.extend({prop:function(t,e){return xt(this,et.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[et.propFix[t]||t]})}}),et.extend({prop:function(t,e,i){var n,r,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&et.isXMLDoc(t)||(e=et.propFix[e]||e,r=et.propHooks[e]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:t[e]=i:r&&"get"in r&&null!==(n=r.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=et.find.attr(t,"tabindex");return e?parseInt(e,10):ie.test(t.nodeName)||ne.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),J.optSelected||(et.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),et.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){et.propFix[this.toLowerCase()]=this}),et.fn.extend({addClass:function(t){var e,i,n,r,s,o,a,l=0;if(et.isFunction(t))return this.each(function(e){et(this).addClass(t.call(this,e,I(this)))});if("string"==typeof t&&t)for(e=t.match(gt)||[];i=this[l++];)if(r=I(i),n=1===i.nodeType&&" "+j(r)+" "){for(o=0;s=e[o++];)n.indexOf(" "+s+" ")<0&&(n+=s+" ");a=j(n),r!==a&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,n,r,s,o,a,l=0;if(et.isFunction(t))return this.each(function(e){et(this).removeClass(t.call(this,e,I(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(gt)||[];i=this[l++];)if(r=I(i),n=1===i.nodeType&&" "+j(r)+" "){for(o=0;s=e[o++];)for(;n.indexOf(" "+s+" ")>-1;)n=n.replace(" "+s+" "," ");a=j(n),r!==a&&i.setAttribute("class",a)}return this},toggleClass:function(t,e){var i=typeof t;return"boolean"==typeof e&&"string"===i?e?this.addClass(t):this.removeClass(t):et.isFunction(t)?this.each(function(i){et(this).toggleClass(t.call(this,i,I(this),e),e)}):this.each(function(){var e,n,r,s;if("string"===i)for(n=0,r=et(this),s=t.match(gt)||[];e=s[n++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else void 0!==t&&"boolean"!==i||(e=I(this),e&&Tt.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||t===!1?"":Tt.get(this,"__className__")||""))})},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&(" "+j(I(i))+" ").indexOf(e)>-1)return!0;return!1}});var re=/\r/g;et.fn.extend({val:function(t){var e,i,n,r=this[0];return arguments.length?(n=et.isFunction(t),this.each(function(i){var r;1===this.nodeType&&(r=n?t.call(this,i,et(this).val()):t,null==r?r="":"number"==typeof r?r+="":et.isArray(r)&&(r=et.map(r,function(t){return null==t?"":t+""})),e=et.valHooks[this.type]||et.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))})):r?(e=et.valHooks[r.type]||et.valHooks[r.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(i=e.get(r,"value"))?i:(i=r.value,"string"==typeof i?i.replace(re,""):null==i?"":i)):void 0}}),et.extend({valHooks:{option:{get:function(t){var e=et.find.attr(t,"value");return null!=e?e:j(et.text(t))}},select:{get:function(t){var e,i,n,r=t.options,s=t.selectedIndex,o="select-one"===t.type,a=o?null:[],l=o?s+1:r.length;for(n=s<0?l:o?s:0;n<l;n++)if(i=r[n],(i.selected||n===s)&&!i.disabled&&(!i.parentNode.disabled||!et.nodeName(i.parentNode,"optgroup"))){if(e=et(i).val(),o)return e;a.push(e)}return a},set:function(t,e){for(var i,n,r=t.options,s=et.makeArray(e),o=r.length;o--;)n=r[o],(n.selected=et.inArray(et.valHooks.option.get(n),s)>-1)&&(i=!0);return i||(t.selectedIndex=-1),s}}}}),et.each(["radio","checkbox"],function(){et.valHooks[this]={set:function(t,e){if(et.isArray(e))return t.checked=et.inArray(et(t).val(),e)>-1}},J.checkOn||(et.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var se=/^(?:focusinfocus|focusoutblur)$/;et.extend(et.event,{trigger:function(e,i,n,r){var s,o,a,l,u,h,c,f=[n||X],p=G.call(e,"type")?e.type:e,d=G.call(e,"namespace")?e.namespace.split("."):[];if(o=a=n=n||X,3!==n.nodeType&&8!==n.nodeType&&!se.test(p+et.event.triggered)&&(p.indexOf(".")>-1&&(d=p.split("."),p=d.shift(),d.sort()),u=p.indexOf(":")<0&&"on"+p,e=e[et.expando]?e:new et.Event(p,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=d.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),i=null==i?[e]:et.makeArray(i,[e]),c=et.event.special[p]||{},r||!c.trigger||c.trigger.apply(n,i)!==!1)){if(!r&&!c.noBubble&&!et.isWindow(n)){for(l=c.delegateType||p,se.test(l+p)||(o=o.parentNode);o;o=o.parentNode)f.push(o),a=o;a===(n.ownerDocument||X)&&f.push(a.defaultView||a.parentWindow||t)}for(s=0;(o=f[s++])&&!e.isPropagationStopped();)e.type=s>1?l:c.bindType||p,h=(Tt.get(o,"events")||{})[e.type]&&Tt.get(o,"handle"),h&&h.apply(o,i),h=u&&o[u],h&&h.apply&&bt(o)&&(e.result=h.apply(o,i),e.result===!1&&e.preventDefault());return e.type=p,r||e.isDefaultPrevented()||c._default&&c._default.apply(f.pop(),i)!==!1||!bt(n)||u&&et.isFunction(n[p])&&!et.isWindow(n)&&(a=n[u],a&&(n[u]=null),et.event.triggered=p,n[p](),et.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(t,e,i){var n=et.extend(new et.Event,i,{type:t,isSimulated:!0});et.event.trigger(n,null,e)}}),et.fn.extend({trigger:function(t,e){return this.each(function(){et.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];if(i)return et.event.trigger(t,e,i,!0)}}),et.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,e){et.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),et.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),J.focusin="onfocusin"in t,J.focusin||et.each({focus:"focusin",blur:"focusout"},function(t,e){var i=function(t){et.event.simulate(e,t.target,et.event.fix(t))};et.event.special[e]={setup:function(){var n=this.ownerDocument||this,r=Tt.access(n,e);r||n.addEventListener(t,i,!0),Tt.access(n,e,(r||0)+1)},teardown:function(){var n=this.ownerDocument||this,r=Tt.access(n,e)-1;r?Tt.access(n,e,r):(n.removeEventListener(t,i,!0),Tt.remove(n,e))}}});var oe=/\[\]$/,ae=/\r?\n/g,le=/^(?:submit|button|image|reset|file)$/i,ue=/^(?:input|select|textarea|keygen)/i;et.param=function(t,e){var i,n=[],r=function(t,e){var i=et.isFunction(e)?e():e;n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(et.isArray(t)||t.jquery&&!et.isPlainObject(t))et.each(t,function(){r(this.name,this.value)});else for(i in t)z(i,t[i],e,r);return n.join("&")},et.fn.extend({serialize:function(){return et.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=et.prop(this,"elements");return t?et.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!et(this).is(":disabled")&&ue.test(this.nodeName)&&!le.test(t)&&(this.checked||!Nt.test(t))}).map(function(t,e){var i=et(this).val();return null==i?null:et.isArray(i)?et.map(i,function(t){return{name:e.name,value:t.replace(ae,"\r\n")}}):{name:e.name,value:i.replace(ae,"\r\n")}}).get()}}),et.fn.extend({wrapAll:function(t){var e;return this[0]&&(et.isFunction(t)&&(t=t.call(this[0])),e=et(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(t){return et.isFunction(t)?this.each(function(e){et(this).wrapInner(t.call(this,e))}):this.each(function(){var e=et(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=et.isFunction(t);return this.each(function(i){et(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(t){return this.parent(t).not("body").each(function(){et(this).replaceWith(this.childNodes)}),this}}),et.expr.pseudos.hidden=function(t){return!et.expr.pseudos.visible(t)},et.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},J.createHTMLDocument=function(){var t=X.implementation.createHTMLDocument("").body;return t.innerHTML="<form></form><form></form>",2===t.childNodes.length}(),et.parseHTML=function(t,e,i){if("string"!=typeof t)return[];"boolean"==typeof e&&(i=e,e=!1);var n,r,s;return e||(J.createHTMLDocument?(e=X.implementation.createHTMLDocument(""),n=e.createElement("base"),n.href=X.location.href,e.head.appendChild(n)):e=X),r=ht.exec(t),s=!i&&[],r?[e.createElement(r[1])]:(r=y([t],e,s),s&&s.length&&et(s).remove(),et.merge([],r.childNodes))},et.offset={setOffset:function(t,e,i){var n,r,s,o,a,l,u,h=et.css(t,"position"),c=et(t),f={};"static"===h&&(t.style.position="relative"),a=c.offset(),s=et.css(t,"top"),l=et.css(t,"left"),u=("absolute"===h||"fixed"===h)&&(s+l).indexOf("auto")>-1,u?(n=c.position(),o=n.top,r=n.left):(o=parseFloat(s)||0,r=parseFloat(l)||0),et.isFunction(e)&&(e=e.call(t,i,et.extend({},a))),null!=e.top&&(f.top=e.top-a.top+o),null!=e.left&&(f.left=e.left-a.left+r),"using"in e?e.using.call(t,f):c.css(f)}},et.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){et.offset.setOffset(this,t,e)});var e,i,n,r,s=this[0];return s?s.getClientRects().length?(n=s.getBoundingClientRect(),n.width||n.height?(r=s.ownerDocument,i=q(r),e=r.documentElement,{top:n.top+i.pageYOffset-e.clientTop,left:n.left+i.pageXOffset-e.clientLeft}):n):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,i=this[0],n={top:0,left:0};return"fixed"===et.css(i,"position")?e=i.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),et.nodeName(t[0],"html")||(n=t.offset()),n={top:n.top+et.css(t[0],"borderTopWidth",!0),left:n.left+et.css(t[0],"borderLeftWidth",!0)}),{top:e.top-n.top-et.css(i,"marginTop",!0),left:e.left-n.left-et.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===et.css(t,"position");)t=t.offsetParent;return t||jt})}}),et.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var i="pageYOffset"===e;et.fn[t]=function(n){return xt(this,function(t,n,r){var s=q(t);return void 0===r?s?s[e]:t[n]:void(s?s.scrollTo(i?s.pageXOffset:r,i?r:s.pageYOffset):t[n]=r)},t,n,arguments.length)}}),et.each(["top","left"],function(t,e){et.cssHooks[e]=N(J.pixelPosition,function(t,i){if(i)return i=R(t,e),Ut.test(i)?et(t).position()[e]+"px":i})}),et.each({Height:"height",Width:"width"},function(t,e){et.each({padding:"inner"+t,content:e,"":"outer"+t},function(i,n){et.fn[n]=function(r,s){var o=arguments.length&&(i||"boolean"!=typeof r),a=i||(r===!0||s===!0?"margin":"border");return xt(this,function(e,i,r){var s;return et.isWindow(e)?0===n.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(s=e.documentElement,Math.max(e.body["scroll"+t],s["scroll"+t],e.body["offset"+t],s["offset"+t],s["client"+t])):void 0===r?et.css(e,i,a):et.style(e,i,r,a)},e,o?r:void 0,o)}})}),"function"==typeof define&&define.amd&&define("jquery",[],function(){return et});var he=t.jQuery,ce=t.$;return et.noConflict=function(e){return t.$===et&&(t.$=ce),e&&t.jQuery===et&&(t.jQuery=he),et},e||(t.jQuery=t.$=et),et})},{}],3:[function(t,e,i){"use strict";var n=t("./libs/jquery/dist/jquery.slim.min.js"),r=t("./libs/gsap/src/uncompressed/TweenMax.js");n(function(){function e(){p.hasClass("on")||(p.addClass("on"),r.to(d,.3,{opacity:1}),r.set(_,{opacity:0}))}function i(){p.hasClass("on")&&(p.removeClass("on"),r.to(d,.3,{opacity:0}),r.set(_,{opacity:1}))}window.requestAnimFrame=t("./requestAnimFrame.js");var s,o,a,l=t("./throttle.js"),u=n(window).outerWidth(),h=n(window).height(),c=n(document).height(),f=(n("body"),n("#header")),p=n("#logo"),d=p.find("#logo-o"),_=p.find("#logo-o1");f.on("mouseenter",i).on("mouseleave",function(){s>10&&e()}),n(document).on("scroll",l(function(){s=n(document).scrollTop(),o=(s-10)/(c-h),a=353*o,s>10?(e(),r.set(d,{x:a+"px"})):i()},10)),n(window).on("resize",l(function(){u=n(window).outerWidth(),h=n(window).height(),c=n(document).height()},60))})},{"./libs/gsap/src/uncompressed/TweenMax.js":1,"./libs/jquery/dist/jquery.slim.min.js":2,"./requestAnimFrame.js":4,"./throttle.js":5}],4:[function(t,e,i){e.exports=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){window.setTimeout(t,1e3/60)}}()},{}],5:[function(t,e,i){e.exports=function(t,e){var i,n;return function(){var r=this,s=+new Date,o=arguments;i&&s<i+e?(clearTimeout(n),n=setTimeout(function(){i=s,t.apply(r,o)},e)):(i=s,t.apply(r,o))}}},{}]},{},[3]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvbGlicy9nc2FwL3NyYy91bmNvbXByZXNzZWQvVHdlZW5NYXguanMiLCJzcmMvanMvbGlicy9qcXVlcnkvZGlzdC9qcXVlcnkuc2xpbS5taW4uanMiLCJzcmMvanMvbWFpbi5qcyIsInNyYy9qcy9yZXF1ZXN0QW5pbUZyYW1lLmpzIiwic3JjL2pzL3Rocm90dGxlLmpzIl0sIm5hbWVzIjpbImUiLCJ0IiwibiIsInIiLCJzIiwibyIsInUiLCJhIiwicmVxdWlyZSIsImkiLCJmIiwiRXJyb3IiLCJjb2RlIiwibCIsImV4cG9ydHMiLCJjYWxsIiwibGVuZ3RoIiwiMSIsIm1vZHVsZSIsIl9nc1Njb3BlIiwiZ2xvYmFsIiwidGhpcyIsIndpbmRvdyIsIl9nc1F1ZXVlIiwicHVzaCIsIl9nc0RlZmluZSIsIkFuaW1hdGlvbiIsIlNpbXBsZVRpbWVsaW5lIiwiVHdlZW5MaXRlIiwiX3NsaWNlIiwiYiIsIl9hcHBseUN5Y2xlIiwidmFycyIsInRhcmdldHMiLCJwIiwidmFsIiwiYWx0IiwiY3ljbGUiLCJUd2Vlbk1heCIsInRhcmdldCIsImR1cmF0aW9uIiwiX2N5Y2xlIiwiX3lveW8iLCJ5b3lvIiwiX3JlcGVhdCIsInJlcGVhdCIsIl9yZXBlYXREZWxheSIsInJlcGVhdERlbGF5IiwiX2RpcnR5IiwicmVuZGVyIiwicHJvdG90eXBlIiwiX3RpbnlOdW0iLCJUd2VlbkxpdGVJbnRlcm5hbHMiLCJfaW50ZXJuYWxzIiwiX2lzU2VsZWN0b3IiLCJpc1NlbGVjdG9yIiwiX2lzQXJyYXkiLCJpc0FycmF5IiwidG8iLCJfYmxhbmtBcnJheSIsInZlcnNpb24iLCJjb25zdHJ1Y3RvciIsImtpbGwiLCJfZ2MiLCJraWxsVHdlZW5zT2YiLCJraWxsRGVsYXllZENhbGxzVG8iLCJnZXRUd2VlbnNPZiIsImxhZ1Ntb290aGluZyIsInRpY2tlciIsImludmFsaWRhdGUiLCJfdW5jYWNoZSIsInVwZGF0ZVRvIiwicmVzZXREdXJhdGlvbiIsImN1clJhdGlvIiwicmF0aW8iLCJpbW1lZGlhdGUiLCJpbW1lZGlhdGVSZW5kZXIiLCJfc3RhcnRUaW1lIiwiX3RpbWVsaW5lIiwiX3RpbWUiLCJfZW5hYmxlZCIsImluc2VydCIsIl9kZWxheSIsIl9pbml0dGVkIiwiX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQiLCJfZmlyc3RQVCIsIl9vblBsdWdpbkV2ZW50IiwiX2R1cmF0aW9uIiwicHJldlRpbWUiLCJfdG90YWxUaW1lIiwiX2luaXQiLCJlbmRWYWx1ZSIsImludiIsInB0IiwiYyIsIl9uZXh0IiwidGltZSIsInN1cHByZXNzRXZlbnRzIiwiZm9yY2UiLCJpc0NvbXBsZXRlIiwiY2FsbGJhY2siLCJjeWNsZUR1cmF0aW9uIiwidHlwZSIsInBvdyIsInJhd1ByZXZUaW1lIiwidG90YWxEdXIiLCJ0b3RhbER1cmF0aW9uIiwiX3RvdGFsRHVyYXRpb24iLCJwcmV2VG90YWxUaW1lIiwicHJldkN5Y2xlIiwicHJldlJhd1ByZXZUaW1lIiwiX3Jhd1ByZXZUaW1lIiwiX2Vhc2UiLCJfY2FsY0VuZCIsImdldFJhdGlvIiwiX3JldmVyc2VkIiwiYXV0b1JlbW92ZUNoaWxkcmVuIiwibGF6eSIsImRhdGEiLCJfYWN0aXZlIiwiX2Vhc2VUeXBlIiwiX2Vhc2VQb3dlciIsIl9vblVwZGF0ZSIsIl9jYWxsYmFjayIsImxhenlUd2VlbnMiLCJfbGF6eSIsIl9wYXVzZWQiLCJfc3RhcnRBdCIsIm9uU3RhcnQiLCJvblJlcGVhdCIsImZyb20iLCJydW5CYWNrd2FyZHMiLCJmcm9tVG8iLCJmcm9tVmFycyIsInRvVmFycyIsInN0YXJ0QXQiLCJzdGFnZ2VyVG8iLCJhbGxUbyIsInN0YWdnZXIiLCJvbkNvbXBsZXRlQWxsIiwib25Db21wbGV0ZUFsbFBhcmFtcyIsIm9uQ29tcGxldGVBbGxTY29wZSIsImNvcHkiLCJkZWxheSIsImZpbmFsQ29tcGxldGUiLCJvbkNvbXBsZXRlIiwiYXBwbHkiLCJvbkNvbXBsZXRlU2NvcGUiLCJhcmd1bWVudHMiLCJjYWxsYmFja1Njb3BlIiwiZnJvbUN5Y2xlIiwic2VsZWN0b3IiLCJyZXZlcnNlIiwic3RhZ2dlckZyb20iLCJhbGxGcm9tIiwic3RhZ2dlckZyb21UbyIsImFsbEZyb21UbyIsImRlbGF5ZWRDYWxsIiwicGFyYW1zIiwic2NvcGUiLCJ1c2VGcmFtZXMiLCJvbkNvbXBsZXRlUGFyYW1zIiwib25SZXZlcnNlQ29tcGxldGUiLCJvblJldmVyc2VDb21wbGV0ZVBhcmFtcyIsIm92ZXJ3cml0ZSIsInNldCIsImlzVHdlZW5pbmciLCJfZ2V0Q2hpbGRyZW5PZiIsInRpbWVsaW5lIiwiaW5jbHVkZVRpbWVsaW5lcyIsImNudCIsInR3ZWVuIiwiX2ZpcnN0IiwiY29uY2F0IiwiZ2V0QWxsVHdlZW5zIiwiX3Jvb3RUaW1lbGluZSIsIl9yb290RnJhbWVzVGltZWxpbmUiLCJraWxsQWxsIiwiY29tcGxldGUiLCJ0d2VlbnMiLCJkZWxheWVkQ2FsbHMiLCJ0aW1lbGluZXMiLCJpc0RDIiwiYWxsVHJ1ZSIsInRvdGFsVGltZSIsImtpbGxDaGlsZFR3ZWVuc09mIiwicGFyZW50IiwiY3VyUGFyZW50IiwidGwiLCJ0d2Vlbkxvb2t1cCIsInBhcmVudE5vZGUiLCJfY2hhbmdlUGF1c2UiLCJwYXVzZSIsInBhdXNlZCIsInBhdXNlQWxsIiwicmVzdW1lQWxsIiwiZ2xvYmFsVGltZVNjYWxlIiwidmFsdWUiLCJfdGltZVNjYWxlIiwiZnJhbWUiLCJwcm9ncmVzcyIsInRvdGFsUHJvZ3Jlc3MiLCJUaW1lbGluZUxpdGUiLCJfbGFiZWxzIiwic21vb3RoQ2hpbGRUaW1pbmciLCJfc29ydENoaWxkcmVuIiwib25VcGRhdGUiLCJ2Iiwiam9pbiIsImluZGV4T2YiLCJfc3dhcFNlbGZJblBhcmFtcyIsImFkZCIsImFsaWduIiwiX2xhenlUd2VlbnMiLCJfbGF6eVJlbmRlciIsImxhenlSZW5kZXIiLCJfZ2xvYmFscyIsImdsb2JhbHMiLCJfY29weSIsIl9wYXVzZUNhbGxiYWNrIiwicGF1c2VDYWxsYmFjayIsIl9mb3JjaW5nUGxheWhlYWQiLCJfaGFzUGF1c2UiLCJwb3NpdGlvbiIsIkVuZ2luZSIsIl9wYXJzZVRpbWVPckxhYmVsIiwiZXhwb3J0Um9vdCIsImlnbm9yZURlbGF5ZWRDYWxscyIsIm5leHQiLCJyb290IiwiX3JlbW92ZSIsImN1clRpbWUiLCJjaGlsZCIsImJlZm9yZVJhd1RpbWUiLCJBcnJheSIsImFkZExhYmVsIiwicmF3VGltZSIsInJlbW92ZSIsIl9wYXVzZVRpbWUiLCJyZW1vdmVMYWJlbCIsInNraXBEaXNhYmxlIiwibGFzdCIsIl9sYXN0IiwiYXBwZW5kIiwib2Zmc2V0T3JMYWJlbCIsImluc2VydE11bHRpcGxlIiwiYXBwZW5kTXVsdGlwbGUiLCJsYWJlbCIsImFkZFBhdXNlIiwiZ2V0TGFiZWxUaW1lIiwidGltZU9yTGFiZWwiLCJhcHBlbmRJZkFic2VudCIsImlnbm9yZSIsImlzTmFOIiwicGFyc2VJbnQiLCJjaGFyQXQiLCJOdW1iZXIiLCJzdWJzdHIiLCJzZWVrIiwic3RvcCIsImdvdG9BbmRQbGF5IiwicGxheSIsImdvdG9BbmRTdG9wIiwiaW50ZXJuYWxGb3JjZSIsInBhdXNlVHdlZW4iLCJwcmV2U3RhcnQiLCJwcmV2VGltZVNjYWxlIiwicHJldlBhdXNlZCIsIl9oYXNQYXVzZWRDaGlsZCIsIl9wcmV2IiwiZW5kVGltZSIsImdldENoaWxkcmVuIiwibmVzdGVkIiwiaWdub3JlQmVmb3JlVGltZSIsImRpc2FibGVkIiwiX2NvbnRhaW5zIiwicmVjZW50IiwiX3JlY2VudCIsInNoaWZ0Q2hpbGRyZW4iLCJhbW91bnQiLCJhZGp1c3RMYWJlbHMiLCJsYWJlbHMiLCJfa2lsbCIsImNoYW5nZWQiLCJjbGVhciIsImVuYWJsZWQiLCJpZ25vcmVUaW1lbGluZSIsInVuY2FwcGVkIiwidGltZVNjYWxlIiwicHJldiIsImVuZCIsIm1heCIsInVzZXNGcmFtZXMiLCJFYXNlIiwiVGltZWxpbmVNYXgiLCJfZWFzZU5vbmUiLCJhZGRDYWxsYmFjayIsInJlbW92ZUNhbGxiYWNrIiwicmVtb3ZlUGF1c2UiLCJ0d2VlblRvIiwiZWFzZSIsIk1hdGgiLCJhYnMiLCJ0d2VlbkZyb21UbyIsImZyb21Qb3NpdGlvbiIsInRvUG9zaXRpb24iLCJkdXIiLCJfbG9ja2VkIiwiYmFja3dhcmRzIiwid3JhcCIsInJlY1RvdGFsVGltZSIsInJlY0N5Y2xlIiwicmVjUmF3UHJldlRpbWUiLCJyZWNUaW1lIiwiZ2V0QWN0aXZlIiwiYWxsIiwiaXNBY3RpdmUiLCJnZXRMYWJlbEFmdGVyIiwiZ2V0TGFiZWxzQXJyYXkiLCJuYW1lIiwiZ2V0TGFiZWxCZWZvcmUiLCJzb3J0IiwiY3VycmVudExhYmVsIiwiX1JBRDJERUciLCJQSSIsIl9yMSIsIl9yMiIsIl9yMyIsIl9jb3JQcm9wcyIsIlNlZ21lbnQiLCJkIiwiZGEiLCJjYSIsImJhIiwiX2NvcnJlbGF0ZSIsImN1YmljVG9RdWFkcmF0aWMiLCJxMSIsInEyIiwicTMiLCJxNCIsIm1hYiIsIm1iYyIsIm1jZCIsIm1hYmMiLCJtYmNkIiwibTgiLCJfY2FsY3VsYXRlQ29udHJvbFBvaW50cyIsImN1cnZpbmVzcyIsInF1YWQiLCJiYXNpYyIsImNvcnJlbGF0ZSIsInAxIiwicDIiLCJwMyIsInNlZyIsIm0xIiwibTIiLCJtbSIsImNwMiIsInFiIiwicjEiLCJyMiIsImlpIiwiY3AxIiwic3BsaWNlIiwiX3BhcnNlQW5jaG9ycyIsInZhbHVlcyIsInByZXBlbmQiLCJ0bXAiLCJiZXppZXJUaHJvdWdoIiwicXVhZHJhdGljIiwiaiIsInNlYW1sZXNzIiwib2JqIiwicHJvcHMiLCJmaXJzdCIsInVuc2hpZnQiLCJzcXJ0IiwiX3BhcnNlQmV6aWVyRGF0YSIsImN1ciIsImluYyIsInNvZnQiLCJfYWRkQ3ViaWNMZW5ndGhzIiwic3RlcHMiLCJyZXNvbHV0aW9uIiwiZDEiLCJiZXoiLCJpbmRleCIsIl9wYXJzZUxlbmd0aERhdGEiLCJsZW5ndGhzIiwidG90YWwiLCJ0aHJlc2hvbGQiLCJzZWdtZW50cyIsImN1ckxTIiwiQmV6aWVyUGx1Z2luIiwicGx1Z2luIiwicHJvcE5hbWUiLCJwcmlvcml0eSIsIkFQSSIsImluaXQiLCJfdGFyZ2V0IiwiX2Z1bmMiLCJfbW9kIiwiX3Byb3BzIiwiX3RpbWVSZXMiLCJ0aW1lUmVzb2x1dGlvbiIsImlzRnVuYyIsInNlY29uZCIsImF1dG9Sb3RhdGUiLCJvcmllbnRUb0JlemllciIsIl9hdXRvUm90YXRlIiwiX292ZXJ3cml0ZVByb3BzIiwicGFyc2VGbG9hdCIsIl9iZXppZXJzIiwiX3NlZ0NvdW50IiwibGQiLCJfbGVuZ3RoIiwiX2xlbmd0aHMiLCJfc2VnbWVudHMiLCJfbDEiLCJfbGkiLCJfczEiLCJfc2kiLCJfbDIiLCJfY3VyU2VnIiwiX3MyIiwiX3ByZWMiLCJfaW5pdGlhbFJvdGF0aW9ucyIsIl9zdGFydFJhdGlvIiwiY3VySW5kZXgiLCJjdXJTZWciLCJmdW5jIiwibm90U3RhcnQiLCJiMiIsIngxIiwieTEiLCJ4MiIsInkyIiwiY29udiIsImFyIiwiYXRhbjIiLCJfYXV0b0NTUyIsInF1YWRyYXRpY1RvQ3ViaWMiLCJfY3NzUmVnaXN0ZXIiLCJDU1NQbHVnaW4iLCJfcGFyc2VUb1Byb3h5IiwiX3NldFBsdWdpblJhdGlvIiwiQ1NTUHJvcFR3ZWVuIiwiX3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wIiwicGFyc2VyIiwicHJvcCIsImNzc3AiLCJwbHVnaW5WYWx1ZXMiLCJzZXRSYXRpbyIsImxlZnQiLCJ4IiwiX3RyYW5zZm9ybSIsIl9lbmFibGVUcmFuc2Zvcm1zIiwiX2dzVHJhbnNmb3JtIiwicHJveHkiLCJyb3RhdGlvbiIsIl9vbkluaXRUd2VlbiIsIl90d2VlbiIsImxvb2t1cCIsIm9wIiwiX3N1cGVyIiwiVHdlZW5QbHVnaW4iLCJfaGFzUHJpb3JpdHkiLCJfc3VmZml4TWFwIiwiX2NzIiwiX3NwZWNpYWxQcm9wcyIsImRlZmF1bHRUcmFuc2Zvcm1QZXJzcGVjdGl2ZSIsImRlZmF1bHRTa2V3VHlwZSIsImRlZmF1bHRTbW9vdGhPcmlnaW4iLCJzdWZmaXhNYXAiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsIndpZHRoIiwiaGVpZ2h0IiwiZm9udFNpemUiLCJwYWRkaW5nIiwibWFyZ2luIiwicGVyc3BlY3RpdmUiLCJsaW5lSGVpZ2h0IiwiX2F1dG9Sb3VuZCIsIl9yZXFTYWZhcmlGaXgiLCJfaXNTYWZhcmkiLCJfaXNGaXJlZm94IiwiX2lzU2FmYXJpTFQ2IiwiX2llVmVycyIsIl9pbmRleCIsIl9udW1FeHAiLCJfcmVsTnVtRXhwIiwiX3ZhbHVlc0V4cCIsIl9OYU5FeHAiLCJfc3VmZml4RXhwIiwiX29wYWNpdHlFeHAiLCJfb3BhY2l0eVZhbEV4cCIsIl9hbHBoYUZpbHRlckV4cCIsIl9yZ2Joc2xFeHAiLCJfY2Fwc0V4cCIsIl9jYW1lbEV4cCIsIl91cmxFeHAiLCJfY2FtZWxGdW5jIiwiZyIsInRvVXBwZXJDYXNlIiwiX2hvcml6RXhwIiwiX2llR2V0TWF0cml4RXhwIiwiX2llU2V0TWF0cml4RXhwIiwiX2NvbW1hc091dHNpZGVQYXJlbkV4cCIsIl9jb21wbGV4RXhwIiwiX0RFRzJSQUQiLCJfZm9yY2VQVCIsIl9kb2MiLCJkb2N1bWVudCIsIl9jcmVhdGVFbGVtZW50IiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlRWxlbWVudCIsIl90ZW1wRGl2IiwiX3RlbXBJbWciLCJfYWdlbnQiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJfc3VwcG9ydHNPcGFjaXR5IiwiZXhlYyIsIlJlZ0V4cCIsIiQxIiwic3R5bGUiLCJjc3NUZXh0IiwidGVzdCIsIm9wYWNpdHkiLCJfZ2V0SUVPcGFjaXR5IiwiY3VycmVudFN0eWxlIiwiZmlsdGVyIiwiX2xvZyIsImNvbnNvbGUiLCJsb2ciLCJfcHJlZml4Q1NTIiwiX3ByZWZpeCIsIl9jaGVja1Byb3BQcmVmaXgiLCJ1bmRlZmluZWQiLCJ0b0xvd2VyQ2FzZSIsIl9nZXRDb21wdXRlZFN0eWxlIiwiZGVmYXVsdFZpZXciLCJnZXRDb21wdXRlZFN0eWxlIiwiX2dldFN0eWxlIiwiZ2V0U3R5bGUiLCJjcyIsImNhbGMiLCJkZmx0IiwicnYiLCJnZXRQcm9wZXJ0eVZhbHVlIiwicmVwbGFjZSIsIl9jb252ZXJ0VG9QaXhlbHMiLCJjb252ZXJ0VG9QaXhlbHMiLCJzZngiLCJyZWN1cnNlIiwicGl4IiwiY2FjaGUiLCJob3JpeiIsIm5vZGUiLCJuZWciLCJwcmVjaXNlIiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJhcHBlbmRDaGlsZCIsImJvZHkiLCJfZ3NDYWNoZSIsInJlbW92ZUNoaWxkIiwiY2FjaGVXaWR0aHMiLCJfY2FsY3VsYXRlT2Zmc2V0IiwiY2FsY3VsYXRlT2Zmc2V0IiwiZGltIiwiX2dldEFsbFN0eWxlcyIsInRyIiwiX3RyYW5zZm9ybVByb3BDU1MiLCJfdHJhbnNmb3JtUHJvcCIsIl9nZXRUcmFuc2Zvcm0iLCJza2V3WCIsInNjYWxlWCIsInNjYWxlWSIsInkiLCJfc3VwcG9ydHMzRCIsInoiLCJyb3RhdGlvblgiLCJyb3RhdGlvblkiLCJzY2FsZVoiLCJmaWx0ZXJzIiwiX2Nzc0RpZiIsInMxIiwiczIiLCJmb3JjZUxvb2t1cCIsIm1wdCIsImRpZnMiLCJNaW5pUHJvcFR3ZWVuIiwiZmlyc3RNUFQiLCJfZGltZW5zaW9ucyIsIl9tYXJnaW5zIiwiX2dldERpbWVuc2lvbiIsIm5vZGVOYW1lIiwiZ2V0QkJveCIsIl9pc1NWRyIsIm9mZnNldFdpZHRoIiwib2Zmc2V0SGVpZ2h0IiwiX3BhcnNlUG9zaXRpb24iLCJyZWNPYmoiLCJzcGxpdCIsIm94cCIsIm95cCIsIm94ciIsIm95ciIsIm94Iiwib3kiLCJfcGFyc2VDaGFuZ2UiLCJfcGFyc2VWYWwiLCJfcGFyc2VBbmdsZSIsImRpcmVjdGlvbmFsRW5kIiwiY2FwIiwiZGlmIiwicmVzdWx0IiwiaXNSZWxhdGl2ZSIsIm1pbiIsIl9jb2xvckxvb2t1cCIsImFxdWEiLCJsaW1lIiwic2lsdmVyIiwiYmxhY2siLCJtYXJvb24iLCJ0ZWFsIiwiYmx1ZSIsIm5hdnkiLCJ3aGl0ZSIsImZ1Y2hzaWEiLCJvbGl2ZSIsInllbGxvdyIsIm9yYW5nZSIsImdyYXkiLCJwdXJwbGUiLCJncmVlbiIsInJlZCIsInBpbmsiLCJjeWFuIiwidHJhbnNwYXJlbnQiLCJfaHVlIiwiaCIsIl9wYXJzZUNvbG9yIiwicGFyc2VDb2xvciIsInRvSFNMIiwid2FzSFNMIiwibWF0Y2giLCJfZm9ybWF0Q29sb3JzIiwiY29sb3IiLCJ0ZW1wIiwiY29sb3JzIiwiX2NvbG9yRXhwIiwiY2hhckluZGV4IiwicGFyc2VkIiwiY29sb3JTdHJpbmdGaWx0ZXIiLCJjb21iaW5lZCIsImxhc3RJbmRleCIsImRlZmF1bHRTdHJpbmdGaWx0ZXIiLCJfZ2V0Rm9ybWF0dGVyIiwiY2xyIiwiY29sbGFwc2libGUiLCJtdWx0aSIsImZvcm1hdHRlciIsImRDb2xvciIsImRWYWxzIiwicGZ4IiwiZGVsaW0iLCJudW1WYWxzIiwiZFNmeCIsInZhbHMiLCJfZ2V0RWRnZVBhcnNlciIsInBhcnNlIiwic3RyIiwicm91bmQiLCJtb2QiLCJ4czAiLCJ4czEiLCJzaGFsbG93IiwieHAiLCJmaXJzdFBUIiwiYnB0Iiwic3RhcnQiLCJ0cmFuc2Zvcm0iLCJvbGRGb3JjZSIsInJ4cCIsInByIiwiX2FkZE5vblR3ZWVuaW5nTnVtZXJpY1BUIiwib3ZlcndyaXRlUHJvcCIsIl9wYXJzZUNvbXBsZXgiLCJwYXJzZUNvbXBsZXgiLCJjbHJzIiwieGkiLCJuaSIsImJ2IiwiZXYiLCJibnVtcyIsImVudW1zIiwiYm4iLCJoYXNBbHBoYSIsImN2IiwidXNlSFNMIiwiZWEiLCJhdXRvUm91bmQiLCJhcHBlbmRYdHJhIiwieGZpcnN0IiwicGFkIiwiU3BlY2lhbFByb3AiLCJvcHRpb25zIiwicHJlZml4IiwiZm9ybWF0IiwiZGVmYXVsdFZhbHVlIiwia2V5d29yZCIsImRlZmF1bHRzIiwiX3JlZ2lzdGVyUGx1Z2luUHJvcCIsInBsdWdpbk5hbWUiLCJwbHVnaW5DbGFzcyIsImNvbSIsImdyZWVuc29jayIsInBsdWdpbnMiLCJiaSIsImVpIiwia3dkIiwicmVnaXN0ZXJTcGVjaWFsUHJvcCIsIm9uSW5pdFR3ZWVuIiwidXNlU1ZHVHJhbnNmb3JtQXR0ciIsIl91c2VTVkdUcmFuc2Zvcm1BdHRyIiwiX3RyYW5zZm9ybVByb3BzIiwiX3RyYW5zZm9ybU9yaWdpblByb3AiLCJUcmFuc2Zvcm0iLCJmb3JjZTNEIiwiZGVmYXVsdEZvcmNlM0QiLCJfU1ZHRWxlbWVudCIsIlNWR0VsZW1lbnQiLCJfY3JlYXRlU1ZHIiwiY29udGFpbmVyIiwiYXR0cmlidXRlcyIsImVsZW1lbnQiLCJyZWciLCJzZXRBdHRyaWJ1dGVOUyIsIl9kb2NFbGVtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwiX2ZvcmNlU1ZHVHJhbnNmb3JtQXR0ciIsInN2ZyIsInJlY3QiLCJjaHJvbWUiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJfcGFyc2VTVkdPcmlnaW4iLCJsb2NhbCIsImRlY29yYXRlZSIsImFic29sdXRlIiwic21vb3RoT3JpZ2luIiwic2tpcFJlY29yZCIsInhPcmlnaW4iLCJ5T3JpZ2luIiwidHgiLCJ0eSIsImRldGVybWluYW50IiwieE9yaWdpbk9sZCIsInlPcmlnaW5PbGQiLCJ0bSIsIm0iLCJfZ2V0TWF0cml4IiwiX2lkZW50aXR5MkRNYXRyaXgiLCJ4T2Zmc2V0IiwieU9mZnNldCIsInNldEF0dHJpYnV0ZSIsIl9jYW5HZXRCQm94IiwiZ2V0Q1RNIiwiZm9yY2UyRCIsImlzRGVmYXVsdCIsImRlYyIsIm5vbmUiLCJybmQiLCJkaXNwbGF5IiwiX3JlbW92ZVByb3AiLCJnZXRBdHRyaWJ1dGUiLCJnZXRUcmFuc2Zvcm0iLCJyZWMiLCJpbnZYIiwiek9yaWdpbiIsInQxIiwidDIiLCJ0MyIsImNvcyIsInNpbiIsImExMSIsImEyMSIsImEzMSIsImE0MSIsImExMiIsImEyMiIsImEzMiIsImE0MiIsImExMyIsImEyMyIsImEzMyIsImExNCIsImEyNCIsImEzNCIsImE0MyIsImFuZ2xlIiwiayIsInJlbW92ZUF0dHJpYnV0ZSIsIl9zZXRJRVRyYW5zZm9ybVJhdGlvIiwiYW5nIiwic2tldyIsImR4IiwiZHkiLCJ3IiwiY2xpcCIsInhQZXJjZW50IiwieVBlcmNlbnQiLCJtYXJnIiwibXVsdCIsImllT2Zmc2V0WCIsImllT2Zmc2V0WSIsIl9zZXRUcmFuc2Zvcm1SYXRpbyIsInNldDNEVHJhbnNmb3JtUmF0aW8iLCJzZXRUcmFuc2Zvcm1SYXRpbyIsImNvbW1hIiwiemVybyIsInN4Iiwic3kiLCJzeiIsImlzU1ZHIiwic2tld1R5cGUiLCJ0YW4iLCJza2V3WSIsInBhcnNpbmdQcm9wIiwiX2xhc3RQYXJzZWRUcmFuc2Zvcm0iLCJzd2FwRnVuYyIsImhhczNEIiwiaGFzQ2hhbmdlIiwiZHIiLCJtYXRyaXgiLCJvcmlnaW5hbEdTVHJhbnNmb3JtIiwiZW5kUm90YXRpb25zIiwidHJhbnNmb3JtT3JpZ2luU3RyaW5nIiwicGFyc2VUcmFuc2Zvcm0iLCJvcmlnIiwidHJhbnNmb3JtT3JpZ2luIiwic3ZnT3JpZ2luIiwic2NhbGUiLCJ0cmFuc2Zvcm1QZXJzcGVjdGl2ZSIsImRpcmVjdGlvbmFsUm90YXRpb24iLCJzaG9ydFJvdGF0aW9uIiwicm90YXRpb25aIiwic2hvcnRSb3RhdGlvblgiLCJzaG9ydFJvdGF0aW9uWSIsIl90cmFuc2Zvcm1UeXBlIiwiZWExIiwiZXMyIiwiYnMyIiwiYnMiLCJlcyIsImVuIiwiZXNmeCIsImJzZngiLCJyZWwiLCJobiIsInZuIiwiZW0iLCJwY3QiLCJvdmVybGFwIiwic3JjIiwiYnAiLCJiYWNrZ3JvdW5kUG9zaXRpb25YIiwiYmFja2dyb3VuZFBvc2l0aW9uWSIsImNsaXBUb3AiLCJjbGlwUmlnaHQiLCJjbGlwQm90dG9tIiwiY2xpcExlZnQiLCJidyIsIl9zZXRJRU9wYWNpdHlSYXRpbyIsInNraXAiLCJ4bjEiLCJpc0F1dG9BbHBoYSIsInpvb20iLCJyZW1vdmVQcm9wZXJ0eSIsIl9zZXRDbGFzc05hbWVSYXRpbyIsIl9nc0NsYXNzUFQiLCJkaWZEYXRhIiwiY25wdCIsImNucHRMb29rdXAiLCJfY2xhc3NOYW1lUFQiLCJfc2V0Q2xlYXJQcm9wc1JhdGlvIiwiY2xlYXJUcmFuc2Zvcm0iLCJ0cmFuc2Zvcm1QYXJzZSIsIm5vZGVUeXBlIiwiX3ZhcnMiLCJwdDIiLCJ6SW5kZXgiLCJ0cHQiLCJ0aHJlZUQiLCJfYWRkTGF6eVNldCIsImNsYXNzTmFtZSIsIldlYmtpdEJhY2tmYWNlVmlzaWJpbGl0eSIsIl9saW5rQ1NTUCIsInBvcCIsInNwIiwiaXNTdHIiLCJzdHJpY3RVbml0cyIsInhzMiIsInhuMiIsInhzMyIsInhuMyIsInhzNCIsInhuNCIsInhzNSIsImxhenlTZXQiLCJhdXRvQWxwaGEiLCJhbHBoYSIsInZpc2liaWxpdHkiLCJfZ2V0Q2hpbGRTdHlsZXMiLCJjaGlsZHJlbiIsInNsaWNlIiwiY2hpbGROb2RlcyIsImNhc2NhZGVUbyIsInJlc3VsdHMiLCJfcmVzZXJ2ZWRQcm9wcyIsInJlc2VydmVkUHJvcHMiLCJfdGFyZ2V0cyIsImFjdGl2YXRlIiwiUm91bmRQcm9wc1BsdWdpbiIsIl9yb3VuZExpbmtlZExpc3QiLCJibG9iIiwiX29uSW5pdEFsbFByb3BzIiwicnAiLCJyb3VuZFByb3BzIiwicnB0IiwiX3Byb3BMb29rdXAiLCJwZyIsIl9hZGQiLCJfYWRkVHdlZW4iLCJmaW5hbHMiLCJ1c2VSYWRpYW5zIiwiU3RlcHBlZEVhc2UiLCJSb3VnaEVhc2UiLCJfY3JlYXRlRWxhc3RpYyIsIkdyZWVuU29ja0dsb2JhbHMiLCJncyIsIl8yUEkiLCJfSEFMRl9QSSIsIl9jbGFzcyIsIl9jcmVhdGUiLCJDIiwiX2Vhc2VSZWciLCJyZWdpc3RlciIsIl93cmFwIiwiRWFzZU91dCIsIkVhc2VJbiIsIkVhc2VJbk91dCIsImFsaWFzZXMiLCJlYXNlT3V0IiwiZWFzZUluIiwiZWFzZUluT3V0IiwiRWFzZVBvaW50IiwiZ2FwIiwiX2NyZWF0ZUJhY2siLCJvdmVyc2hvb3QiLCJfcDEiLCJfcDIiLCJjb25maWciLCJCYWNrIiwiU2xvd01vIiwibGluZWFyUmF0aW8iLCJwb3dlciIsInlveW9Nb2RlIiwiX3AiLCJfcDMiLCJidW1wIiwicG50IiwidGFwZXIiLCJwb2ludHMiLCJyYW5kb21pemUiLCJjbGFtcCIsInRlbXBsYXRlIiwic3RyZW5ndGgiLCJyYW5kb20iLCJpbnZlcnQiLCJkZWYiLCJhbXBsaXR1ZGUiLCJwZXJpb2QiLCJhc2luIiwiZmluZCIsIm1hcCIsIm1vZHVsZU5hbWUiLCJfZXhwb3J0cyIsIl90aWNrZXIiLCJfdGlja2VyQWN0aXZlIiwiX25hbWVzcGFjZSIsIm5zIiwiX2VtcHR5RnVuYyIsInRvU3RyaW5nIiwiT2JqZWN0IiwiYXJyYXkiLCJfZGVmTG9va3VwIiwiRGVmaW5pdGlvbiIsImRlcGVuZGVuY2llcyIsInNjIiwiZ3NDbGFzcyIsIl9jbGFzc2VzIiwiY2hlY2siLCJjbCIsImhhc01vZHVsZSIsIm1pc3NpbmciLCJkZWZpbmUiLCJhbWQiLCJHcmVlblNvY2tBTURQYXRoIiwiX2Jhc2VQYXJhbXMiLCJleHRyYVBhcmFtcyIsIl90eXBlIiwiX3Bvd2VyIiwiX3BhcmFtcyIsIl9lYXNlTWFwIiwibmFtZXMiLCJ0eXBlcyIsImNyZWF0ZSIsIm5hIiwidGEiLCJlYXNpbmciLCJwdyIsImxpbmVhciIsIkxpbmVhciIsInN3aW5nIiwiUXVhZCIsIkV2ZW50RGlzcGF0Y2hlciIsIl9saXN0ZW5lcnMiLCJfZXZlbnRUYXJnZXQiLCJhZGRFdmVudExpc3RlbmVyIiwidXNlUGFyYW0iLCJsaXN0ZW5lciIsImxpc3QiLCJ3YWtlIiwidXAiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGlzcGF0Y2hFdmVudCIsIl9yZXFBbmltRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJfY2FuY2VsQW5pbUZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJfZ2V0VGltZSIsIkRhdGUiLCJub3ciLCJnZXRUaW1lIiwiX2xhc3RVcGRhdGUiLCJmcHMiLCJ1c2VSQUYiLCJfZnBzIiwiX3JlcSIsIl9pZCIsIl9nYXAiLCJfbmV4dFRpbWUiLCJfc2VsZiIsIl91c2VSQUYiLCJfbGFnVGhyZXNob2xkIiwiX2FkanVzdGVkTGFnIiwiX3RpY2tXb3JkIiwiX3RpY2siLCJtYW51YWwiLCJkaXNwYXRjaCIsImVsYXBzZWQiLCJ0aWNrIiwiYWRqdXN0ZWRMYWciLCJzbGVlcCIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJ2aXNpYmlsaXR5U3RhdGUiLCJUaWNrZXIiLCJldmVudHMiLCJyZXZlcnNlZCIsIl9jaGVja1RpbWVvdXQiLCJhdFRpbWUiLCJyZXN1bWUiLCJyZXN0YXJ0IiwiaW5jbHVkZURlbGF5Iiwic3RhcnRUaW1lIiwiaW5jbHVkZVNlbGYiLCJldmVudENhbGxiYWNrIiwiaW5jbHVkZVJlcGVhdHMiLCJwYXVzZVRpbWUiLCJyYXciLCJwcmV2VHdlZW4iLCJzdCIsInRhcmciLCJqcXVlcnkiLCJfb3ZlcndyaXRlIiwiX292ZXJ3cml0ZUxvb2t1cCIsImRlZmF1bHRPdmVyd3JpdGUiLCJfc2libGluZ3MiLCJfcmVnaXN0ZXIiLCJfYXBwbHlPdmVyd3JpdGUiLCJjc3MiLCJfcGx1Z2lucyIsIl9vdmVyd3JpdHRlblByb3BzIiwiZGVmYXVsdEVhc2UiLCJhdXRvU2xlZXAiLCIkIiwialF1ZXJ5IiwicXVlcnlTZWxlY3RvckFsbCIsImdldEVsZW1lbnRCeUlkIiwiX2xhenlMb29rdXAiLCJfbnVtYmVyc0V4cCIsIl9zZXRSYXRpbyIsImZwIiwiX2Jsb2JEaWYiLCJzdGFydE51bXMiLCJlbmROdW1zIiwibnVtIiwibm9uTnVtYmVycyIsImN1cnJlbnROdW0iLCJfYXBwbHlQVCIsIl9hZGRQcm9wVHdlZW4iLCJmdW5jUGFyYW0iLCJzdHJpbmdGaWx0ZXIiLCJnZXR0ZXJOYW1lIiwiYmxvYkRpZiIsIl90d2Vlbkxvb2t1cCIsIl90d2Vlbkxvb2t1cE51bSIsIm9uVXBkYXRlUGFyYW1zIiwib25VcGRhdGVTY29wZSIsIm9uU3RhcnRQYXJhbXMiLCJvblN0YXJ0U2NvcGUiLCJvblJldmVyc2VDb21wbGV0ZVNjb3BlIiwib25SZXBlYXRQYXJhbXMiLCJvblJlcGVhdFNjb3BlIiwiZWFzZVBhcmFtcyIsImF1dG9DU1MiLCJvbk92ZXJ3cml0ZSIsImlkIiwiYXV0byIsImNvbmN1cnJlbnQiLCJhbGxPblN0YXJ0IiwicHJlZXhpc3RpbmciLCJ0cnVlIiwiZmFsc2UiLCJfbmV4dEdDRnJhbWUiLCJfdXBkYXRlUm9vdCIsInNjcnViIiwiX2dzVHdlZW5JRCIsIl9vbk92ZXJ3cml0ZSIsIm92ZXJ3cml0dGVuVHdlZW4iLCJvdmVyd3JpdGluZ1R3ZWVuIiwia2lsbGVkUHJvcHMiLCJtb2RlIiwic2libGluZ3MiLCJjdXJUd2VlbiIsImdsb2JhbFN0YXJ0Iiwib3ZlcmxhcHMiLCJvQ291bnQiLCJ6ZXJvRHVyIiwiX2NoZWNrT3ZlcmxhcCIsInJlZmVyZW5jZSIsInRzIiwiaW5pdFBsdWdpbnMiLCJzdGFydFZhcnMiLCJfaW5pdFByb3BzIiwicHJvcExvb2t1cCIsIm92ZXJ3cml0dGVuUHJvcHMiLCJfcHJpb3JpdHkiLCJfb25EaXNhYmxlIiwiX29uRW5hYmxlIiwia2lsbFByb3BzIiwicmVjb3JkIiwia2lsbGVkIiwic2ltdWx0YW5lb3VzT3ZlcndyaXRlIiwiX3RlbXBLaWxsIiwib25seUFjdGl2ZSIsIl9wcm9wTmFtZSIsIl9yb3VuZFByb3BzIiwib3ZlcndyaXRlUHJvcHMiLCJpbml0QWxsIiwiUGx1Z2luIiwidGV4dCIsImhlYWQiLCJpc1dpbmRvdyIsIkQiLCJpc0Z1bmN0aW9uIiwiZ3JlcCIsIkoiLCJMIiwiZWFjaCIsIksiLCJNIiwiTiIsIk8iLCJwcm9taXNlIiwiZG9uZSIsImZhaWwiLCJ0aGVuIiwiUiIsInJlYWR5IiwiVSIsImV4cGFuZG8iLCJ1aWQiLCJaIiwiWCIsIkpTT04iLCJZIiwiVyIsImNzc051bWJlciIsImFhIiwidW5pdCIsImdhIiwib3duZXJEb2N1bWVudCIsImZhIiwiaGEiLCJWIiwiZ2V0IiwibWEiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsIm1lcmdlIiwicGEiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50Iiwib2EiLCJqYSIsImxhIiwiX2RlZmF1bHQiLCJpbm5lckhUTUwiLCJodG1sUHJlZmlsdGVyIiwibGFzdENoaWxkIiwiZmlyc3RDaGlsZCIsInRleHRDb250ZW50IiwiY3JlYXRlVGV4dE5vZGUiLCJpbkFycmF5IiwiY29udGFpbnMiLCJrYSIsInVhIiwidmEiLCJ3YSIsImFjdGl2ZUVsZW1lbnQiLCJ4YSIsIm9mZiIsImd1aWQiLCJldmVudCIsIkRhIiwiRWEiLCJGYSIsIkJhIiwiR2EiLCJoYXNEYXRhIiwiYWNjZXNzIiwiaGFuZGxlIiwiZXh0ZW5kIiwiSGEiLCJpYSIsImNoZWNrZWQiLCJJYSIsInEiLCJjaGVja0Nsb25lIiwiQWEiLCJlcSIsImh0bWwiLCJjbG9uZSIsIl9ldmFsVXJsIiwiQ2EiLCJKYSIsImNsZWFuRGF0YSIsIk5hIiwiTWEiLCJwaXhlbE1hcmdpblJpZ2h0IiwiTGEiLCJLYSIsIm1pbldpZHRoIiwibWF4V2lkdGgiLCJPYSIsIlVhIiwiVGEiLCJTYSIsIlZhIiwiV2EiLCJYYSIsImdldENsaWVudFJlY3RzIiwiYm94U2l6aW5nUmVsaWFibGUiLCJhYiIsImJiIiwiaWIiLCJlYiIsImpiIiwiZ2V0UHJvdG90eXBlT2YiLCJoYXNPd25Qcm9wZXJ0eSIsImZuIiwidG9BcnJheSIsInB1c2hTdGFjayIsInByZXZPYmplY3QiLCJpc1BsYWluT2JqZWN0IiwiaXNSZWFkeSIsImVycm9yIiwibm9vcCIsImlzTnVtZXJpYyIsImlzRW1wdHlPYmplY3QiLCJnbG9iYWxFdmFsIiwiY2FtZWxDYXNlIiwidHJpbSIsIm1ha2VBcnJheSIsInN1cHBvcnQiLCJTeW1ib2wiLCJpdGVyYXRvciIsIkciLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwicXNhIiwiQSIsInNhIiwicWEiLCJQIiwiY2FjaGVMZW5ndGgiLCJzaGlmdCIsImF0dHJIYW5kbGUiLCJzb3VyY2VJbmRleCIsIm5leHRTaWJsaW5nIiwiaXNEaXNhYmxlZCIsInJhIiwiZGlyIiwidW5pcXVlSUQiLCJJIiwieWEiLCJyZWxhdGl2ZSIsIm1hdGNoZXMiLCJ6YSIsIlRBRyIsIkUiLCJ1bmlxdWVTb3J0IiwiQiIsIkYiLCJIIiwiUSIsIlMiLCJUIiwiSUQiLCJDTEFTUyIsIkFUVFIiLCJQU0VVRE8iLCJDSElMRCIsImJvb2wiLCJuZWVkc0NvbnRleHQiLCJfIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiY2hhckNvZGVBdCIsImlzWE1MIiwic2V0RG9jdW1lbnQiLCJhdHRhY2hFdmVudCIsImNyZWF0ZUNvbW1lbnQiLCJnZXRCeUlkIiwiZ2V0RWxlbWVudHNCeU5hbWUiLCJnZXRBdHRyaWJ1dGVOb2RlIiwibWF0Y2hlc1NlbGVjdG9yIiwid2Via2l0TWF0Y2hlc1NlbGVjdG9yIiwibW96TWF0Y2hlc1NlbGVjdG9yIiwib01hdGNoZXNTZWxlY3RvciIsIm1zTWF0Y2hlc1NlbGVjdG9yIiwiZGlzY29ubmVjdGVkTWF0Y2giLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsInNvcnREZXRhY2hlZCIsImF0dHIiLCJzcGVjaWZpZWQiLCJlc2NhcGUiLCJkZXRlY3REdXBsaWNhdGVzIiwic29ydFN0YWJsZSIsImdldFRleHQiLCJub2RlVmFsdWUiLCJzZWxlY3RvcnMiLCJjcmVhdGVQc2V1ZG8iLCI+IiwiICIsIisiLCJ+IiwicHJlRmlsdGVyIiwicHNldWRvcyIsInNldEZpbHRlcnMiLCJub3QiLCJoYXMiLCJpbm5lclRleHQiLCJsYW5nIiwibG9jYXRpb24iLCJoYXNoIiwiZm9jdXMiLCJoYXNGb2N1cyIsImhyZWYiLCJ0YWJJbmRleCIsInNlbGVjdGVkIiwic2VsZWN0ZWRJbmRleCIsImVtcHR5IiwiaGVhZGVyIiwiaW5wdXQiLCJidXR0b24iLCJldmVuIiwib2RkIiwibHQiLCJndCIsIm50aCIsInJhZGlvIiwiY2hlY2tib3giLCJmaWxlIiwicGFzc3dvcmQiLCJpbWFnZSIsInN1Ym1pdCIsInJlc2V0IiwidG9rZW5pemUiLCJjb21waWxlIiwic2VsZWN0IiwiZXhwciIsInVuaXF1ZSIsImlzWE1MRG9jIiwiZXNjYXBlU2VsZWN0b3IiLCJpcyIsInBhcnNlSFRNTCIsImNvbnRlbnRzIiwiY2xvc2VzdCIsInByZXZBbGwiLCJhZGRCYWNrIiwicGFyZW50cyIsInBhcmVudHNVbnRpbCIsIm5leHRBbGwiLCJuZXh0VW50aWwiLCJwcmV2VW50aWwiLCJjb250ZW50RG9jdW1lbnQiLCJDYWxsYmFja3MiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJtZW1vcnkiLCJkaXNhYmxlIiwibG9jayIsImxvY2tlZCIsImZpcmVXaXRoIiwiZmlyZSIsImZpcmVkIiwiRGVmZXJyZWQiLCJzdGF0ZSIsImFsd2F5cyIsImNhdGNoIiwicGlwZSIsIm5vdGlmeSIsInJlc29sdmUiLCJyZWplY3QiLCJUeXBlRXJyb3IiLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJleGNlcHRpb25Ib29rIiwic3RhY2tUcmFjZSIsInJlamVjdFdpdGgiLCJnZXRTdGFja0hvb2siLCJ3aGVuIiwid2FybiIsIm1lc3NhZ2UiLCJzdGFjayIsInJlYWR5RXhjZXB0aW9uIiwicmVhZHlXYWl0IiwiaG9sZFJlYWR5IiwicmVhZHlTdGF0ZSIsImRvU2Nyb2xsIiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJyZW1vdmVEYXRhIiwiX2RhdGEiLCJfcmVtb3ZlRGF0YSIsInF1ZXVlIiwiZGVxdWV1ZSIsIl9xdWV1ZUhvb2tzIiwiY2xlYXJRdWV1ZSIsInNvdXJjZSIsInNob3ciLCJoaWRlIiwidG9nZ2xlIiwib3B0aW9uIiwidGhlYWQiLCJjb2wiLCJ0ZCIsIm9wdGdyb3VwIiwidGJvZHkiLCJ0Zm9vdCIsImNvbGdyb3VwIiwiY2FwdGlvbiIsInRoIiwiY2xvbmVOb2RlIiwibm9DbG9uZUNoZWNrZWQiLCJoYW5kbGVyIiwidHJpZ2dlcmVkIiwic3BlY2lhbCIsImRlbGVnYXRlVHlwZSIsImJpbmRUeXBlIiwib3JpZ1R5cGUiLCJuYW1lc3BhY2UiLCJkZWxlZ2F0ZUNvdW50Iiwic2V0dXAiLCJ0ZWFyZG93biIsInJlbW92ZUV2ZW50IiwiZml4IiwiZGVsZWdhdGVUYXJnZXQiLCJwcmVEaXNwYXRjaCIsImhhbmRsZXJzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJjdXJyZW50VGFyZ2V0IiwiZWxlbSIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwicm5hbWVzcGFjZSIsImhhbmRsZU9iaiIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwicG9zdERpc3BhdGNoIiwiYWRkUHJvcCIsIkV2ZW50IiwiZW51bWVyYWJsZSIsIm9yaWdpbmFsRXZlbnQiLCJ3cml0YWJsZSIsImxvYWQiLCJub0J1YmJsZSIsInRyaWdnZXIiLCJibHVyIiwiY2xpY2siLCJiZWZvcmV1bmxvYWQiLCJyZXR1cm5WYWx1ZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZWxhdGVkVGFyZ2V0IiwidGltZVN0YW1wIiwiaXNTaW11bGF0ZWQiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJhbHRLZXkiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsImNoYW5nZWRUb3VjaGVzIiwiY3RybEtleSIsImRldGFpbCIsImV2ZW50UGhhc2UiLCJtZXRhS2V5IiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwidmlldyIsImNoYXIiLCJjaGFyQ29kZSIsImtleSIsImtleUNvZGUiLCJidXR0b25zIiwiY2xpZW50WCIsImNsaWVudFkiLCJvZmZzZXRYIiwib2Zmc2V0WSIsInBvaW50ZXJJZCIsInBvaW50ZXJUeXBlIiwic2NyZWVuWCIsInNjcmVlblkiLCJ0YXJnZXRUb3VjaGVzIiwidG9FbGVtZW50IiwidG91Y2hlcyIsIndoaWNoIiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJwb2ludGVyZW50ZXIiLCJwb2ludGVybGVhdmUiLCJvbiIsIm9uZSIsImRldGFjaCIsImluc2VydEJlZm9yZSIsImJlZm9yZSIsImFmdGVyIiwicmVwbGFjZVdpdGgiLCJyZXBsYWNlQ2hpbGQiLCJhcHBlbmRUbyIsInByZXBlbmRUbyIsImluc2VydEFmdGVyIiwicmVwbGFjZUFsbCIsIm9wZW5lciIsIm1hcmdpbkxlZnQiLCJtYXJnaW5SaWdodCIsImJhY2tncm91bmRDbGlwIiwiY2xlYXJDbG9uZVN0eWxlIiwicGl4ZWxQb3NpdGlvbiIsInJlbGlhYmxlTWFyZ2luTGVmdCIsIlBhIiwiUWEiLCJSYSIsImxldHRlclNwYWNpbmciLCJmb250V2VpZ2h0IiwiY3NzSG9va3MiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImNvbHVtbkNvdW50IiwiZmlsbE9wYWNpdHkiLCJmbGV4R3JvdyIsImZsZXhTaHJpbmsiLCJvcmRlciIsIm9ycGhhbnMiLCJ3aWRvd3MiLCJjc3NQcm9wcyIsImZsb2F0IiwiaXNGaW5pdGUiLCJib3JkZXIiLCJleHBhbmQiLCJmeCIsInNwZWVkcyIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJZYSIsIlphIiwicmVtb3ZlQXR0ciIsImF0dHJIb29rcyIsIiRhIiwiX2EiLCJyZW1vdmVQcm9wIiwicHJvcEZpeCIsInByb3BIb29rcyIsImZvciIsImNsYXNzIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsInRvZ2dsZUNsYXNzIiwiaGFzQ2xhc3MiLCJjYiIsInZhbEhvb2tzIiwiZGIiLCJpc1RyaWdnZXIiLCJwYXJlbnRXaW5kb3ciLCJzaW11bGF0ZSIsInRyaWdnZXJIYW5kbGVyIiwiaG92ZXIiLCJmb2N1c2luIiwiZmIiLCJnYiIsImhiIiwicGFyYW0iLCJlbmNvZGVVUklDb21wb25lbnQiLCJzZXJpYWxpemUiLCJzZXJpYWxpemVBcnJheSIsIndyYXBBbGwiLCJmaXJzdEVsZW1lbnRDaGlsZCIsIndyYXBJbm5lciIsInVud3JhcCIsImhpZGRlbiIsInZpc2libGUiLCJjcmVhdGVIVE1MRG9jdW1lbnQiLCJpbXBsZW1lbnRhdGlvbiIsIm9mZnNldCIsInNldE9mZnNldCIsInVzaW5nIiwicGFnZVlPZmZzZXQiLCJjbGllbnRUb3AiLCJwYWdlWE9mZnNldCIsImNsaWVudExlZnQiLCJvZmZzZXRQYXJlbnQiLCJzY3JvbGxMZWZ0Iiwic2Nyb2xsVG9wIiwic2Nyb2xsVG8iLCJIZWlnaHQiLCJXaWR0aCIsImNvbnRlbnQiLCIiLCJrYiIsImxiIiwibm9Db25mbGljdCIsInNob3dTY3JvbGxJbmRpYyIsImxvZ28iLCJsb2dvTyIsImxvZ29PMSIsImhpZGVTY3JvbGxJbmRpYyIsInJlcXVlc3RBbmltRnJhbWUiLCJteVNjcm9sbCIsInNjcm9sbFBlcmNlbnQiLCJzY3JvbGxQcm9ncmVzcyIsInRocm90dGxlIiwid2luZG93V2lkdGgiLCJvdXRlcldpZHRoIiwid2luZG93SGVpZ2h0IiwiZG9jSGVpZ2h0Iiwid2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwib1JlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwidGltZXIiLCJjb250ZXh0IiwiYXJncyJdLCJtYXBwaW5ncyI6IkNBQUEsUUFBQUEsR0FBQUMsRUFBQUMsRUFBQUMsR0FBQSxRQUFBQyxHQUFBQyxFQUFBQyxHQUFBLElBQUFKLEVBQUFHLEdBQUEsQ0FBQSxJQUFBSixFQUFBSSxHQUFBLENBQUEsR0FBQUUsR0FBQSxrQkFBQUMsVUFBQUEsT0FBQSxLQUFBRixHQUFBQyxFQUFBLE1BQUFBLEdBQUFGLEdBQUEsRUFBQSxJQUFBSSxFQUFBLE1BQUFBLEdBQUFKLEdBQUEsRUFBQSxJQUFBSyxHQUFBLEdBQUFDLE9BQUEsdUJBQUFOLEVBQUEsSUFBQSxNQUFBSyxHQUFBRSxLQUFBLG1CQUFBRixFQUFBLEdBQUFHLEdBQUFYLEVBQUFHLElBQUFTLFdBQUFiLEdBQUFJLEdBQUEsR0FBQVUsS0FBQUYsRUFBQUMsUUFBQSxTQUFBZCxHQUFBLEdBQUFFLEdBQUFELEVBQUFJLEdBQUEsR0FBQUwsRUFBQSxPQUFBSSxHQUFBRixFQUFBQSxFQUFBRixJQUFBYSxFQUFBQSxFQUFBQyxRQUFBZCxFQUFBQyxFQUFBQyxFQUFBQyxHQUFBLE1BQUFELEdBQUFHLEdBQUFTLFFBQUEsSUFBQSxHQUFBTCxHQUFBLGtCQUFBRCxVQUFBQSxRQUFBSCxFQUFBLEVBQUFBLEVBQUFGLEVBQUFhLE9BQUFYLElBQUFELEVBQUFELEVBQUFFLEdBQUEsT0FBQUQsS0FBQWEsR0FBQSxTQUFBVCxFQUFBVSxFQUFBSixnQkNhQSxHQUFBSyxHQUFBLG1CQUFBLElBQUFE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QXc1QyxDQUNBLE9BQUEsWUFDQSxHQUFBQyxHQUFBcm5ELEtBQUFrZ0MsR0FBQSxHQUFBRCxNQUFBcW5CLEVBQUF2L0MsU0FDQTZGLElBQUFzeUIsRUFBQXR5QixFQUFBbEcsR0FFQTg1QixhQUFBNGxCLEdBQ0FBLEVBQUEzbEIsV0FBQSxXQUNBN3pCLEVBQUFzeUIsRUFDQW43QixFQUFBOEMsTUFBQXcvQyxFQUFBQyxJQUNBNS9DLEtBRUFrRyxFQUFBc3lCLEVBQ0FuN0IsRUFBQThDLE1BQUF3L0MsRUFBQUMiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLyohXG4gKiBWRVJTSU9OOiAxLjE5LjBcbiAqIERBVEU6IDIwMTYtMDctMTRcbiAqIFVQREFURVMgQU5EIERPQ1MgQVQ6IGh0dHA6Ly9ncmVlbnNvY2suY29tXG4gKiBcbiAqIEluY2x1ZGVzIGFsbCBvZiB0aGUgZm9sbG93aW5nOiBUd2VlbkxpdGUsIFR3ZWVuTWF4LCBUaW1lbGluZUxpdGUsIFRpbWVsaW5lTWF4LCBFYXNlUGFjaywgQ1NTUGx1Z2luLCBSb3VuZFByb3BzUGx1Z2luLCBCZXppZXJQbHVnaW4sIEF0dHJQbHVnaW4sIERpcmVjdGlvbmFsUm90YXRpb25QbHVnaW5cbiAqXG4gKiBAbGljZW5zZSBDb3B5cmlnaHQgKGMpIDIwMDgtMjAxNiwgR3JlZW5Tb2NrLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogVGhpcyB3b3JrIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIGF0IGh0dHA6Ly9ncmVlbnNvY2suY29tL3N0YW5kYXJkLWxpY2Vuc2Ugb3IgZm9yXG4gKiBDbHViIEdyZWVuU29jayBtZW1iZXJzLCB0aGUgc29mdHdhcmUgYWdyZWVtZW50IHRoYXQgd2FzIGlzc3VlZCB3aXRoIHlvdXIgbWVtYmVyc2hpcC5cbiAqIFxuICogQGF1dGhvcjogSmFjayBEb3lsZSwgamFja0BncmVlbnNvY2suY29tXG4gKiovXG52YXIgX2dzU2NvcGUgPSAodHlwZW9mKG1vZHVsZSkgIT09IFwidW5kZWZpbmVkXCIgJiYgbW9kdWxlLmV4cG9ydHMgJiYgdHlwZW9mKGdsb2JhbCkgIT09IFwidW5kZWZpbmVkXCIpID8gZ2xvYmFsIDogdGhpcyB8fCB3aW5kb3c7IC8vaGVscHMgZW5zdXJlIGNvbXBhdGliaWxpdHkgd2l0aCBBTUQvUmVxdWlyZUpTIGFuZCBDb21tb25KUy9Ob2RlXG4oX2dzU2NvcGUuX2dzUXVldWUgfHwgKF9nc1Njb3BlLl9nc1F1ZXVlID0gW10pKS5wdXNoKCBmdW5jdGlvbigpIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRfZ3NTY29wZS5fZ3NEZWZpbmUoXCJUd2Vlbk1heFwiLCBbXCJjb3JlLkFuaW1hdGlvblwiLFwiY29yZS5TaW1wbGVUaW1lbGluZVwiLFwiVHdlZW5MaXRlXCJdLCBmdW5jdGlvbihBbmltYXRpb24sIFNpbXBsZVRpbWVsaW5lLCBUd2VlbkxpdGUpIHtcblxuXHRcdHZhciBfc2xpY2UgPSBmdW5jdGlvbihhKSB7IC8vZG9uJ3QgdXNlIFtdLnNsaWNlIGJlY2F1c2UgdGhhdCBkb2Vzbid0IHdvcmsgaW4gSUU4IHdpdGggYSBOb2RlTGlzdCB0aGF0J3MgcmV0dXJuZWQgYnkgcXVlcnlTZWxlY3RvckFsbCgpXG5cdFx0XHRcdHZhciBiID0gW10sXG5cdFx0XHRcdFx0bCA9IGEubGVuZ3RoLFxuXHRcdFx0XHRcdGk7XG5cdFx0XHRcdGZvciAoaSA9IDA7IGkgIT09IGw7IGIucHVzaChhW2krK10pKTtcblx0XHRcdFx0cmV0dXJuIGI7XG5cdFx0XHR9LFxuXHRcdFx0X2FwcGx5Q3ljbGUgPSBmdW5jdGlvbih2YXJzLCB0YXJnZXRzLCBpKSB7XG5cdFx0XHRcdHZhciBhbHQgPSB2YXJzLmN5Y2xlLFxuXHRcdFx0XHRcdHAsIHZhbDtcblx0XHRcdFx0Zm9yIChwIGluIGFsdCkge1xuXHRcdFx0XHRcdHZhbCA9IGFsdFtwXTtcblx0XHRcdFx0XHR2YXJzW3BdID0gKHR5cGVvZih2YWwpID09PSBcImZ1bmN0aW9uXCIpID8gdmFsKGksIHRhcmdldHNbaV0pIDogdmFsW2kgJSB2YWwubGVuZ3RoXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkZWxldGUgdmFycy5jeWNsZTtcblx0XHRcdH0sXG5cdFx0XHRUd2Vlbk1heCA9IGZ1bmN0aW9uKHRhcmdldCwgZHVyYXRpb24sIHZhcnMpIHtcblx0XHRcdFx0VHdlZW5MaXRlLmNhbGwodGhpcywgdGFyZ2V0LCBkdXJhdGlvbiwgdmFycyk7XG5cdFx0XHRcdHRoaXMuX2N5Y2xlID0gMDtcblx0XHRcdFx0dGhpcy5feW95byA9ICh0aGlzLnZhcnMueW95byA9PT0gdHJ1ZSk7XG5cdFx0XHRcdHRoaXMuX3JlcGVhdCA9IHRoaXMudmFycy5yZXBlYXQgfHwgMDtcblx0XHRcdFx0dGhpcy5fcmVwZWF0RGVsYXkgPSB0aGlzLnZhcnMucmVwZWF0RGVsYXkgfHwgMDtcblx0XHRcdFx0dGhpcy5fZGlydHkgPSB0cnVlOyAvL2Vuc3VyZXMgdGhhdCBpZiB0aGVyZSBpcyBhbnkgcmVwZWF0LCB0aGUgdG90YWxEdXJhdGlvbiB3aWxsIGdldCByZWNhbGN1bGF0ZWQgdG8gYWNjdXJhdGVseSByZXBvcnQgaXQuXG5cdFx0XHRcdHRoaXMucmVuZGVyID0gVHdlZW5NYXgucHJvdG90eXBlLnJlbmRlcjsgLy9zcGVlZCBvcHRpbWl6YXRpb24gKGF2b2lkIHByb3RvdHlwZSBsb29rdXAgb24gdGhpcyBcImhvdFwiIG1ldGhvZClcblx0XHRcdH0sXG5cdFx0XHRfdGlueU51bSA9IDAuMDAwMDAwMDAwMSxcblx0XHRcdFR3ZWVuTGl0ZUludGVybmFscyA9IFR3ZWVuTGl0ZS5faW50ZXJuYWxzLFxuXHRcdFx0X2lzU2VsZWN0b3IgPSBUd2VlbkxpdGVJbnRlcm5hbHMuaXNTZWxlY3Rvcixcblx0XHRcdF9pc0FycmF5ID0gVHdlZW5MaXRlSW50ZXJuYWxzLmlzQXJyYXksXG5cdFx0XHRwID0gVHdlZW5NYXgucHJvdG90eXBlID0gVHdlZW5MaXRlLnRvKHt9LCAwLjEsIHt9KSxcblx0XHRcdF9ibGFua0FycmF5ID0gW107XG5cblx0XHRUd2Vlbk1heC52ZXJzaW9uID0gXCIxLjE5LjBcIjtcblx0XHRwLmNvbnN0cnVjdG9yID0gVHdlZW5NYXg7XG5cdFx0cC5raWxsKCkuX2djID0gZmFsc2U7XG5cdFx0VHdlZW5NYXgua2lsbFR3ZWVuc09mID0gVHdlZW5NYXgua2lsbERlbGF5ZWRDYWxsc1RvID0gVHdlZW5MaXRlLmtpbGxUd2VlbnNPZjtcblx0XHRUd2Vlbk1heC5nZXRUd2VlbnNPZiA9IFR3ZWVuTGl0ZS5nZXRUd2VlbnNPZjtcblx0XHRUd2Vlbk1heC5sYWdTbW9vdGhpbmcgPSBUd2VlbkxpdGUubGFnU21vb3RoaW5nO1xuXHRcdFR3ZWVuTWF4LnRpY2tlciA9IFR3ZWVuTGl0ZS50aWNrZXI7XG5cdFx0VHdlZW5NYXgucmVuZGVyID0gVHdlZW5MaXRlLnJlbmRlcjtcblxuXHRcdHAuaW52YWxpZGF0ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy5feW95byA9ICh0aGlzLnZhcnMueW95byA9PT0gdHJ1ZSk7XG5cdFx0XHR0aGlzLl9yZXBlYXQgPSB0aGlzLnZhcnMucmVwZWF0IHx8IDA7XG5cdFx0XHR0aGlzLl9yZXBlYXREZWxheSA9IHRoaXMudmFycy5yZXBlYXREZWxheSB8fCAwO1xuXHRcdFx0dGhpcy5fdW5jYWNoZSh0cnVlKTtcblx0XHRcdHJldHVybiBUd2VlbkxpdGUucHJvdG90eXBlLmludmFsaWRhdGUuY2FsbCh0aGlzKTtcblx0XHR9O1xuXHRcdFxuXHRcdHAudXBkYXRlVG8gPSBmdW5jdGlvbih2YXJzLCByZXNldER1cmF0aW9uKSB7XG5cdFx0XHR2YXIgY3VyUmF0aW8gPSB0aGlzLnJhdGlvLFxuXHRcdFx0XHRpbW1lZGlhdGUgPSB0aGlzLnZhcnMuaW1tZWRpYXRlUmVuZGVyIHx8IHZhcnMuaW1tZWRpYXRlUmVuZGVyLFxuXHRcdFx0XHRwO1xuXHRcdFx0aWYgKHJlc2V0RHVyYXRpb24gJiYgdGhpcy5fc3RhcnRUaW1lIDwgdGhpcy5fdGltZWxpbmUuX3RpbWUpIHtcblx0XHRcdFx0dGhpcy5fc3RhcnRUaW1lID0gdGhpcy5fdGltZWxpbmUuX3RpbWU7XG5cdFx0XHRcdHRoaXMuX3VuY2FjaGUoZmFsc2UpO1xuXHRcdFx0XHRpZiAodGhpcy5fZ2MpIHtcblx0XHRcdFx0XHR0aGlzLl9lbmFibGVkKHRydWUsIGZhbHNlKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0aGlzLl90aW1lbGluZS5pbnNlcnQodGhpcywgdGhpcy5fc3RhcnRUaW1lIC0gdGhpcy5fZGVsYXkpOyAvL2Vuc3VyZXMgdGhhdCBhbnkgbmVjZXNzYXJ5IHJlLXNlcXVlbmNpbmcgb2YgQW5pbWF0aW9ucyBpbiB0aGUgdGltZWxpbmUgb2NjdXJzIHRvIG1ha2Ugc3VyZSB0aGUgcmVuZGVyaW5nIG9yZGVyIGlzIGNvcnJlY3QuXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGZvciAocCBpbiB2YXJzKSB7XG5cdFx0XHRcdHRoaXMudmFyc1twXSA9IHZhcnNbcF07XG5cdFx0XHR9XG5cdFx0XHRpZiAodGhpcy5faW5pdHRlZCB8fCBpbW1lZGlhdGUpIHtcblx0XHRcdFx0aWYgKHJlc2V0RHVyYXRpb24pIHtcblx0XHRcdFx0XHR0aGlzLl9pbml0dGVkID0gZmFsc2U7XG5cdFx0XHRcdFx0aWYgKGltbWVkaWF0ZSkge1xuXHRcdFx0XHRcdFx0dGhpcy5yZW5kZXIoMCwgdHJ1ZSwgdHJ1ZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGlmICh0aGlzLl9nYykge1xuXHRcdFx0XHRcdFx0dGhpcy5fZW5hYmxlZCh0cnVlLCBmYWxzZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICh0aGlzLl9ub3RpZnlQbHVnaW5zT2ZFbmFibGVkICYmIHRoaXMuX2ZpcnN0UFQpIHtcblx0XHRcdFx0XHRcdFR3ZWVuTGl0ZS5fb25QbHVnaW5FdmVudChcIl9vbkRpc2FibGVcIiwgdGhpcyk7IC8vaW4gY2FzZSBhIHBsdWdpbiBsaWtlIE1vdGlvbkJsdXIgbXVzdCBwZXJmb3JtIHNvbWUgY2xlYW51cCB0YXNrc1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAodGhpcy5fdGltZSAvIHRoaXMuX2R1cmF0aW9uID4gMC45OTgpIHsgLy9pZiB0aGUgdHdlZW4gaGFzIGZpbmlzaGVkIChvciBjb21lIGV4dHJlbWVseSBjbG9zZSB0byBmaW5pc2hpbmcpLCB3ZSBqdXN0IG5lZWQgdG8gcmV3aW5kIGl0IHRvIDAgYW5kIHRoZW4gcmVuZGVyIGl0IGFnYWluIGF0IHRoZSBlbmQgd2hpY2ggZm9yY2VzIGl0IHRvIHJlLWluaXRpYWxpemUgKHBhcnNpbmcgdGhlIG5ldyB2YXJzKS4gV2UgYWxsb3cgdHdlZW5zIHRoYXQgYXJlIGNsb3NlIHRvIGZpbmlzaGluZyAoYnV0IGhhdmVuJ3QgcXVpdGUgZmluaXNoZWQpIHRvIHdvcmsgdGhpcyB3YXkgdG9vIGJlY2F1c2Ugb3RoZXJ3aXNlLCB0aGUgdmFsdWVzIGFyZSBzbyBzbWFsbCB3aGVuIGRldGVybWluaW5nIHdoZXJlIHRvIHByb2plY3QgdGhlIHN0YXJ0aW5nIHZhbHVlcyB0aGF0IGJpbmFyeSBtYXRoIGlzc3VlcyBjcmVlcCBpbiBhbmQgY2FuIG1ha2UgdGhlIHR3ZWVuIGFwcGVhciB0byByZW5kZXIgaW5jb3JyZWN0bHkgd2hlbiBydW4gYmFja3dhcmRzLiBcblx0XHRcdFx0XHRcdHZhciBwcmV2VGltZSA9IHRoaXMuX3RvdGFsVGltZTtcblx0XHRcdFx0XHRcdHRoaXMucmVuZGVyKDAsIHRydWUsIGZhbHNlKTtcblx0XHRcdFx0XHRcdHRoaXMuX2luaXR0ZWQgPSBmYWxzZTtcblx0XHRcdFx0XHRcdHRoaXMucmVuZGVyKHByZXZUaW1lLCB0cnVlLCBmYWxzZSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRoaXMuX2luaXR0ZWQgPSBmYWxzZTtcblx0XHRcdFx0XHRcdHRoaXMuX2luaXQoKTtcblx0XHRcdFx0XHRcdGlmICh0aGlzLl90aW1lID4gMCB8fCBpbW1lZGlhdGUpIHtcblx0XHRcdFx0XHRcdFx0dmFyIGludiA9IDEgLyAoMSAtIGN1clJhdGlvKSxcblx0XHRcdFx0XHRcdFx0XHRwdCA9IHRoaXMuX2ZpcnN0UFQsIGVuZFZhbHVlO1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0XHRcdFx0XHRlbmRWYWx1ZSA9IHB0LnMgKyBwdC5jO1xuXHRcdFx0XHRcdFx0XHRcdHB0LmMgKj0gaW52O1xuXHRcdFx0XHRcdFx0XHRcdHB0LnMgPSBlbmRWYWx1ZSAtIHB0LmM7XG5cdFx0XHRcdFx0XHRcdFx0cHQgPSBwdC5fbmV4dDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fTtcblx0XHRcdFx0XG5cdFx0cC5yZW5kZXIgPSBmdW5jdGlvbih0aW1lLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpIHtcblx0XHRcdGlmICghdGhpcy5faW5pdHRlZCkgaWYgKHRoaXMuX2R1cmF0aW9uID09PSAwICYmIHRoaXMudmFycy5yZXBlYXQpIHsgLy96ZXJvIGR1cmF0aW9uIHR3ZWVucyB0aGF0IHJlbmRlciBpbW1lZGlhdGVseSBoYXZlIHJlbmRlcigpIGNhbGxlZCBmcm9tIFR3ZWVuTGl0ZSdzIGNvbnN0cnVjdG9yLCBiZWZvcmUgVHdlZW5NYXgncyBjb25zdHJ1Y3RvciBoYXMgZmluaXNoZWQgc2V0dGluZyBfcmVwZWF0LCBfcmVwZWF0RGVsYXksIGFuZCBfeW95byB3aGljaCBhcmUgY3JpdGljYWwgaW4gZGV0ZXJtaW5pbmcgdG90YWxEdXJhdGlvbigpIHNvIHdlIG5lZWQgdG8gY2FsbCBpbnZhbGlkYXRlKCkgd2hpY2ggaXMgYSBsb3cta2Igd2F5IHRvIGdldCB0aG9zZSBzZXQgcHJvcGVybHkuXG5cdFx0XHRcdHRoaXMuaW52YWxpZGF0ZSgpO1xuXHRcdFx0fVxuXHRcdFx0dmFyIHRvdGFsRHVyID0gKCF0aGlzLl9kaXJ0eSkgPyB0aGlzLl90b3RhbER1cmF0aW9uIDogdGhpcy50b3RhbER1cmF0aW9uKCksXG5cdFx0XHRcdHByZXZUaW1lID0gdGhpcy5fdGltZSxcblx0XHRcdFx0cHJldlRvdGFsVGltZSA9IHRoaXMuX3RvdGFsVGltZSwgXG5cdFx0XHRcdHByZXZDeWNsZSA9IHRoaXMuX2N5Y2xlLFxuXHRcdFx0XHRkdXJhdGlvbiA9IHRoaXMuX2R1cmF0aW9uLFxuXHRcdFx0XHRwcmV2UmF3UHJldlRpbWUgPSB0aGlzLl9yYXdQcmV2VGltZSxcblx0XHRcdFx0aXNDb21wbGV0ZSwgY2FsbGJhY2ssIHB0LCBjeWNsZUR1cmF0aW9uLCByLCB0eXBlLCBwb3csIHJhd1ByZXZUaW1lO1xuXHRcdFx0aWYgKHRpbWUgPj0gdG90YWxEdXIgLSAwLjAwMDAwMDEpIHsgLy90byB3b3JrIGFyb3VuZCBvY2Nhc2lvbmFsIGZsb2F0aW5nIHBvaW50IG1hdGggYXJ0aWZhY3RzLlxuXHRcdFx0XHR0aGlzLl90b3RhbFRpbWUgPSB0b3RhbER1cjtcblx0XHRcdFx0dGhpcy5fY3ljbGUgPSB0aGlzLl9yZXBlYXQ7XG5cdFx0XHRcdGlmICh0aGlzLl95b3lvICYmICh0aGlzLl9jeWNsZSAmIDEpICE9PSAwKSB7XG5cdFx0XHRcdFx0dGhpcy5fdGltZSA9IDA7XG5cdFx0XHRcdFx0dGhpcy5yYXRpbyA9IHRoaXMuX2Vhc2UuX2NhbGNFbmQgPyB0aGlzLl9lYXNlLmdldFJhdGlvKDApIDogMDtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0aGlzLl90aW1lID0gZHVyYXRpb247XG5cdFx0XHRcdFx0dGhpcy5yYXRpbyA9IHRoaXMuX2Vhc2UuX2NhbGNFbmQgPyB0aGlzLl9lYXNlLmdldFJhdGlvKDEpIDogMTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIXRoaXMuX3JldmVyc2VkKSB7XG5cdFx0XHRcdFx0aXNDb21wbGV0ZSA9IHRydWU7XG5cdFx0XHRcdFx0Y2FsbGJhY2sgPSBcIm9uQ29tcGxldGVcIjtcblx0XHRcdFx0XHRmb3JjZSA9IChmb3JjZSB8fCB0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4pOyAvL290aGVyd2lzZSwgaWYgdGhlIGFuaW1hdGlvbiBpcyB1bnBhdXNlZC9hY3RpdmF0ZWQgYWZ0ZXIgaXQncyBhbHJlYWR5IGZpbmlzaGVkLCBpdCBkb2Vzbid0IGdldCByZW1vdmVkIGZyb20gdGhlIHBhcmVudCB0aW1lbGluZS5cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoZHVyYXRpb24gPT09IDApIGlmICh0aGlzLl9pbml0dGVkIHx8ICF0aGlzLnZhcnMubGF6eSB8fCBmb3JjZSkgeyAvL3plcm8tZHVyYXRpb24gdHdlZW5zIGFyZSB0cmlja3kgYmVjYXVzZSB3ZSBtdXN0IGRpc2Nlcm4gdGhlIG1vbWVudHVtL2RpcmVjdGlvbiBvZiB0aW1lIGluIG9yZGVyIHRvIGRldGVybWluZSB3aGV0aGVyIHRoZSBzdGFydGluZyB2YWx1ZXMgc2hvdWxkIGJlIHJlbmRlcmVkIG9yIHRoZSBlbmRpbmcgdmFsdWVzLiBJZiB0aGUgXCJwbGF5aGVhZFwiIG9mIGl0cyB0aW1lbGluZSBnb2VzIHBhc3QgdGhlIHplcm8tZHVyYXRpb24gdHdlZW4gaW4gdGhlIGZvcndhcmQgZGlyZWN0aW9uIG9yIGxhbmRzIGRpcmVjdGx5IG9uIGl0LCB0aGUgZW5kIHZhbHVlcyBzaG91bGQgYmUgcmVuZGVyZWQsIGJ1dCBpZiB0aGUgdGltZWxpbmUncyBcInBsYXloZWFkXCIgbW92ZXMgcGFzdCBpdCBpbiB0aGUgYmFja3dhcmQgZGlyZWN0aW9uIChmcm9tIGEgcG9zdGl0aXZlIHRpbWUgdG8gYSBuZWdhdGl2ZSB0aW1lKSwgdGhlIHN0YXJ0aW5nIHZhbHVlcyBtdXN0IGJlIHJlbmRlcmVkLlxuXHRcdFx0XHRcdGlmICh0aGlzLl9zdGFydFRpbWUgPT09IHRoaXMuX3RpbWVsaW5lLl9kdXJhdGlvbikgeyAvL2lmIGEgemVyby1kdXJhdGlvbiB0d2VlbiBpcyBhdCB0aGUgVkVSWSBlbmQgb2YgYSB0aW1lbGluZSBhbmQgdGhhdCB0aW1lbGluZSByZW5kZXJzIGF0IGl0cyBlbmQsIGl0IHdpbGwgdHlwaWNhbGx5IGFkZCBhIHRpbnkgYml0IG9mIGN1c2hpb24gdG8gdGhlIHJlbmRlciB0aW1lIHRvIHByZXZlbnQgcm91bmRpbmcgZXJyb3JzIGZyb20gZ2V0dGluZyBpbiB0aGUgd2F5IG9mIHR3ZWVucyByZW5kZXJpbmcgdGhlaXIgVkVSWSBlbmQuIElmIHdlIHRoZW4gcmV2ZXJzZSgpIHRoYXQgdGltZWxpbmUsIHRoZSB6ZXJvLWR1cmF0aW9uIHR3ZWVuIHdpbGwgdHJpZ2dlciBpdHMgb25SZXZlcnNlQ29tcGxldGUgZXZlbiB0aG91Z2ggdGVjaG5pY2FsbHkgdGhlIHBsYXloZWFkIGRpZG4ndCBwYXNzIG92ZXIgaXQgYWdhaW4uIEl0J3MgYSB2ZXJ5IHNwZWNpZmljIGVkZ2UgY2FzZSB3ZSBtdXN0IGFjY29tbW9kYXRlLlxuXHRcdFx0XHRcdFx0dGltZSA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChwcmV2UmF3UHJldlRpbWUgPCAwIHx8ICh0aW1lIDw9IDAgJiYgdGltZSA+PSAtMC4wMDAwMDAxKSB8fCAocHJldlJhd1ByZXZUaW1lID09PSBfdGlueU51bSAmJiB0aGlzLmRhdGEgIT09IFwiaXNQYXVzZVwiKSkgaWYgKHByZXZSYXdQcmV2VGltZSAhPT0gdGltZSkgeyAvL25vdGU6IHdoZW4gdGhpcy5kYXRhIGlzIFwiaXNQYXVzZVwiLCBpdCdzIGEgY2FsbGJhY2sgYWRkZWQgYnkgYWRkUGF1c2UoKSBvbiBhIHRpbWVsaW5lIHRoYXQgd2Ugc2hvdWxkIG5vdCBiZSB0cmlnZ2VyZWQgd2hlbiBMRUFWSU5HIGl0cyBleGFjdCBzdGFydCB0aW1lLiBJbiBvdGhlciB3b3JkcywgdGwuYWRkUGF1c2UoMSkucGxheSgxKSBzaG91bGRuJ3QgcGF1c2UuXG5cdFx0XHRcdFx0XHRmb3JjZSA9IHRydWU7XG5cdFx0XHRcdFx0XHRpZiAocHJldlJhd1ByZXZUaW1lID4gX3RpbnlOdW0pIHtcblx0XHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBcIm9uUmV2ZXJzZUNvbXBsZXRlXCI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRoaXMuX3Jhd1ByZXZUaW1lID0gcmF3UHJldlRpbWUgPSAoIXN1cHByZXNzRXZlbnRzIHx8IHRpbWUgfHwgcHJldlJhd1ByZXZUaW1lID09PSB0aW1lKSA/IHRpbWUgOiBfdGlueU51bTsgLy93aGVuIHRoZSBwbGF5aGVhZCBhcnJpdmVzIGF0IEVYQUNUTFkgdGltZSAwIChyaWdodCBvbiB0b3ApIG9mIGEgemVyby1kdXJhdGlvbiB0d2Vlbiwgd2UgbmVlZCB0byBkaXNjZXJuIGlmIGV2ZW50cyBhcmUgc3VwcHJlc3NlZCBzbyB0aGF0IHdoZW4gdGhlIHBsYXloZWFkIG1vdmVzIGFnYWluIChuZXh0IHRpbWUpLCBpdCdsbCB0cmlnZ2VyIHRoZSBjYWxsYmFjay4gSWYgZXZlbnRzIGFyZSBOT1Qgc3VwcHJlc3NlZCwgb2J2aW91c2x5IHRoZSBjYWxsYmFjayB3b3VsZCBiZSB0cmlnZ2VyZWQgaW4gdGhpcyByZW5kZXIuIEJhc2ljYWxseSwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlIGVpdGhlciB3aGVuIHRoZSBwbGF5aGVhZCBBUlJJVkVTIG9yIExFQVZFUyB0aGlzIGV4YWN0IHNwb3QsIG5vdCBib3RoLiBJbWFnaW5lIGRvaW5nIGEgdGltZWxpbmUuc2VlaygwKSBhbmQgdGhlcmUncyBhIGNhbGxiYWNrIHRoYXQgc2l0cyBhdCAwLiBTaW5jZSBldmVudHMgYXJlIHN1cHByZXNzZWQgb24gdGhhdCBzZWVrKCkgYnkgZGVmYXVsdCwgbm90aGluZyB3aWxsIGZpcmUsIGJ1dCB3aGVuIHRoZSBwbGF5aGVhZCBtb3ZlcyBvZmYgb2YgdGhhdCBwb3NpdGlvbiwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlLiBUaGlzIGJlaGF2aW9yIGlzIHdoYXQgcGVvcGxlIGludHVpdGl2ZWx5IGV4cGVjdC4gV2Ugc2V0IHRoZSBfcmF3UHJldlRpbWUgdG8gYmUgYSBwcmVjaXNlIHRpbnkgbnVtYmVyIHRvIGluZGljYXRlIHRoaXMgc2NlbmFyaW8gcmF0aGVyIHRoYW4gdXNpbmcgYW5vdGhlciBwcm9wZXJ0eS92YXJpYWJsZSB3aGljaCB3b3VsZCBpbmNyZWFzZSBtZW1vcnkgdXNhZ2UuIFRoaXMgdGVjaG5pcXVlIGlzIGxlc3MgcmVhZGFibGUsIGJ1dCBtb3JlIGVmZmljaWVudC5cblx0XHRcdFx0fVxuXHRcdFx0XHRcblx0XHRcdH0gZWxzZSBpZiAodGltZSA8IDAuMDAwMDAwMSkgeyAvL3RvIHdvcmsgYXJvdW5kIG9jY2FzaW9uYWwgZmxvYXRpbmcgcG9pbnQgbWF0aCBhcnRpZmFjdHMsIHJvdW5kIHN1cGVyIHNtYWxsIHZhbHVlcyB0byAwLlxuXHRcdFx0XHR0aGlzLl90b3RhbFRpbWUgPSB0aGlzLl90aW1lID0gdGhpcy5fY3ljbGUgPSAwO1xuXHRcdFx0XHR0aGlzLnJhdGlvID0gdGhpcy5fZWFzZS5fY2FsY0VuZCA/IHRoaXMuX2Vhc2UuZ2V0UmF0aW8oMCkgOiAwO1xuXHRcdFx0XHRpZiAocHJldlRvdGFsVGltZSAhPT0gMCB8fCAoZHVyYXRpb24gPT09IDAgJiYgcHJldlJhd1ByZXZUaW1lID4gMCkpIHtcblx0XHRcdFx0XHRjYWxsYmFjayA9IFwib25SZXZlcnNlQ29tcGxldGVcIjtcblx0XHRcdFx0XHRpc0NvbXBsZXRlID0gdGhpcy5fcmV2ZXJzZWQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHRpbWUgPCAwKSB7XG5cdFx0XHRcdFx0dGhpcy5fYWN0aXZlID0gZmFsc2U7XG5cdFx0XHRcdFx0aWYgKGR1cmF0aW9uID09PSAwKSBpZiAodGhpcy5faW5pdHRlZCB8fCAhdGhpcy52YXJzLmxhenkgfHwgZm9yY2UpIHsgLy96ZXJvLWR1cmF0aW9uIHR3ZWVucyBhcmUgdHJpY2t5IGJlY2F1c2Ugd2UgbXVzdCBkaXNjZXJuIHRoZSBtb21lbnR1bS9kaXJlY3Rpb24gb2YgdGltZSBpbiBvcmRlciB0byBkZXRlcm1pbmUgd2hldGhlciB0aGUgc3RhcnRpbmcgdmFsdWVzIHNob3VsZCBiZSByZW5kZXJlZCBvciB0aGUgZW5kaW5nIHZhbHVlcy4gSWYgdGhlIFwicGxheWhlYWRcIiBvZiBpdHMgdGltZWxpbmUgZ29lcyBwYXN0IHRoZSB6ZXJvLWR1cmF0aW9uIHR3ZWVuIGluIHRoZSBmb3J3YXJkIGRpcmVjdGlvbiBvciBsYW5kcyBkaXJlY3RseSBvbiBpdCwgdGhlIGVuZCB2YWx1ZXMgc2hvdWxkIGJlIHJlbmRlcmVkLCBidXQgaWYgdGhlIHRpbWVsaW5lJ3MgXCJwbGF5aGVhZFwiIG1vdmVzIHBhc3QgaXQgaW4gdGhlIGJhY2t3YXJkIGRpcmVjdGlvbiAoZnJvbSBhIHBvc3RpdGl2ZSB0aW1lIHRvIGEgbmVnYXRpdmUgdGltZSksIHRoZSBzdGFydGluZyB2YWx1ZXMgbXVzdCBiZSByZW5kZXJlZC5cblx0XHRcdFx0XHRcdGlmIChwcmV2UmF3UHJldlRpbWUgPj0gMCkge1xuXHRcdFx0XHRcdFx0XHRmb3JjZSA9IHRydWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR0aGlzLl9yYXdQcmV2VGltZSA9IHJhd1ByZXZUaW1lID0gKCFzdXBwcmVzc0V2ZW50cyB8fCB0aW1lIHx8IHByZXZSYXdQcmV2VGltZSA9PT0gdGltZSkgPyB0aW1lIDogX3RpbnlOdW07IC8vd2hlbiB0aGUgcGxheWhlYWQgYXJyaXZlcyBhdCBFWEFDVExZIHRpbWUgMCAocmlnaHQgb24gdG9wKSBvZiBhIHplcm8tZHVyYXRpb24gdHdlZW4sIHdlIG5lZWQgdG8gZGlzY2VybiBpZiBldmVudHMgYXJlIHN1cHByZXNzZWQgc28gdGhhdCB3aGVuIHRoZSBwbGF5aGVhZCBtb3ZlcyBhZ2FpbiAobmV4dCB0aW1lKSwgaXQnbGwgdHJpZ2dlciB0aGUgY2FsbGJhY2suIElmIGV2ZW50cyBhcmUgTk9UIHN1cHByZXNzZWQsIG9idmlvdXNseSB0aGUgY2FsbGJhY2sgd291bGQgYmUgdHJpZ2dlcmVkIGluIHRoaXMgcmVuZGVyLiBCYXNpY2FsbHksIHRoZSBjYWxsYmFjayBzaG91bGQgZmlyZSBlaXRoZXIgd2hlbiB0aGUgcGxheWhlYWQgQVJSSVZFUyBvciBMRUFWRVMgdGhpcyBleGFjdCBzcG90LCBub3QgYm90aC4gSW1hZ2luZSBkb2luZyBhIHRpbWVsaW5lLnNlZWsoMCkgYW5kIHRoZXJlJ3MgYSBjYWxsYmFjayB0aGF0IHNpdHMgYXQgMC4gU2luY2UgZXZlbnRzIGFyZSBzdXBwcmVzc2VkIG9uIHRoYXQgc2VlaygpIGJ5IGRlZmF1bHQsIG5vdGhpbmcgd2lsbCBmaXJlLCBidXQgd2hlbiB0aGUgcGxheWhlYWQgbW92ZXMgb2ZmIG9mIHRoYXQgcG9zaXRpb24sIHRoZSBjYWxsYmFjayBzaG91bGQgZmlyZS4gVGhpcyBiZWhhdmlvciBpcyB3aGF0IHBlb3BsZSBpbnR1aXRpdmVseSBleHBlY3QuIFdlIHNldCB0aGUgX3Jhd1ByZXZUaW1lIHRvIGJlIGEgcHJlY2lzZSB0aW55IG51bWJlciB0byBpbmRpY2F0ZSB0aGlzIHNjZW5hcmlvIHJhdGhlciB0aGFuIHVzaW5nIGFub3RoZXIgcHJvcGVydHkvdmFyaWFibGUgd2hpY2ggd291bGQgaW5jcmVhc2UgbWVtb3J5IHVzYWdlLiBUaGlzIHRlY2huaXF1ZSBpcyBsZXNzIHJlYWRhYmxlLCBidXQgbW9yZSBlZmZpY2llbnQuXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICghdGhpcy5faW5pdHRlZCkgeyAvL2lmIHdlIHJlbmRlciB0aGUgdmVyeSBiZWdpbm5pbmcgKHRpbWUgPT0gMCkgb2YgYSBmcm9tVG8oKSwgd2UgbXVzdCBmb3JjZSB0aGUgcmVuZGVyIChub3JtYWwgdHdlZW5zIHdvdWxkbid0IG5lZWQgdG8gcmVuZGVyIGF0IGEgdGltZSBvZiAwIHdoZW4gdGhlIHByZXZUaW1lIHdhcyBhbHNvIDApLiBUaGlzIGlzIGFsc28gbWFuZGF0b3J5IHRvIG1ha2Ugc3VyZSBvdmVyd3JpdGluZyBraWNrcyBpbiBpbW1lZGlhdGVseS5cblx0XHRcdFx0XHRmb3JjZSA9IHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMuX3RvdGFsVGltZSA9IHRoaXMuX3RpbWUgPSB0aW1lO1xuXHRcdFx0XHRpZiAodGhpcy5fcmVwZWF0ICE9PSAwKSB7XG5cdFx0XHRcdFx0Y3ljbGVEdXJhdGlvbiA9IGR1cmF0aW9uICsgdGhpcy5fcmVwZWF0RGVsYXk7XG5cdFx0XHRcdFx0dGhpcy5fY3ljbGUgPSAodGhpcy5fdG90YWxUaW1lIC8gY3ljbGVEdXJhdGlvbikgPj4gMDsgLy9vcmlnaW5hbGx5IF90b3RhbFRpbWUgJSBjeWNsZUR1cmF0aW9uIGJ1dCBmbG9hdGluZyBwb2ludCBlcnJvcnMgY2F1c2VkIHByb2JsZW1zLCBzbyBJIG5vcm1hbGl6ZWQgaXQuICg0ICUgMC44IHNob3VsZCBiZSAwIGJ1dCBzb21lIGJyb3dzZXJzIHJlcG9ydCBpdCBhcyAwLjc5OTk5OTk5ISlcblx0XHRcdFx0XHRpZiAodGhpcy5fY3ljbGUgIT09IDApIGlmICh0aGlzLl9jeWNsZSA9PT0gdGhpcy5fdG90YWxUaW1lIC8gY3ljbGVEdXJhdGlvbiAmJiBwcmV2VG90YWxUaW1lIDw9IHRpbWUpIHtcblx0XHRcdFx0XHRcdHRoaXMuX2N5Y2xlLS07IC8vb3RoZXJ3aXNlIHdoZW4gcmVuZGVyZWQgZXhhY3RseSBhdCB0aGUgZW5kIHRpbWUsIGl0IHdpbGwgYWN0IGFzIHRob3VnaCBpdCBpcyByZXBlYXRpbmcgKGF0IHRoZSBiZWdpbm5pbmcpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRoaXMuX3RpbWUgPSB0aGlzLl90b3RhbFRpbWUgLSAodGhpcy5fY3ljbGUgKiBjeWNsZUR1cmF0aW9uKTtcblx0XHRcdFx0XHRpZiAodGhpcy5feW95bykgaWYgKCh0aGlzLl9jeWNsZSAmIDEpICE9PSAwKSB7XG5cdFx0XHRcdFx0XHR0aGlzLl90aW1lID0gZHVyYXRpb24gLSB0aGlzLl90aW1lO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAodGhpcy5fdGltZSA+IGR1cmF0aW9uKSB7XG5cdFx0XHRcdFx0XHR0aGlzLl90aW1lID0gZHVyYXRpb247XG5cdFx0XHRcdFx0fSBlbHNlIGlmICh0aGlzLl90aW1lIDwgMCkge1xuXHRcdFx0XHRcdFx0dGhpcy5fdGltZSA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKHRoaXMuX2Vhc2VUeXBlKSB7XG5cdFx0XHRcdFx0ciA9IHRoaXMuX3RpbWUgLyBkdXJhdGlvbjtcblx0XHRcdFx0XHR0eXBlID0gdGhpcy5fZWFzZVR5cGU7XG5cdFx0XHRcdFx0cG93ID0gdGhpcy5fZWFzZVBvd2VyO1xuXHRcdFx0XHRcdGlmICh0eXBlID09PSAxIHx8ICh0eXBlID09PSAzICYmIHIgPj0gMC41KSkge1xuXHRcdFx0XHRcdFx0ciA9IDEgLSByO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAodHlwZSA9PT0gMykge1xuXHRcdFx0XHRcdFx0ciAqPSAyO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAocG93ID09PSAxKSB7XG5cdFx0XHRcdFx0XHRyICo9IHI7XG5cdFx0XHRcdFx0fSBlbHNlIGlmIChwb3cgPT09IDIpIHtcblx0XHRcdFx0XHRcdHIgKj0gciAqIHI7XG5cdFx0XHRcdFx0fSBlbHNlIGlmIChwb3cgPT09IDMpIHtcblx0XHRcdFx0XHRcdHIgKj0gciAqIHIgKiByO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAocG93ID09PSA0KSB7XG5cdFx0XHRcdFx0XHRyICo9IHIgKiByICogciAqIHI7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKHR5cGUgPT09IDEpIHtcblx0XHRcdFx0XHRcdHRoaXMucmF0aW8gPSAxIC0gcjtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHR5cGUgPT09IDIpIHtcblx0XHRcdFx0XHRcdHRoaXMucmF0aW8gPSByO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAodGhpcy5fdGltZSAvIGR1cmF0aW9uIDwgMC41KSB7XG5cdFx0XHRcdFx0XHR0aGlzLnJhdGlvID0gciAvIDI7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRoaXMucmF0aW8gPSAxIC0gKHIgLyAyKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0aGlzLnJhdGlvID0gdGhpcy5fZWFzZS5nZXRSYXRpbyh0aGlzLl90aW1lIC8gZHVyYXRpb24pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0fVxuXHRcdFx0XHRcblx0XHRcdGlmIChwcmV2VGltZSA9PT0gdGhpcy5fdGltZSAmJiAhZm9yY2UgJiYgcHJldkN5Y2xlID09PSB0aGlzLl9jeWNsZSkge1xuXHRcdFx0XHRpZiAocHJldlRvdGFsVGltZSAhPT0gdGhpcy5fdG90YWxUaW1lKSBpZiAodGhpcy5fb25VcGRhdGUpIGlmICghc3VwcHJlc3NFdmVudHMpIHsgLy9zbyB0aGF0IG9uVXBkYXRlIGZpcmVzIGV2ZW4gZHVyaW5nIHRoZSByZXBlYXREZWxheSAtIGFzIGxvbmcgYXMgdGhlIHRvdGFsVGltZSBjaGFuZ2VkLCB3ZSBzaG91bGQgdHJpZ2dlciBvblVwZGF0ZS5cblx0XHRcdFx0XHR0aGlzLl9jYWxsYmFjayhcIm9uVXBkYXRlXCIpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH0gZWxzZSBpZiAoIXRoaXMuX2luaXR0ZWQpIHtcblx0XHRcdFx0dGhpcy5faW5pdCgpO1xuXHRcdFx0XHRpZiAoIXRoaXMuX2luaXR0ZWQgfHwgdGhpcy5fZ2MpIHsgLy9pbW1lZGlhdGVSZW5kZXIgdHdlZW5zIHR5cGljYWxseSB3b24ndCBpbml0aWFsaXplIHVudGlsIHRoZSBwbGF5aGVhZCBhZHZhbmNlcyAoX3RpbWUgaXMgZ3JlYXRlciB0aGFuIDApIGluIG9yZGVyIHRvIGVuc3VyZSB0aGF0IG92ZXJ3cml0aW5nIG9jY3VycyBwcm9wZXJseS4gQWxzbywgaWYgYWxsIG9mIHRoZSB0d2VlbmluZyBwcm9wZXJ0aWVzIGhhdmUgYmVlbiBvdmVyd3JpdHRlbiAod2hpY2ggd291bGQgY2F1c2UgX2djIHRvIGJlIHRydWUsIGFzIHNldCBpbiBfaW5pdCgpKSwgd2Ugc2hvdWxkbid0IGNvbnRpbnVlIG90aGVyd2lzZSBhbiBvblN0YXJ0IGNhbGxiYWNrIGNvdWxkIGJlIGNhbGxlZCBmb3IgZXhhbXBsZS5cblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH0gZWxzZSBpZiAoIWZvcmNlICYmIHRoaXMuX2ZpcnN0UFQgJiYgKCh0aGlzLnZhcnMubGF6eSAhPT0gZmFsc2UgJiYgdGhpcy5fZHVyYXRpb24pIHx8ICh0aGlzLnZhcnMubGF6eSAmJiAhdGhpcy5fZHVyYXRpb24pKSkgeyAvL3dlIHN0aWNrIGl0IGluIHRoZSBxdWV1ZSBmb3IgcmVuZGVyaW5nIGF0IHRoZSB2ZXJ5IGVuZCBvZiB0aGUgdGljayAtIHRoaXMgaXMgYSBwZXJmb3JtYW5jZSBvcHRpbWl6YXRpb24gYmVjYXVzZSBicm93c2VycyBpbnZhbGlkYXRlIHN0eWxlcyBhbmQgZm9yY2UgYSByZWNhbGN1bGF0aW9uIGlmIHlvdSByZWFkLCB3cml0ZSwgYW5kIHRoZW4gcmVhZCBzdHlsZSBkYXRhIChzbyBpdCdzIGJldHRlciB0byByZWFkL3JlYWQvcmVhZC93cml0ZS93cml0ZS93cml0ZSB0aGFuIHJlYWQvd3JpdGUvcmVhZC93cml0ZS9yZWFkL3dyaXRlKS4gVGhlIGRvd24gc2lkZSwgb2YgY291cnNlLCBpcyB0aGF0IHVzdWFsbHkgeW91IFdBTlQgdGhpbmdzIHRvIHJlbmRlciBpbW1lZGlhdGVseSBiZWNhdXNlIHlvdSBtYXkgaGF2ZSBjb2RlIHJ1bm5pbmcgcmlnaHQgYWZ0ZXIgdGhhdCB3aGljaCBkZXBlbmRzIG9uIHRoZSBjaGFuZ2UuIExpa2UgaW1hZ2luZSBydW5uaW5nIFR3ZWVuTGl0ZS5zZXQoLi4uKSBhbmQgdGhlbiBpbW1lZGlhdGVseSBhZnRlciB0aGF0LCBjcmVhdGluZyBhIG5vdGhlciB0d2VlbiB0aGF0IGFuaW1hdGVzIHRoZSBzYW1lIHByb3BlcnR5IHRvIGFub3RoZXIgdmFsdWU7IHRoZSBzdGFydGluZyB2YWx1ZXMgb2YgdGhhdCAybmQgdHdlZW4gd291bGRuJ3QgYmUgYWNjdXJhdGUgaWYgbGF6eSBpcyB0cnVlLlxuXHRcdFx0XHRcdHRoaXMuX3RpbWUgPSBwcmV2VGltZTtcblx0XHRcdFx0XHR0aGlzLl90b3RhbFRpbWUgPSBwcmV2VG90YWxUaW1lO1xuXHRcdFx0XHRcdHRoaXMuX3Jhd1ByZXZUaW1lID0gcHJldlJhd1ByZXZUaW1lO1xuXHRcdFx0XHRcdHRoaXMuX2N5Y2xlID0gcHJldkN5Y2xlO1xuXHRcdFx0XHRcdFR3ZWVuTGl0ZUludGVybmFscy5sYXp5VHdlZW5zLnB1c2godGhpcyk7XG5cdFx0XHRcdFx0dGhpcy5fbGF6eSA9IFt0aW1lLCBzdXBwcmVzc0V2ZW50c107XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vX2Vhc2UgaXMgaW5pdGlhbGx5IHNldCB0byBkZWZhdWx0RWFzZSwgc28gbm93IHRoYXQgaW5pdCgpIGhhcyBydW4sIF9lYXNlIGlzIHNldCBwcm9wZXJseSBhbmQgd2UgbmVlZCB0byByZWNhbGN1bGF0ZSB0aGUgcmF0aW8uIE92ZXJhbGwgdGhpcyBpcyBmYXN0ZXIgdGhhbiB1c2luZyBjb25kaXRpb25hbCBsb2dpYyBlYXJsaWVyIGluIHRoZSBtZXRob2QgdG8gYXZvaWQgaGF2aW5nIHRvIHNldCByYXRpbyB0d2ljZSBiZWNhdXNlIHdlIG9ubHkgaW5pdCgpIG9uY2UgYnV0IHJlbmRlclRpbWUoKSBnZXRzIGNhbGxlZCBWRVJZIGZyZXF1ZW50bHkuXG5cdFx0XHRcdGlmICh0aGlzLl90aW1lICYmICFpc0NvbXBsZXRlKSB7XG5cdFx0XHRcdFx0dGhpcy5yYXRpbyA9IHRoaXMuX2Vhc2UuZ2V0UmF0aW8odGhpcy5fdGltZSAvIGR1cmF0aW9uKTtcblx0XHRcdFx0fSBlbHNlIGlmIChpc0NvbXBsZXRlICYmIHRoaXMuX2Vhc2UuX2NhbGNFbmQpIHtcblx0XHRcdFx0XHR0aGlzLnJhdGlvID0gdGhpcy5fZWFzZS5nZXRSYXRpbygodGhpcy5fdGltZSA9PT0gMCkgPyAwIDogMSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICh0aGlzLl9sYXp5ICE9PSBmYWxzZSkge1xuXHRcdFx0XHR0aGlzLl9sYXp5ID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGlmICghdGhpcy5fYWN0aXZlKSBpZiAoIXRoaXMuX3BhdXNlZCAmJiB0aGlzLl90aW1lICE9PSBwcmV2VGltZSAmJiB0aW1lID49IDApIHtcblx0XHRcdFx0dGhpcy5fYWN0aXZlID0gdHJ1ZTsgLy9zbyB0aGF0IGlmIHRoZSB1c2VyIHJlbmRlcnMgYSB0d2VlbiAoYXMgb3Bwb3NlZCB0byB0aGUgdGltZWxpbmUgcmVuZGVyaW5nIGl0KSwgdGhlIHRpbWVsaW5lIGlzIGZvcmNlZCB0byByZS1yZW5kZXIgYW5kIGFsaWduIGl0IHdpdGggdGhlIHByb3BlciB0aW1lL2ZyYW1lIG9uIHRoZSBuZXh0IHJlbmRlcmluZyBjeWNsZS4gTWF5YmUgdGhlIHR3ZWVuIGFscmVhZHkgZmluaXNoZWQgYnV0IHRoZSB1c2VyIG1hbnVhbGx5IHJlLXJlbmRlcnMgaXQgYXMgaGFsZndheSBkb25lLlxuXHRcdFx0fVxuXHRcdFx0aWYgKHByZXZUb3RhbFRpbWUgPT09IDApIHtcblx0XHRcdFx0aWYgKHRoaXMuX2luaXR0ZWQgPT09IDIgJiYgdGltZSA+IDApIHtcblx0XHRcdFx0XHQvL3RoaXMuaW52YWxpZGF0ZSgpO1xuXHRcdFx0XHRcdHRoaXMuX2luaXQoKTsgLy93aWxsIGp1c3QgYXBwbHkgb3ZlcndyaXRpbmcgc2luY2UgX2luaXR0ZWQgb2YgKDIpIG1lYW5zIGl0IHdhcyBhIGZyb20oKSB0d2VlbiB0aGF0IGhhZCBpbW1lZGlhdGVSZW5kZXI6dHJ1ZVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0aGlzLl9zdGFydEF0KSB7XG5cdFx0XHRcdFx0aWYgKHRpbWUgPj0gMCkge1xuXHRcdFx0XHRcdFx0dGhpcy5fc3RhcnRBdC5yZW5kZXIodGltZSwgc3VwcHJlc3NFdmVudHMsIGZvcmNlKTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKCFjYWxsYmFjaykge1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBcIl9kdW1teUdTXCI7IC8vaWYgbm8gY2FsbGJhY2sgaXMgZGVmaW5lZCwgdXNlIGEgZHVtbXkgdmFsdWUganVzdCBzbyB0aGF0IHRoZSBjb25kaXRpb24gYXQgdGhlIGVuZCBldmFsdWF0ZXMgYXMgdHJ1ZSBiZWNhdXNlIF9zdGFydEF0IHNob3VsZCByZW5kZXIgQUZURVIgdGhlIG5vcm1hbCByZW5kZXIgbG9vcCB3aGVuIHRoZSB0aW1lIGlzIG5lZ2F0aXZlLiBXZSBjb3VsZCBoYW5kbGUgdGhpcyBpbiBhIG1vcmUgaW50dWl0aXZlIHdheSwgb2YgY291cnNlLCBidXQgdGhlIHJlbmRlciBsb29wIGlzIHRoZSBNT1NUIGltcG9ydGFudCB0aGluZyB0byBvcHRpbWl6ZSwgc28gdGhpcyB0ZWNobmlxdWUgYWxsb3dzIHVzIHRvIGF2b2lkIGFkZGluZyBleHRyYSBjb25kaXRpb25hbCBsb2dpYyBpbiBhIGhpZ2gtZnJlcXVlbmN5IGFyZWEuXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0aGlzLnZhcnMub25TdGFydCkgaWYgKHRoaXMuX3RvdGFsVGltZSAhPT0gMCB8fCBkdXJhdGlvbiA9PT0gMCkgaWYgKCFzdXBwcmVzc0V2ZW50cykge1xuXHRcdFx0XHRcdHRoaXMuX2NhbGxiYWNrKFwib25TdGFydFwiKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0XG5cdFx0XHRwdCA9IHRoaXMuX2ZpcnN0UFQ7XG5cdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0aWYgKHB0LmYpIHtcblx0XHRcdFx0XHRwdC50W3B0LnBdKHB0LmMgKiB0aGlzLnJhdGlvICsgcHQucyk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cHQudFtwdC5wXSA9IHB0LmMgKiB0aGlzLnJhdGlvICsgcHQucztcblx0XHRcdFx0fVxuXHRcdFx0XHRwdCA9IHB0Ll9uZXh0O1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0XHRpZiAodGhpcy5fb25VcGRhdGUpIHtcblx0XHRcdFx0aWYgKHRpbWUgPCAwKSBpZiAodGhpcy5fc3RhcnRBdCAmJiB0aGlzLl9zdGFydFRpbWUpIHsgLy9pZiB0aGUgdHdlZW4gaXMgcG9zaXRpb25lZCBhdCB0aGUgVkVSWSBiZWdpbm5pbmcgKF9zdGFydFRpbWUgMCkgb2YgaXRzIHBhcmVudCB0aW1lbGluZSwgaXQncyBpbGxlZ2FsIGZvciB0aGUgcGxheWhlYWQgdG8gZ28gYmFjayBmdXJ0aGVyLCBzbyB3ZSBzaG91bGQgbm90IHJlbmRlciB0aGUgcmVjb3JkZWQgc3RhcnRBdCB2YWx1ZXMuXG5cdFx0XHRcdFx0dGhpcy5fc3RhcnRBdC5yZW5kZXIodGltZSwgc3VwcHJlc3NFdmVudHMsIGZvcmNlKTsgLy9ub3RlOiBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucywgd2UgdHVjayB0aGlzIGNvbmRpdGlvbmFsIGxvZ2ljIGluc2lkZSBsZXNzIHRyYXZlbGVkIGFyZWFzIChtb3N0IHR3ZWVucyBkb24ndCBoYXZlIGFuIG9uVXBkYXRlKS4gV2UnZCBqdXN0IGhhdmUgaXQgYXQgdGhlIGVuZCBiZWZvcmUgdGhlIG9uQ29tcGxldGUsIGJ1dCB0aGUgdmFsdWVzIHNob3VsZCBiZSB1cGRhdGVkIGJlZm9yZSBhbnkgb25VcGRhdGUgaXMgY2FsbGVkLCBzbyB3ZSBBTFNPIHB1dCBpdCBoZXJlIGFuZCB0aGVuIGlmIGl0J3Mgbm90IGNhbGxlZCwgd2UgZG8gc28gbGF0ZXIgbmVhciB0aGUgb25Db21wbGV0ZS5cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIXN1cHByZXNzRXZlbnRzKSBpZiAodGhpcy5fdG90YWxUaW1lICE9PSBwcmV2VG90YWxUaW1lIHx8IGNhbGxiYWNrKSB7XG5cdFx0XHRcdFx0dGhpcy5fY2FsbGJhY2soXCJvblVwZGF0ZVwiKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKHRoaXMuX2N5Y2xlICE9PSBwcmV2Q3ljbGUpIGlmICghc3VwcHJlc3NFdmVudHMpIGlmICghdGhpcy5fZ2MpIGlmICh0aGlzLnZhcnMub25SZXBlYXQpIHtcblx0XHRcdFx0dGhpcy5fY2FsbGJhY2soXCJvblJlcGVhdFwiKTtcblx0XHRcdH1cblx0XHRcdGlmIChjYWxsYmFjaykgaWYgKCF0aGlzLl9nYyB8fCBmb3JjZSkgeyAvL2NoZWNrIGdjIGJlY2F1c2UgdGhlcmUncyBhIGNoYW5jZSB0aGF0IGtpbGwoKSBjb3VsZCBiZSBjYWxsZWQgaW4gYW4gb25VcGRhdGVcblx0XHRcdFx0aWYgKHRpbWUgPCAwICYmIHRoaXMuX3N0YXJ0QXQgJiYgIXRoaXMuX29uVXBkYXRlICYmIHRoaXMuX3N0YXJ0VGltZSkgeyAvL2lmIHRoZSB0d2VlbiBpcyBwb3NpdGlvbmVkIGF0IHRoZSBWRVJZIGJlZ2lubmluZyAoX3N0YXJ0VGltZSAwKSBvZiBpdHMgcGFyZW50IHRpbWVsaW5lLCBpdCdzIGlsbGVnYWwgZm9yIHRoZSBwbGF5aGVhZCB0byBnbyBiYWNrIGZ1cnRoZXIsIHNvIHdlIHNob3VsZCBub3QgcmVuZGVyIHRoZSByZWNvcmRlZCBzdGFydEF0IHZhbHVlcy5cblx0XHRcdFx0XHR0aGlzLl9zdGFydEF0LnJlbmRlcih0aW1lLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChpc0NvbXBsZXRlKSB7XG5cdFx0XHRcdFx0aWYgKHRoaXMuX3RpbWVsaW5lLmF1dG9SZW1vdmVDaGlsZHJlbikge1xuXHRcdFx0XHRcdFx0dGhpcy5fZW5hYmxlZChmYWxzZSwgZmFsc2UpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0aGlzLl9hY3RpdmUgPSBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIXN1cHByZXNzRXZlbnRzICYmIHRoaXMudmFyc1tjYWxsYmFja10pIHtcblx0XHRcdFx0XHR0aGlzLl9jYWxsYmFjayhjYWxsYmFjayk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGR1cmF0aW9uID09PSAwICYmIHRoaXMuX3Jhd1ByZXZUaW1lID09PSBfdGlueU51bSAmJiByYXdQcmV2VGltZSAhPT0gX3RpbnlOdW0pIHsgLy90aGUgb25Db21wbGV0ZSBvciBvblJldmVyc2VDb21wbGV0ZSBjb3VsZCB0cmlnZ2VyIG1vdmVtZW50IG9mIHRoZSBwbGF5aGVhZCBhbmQgZm9yIHplcm8tZHVyYXRpb24gdHdlZW5zICh3aGljaCBtdXN0IGRpc2Nlcm4gZGlyZWN0aW9uKSB0aGF0IGxhbmQgZGlyZWN0bHkgYmFjayBvbiB0aGVpciBzdGFydCB0aW1lLCB3ZSBkb24ndCB3YW50IHRvIGZpcmUgYWdhaW4gb24gdGhlIG5leHQgcmVuZGVyLiBUaGluayBvZiBzZXZlcmFsIGFkZFBhdXNlKCkncyBpbiBhIHRpbWVsaW5lIHRoYXQgZm9yY2VzIHRoZSBwbGF5aGVhZCB0byBhIGNlcnRhaW4gc3BvdCwgYnV0IHdoYXQgaWYgaXQncyBhbHJlYWR5IHBhdXNlZCBhbmQgYW5vdGhlciB0d2VlbiBpcyB0d2VlbmluZyB0aGUgXCJ0aW1lXCIgb2YgdGhlIHRpbWVsaW5lPyBFYWNoIHRpbWUgaXQgbW92ZXMgW2ZvcndhcmRdIHBhc3QgdGhhdCBzcG90LCBpdCB3b3VsZCBtb3ZlIGJhY2ssIGFuZCBzaW5jZSBzdXBwcmVzc0V2ZW50cyBpcyB0cnVlLCBpdCdkIHJlc2V0IF9yYXdQcmV2VGltZSB0byBfdGlueU51bSBzbyB0aGF0IHdoZW4gaXQgYmVnaW5zIGFnYWluLCB0aGUgY2FsbGJhY2sgd291bGQgZmlyZSAoc28gdWx0aW1hdGVseSBpdCBjb3VsZCBib3VuY2UgYmFjayBhbmQgZm9ydGggZHVyaW5nIHRoYXQgdHdlZW4pLiBBZ2FpbiwgdGhpcyBpcyBhIHZlcnkgdW5jb21tb24gc2NlbmFyaW8sIGJ1dCBwb3NzaWJsZSBub25ldGhlbGVzcy5cblx0XHRcdFx0XHR0aGlzLl9yYXdQcmV2VGltZSA9IDA7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHRcdFxuLy8tLS0tIFNUQVRJQyBGVU5DVElPTlMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0XHRcblx0XHRUd2Vlbk1heC50byA9IGZ1bmN0aW9uKHRhcmdldCwgZHVyYXRpb24sIHZhcnMpIHtcblx0XHRcdHJldHVybiBuZXcgVHdlZW5NYXgodGFyZ2V0LCBkdXJhdGlvbiwgdmFycyk7XG5cdFx0fTtcblx0XHRcblx0XHRUd2Vlbk1heC5mcm9tID0gZnVuY3Rpb24odGFyZ2V0LCBkdXJhdGlvbiwgdmFycykge1xuXHRcdFx0dmFycy5ydW5CYWNrd2FyZHMgPSB0cnVlO1xuXHRcdFx0dmFycy5pbW1lZGlhdGVSZW5kZXIgPSAodmFycy5pbW1lZGlhdGVSZW5kZXIgIT0gZmFsc2UpO1xuXHRcdFx0cmV0dXJuIG5ldyBUd2Vlbk1heCh0YXJnZXQsIGR1cmF0aW9uLCB2YXJzKTtcblx0XHR9O1xuXHRcdFxuXHRcdFR3ZWVuTWF4LmZyb21UbyA9IGZ1bmN0aW9uKHRhcmdldCwgZHVyYXRpb24sIGZyb21WYXJzLCB0b1ZhcnMpIHtcblx0XHRcdHRvVmFycy5zdGFydEF0ID0gZnJvbVZhcnM7XG5cdFx0XHR0b1ZhcnMuaW1tZWRpYXRlUmVuZGVyID0gKHRvVmFycy5pbW1lZGlhdGVSZW5kZXIgIT0gZmFsc2UgJiYgZnJvbVZhcnMuaW1tZWRpYXRlUmVuZGVyICE9IGZhbHNlKTtcblx0XHRcdHJldHVybiBuZXcgVHdlZW5NYXgodGFyZ2V0LCBkdXJhdGlvbiwgdG9WYXJzKTtcblx0XHR9O1xuXHRcdFxuXHRcdFR3ZWVuTWF4LnN0YWdnZXJUbyA9IFR3ZWVuTWF4LmFsbFRvID0gZnVuY3Rpb24odGFyZ2V0cywgZHVyYXRpb24sIHZhcnMsIHN0YWdnZXIsIG9uQ29tcGxldGVBbGwsIG9uQ29tcGxldGVBbGxQYXJhbXMsIG9uQ29tcGxldGVBbGxTY29wZSkge1xuXHRcdFx0c3RhZ2dlciA9IHN0YWdnZXIgfHwgMDtcblx0XHRcdHZhciBkZWxheSA9IDAsXG5cdFx0XHRcdGEgPSBbXSxcblx0XHRcdFx0ZmluYWxDb21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICh2YXJzLm9uQ29tcGxldGUpIHtcblx0XHRcdFx0XHRcdHZhcnMub25Db21wbGV0ZS5hcHBseSh2YXJzLm9uQ29tcGxldGVTY29wZSB8fCB0aGlzLCBhcmd1bWVudHMpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRvbkNvbXBsZXRlQWxsLmFwcGx5KG9uQ29tcGxldGVBbGxTY29wZSB8fCB2YXJzLmNhbGxiYWNrU2NvcGUgfHwgdGhpcywgb25Db21wbGV0ZUFsbFBhcmFtcyB8fCBfYmxhbmtBcnJheSk7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGN5Y2xlID0gdmFycy5jeWNsZSxcblx0XHRcdFx0ZnJvbUN5Y2xlID0gKHZhcnMuc3RhcnRBdCAmJiB2YXJzLnN0YXJ0QXQuY3ljbGUpLFxuXHRcdFx0XHRsLCBjb3B5LCBpLCBwO1xuXHRcdFx0aWYgKCFfaXNBcnJheSh0YXJnZXRzKSkge1xuXHRcdFx0XHRpZiAodHlwZW9mKHRhcmdldHMpID09PSBcInN0cmluZ1wiKSB7XG5cdFx0XHRcdFx0dGFyZ2V0cyA9IFR3ZWVuTGl0ZS5zZWxlY3Rvcih0YXJnZXRzKSB8fCB0YXJnZXRzO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChfaXNTZWxlY3Rvcih0YXJnZXRzKSkge1xuXHRcdFx0XHRcdHRhcmdldHMgPSBfc2xpY2UodGFyZ2V0cyk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHRhcmdldHMgPSB0YXJnZXRzIHx8IFtdO1xuXHRcdFx0aWYgKHN0YWdnZXIgPCAwKSB7XG5cdFx0XHRcdHRhcmdldHMgPSBfc2xpY2UodGFyZ2V0cyk7XG5cdFx0XHRcdHRhcmdldHMucmV2ZXJzZSgpO1xuXHRcdFx0XHRzdGFnZ2VyICo9IC0xO1xuXHRcdFx0fVxuXHRcdFx0bCA9IHRhcmdldHMubGVuZ3RoIC0gMTtcblx0XHRcdGZvciAoaSA9IDA7IGkgPD0gbDsgaSsrKSB7XG5cdFx0XHRcdGNvcHkgPSB7fTtcblx0XHRcdFx0Zm9yIChwIGluIHZhcnMpIHtcblx0XHRcdFx0XHRjb3B5W3BdID0gdmFyc1twXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoY3ljbGUpIHtcblx0XHRcdFx0XHRfYXBwbHlDeWNsZShjb3B5LCB0YXJnZXRzLCBpKTtcblx0XHRcdFx0XHRpZiAoY29weS5kdXJhdGlvbiAhPSBudWxsKSB7XG5cdFx0XHRcdFx0XHRkdXJhdGlvbiA9IGNvcHkuZHVyYXRpb247XG5cdFx0XHRcdFx0XHRkZWxldGUgY29weS5kdXJhdGlvbjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGZyb21DeWNsZSkge1xuXHRcdFx0XHRcdGZyb21DeWNsZSA9IGNvcHkuc3RhcnRBdCA9IHt9O1xuXHRcdFx0XHRcdGZvciAocCBpbiB2YXJzLnN0YXJ0QXQpIHtcblx0XHRcdFx0XHRcdGZyb21DeWNsZVtwXSA9IHZhcnMuc3RhcnRBdFtwXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0X2FwcGx5Q3ljbGUoY29weS5zdGFydEF0LCB0YXJnZXRzLCBpKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb3B5LmRlbGF5ID0gZGVsYXkgKyAoY29weS5kZWxheSB8fCAwKTtcblx0XHRcdFx0aWYgKGkgPT09IGwgJiYgb25Db21wbGV0ZUFsbCkge1xuXHRcdFx0XHRcdGNvcHkub25Db21wbGV0ZSA9IGZpbmFsQ29tcGxldGU7XG5cdFx0XHRcdH1cblx0XHRcdFx0YVtpXSA9IG5ldyBUd2Vlbk1heCh0YXJnZXRzW2ldLCBkdXJhdGlvbiwgY29weSk7XG5cdFx0XHRcdGRlbGF5ICs9IHN0YWdnZXI7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gYTtcblx0XHR9O1xuXHRcdFxuXHRcdFR3ZWVuTWF4LnN0YWdnZXJGcm9tID0gVHdlZW5NYXguYWxsRnJvbSA9IGZ1bmN0aW9uKHRhcmdldHMsIGR1cmF0aW9uLCB2YXJzLCBzdGFnZ2VyLCBvbkNvbXBsZXRlQWxsLCBvbkNvbXBsZXRlQWxsUGFyYW1zLCBvbkNvbXBsZXRlQWxsU2NvcGUpIHtcblx0XHRcdHZhcnMucnVuQmFja3dhcmRzID0gdHJ1ZTtcblx0XHRcdHZhcnMuaW1tZWRpYXRlUmVuZGVyID0gKHZhcnMuaW1tZWRpYXRlUmVuZGVyICE9IGZhbHNlKTtcblx0XHRcdHJldHVybiBUd2Vlbk1heC5zdGFnZ2VyVG8odGFyZ2V0cywgZHVyYXRpb24sIHZhcnMsIHN0YWdnZXIsIG9uQ29tcGxldGVBbGwsIG9uQ29tcGxldGVBbGxQYXJhbXMsIG9uQ29tcGxldGVBbGxTY29wZSk7XG5cdFx0fTtcblx0XHRcblx0XHRUd2Vlbk1heC5zdGFnZ2VyRnJvbVRvID0gVHdlZW5NYXguYWxsRnJvbVRvID0gZnVuY3Rpb24odGFyZ2V0cywgZHVyYXRpb24sIGZyb21WYXJzLCB0b1ZhcnMsIHN0YWdnZXIsIG9uQ29tcGxldGVBbGwsIG9uQ29tcGxldGVBbGxQYXJhbXMsIG9uQ29tcGxldGVBbGxTY29wZSkge1xuXHRcdFx0dG9WYXJzLnN0YXJ0QXQgPSBmcm9tVmFycztcblx0XHRcdHRvVmFycy5pbW1lZGlhdGVSZW5kZXIgPSAodG9WYXJzLmltbWVkaWF0ZVJlbmRlciAhPSBmYWxzZSAmJiBmcm9tVmFycy5pbW1lZGlhdGVSZW5kZXIgIT0gZmFsc2UpO1xuXHRcdFx0cmV0dXJuIFR3ZWVuTWF4LnN0YWdnZXJUbyh0YXJnZXRzLCBkdXJhdGlvbiwgdG9WYXJzLCBzdGFnZ2VyLCBvbkNvbXBsZXRlQWxsLCBvbkNvbXBsZXRlQWxsUGFyYW1zLCBvbkNvbXBsZXRlQWxsU2NvcGUpO1xuXHRcdH07XG5cdFx0XHRcdFxuXHRcdFR3ZWVuTWF4LmRlbGF5ZWRDYWxsID0gZnVuY3Rpb24oZGVsYXksIGNhbGxiYWNrLCBwYXJhbXMsIHNjb3BlLCB1c2VGcmFtZXMpIHtcblx0XHRcdHJldHVybiBuZXcgVHdlZW5NYXgoY2FsbGJhY2ssIDAsIHtkZWxheTpkZWxheSwgb25Db21wbGV0ZTpjYWxsYmFjaywgb25Db21wbGV0ZVBhcmFtczpwYXJhbXMsIGNhbGxiYWNrU2NvcGU6c2NvcGUsIG9uUmV2ZXJzZUNvbXBsZXRlOmNhbGxiYWNrLCBvblJldmVyc2VDb21wbGV0ZVBhcmFtczpwYXJhbXMsIGltbWVkaWF0ZVJlbmRlcjpmYWxzZSwgdXNlRnJhbWVzOnVzZUZyYW1lcywgb3ZlcndyaXRlOjB9KTtcblx0XHR9O1xuXHRcdFxuXHRcdFR3ZWVuTWF4LnNldCA9IGZ1bmN0aW9uKHRhcmdldCwgdmFycykge1xuXHRcdFx0cmV0dXJuIG5ldyBUd2Vlbk1heCh0YXJnZXQsIDAsIHZhcnMpO1xuXHRcdH07XG5cdFx0XG5cdFx0VHdlZW5NYXguaXNUd2VlbmluZyA9IGZ1bmN0aW9uKHRhcmdldCkge1xuXHRcdFx0cmV0dXJuIChUd2VlbkxpdGUuZ2V0VHdlZW5zT2YodGFyZ2V0LCB0cnVlKS5sZW5ndGggPiAwKTtcblx0XHR9O1xuXHRcdFxuXHRcdHZhciBfZ2V0Q2hpbGRyZW5PZiA9IGZ1bmN0aW9uKHRpbWVsaW5lLCBpbmNsdWRlVGltZWxpbmVzKSB7XG5cdFx0XHRcdHZhciBhID0gW10sXG5cdFx0XHRcdFx0Y250ID0gMCxcblx0XHRcdFx0XHR0d2VlbiA9IHRpbWVsaW5lLl9maXJzdDtcblx0XHRcdFx0d2hpbGUgKHR3ZWVuKSB7XG5cdFx0XHRcdFx0aWYgKHR3ZWVuIGluc3RhbmNlb2YgVHdlZW5MaXRlKSB7XG5cdFx0XHRcdFx0XHRhW2NudCsrXSA9IHR3ZWVuO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRpZiAoaW5jbHVkZVRpbWVsaW5lcykge1xuXHRcdFx0XHRcdFx0XHRhW2NudCsrXSA9IHR3ZWVuO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0YSA9IGEuY29uY2F0KF9nZXRDaGlsZHJlbk9mKHR3ZWVuLCBpbmNsdWRlVGltZWxpbmVzKSk7XG5cdFx0XHRcdFx0XHRjbnQgPSBhLmxlbmd0aDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dHdlZW4gPSB0d2Vlbi5fbmV4dDtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gYTtcblx0XHRcdH0sIFxuXHRcdFx0Z2V0QWxsVHdlZW5zID0gVHdlZW5NYXguZ2V0QWxsVHdlZW5zID0gZnVuY3Rpb24oaW5jbHVkZVRpbWVsaW5lcykge1xuXHRcdFx0XHRyZXR1cm4gX2dldENoaWxkcmVuT2YoQW5pbWF0aW9uLl9yb290VGltZWxpbmUsIGluY2x1ZGVUaW1lbGluZXMpLmNvbmNhdCggX2dldENoaWxkcmVuT2YoQW5pbWF0aW9uLl9yb290RnJhbWVzVGltZWxpbmUsIGluY2x1ZGVUaW1lbGluZXMpICk7XG5cdFx0XHR9O1xuXHRcdFxuXHRcdFR3ZWVuTWF4LmtpbGxBbGwgPSBmdW5jdGlvbihjb21wbGV0ZSwgdHdlZW5zLCBkZWxheWVkQ2FsbHMsIHRpbWVsaW5lcykge1xuXHRcdFx0aWYgKHR3ZWVucyA9PSBudWxsKSB7XG5cdFx0XHRcdHR3ZWVucyA9IHRydWU7XG5cdFx0XHR9XG5cdFx0XHRpZiAoZGVsYXllZENhbGxzID09IG51bGwpIHtcblx0XHRcdFx0ZGVsYXllZENhbGxzID0gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdHZhciBhID0gZ2V0QWxsVHdlZW5zKCh0aW1lbGluZXMgIT0gZmFsc2UpKSxcblx0XHRcdFx0bCA9IGEubGVuZ3RoLFxuXHRcdFx0XHRhbGxUcnVlID0gKHR3ZWVucyAmJiBkZWxheWVkQ2FsbHMgJiYgdGltZWxpbmVzKSxcblx0XHRcdFx0aXNEQywgdHdlZW4sIGk7XG5cdFx0XHRmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRcdHR3ZWVuID0gYVtpXTtcblx0XHRcdFx0aWYgKGFsbFRydWUgfHwgKHR3ZWVuIGluc3RhbmNlb2YgU2ltcGxlVGltZWxpbmUpIHx8ICgoaXNEQyA9ICh0d2Vlbi50YXJnZXQgPT09IHR3ZWVuLnZhcnMub25Db21wbGV0ZSkpICYmIGRlbGF5ZWRDYWxscykgfHwgKHR3ZWVucyAmJiAhaXNEQykpIHtcblx0XHRcdFx0XHRpZiAoY29tcGxldGUpIHtcblx0XHRcdFx0XHRcdHR3ZWVuLnRvdGFsVGltZSh0d2Vlbi5fcmV2ZXJzZWQgPyAwIDogdHdlZW4udG90YWxEdXJhdGlvbigpKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dHdlZW4uX2VuYWJsZWQoZmFsc2UsIGZhbHNlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHRcdFxuXHRcdFR3ZWVuTWF4LmtpbGxDaGlsZFR3ZWVuc09mID0gZnVuY3Rpb24ocGFyZW50LCBjb21wbGV0ZSkge1xuXHRcdFx0aWYgKHBhcmVudCA9PSBudWxsKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdHZhciB0bCA9IFR3ZWVuTGl0ZUludGVybmFscy50d2Vlbkxvb2t1cCxcblx0XHRcdFx0YSwgY3VyUGFyZW50LCBwLCBpLCBsO1xuXHRcdFx0aWYgKHR5cGVvZihwYXJlbnQpID09PSBcInN0cmluZ1wiKSB7XG5cdFx0XHRcdHBhcmVudCA9IFR3ZWVuTGl0ZS5zZWxlY3RvcihwYXJlbnQpIHx8IHBhcmVudDtcblx0XHRcdH1cblx0XHRcdGlmIChfaXNTZWxlY3RvcihwYXJlbnQpKSB7XG5cdFx0XHRcdHBhcmVudCA9IF9zbGljZShwYXJlbnQpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKF9pc0FycmF5KHBhcmVudCkpIHtcblx0XHRcdFx0aSA9IHBhcmVudC5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdFR3ZWVuTWF4LmtpbGxDaGlsZFR3ZWVuc09mKHBhcmVudFtpXSwgY29tcGxldGUpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdGEgPSBbXTtcblx0XHRcdGZvciAocCBpbiB0bCkge1xuXHRcdFx0XHRjdXJQYXJlbnQgPSB0bFtwXS50YXJnZXQucGFyZW50Tm9kZTtcblx0XHRcdFx0d2hpbGUgKGN1clBhcmVudCkge1xuXHRcdFx0XHRcdGlmIChjdXJQYXJlbnQgPT09IHBhcmVudCkge1xuXHRcdFx0XHRcdFx0YSA9IGEuY29uY2F0KHRsW3BdLnR3ZWVucyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGN1clBhcmVudCA9IGN1clBhcmVudC5wYXJlbnROb2RlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRsID0gYS5sZW5ndGg7XG5cdFx0XHRmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRcdGlmIChjb21wbGV0ZSkge1xuXHRcdFx0XHRcdGFbaV0udG90YWxUaW1lKGFbaV0udG90YWxEdXJhdGlvbigpKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRhW2ldLl9lbmFibGVkKGZhbHNlLCBmYWxzZSk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdHZhciBfY2hhbmdlUGF1c2UgPSBmdW5jdGlvbihwYXVzZSwgdHdlZW5zLCBkZWxheWVkQ2FsbHMsIHRpbWVsaW5lcykge1xuXHRcdFx0dHdlZW5zID0gKHR3ZWVucyAhPT0gZmFsc2UpO1xuXHRcdFx0ZGVsYXllZENhbGxzID0gKGRlbGF5ZWRDYWxscyAhPT0gZmFsc2UpO1xuXHRcdFx0dGltZWxpbmVzID0gKHRpbWVsaW5lcyAhPT0gZmFsc2UpO1xuXHRcdFx0dmFyIGEgPSBnZXRBbGxUd2VlbnModGltZWxpbmVzKSxcblx0XHRcdFx0YWxsVHJ1ZSA9ICh0d2VlbnMgJiYgZGVsYXllZENhbGxzICYmIHRpbWVsaW5lcyksXG5cdFx0XHRcdGkgPSBhLmxlbmd0aCxcblx0XHRcdFx0aXNEQywgdHdlZW47XG5cdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0dHdlZW4gPSBhW2ldO1xuXHRcdFx0XHRpZiAoYWxsVHJ1ZSB8fCAodHdlZW4gaW5zdGFuY2VvZiBTaW1wbGVUaW1lbGluZSkgfHwgKChpc0RDID0gKHR3ZWVuLnRhcmdldCA9PT0gdHdlZW4udmFycy5vbkNvbXBsZXRlKSkgJiYgZGVsYXllZENhbGxzKSB8fCAodHdlZW5zICYmICFpc0RDKSkge1xuXHRcdFx0XHRcdHR3ZWVuLnBhdXNlZChwYXVzZSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHRcdFxuXHRcdFR3ZWVuTWF4LnBhdXNlQWxsID0gZnVuY3Rpb24odHdlZW5zLCBkZWxheWVkQ2FsbHMsIHRpbWVsaW5lcykge1xuXHRcdFx0X2NoYW5nZVBhdXNlKHRydWUsIHR3ZWVucywgZGVsYXllZENhbGxzLCB0aW1lbGluZXMpO1xuXHRcdH07XG5cdFx0XG5cdFx0VHdlZW5NYXgucmVzdW1lQWxsID0gZnVuY3Rpb24odHdlZW5zLCBkZWxheWVkQ2FsbHMsIHRpbWVsaW5lcykge1xuXHRcdFx0X2NoYW5nZVBhdXNlKGZhbHNlLCB0d2VlbnMsIGRlbGF5ZWRDYWxscywgdGltZWxpbmVzKTtcblx0XHR9O1xuXG5cdFx0VHdlZW5NYXguZ2xvYmFsVGltZVNjYWxlID0gZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdHZhciB0bCA9IEFuaW1hdGlvbi5fcm9vdFRpbWVsaW5lLFxuXHRcdFx0XHR0ID0gVHdlZW5MaXRlLnRpY2tlci50aW1lO1xuXHRcdFx0aWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG5cdFx0XHRcdHJldHVybiB0bC5fdGltZVNjYWxlO1xuXHRcdFx0fVxuXHRcdFx0dmFsdWUgPSB2YWx1ZSB8fCBfdGlueU51bTsgLy9jYW4ndCBhbGxvdyB6ZXJvIGJlY2F1c2UgaXQnbGwgdGhyb3cgdGhlIG1hdGggb2ZmXG5cdFx0XHR0bC5fc3RhcnRUaW1lID0gdCAtICgodCAtIHRsLl9zdGFydFRpbWUpICogdGwuX3RpbWVTY2FsZSAvIHZhbHVlKTtcblx0XHRcdHRsID0gQW5pbWF0aW9uLl9yb290RnJhbWVzVGltZWxpbmU7XG5cdFx0XHR0ID0gVHdlZW5MaXRlLnRpY2tlci5mcmFtZTtcblx0XHRcdHRsLl9zdGFydFRpbWUgPSB0IC0gKCh0IC0gdGwuX3N0YXJ0VGltZSkgKiB0bC5fdGltZVNjYWxlIC8gdmFsdWUpO1xuXHRcdFx0dGwuX3RpbWVTY2FsZSA9IEFuaW1hdGlvbi5fcm9vdFRpbWVsaW5lLl90aW1lU2NhbGUgPSB2YWx1ZTtcblx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9O1xuXHRcdFxuXHRcbi8vLS0tLSBHRVRURVJTIC8gU0VUVEVSUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFx0XG5cdFx0cC5wcm9ncmVzcyA9IGZ1bmN0aW9uKHZhbHVlLCBzdXBwcmVzc0V2ZW50cykge1xuXHRcdFx0cmV0dXJuICghYXJndW1lbnRzLmxlbmd0aCkgPyB0aGlzLl90aW1lIC8gdGhpcy5kdXJhdGlvbigpIDogdGhpcy50b3RhbFRpbWUoIHRoaXMuZHVyYXRpb24oKSAqICgodGhpcy5feW95byAmJiAodGhpcy5fY3ljbGUgJiAxKSAhPT0gMCkgPyAxIC0gdmFsdWUgOiB2YWx1ZSkgKyAodGhpcy5fY3ljbGUgKiAodGhpcy5fZHVyYXRpb24gKyB0aGlzLl9yZXBlYXREZWxheSkpLCBzdXBwcmVzc0V2ZW50cyk7XG5cdFx0fTtcblx0XHRcblx0XHRwLnRvdGFsUHJvZ3Jlc3MgPSBmdW5jdGlvbih2YWx1ZSwgc3VwcHJlc3NFdmVudHMpIHtcblx0XHRcdHJldHVybiAoIWFyZ3VtZW50cy5sZW5ndGgpID8gdGhpcy5fdG90YWxUaW1lIC8gdGhpcy50b3RhbER1cmF0aW9uKCkgOiB0aGlzLnRvdGFsVGltZSggdGhpcy50b3RhbER1cmF0aW9uKCkgKiB2YWx1ZSwgc3VwcHJlc3NFdmVudHMpO1xuXHRcdH07XG5cdFx0XG5cdFx0cC50aW1lID0gZnVuY3Rpb24odmFsdWUsIHN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX3RpbWU7XG5cdFx0XHR9XG5cdFx0XHRpZiAodGhpcy5fZGlydHkpIHtcblx0XHRcdFx0dGhpcy50b3RhbER1cmF0aW9uKCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAodmFsdWUgPiB0aGlzLl9kdXJhdGlvbikge1xuXHRcdFx0XHR2YWx1ZSA9IHRoaXMuX2R1cmF0aW9uO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHRoaXMuX3lveW8gJiYgKHRoaXMuX2N5Y2xlICYgMSkgIT09IDApIHtcblx0XHRcdFx0dmFsdWUgPSAodGhpcy5fZHVyYXRpb24gLSB2YWx1ZSkgKyAodGhpcy5fY3ljbGUgKiAodGhpcy5fZHVyYXRpb24gKyB0aGlzLl9yZXBlYXREZWxheSkpO1xuXHRcdFx0fSBlbHNlIGlmICh0aGlzLl9yZXBlYXQgIT09IDApIHtcblx0XHRcdFx0dmFsdWUgKz0gdGhpcy5fY3ljbGUgKiAodGhpcy5fZHVyYXRpb24gKyB0aGlzLl9yZXBlYXREZWxheSk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy50b3RhbFRpbWUodmFsdWUsIHN1cHByZXNzRXZlbnRzKTtcblx0XHR9O1xuXG5cdFx0cC5kdXJhdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX2R1cmF0aW9uOyAvL2Rvbid0IHNldCBfZGlydHkgPSBmYWxzZSBiZWNhdXNlIHRoZXJlIGNvdWxkIGJlIHJlcGVhdHMgdGhhdCBoYXZlbid0IGJlZW4gZmFjdG9yZWQgaW50byB0aGUgX3RvdGFsRHVyYXRpb24geWV0LiBPdGhlcndpc2UsIGlmIHlvdSBjcmVhdGUgYSByZXBlYXRlZCBUd2Vlbk1heCBhbmQgdGhlbiBpbW1lZGlhdGVseSBjaGVjayBpdHMgZHVyYXRpb24oKSwgaXQgd291bGQgY2FjaGUgdGhlIHZhbHVlIGFuZCB0aGUgdG90YWxEdXJhdGlvbiB3b3VsZCBub3QgYmUgY29ycmVjdCwgdGh1cyByZXBlYXRzIHdvdWxkbid0IHRha2UgZWZmZWN0LlxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIEFuaW1hdGlvbi5wcm90b3R5cGUuZHVyYXRpb24uY2FsbCh0aGlzLCB2YWx1ZSk7XG5cdFx0fTtcblxuXHRcdHAudG90YWxEdXJhdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0aWYgKHRoaXMuX2RpcnR5KSB7XG5cdFx0XHRcdFx0Ly9pbnN0ZWFkIG9mIEluZmluaXR5LCB3ZSB1c2UgOTk5OTk5OTk5OTk5IHNvIHRoYXQgd2UgY2FuIGFjY29tbW9kYXRlIHJldmVyc2VzXG5cdFx0XHRcdFx0dGhpcy5fdG90YWxEdXJhdGlvbiA9ICh0aGlzLl9yZXBlYXQgPT09IC0xKSA/IDk5OTk5OTk5OTk5OSA6IHRoaXMuX2R1cmF0aW9uICogKHRoaXMuX3JlcGVhdCArIDEpICsgKHRoaXMuX3JlcGVhdERlbGF5ICogdGhpcy5fcmVwZWF0KTtcblx0XHRcdFx0XHR0aGlzLl9kaXJ0eSA9IGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzLl90b3RhbER1cmF0aW9uO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuICh0aGlzLl9yZXBlYXQgPT09IC0xKSA/IHRoaXMgOiB0aGlzLmR1cmF0aW9uKCAodmFsdWUgLSAodGhpcy5fcmVwZWF0ICogdGhpcy5fcmVwZWF0RGVsYXkpKSAvICh0aGlzLl9yZXBlYXQgKyAxKSApO1xuXHRcdH07XG5cdFx0XG5cdFx0cC5yZXBlYXQgPSBmdW5jdGlvbih2YWx1ZSkge1xuXHRcdFx0aWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLl9yZXBlYXQ7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLl9yZXBlYXQgPSB2YWx1ZTtcblx0XHRcdHJldHVybiB0aGlzLl91bmNhY2hlKHRydWUpO1xuXHRcdH07XG5cdFx0XG5cdFx0cC5yZXBlYXREZWxheSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX3JlcGVhdERlbGF5O1xuXHRcdFx0fVxuXHRcdFx0dGhpcy5fcmVwZWF0RGVsYXkgPSB2YWx1ZTtcblx0XHRcdHJldHVybiB0aGlzLl91bmNhY2hlKHRydWUpO1xuXHRcdH07XG5cdFx0XG5cdFx0cC55b3lvID0gZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5feW95bztcblx0XHRcdH1cblx0XHRcdHRoaXMuX3lveW8gPSB2YWx1ZTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cdFx0XG5cdFx0XG5cdFx0cmV0dXJuIFR3ZWVuTWF4O1xuXHRcdFxuXHR9LCB0cnVlKTtcblxuXG5cblxuXG5cblxuXG4vKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogVGltZWxpbmVMaXRlXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblx0X2dzU2NvcGUuX2dzRGVmaW5lKFwiVGltZWxpbmVMaXRlXCIsIFtcImNvcmUuQW5pbWF0aW9uXCIsXCJjb3JlLlNpbXBsZVRpbWVsaW5lXCIsXCJUd2VlbkxpdGVcIl0sIGZ1bmN0aW9uKEFuaW1hdGlvbiwgU2ltcGxlVGltZWxpbmUsIFR3ZWVuTGl0ZSkge1xuXG5cdFx0dmFyIFRpbWVsaW5lTGl0ZSA9IGZ1bmN0aW9uKHZhcnMpIHtcblx0XHRcdFx0U2ltcGxlVGltZWxpbmUuY2FsbCh0aGlzLCB2YXJzKTtcblx0XHRcdFx0dGhpcy5fbGFiZWxzID0ge307XG5cdFx0XHRcdHRoaXMuYXV0b1JlbW92ZUNoaWxkcmVuID0gKHRoaXMudmFycy5hdXRvUmVtb3ZlQ2hpbGRyZW4gPT09IHRydWUpO1xuXHRcdFx0XHR0aGlzLnNtb290aENoaWxkVGltaW5nID0gKHRoaXMudmFycy5zbW9vdGhDaGlsZFRpbWluZyA9PT0gdHJ1ZSk7XG5cdFx0XHRcdHRoaXMuX3NvcnRDaGlsZHJlbiA9IHRydWU7XG5cdFx0XHRcdHRoaXMuX29uVXBkYXRlID0gdGhpcy52YXJzLm9uVXBkYXRlO1xuXHRcdFx0XHR2YXIgdiA9IHRoaXMudmFycyxcblx0XHRcdFx0XHR2YWwsIHA7XG5cdFx0XHRcdGZvciAocCBpbiB2KSB7XG5cdFx0XHRcdFx0dmFsID0gdltwXTtcblx0XHRcdFx0XHRpZiAoX2lzQXJyYXkodmFsKSkgaWYgKHZhbC5qb2luKFwiXCIpLmluZGV4T2YoXCJ7c2VsZn1cIikgIT09IC0xKSB7XG5cdFx0XHRcdFx0XHR2W3BdID0gdGhpcy5fc3dhcFNlbGZJblBhcmFtcyh2YWwpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoX2lzQXJyYXkodi50d2VlbnMpKSB7XG5cdFx0XHRcdFx0dGhpcy5hZGQodi50d2VlbnMsIDAsIHYuYWxpZ24sIHYuc3RhZ2dlcik7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRfdGlueU51bSA9IDAuMDAwMDAwMDAwMSxcblx0XHRcdFR3ZWVuTGl0ZUludGVybmFscyA9IFR3ZWVuTGl0ZS5faW50ZXJuYWxzLFxuXHRcdFx0X2ludGVybmFscyA9IFRpbWVsaW5lTGl0ZS5faW50ZXJuYWxzID0ge30sXG5cdFx0XHRfaXNTZWxlY3RvciA9IFR3ZWVuTGl0ZUludGVybmFscy5pc1NlbGVjdG9yLFxuXHRcdFx0X2lzQXJyYXkgPSBUd2VlbkxpdGVJbnRlcm5hbHMuaXNBcnJheSxcblx0XHRcdF9sYXp5VHdlZW5zID0gVHdlZW5MaXRlSW50ZXJuYWxzLmxhenlUd2VlbnMsXG5cdFx0XHRfbGF6eVJlbmRlciA9IFR3ZWVuTGl0ZUludGVybmFscy5sYXp5UmVuZGVyLFxuXHRcdFx0X2dsb2JhbHMgPSBfZ3NTY29wZS5fZ3NEZWZpbmUuZ2xvYmFscyxcblx0XHRcdF9jb3B5ID0gZnVuY3Rpb24odmFycykge1xuXHRcdFx0XHR2YXIgY29weSA9IHt9LCBwO1xuXHRcdFx0XHRmb3IgKHAgaW4gdmFycykge1xuXHRcdFx0XHRcdGNvcHlbcF0gPSB2YXJzW3BdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBjb3B5O1xuXHRcdFx0fSxcblx0XHRcdF9hcHBseUN5Y2xlID0gZnVuY3Rpb24odmFycywgdGFyZ2V0cywgaSkge1xuXHRcdFx0XHR2YXIgYWx0ID0gdmFycy5jeWNsZSxcblx0XHRcdFx0XHRwLCB2YWw7XG5cdFx0XHRcdGZvciAocCBpbiBhbHQpIHtcblx0XHRcdFx0XHR2YWwgPSBhbHRbcF07XG5cdFx0XHRcdFx0dmFyc1twXSA9ICh0eXBlb2YodmFsKSA9PT0gXCJmdW5jdGlvblwiKSA/IHZhbC5jYWxsKHRhcmdldHNbaV0sIGkpIDogdmFsW2kgJSB2YWwubGVuZ3RoXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkZWxldGUgdmFycy5jeWNsZTtcblx0XHRcdH0sXG5cdFx0XHRfcGF1c2VDYWxsYmFjayA9IF9pbnRlcm5hbHMucGF1c2VDYWxsYmFjayA9IGZ1bmN0aW9uKCkge30sXG5cdFx0XHRfc2xpY2UgPSBmdW5jdGlvbihhKSB7IC8vZG9uJ3QgdXNlIFtdLnNsaWNlIGJlY2F1c2UgdGhhdCBkb2Vzbid0IHdvcmsgaW4gSUU4IHdpdGggYSBOb2RlTGlzdCB0aGF0J3MgcmV0dXJuZWQgYnkgcXVlcnlTZWxlY3RvckFsbCgpXG5cdFx0XHRcdHZhciBiID0gW10sXG5cdFx0XHRcdFx0bCA9IGEubGVuZ3RoLFxuXHRcdFx0XHRcdGk7XG5cdFx0XHRcdGZvciAoaSA9IDA7IGkgIT09IGw7IGIucHVzaChhW2krK10pKTtcblx0XHRcdFx0cmV0dXJuIGI7XG5cdFx0XHR9LFxuXHRcdFx0cCA9IFRpbWVsaW5lTGl0ZS5wcm90b3R5cGUgPSBuZXcgU2ltcGxlVGltZWxpbmUoKTtcblxuXHRcdFRpbWVsaW5lTGl0ZS52ZXJzaW9uID0gXCIxLjE5LjBcIjtcblx0XHRwLmNvbnN0cnVjdG9yID0gVGltZWxpbmVMaXRlO1xuXHRcdHAua2lsbCgpLl9nYyA9IHAuX2ZvcmNpbmdQbGF5aGVhZCA9IHAuX2hhc1BhdXNlID0gZmFsc2U7XG5cblx0XHQvKiBtaWdodCB1c2UgbGF0ZXIuLi5cblx0XHQvL3RyYW5zbGF0ZXMgYSBsb2NhbCB0aW1lIGluc2lkZSBhbiBhbmltYXRpb24gdG8gdGhlIGNvcnJlc3BvbmRpbmcgdGltZSBvbiB0aGUgcm9vdC9nbG9iYWwgdGltZWxpbmUsIGZhY3RvcmluZyBpbiBhbGwgbmVzdGluZyBhbmQgdGltZVNjYWxlcy5cblx0XHRmdW5jdGlvbiBsb2NhbFRvR2xvYmFsKHRpbWUsIGFuaW1hdGlvbikge1xuXHRcdFx0d2hpbGUgKGFuaW1hdGlvbikge1xuXHRcdFx0XHR0aW1lID0gKHRpbWUgLyBhbmltYXRpb24uX3RpbWVTY2FsZSkgKyBhbmltYXRpb24uX3N0YXJ0VGltZTtcblx0XHRcdFx0YW5pbWF0aW9uID0gYW5pbWF0aW9uLnRpbWVsaW5lO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRpbWU7XG5cdFx0fVxuXG5cdFx0Ly90cmFuc2xhdGVzIHRoZSBzdXBwbGllZCB0aW1lIG9uIHRoZSByb290L2dsb2JhbCB0aW1lbGluZSBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIGxvY2FsIHRpbWUgaW5zaWRlIGEgcGFydGljdWxhciBhbmltYXRpb24sIGZhY3RvcmluZyBpbiBhbGwgbmVzdGluZyBhbmQgdGltZVNjYWxlc1xuXHRcdGZ1bmN0aW9uIGdsb2JhbFRvTG9jYWwodGltZSwgYW5pbWF0aW9uKSB7XG5cdFx0XHR2YXIgc2NhbGUgPSAxO1xuXHRcdFx0dGltZSAtPSBsb2NhbFRvR2xvYmFsKDAsIGFuaW1hdGlvbik7XG5cdFx0XHR3aGlsZSAoYW5pbWF0aW9uKSB7XG5cdFx0XHRcdHNjYWxlICo9IGFuaW1hdGlvbi5fdGltZVNjYWxlO1xuXHRcdFx0XHRhbmltYXRpb24gPSBhbmltYXRpb24udGltZWxpbmU7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGltZSAqIHNjYWxlO1xuXHRcdH1cblx0XHQqL1xuXG5cdFx0cC50byA9IGZ1bmN0aW9uKHRhcmdldCwgZHVyYXRpb24sIHZhcnMsIHBvc2l0aW9uKSB7XG5cdFx0XHR2YXIgRW5naW5lID0gKHZhcnMucmVwZWF0ICYmIF9nbG9iYWxzLlR3ZWVuTWF4KSB8fCBUd2VlbkxpdGU7XG5cdFx0XHRyZXR1cm4gZHVyYXRpb24gPyB0aGlzLmFkZCggbmV3IEVuZ2luZSh0YXJnZXQsIGR1cmF0aW9uLCB2YXJzKSwgcG9zaXRpb24pIDogdGhpcy5zZXQodGFyZ2V0LCB2YXJzLCBwb3NpdGlvbik7XG5cdFx0fTtcblxuXHRcdHAuZnJvbSA9IGZ1bmN0aW9uKHRhcmdldCwgZHVyYXRpb24sIHZhcnMsIHBvc2l0aW9uKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5hZGQoICgodmFycy5yZXBlYXQgJiYgX2dsb2JhbHMuVHdlZW5NYXgpIHx8IFR3ZWVuTGl0ZSkuZnJvbSh0YXJnZXQsIGR1cmF0aW9uLCB2YXJzKSwgcG9zaXRpb24pO1xuXHRcdH07XG5cblx0XHRwLmZyb21UbyA9IGZ1bmN0aW9uKHRhcmdldCwgZHVyYXRpb24sIGZyb21WYXJzLCB0b1ZhcnMsIHBvc2l0aW9uKSB7XG5cdFx0XHR2YXIgRW5naW5lID0gKHRvVmFycy5yZXBlYXQgJiYgX2dsb2JhbHMuVHdlZW5NYXgpIHx8IFR3ZWVuTGl0ZTtcblx0XHRcdHJldHVybiBkdXJhdGlvbiA/IHRoaXMuYWRkKCBFbmdpbmUuZnJvbVRvKHRhcmdldCwgZHVyYXRpb24sIGZyb21WYXJzLCB0b1ZhcnMpLCBwb3NpdGlvbikgOiB0aGlzLnNldCh0YXJnZXQsIHRvVmFycywgcG9zaXRpb24pO1xuXHRcdH07XG5cblx0XHRwLnN0YWdnZXJUbyA9IGZ1bmN0aW9uKHRhcmdldHMsIGR1cmF0aW9uLCB2YXJzLCBzdGFnZ2VyLCBwb3NpdGlvbiwgb25Db21wbGV0ZUFsbCwgb25Db21wbGV0ZUFsbFBhcmFtcywgb25Db21wbGV0ZUFsbFNjb3BlKSB7XG5cdFx0XHR2YXIgdGwgPSBuZXcgVGltZWxpbmVMaXRlKHtvbkNvbXBsZXRlOm9uQ29tcGxldGVBbGwsIG9uQ29tcGxldGVQYXJhbXM6b25Db21wbGV0ZUFsbFBhcmFtcywgY2FsbGJhY2tTY29wZTpvbkNvbXBsZXRlQWxsU2NvcGUsIHNtb290aENoaWxkVGltaW5nOnRoaXMuc21vb3RoQ2hpbGRUaW1pbmd9KSxcblx0XHRcdFx0Y3ljbGUgPSB2YXJzLmN5Y2xlLFxuXHRcdFx0XHRjb3B5LCBpO1xuXHRcdFx0aWYgKHR5cGVvZih0YXJnZXRzKSA9PT0gXCJzdHJpbmdcIikge1xuXHRcdFx0XHR0YXJnZXRzID0gVHdlZW5MaXRlLnNlbGVjdG9yKHRhcmdldHMpIHx8IHRhcmdldHM7XG5cdFx0XHR9XG5cdFx0XHR0YXJnZXRzID0gdGFyZ2V0cyB8fCBbXTtcblx0XHRcdGlmIChfaXNTZWxlY3Rvcih0YXJnZXRzKSkgeyAvL3NlbnNlcyBpZiB0aGUgdGFyZ2V0cyBvYmplY3QgaXMgYSBzZWxlY3Rvci4gSWYgaXQgaXMsIHdlIHNob3VsZCB0cmFuc2xhdGUgaXQgaW50byBhbiBhcnJheS5cblx0XHRcdFx0dGFyZ2V0cyA9IF9zbGljZSh0YXJnZXRzKTtcblx0XHRcdH1cblx0XHRcdHN0YWdnZXIgPSBzdGFnZ2VyIHx8IDA7XG5cdFx0XHRpZiAoc3RhZ2dlciA8IDApIHtcblx0XHRcdFx0dGFyZ2V0cyA9IF9zbGljZSh0YXJnZXRzKTtcblx0XHRcdFx0dGFyZ2V0cy5yZXZlcnNlKCk7XG5cdFx0XHRcdHN0YWdnZXIgKj0gLTE7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKGkgPSAwOyBpIDwgdGFyZ2V0cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRjb3B5ID0gX2NvcHkodmFycyk7XG5cdFx0XHRcdGlmIChjb3B5LnN0YXJ0QXQpIHtcblx0XHRcdFx0XHRjb3B5LnN0YXJ0QXQgPSBfY29weShjb3B5LnN0YXJ0QXQpO1xuXHRcdFx0XHRcdGlmIChjb3B5LnN0YXJ0QXQuY3ljbGUpIHtcblx0XHRcdFx0XHRcdF9hcHBseUN5Y2xlKGNvcHkuc3RhcnRBdCwgdGFyZ2V0cywgaSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChjeWNsZSkge1xuXHRcdFx0XHRcdF9hcHBseUN5Y2xlKGNvcHksIHRhcmdldHMsIGkpO1xuXHRcdFx0XHRcdGlmIChjb3B5LmR1cmF0aW9uICE9IG51bGwpIHtcblx0XHRcdFx0XHRcdGR1cmF0aW9uID0gY29weS5kdXJhdGlvbjtcblx0XHRcdFx0XHRcdGRlbGV0ZSBjb3B5LmR1cmF0aW9uO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHR0bC50byh0YXJnZXRzW2ldLCBkdXJhdGlvbiwgY29weSwgaSAqIHN0YWdnZXIpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRoaXMuYWRkKHRsLCBwb3NpdGlvbik7XG5cdFx0fTtcblxuXHRcdHAuc3RhZ2dlckZyb20gPSBmdW5jdGlvbih0YXJnZXRzLCBkdXJhdGlvbiwgdmFycywgc3RhZ2dlciwgcG9zaXRpb24sIG9uQ29tcGxldGVBbGwsIG9uQ29tcGxldGVBbGxQYXJhbXMsIG9uQ29tcGxldGVBbGxTY29wZSkge1xuXHRcdFx0dmFycy5pbW1lZGlhdGVSZW5kZXIgPSAodmFycy5pbW1lZGlhdGVSZW5kZXIgIT0gZmFsc2UpO1xuXHRcdFx0dmFycy5ydW5CYWNrd2FyZHMgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIHRoaXMuc3RhZ2dlclRvKHRhcmdldHMsIGR1cmF0aW9uLCB2YXJzLCBzdGFnZ2VyLCBwb3NpdGlvbiwgb25Db21wbGV0ZUFsbCwgb25Db21wbGV0ZUFsbFBhcmFtcywgb25Db21wbGV0ZUFsbFNjb3BlKTtcblx0XHR9O1xuXG5cdFx0cC5zdGFnZ2VyRnJvbVRvID0gZnVuY3Rpb24odGFyZ2V0cywgZHVyYXRpb24sIGZyb21WYXJzLCB0b1ZhcnMsIHN0YWdnZXIsIHBvc2l0aW9uLCBvbkNvbXBsZXRlQWxsLCBvbkNvbXBsZXRlQWxsUGFyYW1zLCBvbkNvbXBsZXRlQWxsU2NvcGUpIHtcblx0XHRcdHRvVmFycy5zdGFydEF0ID0gZnJvbVZhcnM7XG5cdFx0XHR0b1ZhcnMuaW1tZWRpYXRlUmVuZGVyID0gKHRvVmFycy5pbW1lZGlhdGVSZW5kZXIgIT0gZmFsc2UgJiYgZnJvbVZhcnMuaW1tZWRpYXRlUmVuZGVyICE9IGZhbHNlKTtcblx0XHRcdHJldHVybiB0aGlzLnN0YWdnZXJUbyh0YXJnZXRzLCBkdXJhdGlvbiwgdG9WYXJzLCBzdGFnZ2VyLCBwb3NpdGlvbiwgb25Db21wbGV0ZUFsbCwgb25Db21wbGV0ZUFsbFBhcmFtcywgb25Db21wbGV0ZUFsbFNjb3BlKTtcblx0XHR9O1xuXG5cdFx0cC5jYWxsID0gZnVuY3Rpb24oY2FsbGJhY2ssIHBhcmFtcywgc2NvcGUsIHBvc2l0aW9uKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5hZGQoIFR3ZWVuTGl0ZS5kZWxheWVkQ2FsbCgwLCBjYWxsYmFjaywgcGFyYW1zLCBzY29wZSksIHBvc2l0aW9uKTtcblx0XHR9O1xuXG5cdFx0cC5zZXQgPSBmdW5jdGlvbih0YXJnZXQsIHZhcnMsIHBvc2l0aW9uKSB7XG5cdFx0XHRwb3NpdGlvbiA9IHRoaXMuX3BhcnNlVGltZU9yTGFiZWwocG9zaXRpb24sIDAsIHRydWUpO1xuXHRcdFx0aWYgKHZhcnMuaW1tZWRpYXRlUmVuZGVyID09IG51bGwpIHtcblx0XHRcdFx0dmFycy5pbW1lZGlhdGVSZW5kZXIgPSAocG9zaXRpb24gPT09IHRoaXMuX3RpbWUgJiYgIXRoaXMuX3BhdXNlZCk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy5hZGQoIG5ldyBUd2VlbkxpdGUodGFyZ2V0LCAwLCB2YXJzKSwgcG9zaXRpb24pO1xuXHRcdH07XG5cblx0XHRUaW1lbGluZUxpdGUuZXhwb3J0Um9vdCA9IGZ1bmN0aW9uKHZhcnMsIGlnbm9yZURlbGF5ZWRDYWxscykge1xuXHRcdFx0dmFycyA9IHZhcnMgfHwge307XG5cdFx0XHRpZiAodmFycy5zbW9vdGhDaGlsZFRpbWluZyA9PSBudWxsKSB7XG5cdFx0XHRcdHZhcnMuc21vb3RoQ2hpbGRUaW1pbmcgPSB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0dmFyIHRsID0gbmV3IFRpbWVsaW5lTGl0ZSh2YXJzKSxcblx0XHRcdFx0cm9vdCA9IHRsLl90aW1lbGluZSxcblx0XHRcdFx0dHdlZW4sIG5leHQ7XG5cdFx0XHRpZiAoaWdub3JlRGVsYXllZENhbGxzID09IG51bGwpIHtcblx0XHRcdFx0aWdub3JlRGVsYXllZENhbGxzID0gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdHJvb3QuX3JlbW92ZSh0bCwgdHJ1ZSk7XG5cdFx0XHR0bC5fc3RhcnRUaW1lID0gMDtcblx0XHRcdHRsLl9yYXdQcmV2VGltZSA9IHRsLl90aW1lID0gdGwuX3RvdGFsVGltZSA9IHJvb3QuX3RpbWU7XG5cdFx0XHR0d2VlbiA9IHJvb3QuX2ZpcnN0O1xuXHRcdFx0d2hpbGUgKHR3ZWVuKSB7XG5cdFx0XHRcdG5leHQgPSB0d2Vlbi5fbmV4dDtcblx0XHRcdFx0aWYgKCFpZ25vcmVEZWxheWVkQ2FsbHMgfHwgISh0d2VlbiBpbnN0YW5jZW9mIFR3ZWVuTGl0ZSAmJiB0d2Vlbi50YXJnZXQgPT09IHR3ZWVuLnZhcnMub25Db21wbGV0ZSkpIHtcblx0XHRcdFx0XHR0bC5hZGQodHdlZW4sIHR3ZWVuLl9zdGFydFRpbWUgLSB0d2Vlbi5fZGVsYXkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHR3ZWVuID0gbmV4dDtcblx0XHRcdH1cblx0XHRcdHJvb3QuYWRkKHRsLCAwKTtcblx0XHRcdHJldHVybiB0bDtcblx0XHR9O1xuXG5cdFx0cC5hZGQgPSBmdW5jdGlvbih2YWx1ZSwgcG9zaXRpb24sIGFsaWduLCBzdGFnZ2VyKSB7XG5cdFx0XHR2YXIgY3VyVGltZSwgbCwgaSwgY2hpbGQsIHRsLCBiZWZvcmVSYXdUaW1lO1xuXHRcdFx0aWYgKHR5cGVvZihwb3NpdGlvbikgIT09IFwibnVtYmVyXCIpIHtcblx0XHRcdFx0cG9zaXRpb24gPSB0aGlzLl9wYXJzZVRpbWVPckxhYmVsKHBvc2l0aW9uLCAwLCB0cnVlLCB2YWx1ZSk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoISh2YWx1ZSBpbnN0YW5jZW9mIEFuaW1hdGlvbikpIHtcblx0XHRcdFx0aWYgKCh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB8fCAodmFsdWUgJiYgdmFsdWUucHVzaCAmJiBfaXNBcnJheSh2YWx1ZSkpKSB7XG5cdFx0XHRcdFx0YWxpZ24gPSBhbGlnbiB8fCBcIm5vcm1hbFwiO1xuXHRcdFx0XHRcdHN0YWdnZXIgPSBzdGFnZ2VyIHx8IDA7XG5cdFx0XHRcdFx0Y3VyVGltZSA9IHBvc2l0aW9uO1xuXHRcdFx0XHRcdGwgPSB2YWx1ZS5sZW5ndGg7XG5cdFx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IGw7IGkrKykge1xuXHRcdFx0XHRcdFx0aWYgKF9pc0FycmF5KGNoaWxkID0gdmFsdWVbaV0pKSB7XG5cdFx0XHRcdFx0XHRcdGNoaWxkID0gbmV3IFRpbWVsaW5lTGl0ZSh7dHdlZW5zOmNoaWxkfSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR0aGlzLmFkZChjaGlsZCwgY3VyVGltZSk7XG5cdFx0XHRcdFx0XHRpZiAodHlwZW9mKGNoaWxkKSAhPT0gXCJzdHJpbmdcIiAmJiB0eXBlb2YoY2hpbGQpICE9PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdFx0XHRcdFx0aWYgKGFsaWduID09PSBcInNlcXVlbmNlXCIpIHtcblx0XHRcdFx0XHRcdFx0XHRjdXJUaW1lID0gY2hpbGQuX3N0YXJ0VGltZSArIChjaGlsZC50b3RhbER1cmF0aW9uKCkgLyBjaGlsZC5fdGltZVNjYWxlKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmIChhbGlnbiA9PT0gXCJzdGFydFwiKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y2hpbGQuX3N0YXJ0VGltZSAtPSBjaGlsZC5kZWxheSgpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRjdXJUaW1lICs9IHN0YWdnZXI7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzLl91bmNhY2hlKHRydWUpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHR5cGVvZih2YWx1ZSkgPT09IFwic3RyaW5nXCIpIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcy5hZGRMYWJlbCh2YWx1ZSwgcG9zaXRpb24pO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHR5cGVvZih2YWx1ZSkgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdHZhbHVlID0gVHdlZW5MaXRlLmRlbGF5ZWRDYWxsKDAsIHZhbHVlKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0aHJvdyhcIkNhbm5vdCBhZGQgXCIgKyB2YWx1ZSArIFwiIGludG8gdGhlIHRpbWVsaW5lOyBpdCBpcyBub3QgYSB0d2VlbiwgdGltZWxpbmUsIGZ1bmN0aW9uLCBvciBzdHJpbmcuXCIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdFNpbXBsZVRpbWVsaW5lLnByb3RvdHlwZS5hZGQuY2FsbCh0aGlzLCB2YWx1ZSwgcG9zaXRpb24pO1xuXG5cdFx0XHQvL2lmIHRoZSB0aW1lbGluZSBoYXMgYWxyZWFkeSBlbmRlZCBidXQgdGhlIGluc2VydGVkIHR3ZWVuL3RpbWVsaW5lIGV4dGVuZHMgdGhlIGR1cmF0aW9uLCB3ZSBzaG91bGQgZW5hYmxlIHRoaXMgdGltZWxpbmUgYWdhaW4gc28gdGhhdCBpdCByZW5kZXJzIHByb3Blcmx5LiBXZSBzaG91bGQgYWxzbyBhbGlnbiB0aGUgcGxheWhlYWQgd2l0aCB0aGUgcGFyZW50IHRpbWVsaW5lJ3Mgd2hlbiBhcHByb3ByaWF0ZS5cblx0XHRcdGlmICh0aGlzLl9nYyB8fCB0aGlzLl90aW1lID09PSB0aGlzLl9kdXJhdGlvbikgaWYgKCF0aGlzLl9wYXVzZWQpIGlmICh0aGlzLl9kdXJhdGlvbiA8IHRoaXMuZHVyYXRpb24oKSkge1xuXHRcdFx0XHQvL2luIGNhc2UgYW55IG9mIHRoZSBhbmNlc3RvcnMgaGFkIGNvbXBsZXRlZCBidXQgc2hvdWxkIG5vdyBiZSBlbmFibGVkLi4uXG5cdFx0XHRcdHRsID0gdGhpcztcblx0XHRcdFx0YmVmb3JlUmF3VGltZSA9ICh0bC5yYXdUaW1lKCkgPiB2YWx1ZS5fc3RhcnRUaW1lKTsgLy9pZiB0aGUgdHdlZW4gaXMgcGxhY2VkIG9uIHRoZSB0aW1lbGluZSBzbyB0aGF0IGl0IHN0YXJ0cyBCRUZPUkUgdGhlIGN1cnJlbnQgcmF3VGltZSwgd2Ugc2hvdWxkIGFsaWduIHRoZSBwbGF5aGVhZCAobW92ZSB0aGUgdGltZWxpbmUpLiBUaGlzIGlzIGJlY2F1c2Ugc29tZXRpbWVzIHVzZXJzIHdpbGwgY3JlYXRlIGEgdGltZWxpbmUsIGxldCBpdCBmaW5pc2gsIGFuZCBtdWNoIGxhdGVyIGFwcGVuZCBhIHR3ZWVuIGFuZCBleHBlY3QgaXQgdG8gcnVuIGluc3RlYWQgb2YganVtcGluZyB0byBpdHMgZW5kIHN0YXRlLiBXaGlsZSB0ZWNobmljYWxseSBvbmUgY291bGQgYXJndWUgdGhhdCBpdCBzaG91bGQganVtcCB0byBpdHMgZW5kIHN0YXRlLCB0aGF0J3Mgbm90IHdoYXQgdXNlcnMgaW50dWl0aXZlbHkgZXhwZWN0LlxuXHRcdFx0XHR3aGlsZSAodGwuX3RpbWVsaW5lKSB7XG5cdFx0XHRcdFx0aWYgKGJlZm9yZVJhd1RpbWUgJiYgdGwuX3RpbWVsaW5lLnNtb290aENoaWxkVGltaW5nKSB7XG5cdFx0XHRcdFx0XHR0bC50b3RhbFRpbWUodGwuX3RvdGFsVGltZSwgdHJ1ZSk7IC8vbW92ZXMgdGhlIHRpbWVsaW5lIChzaGlmdHMgaXRzIHN0YXJ0VGltZSkgaWYgbmVjZXNzYXJ5LCBhbmQgYWxzbyBlbmFibGVzIGl0LlxuXHRcdFx0XHRcdH0gZWxzZSBpZiAodGwuX2djKSB7XG5cdFx0XHRcdFx0XHR0bC5fZW5hYmxlZCh0cnVlLCBmYWxzZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRsID0gdGwuX3RpbWVsaW5lO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLnJlbW92ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAodmFsdWUgaW5zdGFuY2VvZiBBbmltYXRpb24pIHtcblx0XHRcdFx0dGhpcy5fcmVtb3ZlKHZhbHVlLCBmYWxzZSk7XG5cdFx0XHRcdHZhciB0bCA9IHZhbHVlLl90aW1lbGluZSA9IHZhbHVlLnZhcnMudXNlRnJhbWVzID8gQW5pbWF0aW9uLl9yb290RnJhbWVzVGltZWxpbmUgOiBBbmltYXRpb24uX3Jvb3RUaW1lbGluZTsgLy9ub3cgdGhhdCBpdCdzIHJlbW92ZWQsIGRlZmF1bHQgaXQgdG8gdGhlIHJvb3QgdGltZWxpbmUgc28gdGhhdCBpZiBpdCBnZXRzIHBsYXllZCBhZ2FpbiwgaXQgZG9lc24ndCBqdW1wIGJhY2sgaW50byB0aGlzIHRpbWVsaW5lLlxuXHRcdFx0XHR2YWx1ZS5fc3RhcnRUaW1lID0gKHZhbHVlLl9wYXVzZWQgPyB2YWx1ZS5fcGF1c2VUaW1lIDogdGwuX3RpbWUpIC0gKCghdmFsdWUuX3JldmVyc2VkID8gdmFsdWUuX3RvdGFsVGltZSA6IHZhbHVlLnRvdGFsRHVyYXRpb24oKSAtIHZhbHVlLl90b3RhbFRpbWUpIC8gdmFsdWUuX3RpbWVTY2FsZSk7IC8vZW5zdXJlIHRoYXQgaWYgaXQgZ2V0cyBwbGF5ZWQgYWdhaW4sIHRoZSB0aW1pbmcgaXMgY29ycmVjdC5cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgQXJyYXkgfHwgKHZhbHVlICYmIHZhbHVlLnB1c2ggJiYgX2lzQXJyYXkodmFsdWUpKSkge1xuXHRcdFx0XHR2YXIgaSA9IHZhbHVlLmxlbmd0aDtcblx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0dGhpcy5yZW1vdmUodmFsdWVbaV0pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSBlbHNlIGlmICh0eXBlb2YodmFsdWUpID09PSBcInN0cmluZ1wiKSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLnJlbW92ZUxhYmVsKHZhbHVlKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzLmtpbGwobnVsbCwgdmFsdWUpO1xuXHRcdH07XG5cblx0XHRwLl9yZW1vdmUgPSBmdW5jdGlvbih0d2Vlbiwgc2tpcERpc2FibGUpIHtcblx0XHRcdFNpbXBsZVRpbWVsaW5lLnByb3RvdHlwZS5fcmVtb3ZlLmNhbGwodGhpcywgdHdlZW4sIHNraXBEaXNhYmxlKTtcblx0XHRcdHZhciBsYXN0ID0gdGhpcy5fbGFzdDtcblx0XHRcdGlmICghbGFzdCkge1xuXHRcdFx0XHR0aGlzLl90aW1lID0gdGhpcy5fdG90YWxUaW1lID0gdGhpcy5fZHVyYXRpb24gPSB0aGlzLl90b3RhbER1cmF0aW9uID0gMDtcblx0XHRcdH0gZWxzZSBpZiAodGhpcy5fdGltZSA+IGxhc3QuX3N0YXJ0VGltZSArIGxhc3QuX3RvdGFsRHVyYXRpb24gLyBsYXN0Ll90aW1lU2NhbGUpIHtcblx0XHRcdFx0dGhpcy5fdGltZSA9IHRoaXMuZHVyYXRpb24oKTtcblx0XHRcdFx0dGhpcy5fdG90YWxUaW1lID0gdGhpcy5fdG90YWxEdXJhdGlvbjtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLmFwcGVuZCA9IGZ1bmN0aW9uKHZhbHVlLCBvZmZzZXRPckxhYmVsKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5hZGQodmFsdWUsIHRoaXMuX3BhcnNlVGltZU9yTGFiZWwobnVsbCwgb2Zmc2V0T3JMYWJlbCwgdHJ1ZSwgdmFsdWUpKTtcblx0XHR9O1xuXG5cdFx0cC5pbnNlcnQgPSBwLmluc2VydE11bHRpcGxlID0gZnVuY3Rpb24odmFsdWUsIHBvc2l0aW9uLCBhbGlnbiwgc3RhZ2dlcikge1xuXHRcdFx0cmV0dXJuIHRoaXMuYWRkKHZhbHVlLCBwb3NpdGlvbiB8fCAwLCBhbGlnbiwgc3RhZ2dlcik7XG5cdFx0fTtcblxuXHRcdHAuYXBwZW5kTXVsdGlwbGUgPSBmdW5jdGlvbih0d2VlbnMsIG9mZnNldE9yTGFiZWwsIGFsaWduLCBzdGFnZ2VyKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5hZGQodHdlZW5zLCB0aGlzLl9wYXJzZVRpbWVPckxhYmVsKG51bGwsIG9mZnNldE9yTGFiZWwsIHRydWUsIHR3ZWVucyksIGFsaWduLCBzdGFnZ2VyKTtcblx0XHR9O1xuXG5cdFx0cC5hZGRMYWJlbCA9IGZ1bmN0aW9uKGxhYmVsLCBwb3NpdGlvbikge1xuXHRcdFx0dGhpcy5fbGFiZWxzW2xhYmVsXSA9IHRoaXMuX3BhcnNlVGltZU9yTGFiZWwocG9zaXRpb24pO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fTtcblxuXHRcdHAuYWRkUGF1c2UgPSBmdW5jdGlvbihwb3NpdGlvbiwgY2FsbGJhY2ssIHBhcmFtcywgc2NvcGUpIHtcblx0XHRcdHZhciB0ID0gVHdlZW5MaXRlLmRlbGF5ZWRDYWxsKDAsIF9wYXVzZUNhbGxiYWNrLCBwYXJhbXMsIHNjb3BlIHx8IHRoaXMpO1xuXHRcdFx0dC52YXJzLm9uQ29tcGxldGUgPSB0LnZhcnMub25SZXZlcnNlQ29tcGxldGUgPSBjYWxsYmFjaztcblx0XHRcdHQuZGF0YSA9IFwiaXNQYXVzZVwiO1xuXHRcdFx0dGhpcy5faGFzUGF1c2UgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIHRoaXMuYWRkKHQsIHBvc2l0aW9uKTtcblx0XHR9O1xuXG5cdFx0cC5yZW1vdmVMYWJlbCA9IGZ1bmN0aW9uKGxhYmVsKSB7XG5cdFx0XHRkZWxldGUgdGhpcy5fbGFiZWxzW2xhYmVsXTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLmdldExhYmVsVGltZSA9IGZ1bmN0aW9uKGxhYmVsKSB7XG5cdFx0XHRyZXR1cm4gKHRoaXMuX2xhYmVsc1tsYWJlbF0gIT0gbnVsbCkgPyB0aGlzLl9sYWJlbHNbbGFiZWxdIDogLTE7XG5cdFx0fTtcblxuXHRcdHAuX3BhcnNlVGltZU9yTGFiZWwgPSBmdW5jdGlvbih0aW1lT3JMYWJlbCwgb2Zmc2V0T3JMYWJlbCwgYXBwZW5kSWZBYnNlbnQsIGlnbm9yZSkge1xuXHRcdFx0dmFyIGk7XG5cdFx0XHQvL2lmIHdlJ3JlIGFib3V0IHRvIGFkZCBhIHR3ZWVuL3RpbWVsaW5lIChvciBhbiBhcnJheSBvZiB0aGVtKSB0aGF0J3MgYWxyZWFkeSBhIGNoaWxkIG9mIHRoaXMgdGltZWxpbmUsIHdlIHNob3VsZCByZW1vdmUgaXQgZmlyc3Qgc28gdGhhdCBpdCBkb2Vzbid0IGNvbnRhbWluYXRlIHRoZSBkdXJhdGlvbigpLlxuXHRcdFx0aWYgKGlnbm9yZSBpbnN0YW5jZW9mIEFuaW1hdGlvbiAmJiBpZ25vcmUudGltZWxpbmUgPT09IHRoaXMpIHtcblx0XHRcdFx0dGhpcy5yZW1vdmUoaWdub3JlKTtcblx0XHRcdH0gZWxzZSBpZiAoaWdub3JlICYmICgoaWdub3JlIGluc3RhbmNlb2YgQXJyYXkpIHx8IChpZ25vcmUucHVzaCAmJiBfaXNBcnJheShpZ25vcmUpKSkpIHtcblx0XHRcdFx0aSA9IGlnbm9yZS5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdGlmIChpZ25vcmVbaV0gaW5zdGFuY2VvZiBBbmltYXRpb24gJiYgaWdub3JlW2ldLnRpbWVsaW5lID09PSB0aGlzKSB7XG5cdFx0XHRcdFx0XHR0aGlzLnJlbW92ZShpZ25vcmVbaV0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKHR5cGVvZihvZmZzZXRPckxhYmVsKSA9PT0gXCJzdHJpbmdcIikge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5fcGFyc2VUaW1lT3JMYWJlbChvZmZzZXRPckxhYmVsLCAoYXBwZW5kSWZBYnNlbnQgJiYgdHlwZW9mKHRpbWVPckxhYmVsKSA9PT0gXCJudW1iZXJcIiAmJiB0aGlzLl9sYWJlbHNbb2Zmc2V0T3JMYWJlbF0gPT0gbnVsbCkgPyB0aW1lT3JMYWJlbCAtIHRoaXMuZHVyYXRpb24oKSA6IDAsIGFwcGVuZElmQWJzZW50KTtcblx0XHRcdH1cblx0XHRcdG9mZnNldE9yTGFiZWwgPSBvZmZzZXRPckxhYmVsIHx8IDA7XG5cdFx0XHRpZiAodHlwZW9mKHRpbWVPckxhYmVsKSA9PT0gXCJzdHJpbmdcIiAmJiAoaXNOYU4odGltZU9yTGFiZWwpIHx8IHRoaXMuX2xhYmVsc1t0aW1lT3JMYWJlbF0gIT0gbnVsbCkpIHsgLy9pZiB0aGUgc3RyaW5nIGlzIGEgbnVtYmVyIGxpa2UgXCIxXCIsIGNoZWNrIHRvIHNlZSBpZiB0aGVyZSdzIGEgbGFiZWwgd2l0aCB0aGF0IG5hbWUsIG90aGVyd2lzZSBpbnRlcnByZXQgaXQgYXMgYSBudW1iZXIgKGFic29sdXRlIHZhbHVlKS5cblx0XHRcdFx0aSA9IHRpbWVPckxhYmVsLmluZGV4T2YoXCI9XCIpO1xuXHRcdFx0XHRpZiAoaSA9PT0gLTEpIHtcblx0XHRcdFx0XHRpZiAodGhpcy5fbGFiZWxzW3RpbWVPckxhYmVsXSA9PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gYXBwZW5kSWZBYnNlbnQgPyAodGhpcy5fbGFiZWxzW3RpbWVPckxhYmVsXSA9IHRoaXMuZHVyYXRpb24oKSArIG9mZnNldE9yTGFiZWwpIDogb2Zmc2V0T3JMYWJlbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXMuX2xhYmVsc1t0aW1lT3JMYWJlbF0gKyBvZmZzZXRPckxhYmVsO1xuXHRcdFx0XHR9XG5cdFx0XHRcdG9mZnNldE9yTGFiZWwgPSBwYXJzZUludCh0aW1lT3JMYWJlbC5jaGFyQXQoaS0xKSArIFwiMVwiLCAxMCkgKiBOdW1iZXIodGltZU9yTGFiZWwuc3Vic3RyKGkrMSkpO1xuXHRcdFx0XHR0aW1lT3JMYWJlbCA9IChpID4gMSkgPyB0aGlzLl9wYXJzZVRpbWVPckxhYmVsKHRpbWVPckxhYmVsLnN1YnN0cigwLCBpLTEpLCAwLCBhcHBlbmRJZkFic2VudCkgOiB0aGlzLmR1cmF0aW9uKCk7XG5cdFx0XHR9IGVsc2UgaWYgKHRpbWVPckxhYmVsID09IG51bGwpIHtcblx0XHRcdFx0dGltZU9yTGFiZWwgPSB0aGlzLmR1cmF0aW9uKCk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gTnVtYmVyKHRpbWVPckxhYmVsKSArIG9mZnNldE9yTGFiZWw7XG5cdFx0fTtcblxuXHRcdHAuc2VlayA9IGZ1bmN0aW9uKHBvc2l0aW9uLCBzdXBwcmVzc0V2ZW50cykge1xuXHRcdFx0cmV0dXJuIHRoaXMudG90YWxUaW1lKCh0eXBlb2YocG9zaXRpb24pID09PSBcIm51bWJlclwiKSA/IHBvc2l0aW9uIDogdGhpcy5fcGFyc2VUaW1lT3JMYWJlbChwb3NpdGlvbiksIChzdXBwcmVzc0V2ZW50cyAhPT0gZmFsc2UpKTtcblx0XHR9O1xuXG5cdFx0cC5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5wYXVzZWQodHJ1ZSk7XG5cdFx0fTtcblxuXHRcdHAuZ290b0FuZFBsYXkgPSBmdW5jdGlvbihwb3NpdGlvbiwgc3VwcHJlc3NFdmVudHMpIHtcblx0XHRcdHJldHVybiB0aGlzLnBsYXkocG9zaXRpb24sIHN1cHByZXNzRXZlbnRzKTtcblx0XHR9O1xuXG5cdFx0cC5nb3RvQW5kU3RvcCA9IGZ1bmN0aW9uKHBvc2l0aW9uLCBzdXBwcmVzc0V2ZW50cykge1xuXHRcdFx0cmV0dXJuIHRoaXMucGF1c2UocG9zaXRpb24sIHN1cHByZXNzRXZlbnRzKTtcblx0XHR9O1xuXG5cdFx0cC5yZW5kZXIgPSBmdW5jdGlvbih0aW1lLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpIHtcblx0XHRcdGlmICh0aGlzLl9nYykge1xuXHRcdFx0XHR0aGlzLl9lbmFibGVkKHRydWUsIGZhbHNlKTtcblx0XHRcdH1cblx0XHRcdHZhciB0b3RhbER1ciA9ICghdGhpcy5fZGlydHkpID8gdGhpcy5fdG90YWxEdXJhdGlvbiA6IHRoaXMudG90YWxEdXJhdGlvbigpLFxuXHRcdFx0XHRwcmV2VGltZSA9IHRoaXMuX3RpbWUsXG5cdFx0XHRcdHByZXZTdGFydCA9IHRoaXMuX3N0YXJ0VGltZSxcblx0XHRcdFx0cHJldlRpbWVTY2FsZSA9IHRoaXMuX3RpbWVTY2FsZSxcblx0XHRcdFx0cHJldlBhdXNlZCA9IHRoaXMuX3BhdXNlZCxcblx0XHRcdFx0dHdlZW4sIGlzQ29tcGxldGUsIG5leHQsIGNhbGxiYWNrLCBpbnRlcm5hbEZvcmNlLCBwYXVzZVR3ZWVuLCBjdXJUaW1lO1xuXHRcdFx0aWYgKHRpbWUgPj0gdG90YWxEdXIgLSAwLjAwMDAwMDEpIHsgLy90byB3b3JrIGFyb3VuZCBvY2Nhc2lvbmFsIGZsb2F0aW5nIHBvaW50IG1hdGggYXJ0aWZhY3RzLlxuXHRcdFx0XHR0aGlzLl90b3RhbFRpbWUgPSB0aGlzLl90aW1lID0gdG90YWxEdXI7XG5cdFx0XHRcdGlmICghdGhpcy5fcmV2ZXJzZWQpIGlmICghdGhpcy5faGFzUGF1c2VkQ2hpbGQoKSkge1xuXHRcdFx0XHRcdGlzQ29tcGxldGUgPSB0cnVlO1xuXHRcdFx0XHRcdGNhbGxiYWNrID0gXCJvbkNvbXBsZXRlXCI7XG5cdFx0XHRcdFx0aW50ZXJuYWxGb3JjZSA9ICEhdGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuOyAvL290aGVyd2lzZSwgaWYgdGhlIGFuaW1hdGlvbiBpcyB1bnBhdXNlZC9hY3RpdmF0ZWQgYWZ0ZXIgaXQncyBhbHJlYWR5IGZpbmlzaGVkLCBpdCBkb2Vzbid0IGdldCByZW1vdmVkIGZyb20gdGhlIHBhcmVudCB0aW1lbGluZS5cblx0XHRcdFx0XHRpZiAodGhpcy5fZHVyYXRpb24gPT09IDApIGlmICgodGltZSA8PSAwICYmIHRpbWUgPj0gLTAuMDAwMDAwMSkgfHwgdGhpcy5fcmF3UHJldlRpbWUgPCAwIHx8IHRoaXMuX3Jhd1ByZXZUaW1lID09PSBfdGlueU51bSkgaWYgKHRoaXMuX3Jhd1ByZXZUaW1lICE9PSB0aW1lICYmIHRoaXMuX2ZpcnN0KSB7XG5cdFx0XHRcdFx0XHRpbnRlcm5hbEZvcmNlID0gdHJ1ZTtcblx0XHRcdFx0XHRcdGlmICh0aGlzLl9yYXdQcmV2VGltZSA+IF90aW55TnVtKSB7XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrID0gXCJvblJldmVyc2VDb21wbGV0ZVwiO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLl9yYXdQcmV2VGltZSA9ICh0aGlzLl9kdXJhdGlvbiB8fCAhc3VwcHJlc3NFdmVudHMgfHwgdGltZSB8fCB0aGlzLl9yYXdQcmV2VGltZSA9PT0gdGltZSkgPyB0aW1lIDogX3RpbnlOdW07IC8vd2hlbiB0aGUgcGxheWhlYWQgYXJyaXZlcyBhdCBFWEFDVExZIHRpbWUgMCAocmlnaHQgb24gdG9wKSBvZiBhIHplcm8tZHVyYXRpb24gdGltZWxpbmUgb3IgdHdlZW4sIHdlIG5lZWQgdG8gZGlzY2VybiBpZiBldmVudHMgYXJlIHN1cHByZXNzZWQgc28gdGhhdCB3aGVuIHRoZSBwbGF5aGVhZCBtb3ZlcyBhZ2FpbiAobmV4dCB0aW1lKSwgaXQnbGwgdHJpZ2dlciB0aGUgY2FsbGJhY2suIElmIGV2ZW50cyBhcmUgTk9UIHN1cHByZXNzZWQsIG9idmlvdXNseSB0aGUgY2FsbGJhY2sgd291bGQgYmUgdHJpZ2dlcmVkIGluIHRoaXMgcmVuZGVyLiBCYXNpY2FsbHksIHRoZSBjYWxsYmFjayBzaG91bGQgZmlyZSBlaXRoZXIgd2hlbiB0aGUgcGxheWhlYWQgQVJSSVZFUyBvciBMRUFWRVMgdGhpcyBleGFjdCBzcG90LCBub3QgYm90aC4gSW1hZ2luZSBkb2luZyBhIHRpbWVsaW5lLnNlZWsoMCkgYW5kIHRoZXJlJ3MgYSBjYWxsYmFjayB0aGF0IHNpdHMgYXQgMC4gU2luY2UgZXZlbnRzIGFyZSBzdXBwcmVzc2VkIG9uIHRoYXQgc2VlaygpIGJ5IGRlZmF1bHQsIG5vdGhpbmcgd2lsbCBmaXJlLCBidXQgd2hlbiB0aGUgcGxheWhlYWQgbW92ZXMgb2ZmIG9mIHRoYXQgcG9zaXRpb24sIHRoZSBjYWxsYmFjayBzaG91bGQgZmlyZS4gVGhpcyBiZWhhdmlvciBpcyB3aGF0IHBlb3BsZSBpbnR1aXRpdmVseSBleHBlY3QuIFdlIHNldCB0aGUgX3Jhd1ByZXZUaW1lIHRvIGJlIGEgcHJlY2lzZSB0aW55IG51bWJlciB0byBpbmRpY2F0ZSB0aGlzIHNjZW5hcmlvIHJhdGhlciB0aGFuIHVzaW5nIGFub3RoZXIgcHJvcGVydHkvdmFyaWFibGUgd2hpY2ggd291bGQgaW5jcmVhc2UgbWVtb3J5IHVzYWdlLiBUaGlzIHRlY2huaXF1ZSBpcyBsZXNzIHJlYWRhYmxlLCBidXQgbW9yZSBlZmZpY2llbnQuXG5cdFx0XHRcdHRpbWUgPSB0b3RhbER1ciArIDAuMDAwMTsgLy90byBhdm9pZCBvY2Nhc2lvbmFsIGZsb2F0aW5nIHBvaW50IHJvdW5kaW5nIGVycm9ycyAtIHNvbWV0aW1lcyBjaGlsZCB0d2VlbnMvdGltZWxpbmVzIHdlcmUgbm90IGJlaW5nIGZ1bGx5IGNvbXBsZXRlZCAodGhlaXIgcHJvZ3Jlc3MgbWlnaHQgYmUgMC45OTk5OTk5OTk5OTk5OTggaW5zdGVhZCBvZiAxIGJlY2F1c2Ugd2hlbiBfdGltZSAtIHR3ZWVuLl9zdGFydFRpbWUgaXMgcGVyZm9ybWVkLCBmbG9hdGluZyBwb2ludCBlcnJvcnMgd291bGQgcmV0dXJuIGEgdmFsdWUgdGhhdCB3YXMgU0xJR0hUTFkgb2ZmKS4gVHJ5ICg5OTk5OTk5OTk5OTkuNyAtIDk5OTk5OTk5OTk5OSkgKiAxID0gMC42OTk5NTExNzE4NzUgaW5zdGVhZCBvZiAwLjcuXG5cblx0XHRcdH0gZWxzZSBpZiAodGltZSA8IDAuMDAwMDAwMSkgeyAvL3RvIHdvcmsgYXJvdW5kIG9jY2FzaW9uYWwgZmxvYXRpbmcgcG9pbnQgbWF0aCBhcnRpZmFjdHMsIHJvdW5kIHN1cGVyIHNtYWxsIHZhbHVlcyB0byAwLlxuXHRcdFx0XHR0aGlzLl90b3RhbFRpbWUgPSB0aGlzLl90aW1lID0gMDtcblx0XHRcdFx0aWYgKHByZXZUaW1lICE9PSAwIHx8ICh0aGlzLl9kdXJhdGlvbiA9PT0gMCAmJiB0aGlzLl9yYXdQcmV2VGltZSAhPT0gX3RpbnlOdW0gJiYgKHRoaXMuX3Jhd1ByZXZUaW1lID4gMCB8fCAodGltZSA8IDAgJiYgdGhpcy5fcmF3UHJldlRpbWUgPj0gMCkpKSkge1xuXHRcdFx0XHRcdGNhbGxiYWNrID0gXCJvblJldmVyc2VDb21wbGV0ZVwiO1xuXHRcdFx0XHRcdGlzQ29tcGxldGUgPSB0aGlzLl9yZXZlcnNlZDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodGltZSA8IDApIHtcblx0XHRcdFx0XHR0aGlzLl9hY3RpdmUgPSBmYWxzZTtcblx0XHRcdFx0XHRpZiAodGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuICYmIHRoaXMuX3JldmVyc2VkKSB7IC8vZW5zdXJlcyBwcm9wZXIgR0MgaWYgYSB0aW1lbGluZSBpcyByZXN1bWVkIGFmdGVyIGl0J3MgZmluaXNoZWQgcmV2ZXJzaW5nLlxuXHRcdFx0XHRcdFx0aW50ZXJuYWxGb3JjZSA9IGlzQ29tcGxldGUgPSB0cnVlO1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBcIm9uUmV2ZXJzZUNvbXBsZXRlXCI7XG5cdFx0XHRcdFx0fSBlbHNlIGlmICh0aGlzLl9yYXdQcmV2VGltZSA+PSAwICYmIHRoaXMuX2ZpcnN0KSB7IC8vd2hlbiBnb2luZyBiYWNrIGJleW9uZCB0aGUgc3RhcnQsIGZvcmNlIGEgcmVuZGVyIHNvIHRoYXQgemVyby1kdXJhdGlvbiB0d2VlbnMgdGhhdCBzaXQgYXQgdGhlIHZlcnkgYmVnaW5uaW5nIHJlbmRlciB0aGVpciBzdGFydCB2YWx1ZXMgcHJvcGVybHkuIE90aGVyd2lzZSwgaWYgdGhlIHBhcmVudCB0aW1lbGluZSdzIHBsYXloZWFkIGxhbmRzIGV4YWN0bHkgYXQgdGhpcyB0aW1lbGluZSdzIHN0YXJ0VGltZSwgYW5kIHRoZW4gbW92ZXMgYmFja3dhcmRzLCB0aGUgemVyby1kdXJhdGlvbiB0d2VlbnMgYXQgdGhlIGJlZ2lubmluZyB3b3VsZCBzdGlsbCBiZSBhdCB0aGVpciBlbmQgc3RhdGUuXG5cdFx0XHRcdFx0XHRpbnRlcm5hbEZvcmNlID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dGhpcy5fcmF3UHJldlRpbWUgPSB0aW1lO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRoaXMuX3Jhd1ByZXZUaW1lID0gKHRoaXMuX2R1cmF0aW9uIHx8ICFzdXBwcmVzc0V2ZW50cyB8fCB0aW1lIHx8IHRoaXMuX3Jhd1ByZXZUaW1lID09PSB0aW1lKSA/IHRpbWUgOiBfdGlueU51bTsgLy93aGVuIHRoZSBwbGF5aGVhZCBhcnJpdmVzIGF0IEVYQUNUTFkgdGltZSAwIChyaWdodCBvbiB0b3ApIG9mIGEgemVyby1kdXJhdGlvbiB0aW1lbGluZSBvciB0d2Vlbiwgd2UgbmVlZCB0byBkaXNjZXJuIGlmIGV2ZW50cyBhcmUgc3VwcHJlc3NlZCBzbyB0aGF0IHdoZW4gdGhlIHBsYXloZWFkIG1vdmVzIGFnYWluIChuZXh0IHRpbWUpLCBpdCdsbCB0cmlnZ2VyIHRoZSBjYWxsYmFjay4gSWYgZXZlbnRzIGFyZSBOT1Qgc3VwcHJlc3NlZCwgb2J2aW91c2x5IHRoZSBjYWxsYmFjayB3b3VsZCBiZSB0cmlnZ2VyZWQgaW4gdGhpcyByZW5kZXIuIEJhc2ljYWxseSwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlIGVpdGhlciB3aGVuIHRoZSBwbGF5aGVhZCBBUlJJVkVTIG9yIExFQVZFUyB0aGlzIGV4YWN0IHNwb3QsIG5vdCBib3RoLiBJbWFnaW5lIGRvaW5nIGEgdGltZWxpbmUuc2VlaygwKSBhbmQgdGhlcmUncyBhIGNhbGxiYWNrIHRoYXQgc2l0cyBhdCAwLiBTaW5jZSBldmVudHMgYXJlIHN1cHByZXNzZWQgb24gdGhhdCBzZWVrKCkgYnkgZGVmYXVsdCwgbm90aGluZyB3aWxsIGZpcmUsIGJ1dCB3aGVuIHRoZSBwbGF5aGVhZCBtb3ZlcyBvZmYgb2YgdGhhdCBwb3NpdGlvbiwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlLiBUaGlzIGJlaGF2aW9yIGlzIHdoYXQgcGVvcGxlIGludHVpdGl2ZWx5IGV4cGVjdC4gV2Ugc2V0IHRoZSBfcmF3UHJldlRpbWUgdG8gYmUgYSBwcmVjaXNlIHRpbnkgbnVtYmVyIHRvIGluZGljYXRlIHRoaXMgc2NlbmFyaW8gcmF0aGVyIHRoYW4gdXNpbmcgYW5vdGhlciBwcm9wZXJ0eS92YXJpYWJsZSB3aGljaCB3b3VsZCBpbmNyZWFzZSBtZW1vcnkgdXNhZ2UuIFRoaXMgdGVjaG5pcXVlIGlzIGxlc3MgcmVhZGFibGUsIGJ1dCBtb3JlIGVmZmljaWVudC5cblx0XHRcdFx0XHRpZiAodGltZSA9PT0gMCAmJiBpc0NvbXBsZXRlKSB7IC8vaWYgdGhlcmUncyBhIHplcm8tZHVyYXRpb24gdHdlZW4gYXQgdGhlIHZlcnkgYmVnaW5uaW5nIG9mIGEgdGltZWxpbmUgYW5kIHRoZSBwbGF5aGVhZCBsYW5kcyBFWEFDVExZIGF0IHRpbWUgMCwgdGhhdCB0d2VlbiB3aWxsIGNvcnJlY3RseSByZW5kZXIgaXRzIGVuZCB2YWx1ZXMsIGJ1dCB3ZSBuZWVkIHRvIGtlZXAgdGhlIHRpbWVsaW5lIGFsaXZlIGZvciBvbmUgbW9yZSByZW5kZXIgc28gdGhhdCB0aGUgYmVnaW5uaW5nIHZhbHVlcyByZW5kZXIgcHJvcGVybHkgYXMgdGhlIHBhcmVudCdzIHBsYXloZWFkIGtlZXBzIG1vdmluZyBiZXlvbmQgdGhlIGJlZ2luaW5nLiBJbWFnaW5lIG9iai54IHN0YXJ0cyBhdCAwIGFuZCB0aGVuIHdlIGRvIHRsLnNldChvYmosIHt4OjEwMH0pLnRvKG9iaiwgMSwge3g6MjAwfSkgYW5kIHRoZW4gbGF0ZXIgd2UgdGwucmV2ZXJzZSgpLi4udGhlIGdvYWwgaXMgdG8gaGF2ZSBvYmoueCByZXZlcnQgdG8gMC4gSWYgdGhlIHBsYXloZWFkIGhhcHBlbnMgdG8gbGFuZCBvbiBleGFjdGx5IDAsIHdpdGhvdXQgdGhpcyBjaHVuayBvZiBjb2RlLCBpdCdkIGNvbXBsZXRlIHRoZSB0aW1lbGluZSBhbmQgcmVtb3ZlIGl0IGZyb20gdGhlIHJlbmRlcmluZyBxdWV1ZSAobm90IGdvb2QpLlxuXHRcdFx0XHRcdFx0dHdlZW4gPSB0aGlzLl9maXJzdDtcblx0XHRcdFx0XHRcdHdoaWxlICh0d2VlbiAmJiB0d2Vlbi5fc3RhcnRUaW1lID09PSAwKSB7XG5cdFx0XHRcdFx0XHRcdGlmICghdHdlZW4uX2R1cmF0aW9uKSB7XG5cdFx0XHRcdFx0XHRcdFx0aXNDb21wbGV0ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHR3ZWVuID0gdHdlZW4uX25leHQ7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRpbWUgPSAwOyAvL3RvIGF2b2lkIG9jY2FzaW9uYWwgZmxvYXRpbmcgcG9pbnQgcm91bmRpbmcgZXJyb3JzIChjb3VsZCBjYXVzZSBwcm9ibGVtcyBlc3BlY2lhbGx5IHdpdGggemVyby1kdXJhdGlvbiB0d2VlbnMgYXQgdGhlIHZlcnkgYmVnaW5uaW5nIG9mIHRoZSB0aW1lbGluZSlcblx0XHRcdFx0XHRpZiAoIXRoaXMuX2luaXR0ZWQpIHtcblx0XHRcdFx0XHRcdGludGVybmFsRm9yY2UgPSB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdGlmICh0aGlzLl9oYXNQYXVzZSAmJiAhdGhpcy5fZm9yY2luZ1BsYXloZWFkICYmICFzdXBwcmVzc0V2ZW50cykge1xuXHRcdFx0XHRcdGlmICh0aW1lID49IHByZXZUaW1lKSB7XG5cdFx0XHRcdFx0XHR0d2VlbiA9IHRoaXMuX2ZpcnN0O1xuXHRcdFx0XHRcdFx0d2hpbGUgKHR3ZWVuICYmIHR3ZWVuLl9zdGFydFRpbWUgPD0gdGltZSAmJiAhcGF1c2VUd2Vlbikge1xuXHRcdFx0XHRcdFx0XHRpZiAoIXR3ZWVuLl9kdXJhdGlvbikgaWYgKHR3ZWVuLmRhdGEgPT09IFwiaXNQYXVzZVwiICYmICF0d2Vlbi5yYXRpbyAmJiAhKHR3ZWVuLl9zdGFydFRpbWUgPT09IDAgJiYgdGhpcy5fcmF3UHJldlRpbWUgPT09IDApKSB7XG5cdFx0XHRcdFx0XHRcdFx0cGF1c2VUd2VlbiA9IHR3ZWVuO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHR3ZWVuID0gdHdlZW4uX25leHQ7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHR3ZWVuID0gdGhpcy5fbGFzdDtcblx0XHRcdFx0XHRcdHdoaWxlICh0d2VlbiAmJiB0d2Vlbi5fc3RhcnRUaW1lID49IHRpbWUgJiYgIXBhdXNlVHdlZW4pIHtcblx0XHRcdFx0XHRcdFx0aWYgKCF0d2Vlbi5fZHVyYXRpb24pIGlmICh0d2Vlbi5kYXRhID09PSBcImlzUGF1c2VcIiAmJiB0d2Vlbi5fcmF3UHJldlRpbWUgPiAwKSB7XG5cdFx0XHRcdFx0XHRcdFx0cGF1c2VUd2VlbiA9IHR3ZWVuO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHR3ZWVuID0gdHdlZW4uX3ByZXY7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChwYXVzZVR3ZWVuKSB7XG5cdFx0XHRcdFx0XHR0aGlzLl90aW1lID0gdGltZSA9IHBhdXNlVHdlZW4uX3N0YXJ0VGltZTtcblx0XHRcdFx0XHRcdHRoaXMuX3RvdGFsVGltZSA9IHRpbWUgKyAodGhpcy5fY3ljbGUgKiAodGhpcy5fdG90YWxEdXJhdGlvbiArIHRoaXMuX3JlcGVhdERlbGF5KSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0dGhpcy5fdG90YWxUaW1lID0gdGhpcy5fdGltZSA9IHRoaXMuX3Jhd1ByZXZUaW1lID0gdGltZTtcblx0XHRcdH1cblx0XHRcdGlmICgodGhpcy5fdGltZSA9PT0gcHJldlRpbWUgfHwgIXRoaXMuX2ZpcnN0KSAmJiAhZm9yY2UgJiYgIWludGVybmFsRm9yY2UgJiYgIXBhdXNlVHdlZW4pIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fSBlbHNlIGlmICghdGhpcy5faW5pdHRlZCkge1xuXHRcdFx0XHR0aGlzLl9pbml0dGVkID0gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCF0aGlzLl9hY3RpdmUpIGlmICghdGhpcy5fcGF1c2VkICYmIHRoaXMuX3RpbWUgIT09IHByZXZUaW1lICYmIHRpbWUgPiAwKSB7XG5cdFx0XHRcdHRoaXMuX2FjdGl2ZSA9IHRydWU7ICAvL3NvIHRoYXQgaWYgdGhlIHVzZXIgcmVuZGVycyB0aGUgdGltZWxpbmUgKGFzIG9wcG9zZWQgdG8gdGhlIHBhcmVudCB0aW1lbGluZSByZW5kZXJpbmcgaXQpLCBpdCBpcyBmb3JjZWQgdG8gcmUtcmVuZGVyIGFuZCBhbGlnbiBpdCB3aXRoIHRoZSBwcm9wZXIgdGltZS9mcmFtZSBvbiB0aGUgbmV4dCByZW5kZXJpbmcgY3ljbGUuIE1heWJlIHRoZSB0aW1lbGluZSBhbHJlYWR5IGZpbmlzaGVkIGJ1dCB0aGUgdXNlciBtYW51YWxseSByZS1yZW5kZXJzIGl0IGFzIGhhbGZ3YXkgZG9uZSwgZm9yIGV4YW1wbGUuXG5cdFx0XHR9XG5cblx0XHRcdGlmIChwcmV2VGltZSA9PT0gMCkgaWYgKHRoaXMudmFycy5vblN0YXJ0KSBpZiAodGhpcy5fdGltZSAhPT0gMCB8fCAhdGhpcy5fZHVyYXRpb24pIGlmICghc3VwcHJlc3NFdmVudHMpIHtcblx0XHRcdFx0dGhpcy5fY2FsbGJhY2soXCJvblN0YXJ0XCIpO1xuXHRcdFx0fVxuXG5cdFx0XHRjdXJUaW1lID0gdGhpcy5fdGltZTtcblx0XHRcdGlmIChjdXJUaW1lID49IHByZXZUaW1lKSB7XG5cdFx0XHRcdHR3ZWVuID0gdGhpcy5fZmlyc3Q7XG5cdFx0XHRcdHdoaWxlICh0d2Vlbikge1xuXHRcdFx0XHRcdG5leHQgPSB0d2Vlbi5fbmV4dDsgLy9yZWNvcmQgaXQgaGVyZSBiZWNhdXNlIHRoZSB2YWx1ZSBjb3VsZCBjaGFuZ2UgYWZ0ZXIgcmVuZGVyaW5nLi4uXG5cdFx0XHRcdFx0aWYgKGN1clRpbWUgIT09IHRoaXMuX3RpbWUgfHwgKHRoaXMuX3BhdXNlZCAmJiAhcHJldlBhdXNlZCkpIHsgLy9pbiBjYXNlIGEgdHdlZW4gcGF1c2VzIG9yIHNlZWtzIHRoZSB0aW1lbGluZSB3aGVuIHJlbmRlcmluZywgbGlrZSBpbnNpZGUgb2YgYW4gb25VcGRhdGUvb25Db21wbGV0ZVxuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fSBlbHNlIGlmICh0d2Vlbi5fYWN0aXZlIHx8ICh0d2Vlbi5fc3RhcnRUaW1lIDw9IGN1clRpbWUgJiYgIXR3ZWVuLl9wYXVzZWQgJiYgIXR3ZWVuLl9nYykpIHtcblx0XHRcdFx0XHRcdGlmIChwYXVzZVR3ZWVuID09PSB0d2Vlbikge1xuXHRcdFx0XHRcdFx0XHR0aGlzLnBhdXNlKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoIXR3ZWVuLl9yZXZlcnNlZCkge1xuXHRcdFx0XHRcdFx0XHR0d2Vlbi5yZW5kZXIoKHRpbWUgLSB0d2Vlbi5fc3RhcnRUaW1lKSAqIHR3ZWVuLl90aW1lU2NhbGUsIHN1cHByZXNzRXZlbnRzLCBmb3JjZSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHR0d2Vlbi5yZW5kZXIoKCghdHdlZW4uX2RpcnR5KSA/IHR3ZWVuLl90b3RhbER1cmF0aW9uIDogdHdlZW4udG90YWxEdXJhdGlvbigpKSAtICgodGltZSAtIHR3ZWVuLl9zdGFydFRpbWUpICogdHdlZW4uX3RpbWVTY2FsZSksIHN1cHByZXNzRXZlbnRzLCBmb3JjZSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHR3ZWVuID0gbmV4dDtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dHdlZW4gPSB0aGlzLl9sYXN0O1xuXHRcdFx0XHR3aGlsZSAodHdlZW4pIHtcblx0XHRcdFx0XHRuZXh0ID0gdHdlZW4uX3ByZXY7IC8vcmVjb3JkIGl0IGhlcmUgYmVjYXVzZSB0aGUgdmFsdWUgY291bGQgY2hhbmdlIGFmdGVyIHJlbmRlcmluZy4uLlxuXHRcdFx0XHRcdGlmIChjdXJUaW1lICE9PSB0aGlzLl90aW1lIHx8ICh0aGlzLl9wYXVzZWQgJiYgIXByZXZQYXVzZWQpKSB7IC8vaW4gY2FzZSBhIHR3ZWVuIHBhdXNlcyBvciBzZWVrcyB0aGUgdGltZWxpbmUgd2hlbiByZW5kZXJpbmcsIGxpa2UgaW5zaWRlIG9mIGFuIG9uVXBkYXRlL29uQ29tcGxldGVcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAodHdlZW4uX2FjdGl2ZSB8fCAodHdlZW4uX3N0YXJ0VGltZSA8PSBwcmV2VGltZSAmJiAhdHdlZW4uX3BhdXNlZCAmJiAhdHdlZW4uX2djKSkge1xuXHRcdFx0XHRcdFx0aWYgKHBhdXNlVHdlZW4gPT09IHR3ZWVuKSB7XG5cdFx0XHRcdFx0XHRcdHBhdXNlVHdlZW4gPSB0d2Vlbi5fcHJldjsgLy90aGUgbGlua2VkIGxpc3QgaXMgb3JnYW5pemVkIGJ5IF9zdGFydFRpbWUsIHRodXMgaXQncyBwb3NzaWJsZSB0aGF0IGEgdHdlZW4gY291bGQgc3RhcnQgQkVGT1JFIHRoZSBwYXVzZSBhbmQgZW5kIGFmdGVyIGl0LCBpbiB3aGljaCBjYXNlIGl0IHdvdWxkIGJlIHBvc2l0aW9uZWQgYmVmb3JlIHRoZSBwYXVzZSB0d2VlbiBpbiB0aGUgbGlua2VkIGxpc3QsIGJ1dCB3ZSBzaG91bGQgcmVuZGVyIGl0IGJlZm9yZSB3ZSBwYXVzZSgpIHRoZSB0aW1lbGluZSBhbmQgY2Vhc2UgcmVuZGVyaW5nLiBUaGlzIGlzIG9ubHkgYSBjb25jZXJuIHdoZW4gZ29pbmcgaW4gcmV2ZXJzZS5cblx0XHRcdFx0XHRcdFx0d2hpbGUgKHBhdXNlVHdlZW4gJiYgcGF1c2VUd2Vlbi5lbmRUaW1lKCkgPiB0aGlzLl90aW1lKSB7XG5cdFx0XHRcdFx0XHRcdFx0cGF1c2VUd2Vlbi5yZW5kZXIoIChwYXVzZVR3ZWVuLl9yZXZlcnNlZCA/IHBhdXNlVHdlZW4udG90YWxEdXJhdGlvbigpIC0gKCh0aW1lIC0gcGF1c2VUd2Vlbi5fc3RhcnRUaW1lKSAqIHBhdXNlVHdlZW4uX3RpbWVTY2FsZSkgOiAodGltZSAtIHBhdXNlVHdlZW4uX3N0YXJ0VGltZSkgKiBwYXVzZVR3ZWVuLl90aW1lU2NhbGUpLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuXHRcdFx0XHRcdFx0XHRcdHBhdXNlVHdlZW4gPSBwYXVzZVR3ZWVuLl9wcmV2O1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHBhdXNlVHdlZW4gPSBudWxsO1xuXHRcdFx0XHRcdFx0XHR0aGlzLnBhdXNlKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoIXR3ZWVuLl9yZXZlcnNlZCkge1xuXHRcdFx0XHRcdFx0XHR0d2Vlbi5yZW5kZXIoKHRpbWUgLSB0d2Vlbi5fc3RhcnRUaW1lKSAqIHR3ZWVuLl90aW1lU2NhbGUsIHN1cHByZXNzRXZlbnRzLCBmb3JjZSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHR0d2Vlbi5yZW5kZXIoKCghdHdlZW4uX2RpcnR5KSA/IHR3ZWVuLl90b3RhbER1cmF0aW9uIDogdHdlZW4udG90YWxEdXJhdGlvbigpKSAtICgodGltZSAtIHR3ZWVuLl9zdGFydFRpbWUpICogdHdlZW4uX3RpbWVTY2FsZSksIHN1cHByZXNzRXZlbnRzLCBmb3JjZSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHR3ZWVuID0gbmV4dDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAodGhpcy5fb25VcGRhdGUpIGlmICghc3VwcHJlc3NFdmVudHMpIHtcblx0XHRcdFx0aWYgKF9sYXp5VHdlZW5zLmxlbmd0aCkgeyAvL2luIGNhc2UgcmVuZGVyaW5nIGNhdXNlZCBhbnkgdHdlZW5zIHRvIGxhenktaW5pdCwgd2Ugc2hvdWxkIHJlbmRlciB0aGVtIGJlY2F1c2UgdHlwaWNhbGx5IHdoZW4gYSB0aW1lbGluZSBmaW5pc2hlcywgdXNlcnMgZXhwZWN0IHRoaW5ncyB0byBoYXZlIHJlbmRlcmVkIGZ1bGx5LiBJbWFnaW5lIGFuIG9uVXBkYXRlIG9uIGEgdGltZWxpbmUgdGhhdCByZXBvcnRzL2NoZWNrcyB0d2VlbmVkIHZhbHVlcy5cblx0XHRcdFx0XHRfbGF6eVJlbmRlcigpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuX2NhbGxiYWNrKFwib25VcGRhdGVcIik7XG5cdFx0XHR9XG5cblx0XHRcdGlmIChjYWxsYmFjaykgaWYgKCF0aGlzLl9nYykgaWYgKHByZXZTdGFydCA9PT0gdGhpcy5fc3RhcnRUaW1lIHx8IHByZXZUaW1lU2NhbGUgIT09IHRoaXMuX3RpbWVTY2FsZSkgaWYgKHRoaXMuX3RpbWUgPT09IDAgfHwgdG90YWxEdXIgPj0gdGhpcy50b3RhbER1cmF0aW9uKCkpIHsgLy9pZiBvbmUgb2YgdGhlIHR3ZWVucyB0aGF0IHdhcyByZW5kZXJlZCBhbHRlcmVkIHRoaXMgdGltZWxpbmUncyBzdGFydFRpbWUgKGxpa2UgaWYgYW4gb25Db21wbGV0ZSByZXZlcnNlZCB0aGUgdGltZWxpbmUpLCBpdCBwcm9iYWJseSBpc24ndCBjb21wbGV0ZS4gSWYgaXQgaXMsIGRvbid0IHdvcnJ5LCBiZWNhdXNlIHdoYXRldmVyIGNhbGwgYWx0ZXJlZCB0aGUgc3RhcnRUaW1lIHdvdWxkIGNvbXBsZXRlIGlmIGl0IHdhcyBuZWNlc3NhcnkgYXQgdGhlIG5ldyB0aW1lLiBUaGUgb25seSBleGNlcHRpb24gaXMgdGhlIHRpbWVTY2FsZSBwcm9wZXJ0eS4gQWxzbyBjaGVjayBfZ2MgYmVjYXVzZSB0aGVyZSdzIGEgY2hhbmNlIHRoYXQga2lsbCgpIGNvdWxkIGJlIGNhbGxlZCBpbiBhbiBvblVwZGF0ZVxuXHRcdFx0XHRpZiAoaXNDb21wbGV0ZSkge1xuXHRcdFx0XHRcdGlmIChfbGF6eVR3ZWVucy5sZW5ndGgpIHsgLy9pbiBjYXNlIHJlbmRlcmluZyBjYXVzZWQgYW55IHR3ZWVucyB0byBsYXp5LWluaXQsIHdlIHNob3VsZCByZW5kZXIgdGhlbSBiZWNhdXNlIHR5cGljYWxseSB3aGVuIGEgdGltZWxpbmUgZmluaXNoZXMsIHVzZXJzIGV4cGVjdCB0aGluZ3MgdG8gaGF2ZSByZW5kZXJlZCBmdWxseS4gSW1hZ2luZSBhbiBvbkNvbXBsZXRlIG9uIGEgdGltZWxpbmUgdGhhdCByZXBvcnRzL2NoZWNrcyB0d2VlbmVkIHZhbHVlcy5cblx0XHRcdFx0XHRcdF9sYXp5UmVuZGVyKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICh0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4pIHtcblx0XHRcdFx0XHRcdHRoaXMuX2VuYWJsZWQoZmFsc2UsIGZhbHNlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dGhpcy5fYWN0aXZlID0gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFzdXBwcmVzc0V2ZW50cyAmJiB0aGlzLnZhcnNbY2FsbGJhY2tdKSB7XG5cdFx0XHRcdFx0dGhpcy5fY2FsbGJhY2soY2FsbGJhY2spO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdHAuX2hhc1BhdXNlZENoaWxkID0gZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLl9maXJzdDtcblx0XHRcdHdoaWxlICh0d2Vlbikge1xuXHRcdFx0XHRpZiAodHdlZW4uX3BhdXNlZCB8fCAoKHR3ZWVuIGluc3RhbmNlb2YgVGltZWxpbmVMaXRlKSAmJiB0d2Vlbi5faGFzUGF1c2VkQ2hpbGQoKSkpIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHR0d2VlbiA9IHR3ZWVuLl9uZXh0O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH07XG5cblx0XHRwLmdldENoaWxkcmVuID0gZnVuY3Rpb24obmVzdGVkLCB0d2VlbnMsIHRpbWVsaW5lcywgaWdub3JlQmVmb3JlVGltZSkge1xuXHRcdFx0aWdub3JlQmVmb3JlVGltZSA9IGlnbm9yZUJlZm9yZVRpbWUgfHwgLTk5OTk5OTk5OTk7XG5cdFx0XHR2YXIgYSA9IFtdLFxuXHRcdFx0XHR0d2VlbiA9IHRoaXMuX2ZpcnN0LFxuXHRcdFx0XHRjbnQgPSAwO1xuXHRcdFx0d2hpbGUgKHR3ZWVuKSB7XG5cdFx0XHRcdGlmICh0d2Vlbi5fc3RhcnRUaW1lIDwgaWdub3JlQmVmb3JlVGltZSkge1xuXHRcdFx0XHRcdC8vZG8gbm90aGluZ1xuXHRcdFx0XHR9IGVsc2UgaWYgKHR3ZWVuIGluc3RhbmNlb2YgVHdlZW5MaXRlKSB7XG5cdFx0XHRcdFx0aWYgKHR3ZWVucyAhPT0gZmFsc2UpIHtcblx0XHRcdFx0XHRcdGFbY250KytdID0gdHdlZW47XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGlmICh0aW1lbGluZXMgIT09IGZhbHNlKSB7XG5cdFx0XHRcdFx0XHRhW2NudCsrXSA9IHR3ZWVuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAobmVzdGVkICE9PSBmYWxzZSkge1xuXHRcdFx0XHRcdFx0YSA9IGEuY29uY2F0KHR3ZWVuLmdldENoaWxkcmVuKHRydWUsIHR3ZWVucywgdGltZWxpbmVzKSk7XG5cdFx0XHRcdFx0XHRjbnQgPSBhLmxlbmd0aDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0dHdlZW4gPSB0d2Vlbi5fbmV4dDtcblx0XHRcdH1cblx0XHRcdHJldHVybiBhO1xuXHRcdH07XG5cblx0XHRwLmdldFR3ZWVuc09mID0gZnVuY3Rpb24odGFyZ2V0LCBuZXN0ZWQpIHtcblx0XHRcdHZhciBkaXNhYmxlZCA9IHRoaXMuX2djLFxuXHRcdFx0XHRhID0gW10sXG5cdFx0XHRcdGNudCA9IDAsXG5cdFx0XHRcdHR3ZWVucywgaTtcblx0XHRcdGlmIChkaXNhYmxlZCkge1xuXHRcdFx0XHR0aGlzLl9lbmFibGVkKHRydWUsIHRydWUpOyAvL2dldFR3ZWVuc09mKCkgZmlsdGVycyBvdXQgZGlzYWJsZWQgdHdlZW5zLCBhbmQgd2UgaGF2ZSB0byBtYXJrIHRoZW0gYXMgX2djID0gdHJ1ZSB3aGVuIHRoZSB0aW1lbGluZSBjb21wbGV0ZXMgaW4gb3JkZXIgdG8gYWxsb3cgY2xlYW4gZ2FyYmFnZSBjb2xsZWN0aW9uLCBzbyB0ZW1wb3JhcmlseSByZS1lbmFibGUgdGhlIHRpbWVsaW5lIGhlcmUuXG5cdFx0XHR9XG5cdFx0XHR0d2VlbnMgPSBUd2VlbkxpdGUuZ2V0VHdlZW5zT2YodGFyZ2V0KTtcblx0XHRcdGkgPSB0d2VlbnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdGlmICh0d2VlbnNbaV0udGltZWxpbmUgPT09IHRoaXMgfHwgKG5lc3RlZCAmJiB0aGlzLl9jb250YWlucyh0d2VlbnNbaV0pKSkge1xuXHRcdFx0XHRcdGFbY250KytdID0gdHdlZW5zW2ldO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoZGlzYWJsZWQpIHtcblx0XHRcdFx0dGhpcy5fZW5hYmxlZChmYWxzZSwgdHJ1ZSk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gYTtcblx0XHR9O1xuXG5cdFx0cC5yZWNlbnQgPSBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiB0aGlzLl9yZWNlbnQ7XG5cdFx0fTtcblxuXHRcdHAuX2NvbnRhaW5zID0gZnVuY3Rpb24odHdlZW4pIHtcblx0XHRcdHZhciB0bCA9IHR3ZWVuLnRpbWVsaW5lO1xuXHRcdFx0d2hpbGUgKHRsKSB7XG5cdFx0XHRcdGlmICh0bCA9PT0gdGhpcykge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRsID0gdGwudGltZWxpbmU7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcblxuXHRcdHAuc2hpZnRDaGlsZHJlbiA9IGZ1bmN0aW9uKGFtb3VudCwgYWRqdXN0TGFiZWxzLCBpZ25vcmVCZWZvcmVUaW1lKSB7XG5cdFx0XHRpZ25vcmVCZWZvcmVUaW1lID0gaWdub3JlQmVmb3JlVGltZSB8fCAwO1xuXHRcdFx0dmFyIHR3ZWVuID0gdGhpcy5fZmlyc3QsXG5cdFx0XHRcdGxhYmVscyA9IHRoaXMuX2xhYmVscyxcblx0XHRcdFx0cDtcblx0XHRcdHdoaWxlICh0d2Vlbikge1xuXHRcdFx0XHRpZiAodHdlZW4uX3N0YXJ0VGltZSA+PSBpZ25vcmVCZWZvcmVUaW1lKSB7XG5cdFx0XHRcdFx0dHdlZW4uX3N0YXJ0VGltZSArPSBhbW91bnQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0dHdlZW4gPSB0d2Vlbi5fbmV4dDtcblx0XHRcdH1cblx0XHRcdGlmIChhZGp1c3RMYWJlbHMpIHtcblx0XHRcdFx0Zm9yIChwIGluIGxhYmVscykge1xuXHRcdFx0XHRcdGlmIChsYWJlbHNbcF0gPj0gaWdub3JlQmVmb3JlVGltZSkge1xuXHRcdFx0XHRcdFx0bGFiZWxzW3BdICs9IGFtb3VudDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzLl91bmNhY2hlKHRydWUpO1xuXHRcdH07XG5cblx0XHRwLl9raWxsID0gZnVuY3Rpb24odmFycywgdGFyZ2V0KSB7XG5cdFx0XHRpZiAoIXZhcnMgJiYgIXRhcmdldCkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5fZW5hYmxlZChmYWxzZSwgZmFsc2UpO1xuXHRcdFx0fVxuXHRcdFx0dmFyIHR3ZWVucyA9ICghdGFyZ2V0KSA/IHRoaXMuZ2V0Q2hpbGRyZW4odHJ1ZSwgdHJ1ZSwgZmFsc2UpIDogdGhpcy5nZXRUd2VlbnNPZih0YXJnZXQpLFxuXHRcdFx0XHRpID0gdHdlZW5zLmxlbmd0aCxcblx0XHRcdFx0Y2hhbmdlZCA9IGZhbHNlO1xuXHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdGlmICh0d2VlbnNbaV0uX2tpbGwodmFycywgdGFyZ2V0KSkge1xuXHRcdFx0XHRcdGNoYW5nZWQgPSB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gY2hhbmdlZDtcblx0XHR9O1xuXG5cdFx0cC5jbGVhciA9IGZ1bmN0aW9uKGxhYmVscykge1xuXHRcdFx0dmFyIHR3ZWVucyA9IHRoaXMuZ2V0Q2hpbGRyZW4oZmFsc2UsIHRydWUsIHRydWUpLFxuXHRcdFx0XHRpID0gdHdlZW5zLmxlbmd0aDtcblx0XHRcdHRoaXMuX3RpbWUgPSB0aGlzLl90b3RhbFRpbWUgPSAwO1xuXHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdHR3ZWVuc1tpXS5fZW5hYmxlZChmYWxzZSwgZmFsc2UpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGxhYmVscyAhPT0gZmFsc2UpIHtcblx0XHRcdFx0dGhpcy5fbGFiZWxzID0ge307XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy5fdW5jYWNoZSh0cnVlKTtcblx0XHR9O1xuXG5cdFx0cC5pbnZhbGlkYXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLl9maXJzdDtcblx0XHRcdHdoaWxlICh0d2Vlbikge1xuXHRcdFx0XHR0d2Vlbi5pbnZhbGlkYXRlKCk7XG5cdFx0XHRcdHR3ZWVuID0gdHdlZW4uX25leHQ7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gQW5pbWF0aW9uLnByb3RvdHlwZS5pbnZhbGlkYXRlLmNhbGwodGhpcyk7O1xuXHRcdH07XG5cblx0XHRwLl9lbmFibGVkID0gZnVuY3Rpb24oZW5hYmxlZCwgaWdub3JlVGltZWxpbmUpIHtcblx0XHRcdGlmIChlbmFibGVkID09PSB0aGlzLl9nYykge1xuXHRcdFx0XHR2YXIgdHdlZW4gPSB0aGlzLl9maXJzdDtcblx0XHRcdFx0d2hpbGUgKHR3ZWVuKSB7XG5cdFx0XHRcdFx0dHdlZW4uX2VuYWJsZWQoZW5hYmxlZCwgdHJ1ZSk7XG5cdFx0XHRcdFx0dHdlZW4gPSB0d2Vlbi5fbmV4dDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIFNpbXBsZVRpbWVsaW5lLnByb3RvdHlwZS5fZW5hYmxlZC5jYWxsKHRoaXMsIGVuYWJsZWQsIGlnbm9yZVRpbWVsaW5lKTtcblx0XHR9O1xuXG5cdFx0cC50b3RhbFRpbWUgPSBmdW5jdGlvbih0aW1lLCBzdXBwcmVzc0V2ZW50cywgdW5jYXBwZWQpIHtcblx0XHRcdHRoaXMuX2ZvcmNpbmdQbGF5aGVhZCA9IHRydWU7XG5cdFx0XHR2YXIgdmFsID0gQW5pbWF0aW9uLnByb3RvdHlwZS50b3RhbFRpbWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRcdHRoaXMuX2ZvcmNpbmdQbGF5aGVhZCA9IGZhbHNlO1xuXHRcdFx0cmV0dXJuIHZhbDtcblx0XHR9O1xuXG5cdFx0cC5kdXJhdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0aWYgKHRoaXMuX2RpcnR5KSB7XG5cdFx0XHRcdFx0dGhpcy50b3RhbER1cmF0aW9uKCk7IC8vanVzdCB0cmlnZ2VycyByZWNhbGN1bGF0aW9uXG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXMuX2R1cmF0aW9uO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHRoaXMuZHVyYXRpb24oKSAhPT0gMCAmJiB2YWx1ZSAhPT0gMCkge1xuXHRcdFx0XHR0aGlzLnRpbWVTY2FsZSh0aGlzLl9kdXJhdGlvbiAvIHZhbHVlKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLnRvdGFsRHVyYXRpb24gPSBmdW5jdGlvbih2YWx1ZSkge1xuXHRcdFx0aWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG5cdFx0XHRcdGlmICh0aGlzLl9kaXJ0eSkge1xuXHRcdFx0XHRcdHZhciBtYXggPSAwLFxuXHRcdFx0XHRcdFx0dHdlZW4gPSB0aGlzLl9sYXN0LFxuXHRcdFx0XHRcdFx0cHJldlN0YXJ0ID0gOTk5OTk5OTk5OTk5LFxuXHRcdFx0XHRcdFx0cHJldiwgZW5kO1xuXHRcdFx0XHRcdHdoaWxlICh0d2Vlbikge1xuXHRcdFx0XHRcdFx0cHJldiA9IHR3ZWVuLl9wcmV2OyAvL3JlY29yZCBpdCBoZXJlIGluIGNhc2UgdGhlIHR3ZWVuIGNoYW5nZXMgcG9zaXRpb24gaW4gdGhlIHNlcXVlbmNlLi4uXG5cdFx0XHRcdFx0XHRpZiAodHdlZW4uX2RpcnR5KSB7XG5cdFx0XHRcdFx0XHRcdHR3ZWVuLnRvdGFsRHVyYXRpb24oKTsgLy9jb3VsZCBjaGFuZ2UgdGhlIHR3ZWVuLl9zdGFydFRpbWUsIHNvIG1ha2Ugc3VyZSB0aGUgdHdlZW4ncyBjYWNoZSBpcyBjbGVhbiBiZWZvcmUgYW5hbHl6aW5nIGl0LlxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKHR3ZWVuLl9zdGFydFRpbWUgPiBwcmV2U3RhcnQgJiYgdGhpcy5fc29ydENoaWxkcmVuICYmICF0d2Vlbi5fcGF1c2VkKSB7IC8vaW4gY2FzZSBvbmUgb2YgdGhlIHR3ZWVucyBzaGlmdGVkIG91dCBvZiBvcmRlciwgaXQgbmVlZHMgdG8gYmUgcmUtaW5zZXJ0ZWQgaW50byB0aGUgY29ycmVjdCBwb3NpdGlvbiBpbiB0aGUgc2VxdWVuY2Vcblx0XHRcdFx0XHRcdFx0dGhpcy5hZGQodHdlZW4sIHR3ZWVuLl9zdGFydFRpbWUgLSB0d2Vlbi5fZGVsYXkpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cHJldlN0YXJ0ID0gdHdlZW4uX3N0YXJ0VGltZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICh0d2Vlbi5fc3RhcnRUaW1lIDwgMCAmJiAhdHdlZW4uX3BhdXNlZCkgeyAvL2NoaWxkcmVuIGFyZW4ndCBhbGxvd2VkIHRvIGhhdmUgbmVnYXRpdmUgc3RhcnRUaW1lcyB1bmxlc3Mgc21vb3RoQ2hpbGRUaW1pbmcgaXMgdHJ1ZSwgc28gYWRqdXN0IGhlcmUgaWYgb25lIGlzIGZvdW5kLlxuXHRcdFx0XHRcdFx0XHRtYXggLT0gdHdlZW4uX3N0YXJ0VGltZTtcblx0XHRcdFx0XHRcdFx0aWYgKHRoaXMuX3RpbWVsaW5lLnNtb290aENoaWxkVGltaW5nKSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpcy5fc3RhcnRUaW1lICs9IHR3ZWVuLl9zdGFydFRpbWUgLyB0aGlzLl90aW1lU2NhbGU7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0dGhpcy5zaGlmdENoaWxkcmVuKC10d2Vlbi5fc3RhcnRUaW1lLCBmYWxzZSwgLTk5OTk5OTk5OTkpO1xuXHRcdFx0XHRcdFx0XHRwcmV2U3RhcnQgPSAwO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0ZW5kID0gdHdlZW4uX3N0YXJ0VGltZSArICh0d2Vlbi5fdG90YWxEdXJhdGlvbiAvIHR3ZWVuLl90aW1lU2NhbGUpO1xuXHRcdFx0XHRcdFx0aWYgKGVuZCA+IG1heCkge1xuXHRcdFx0XHRcdFx0XHRtYXggPSBlbmQ7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR0d2VlbiA9IHByZXY7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRoaXMuX2R1cmF0aW9uID0gdGhpcy5fdG90YWxEdXJhdGlvbiA9IG1heDtcblx0XHRcdFx0XHR0aGlzLl9kaXJ0eSA9IGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzLl90b3RhbER1cmF0aW9uO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuICh2YWx1ZSAmJiB0aGlzLnRvdGFsRHVyYXRpb24oKSkgPyB0aGlzLnRpbWVTY2FsZSh0aGlzLl90b3RhbER1cmF0aW9uIC8gdmFsdWUpIDogdGhpcztcblx0XHR9O1xuXG5cdFx0cC5wYXVzZWQgPSBmdW5jdGlvbih2YWx1ZSkge1xuXHRcdFx0aWYgKCF2YWx1ZSkgeyAvL2lmIHRoZXJlJ3MgYSBwYXVzZSBkaXJlY3RseSBhdCB0aGUgc3BvdCBmcm9tIHdoZXJlIHdlJ3JlIHVucGF1c2luZywgc2tpcCBpdC5cblx0XHRcdFx0dmFyIHR3ZWVuID0gdGhpcy5fZmlyc3QsXG5cdFx0XHRcdFx0dGltZSA9IHRoaXMuX3RpbWU7XG5cdFx0XHRcdHdoaWxlICh0d2Vlbikge1xuXHRcdFx0XHRcdGlmICh0d2Vlbi5fc3RhcnRUaW1lID09PSB0aW1lICYmIHR3ZWVuLmRhdGEgPT09IFwiaXNQYXVzZVwiKSB7XG5cdFx0XHRcdFx0XHR0d2Vlbi5fcmF3UHJldlRpbWUgPSAwOyAvL3JlbWVtYmVyLCBfcmF3UHJldlRpbWUgaXMgaG93IHplcm8tZHVyYXRpb24gdHdlZW5zL2NhbGxiYWNrcyBzZW5zZSBkaXJlY3Rpb25hbGl0eSBhbmQgZGV0ZXJtaW5lIHdoZXRoZXIgb3Igbm90IHRvIGZpcmUuIElmIF9yYXdQcmV2VGltZSBpcyB0aGUgc2FtZSBhcyBfc3RhcnRUaW1lIG9uIHRoZSBuZXh0IHJlbmRlciwgaXQgd29uJ3QgZmlyZS5cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dHdlZW4gPSB0d2Vlbi5fbmV4dDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIEFuaW1hdGlvbi5wcm90b3R5cGUucGF1c2VkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0fTtcblxuXHRcdHAudXNlc0ZyYW1lcyA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHRsID0gdGhpcy5fdGltZWxpbmU7XG5cdFx0XHR3aGlsZSAodGwuX3RpbWVsaW5lKSB7XG5cdFx0XHRcdHRsID0gdGwuX3RpbWVsaW5lO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuICh0bCA9PT0gQW5pbWF0aW9uLl9yb290RnJhbWVzVGltZWxpbmUpO1xuXHRcdH07XG5cblx0XHRwLnJhd1RpbWUgPSBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiB0aGlzLl9wYXVzZWQgPyB0aGlzLl90b3RhbFRpbWUgOiAodGhpcy5fdGltZWxpbmUucmF3VGltZSgpIC0gdGhpcy5fc3RhcnRUaW1lKSAqIHRoaXMuX3RpbWVTY2FsZTtcblx0XHR9O1xuXG5cdFx0cmV0dXJuIFRpbWVsaW5lTGl0ZTtcblxuXHR9LCB0cnVlKTtcblxuXG5cblxuXG5cblxuXG5cdFxuXHRcblx0XG5cdFxuXHRcbi8qXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBUaW1lbGluZU1heFxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cdF9nc1Njb3BlLl9nc0RlZmluZShcIlRpbWVsaW5lTWF4XCIsIFtcIlRpbWVsaW5lTGl0ZVwiLFwiVHdlZW5MaXRlXCIsXCJlYXNpbmcuRWFzZVwiXSwgZnVuY3Rpb24oVGltZWxpbmVMaXRlLCBUd2VlbkxpdGUsIEVhc2UpIHtcblxuXHRcdHZhciBUaW1lbGluZU1heCA9IGZ1bmN0aW9uKHZhcnMpIHtcblx0XHRcdFx0VGltZWxpbmVMaXRlLmNhbGwodGhpcywgdmFycyk7XG5cdFx0XHRcdHRoaXMuX3JlcGVhdCA9IHRoaXMudmFycy5yZXBlYXQgfHwgMDtcblx0XHRcdFx0dGhpcy5fcmVwZWF0RGVsYXkgPSB0aGlzLnZhcnMucmVwZWF0RGVsYXkgfHwgMDtcblx0XHRcdFx0dGhpcy5fY3ljbGUgPSAwO1xuXHRcdFx0XHR0aGlzLl95b3lvID0gKHRoaXMudmFycy55b3lvID09PSB0cnVlKTtcblx0XHRcdFx0dGhpcy5fZGlydHkgPSB0cnVlO1xuXHRcdFx0fSxcblx0XHRcdF90aW55TnVtID0gMC4wMDAwMDAwMDAxLFxuXHRcdFx0VHdlZW5MaXRlSW50ZXJuYWxzID0gVHdlZW5MaXRlLl9pbnRlcm5hbHMsXG5cdFx0XHRfbGF6eVR3ZWVucyA9IFR3ZWVuTGl0ZUludGVybmFscy5sYXp5VHdlZW5zLFxuXHRcdFx0X2xhenlSZW5kZXIgPSBUd2VlbkxpdGVJbnRlcm5hbHMubGF6eVJlbmRlcixcblx0XHRcdF9nbG9iYWxzID0gX2dzU2NvcGUuX2dzRGVmaW5lLmdsb2JhbHMsXG5cdFx0XHRfZWFzZU5vbmUgPSBuZXcgRWFzZShudWxsLCBudWxsLCAxLCAwKSxcblx0XHRcdHAgPSBUaW1lbGluZU1heC5wcm90b3R5cGUgPSBuZXcgVGltZWxpbmVMaXRlKCk7XG5cblx0XHRwLmNvbnN0cnVjdG9yID0gVGltZWxpbmVNYXg7XG5cdFx0cC5raWxsKCkuX2djID0gZmFsc2U7XG5cdFx0VGltZWxpbmVNYXgudmVyc2lvbiA9IFwiMS4xOS4wXCI7XG5cblx0XHRwLmludmFsaWRhdGUgPSBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuX3lveW8gPSAodGhpcy52YXJzLnlveW8gPT09IHRydWUpO1xuXHRcdFx0dGhpcy5fcmVwZWF0ID0gdGhpcy52YXJzLnJlcGVhdCB8fCAwO1xuXHRcdFx0dGhpcy5fcmVwZWF0RGVsYXkgPSB0aGlzLnZhcnMucmVwZWF0RGVsYXkgfHwgMDtcblx0XHRcdHRoaXMuX3VuY2FjaGUodHJ1ZSk7XG5cdFx0XHRyZXR1cm4gVGltZWxpbmVMaXRlLnByb3RvdHlwZS5pbnZhbGlkYXRlLmNhbGwodGhpcyk7XG5cdFx0fTtcblxuXHRcdHAuYWRkQ2FsbGJhY2sgPSBmdW5jdGlvbihjYWxsYmFjaywgcG9zaXRpb24sIHBhcmFtcywgc2NvcGUpIHtcblx0XHRcdHJldHVybiB0aGlzLmFkZCggVHdlZW5MaXRlLmRlbGF5ZWRDYWxsKDAsIGNhbGxiYWNrLCBwYXJhbXMsIHNjb3BlKSwgcG9zaXRpb24pO1xuXHRcdH07XG5cblx0XHRwLnJlbW92ZUNhbGxiYWNrID0gZnVuY3Rpb24oY2FsbGJhY2ssIHBvc2l0aW9uKSB7XG5cdFx0XHRpZiAoY2FsbGJhY2spIHtcblx0XHRcdFx0aWYgKHBvc2l0aW9uID09IG51bGwpIHtcblx0XHRcdFx0XHR0aGlzLl9raWxsKG51bGwsIGNhbGxiYWNrKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR2YXIgYSA9IHRoaXMuZ2V0VHdlZW5zT2YoY2FsbGJhY2ssIGZhbHNlKSxcblx0XHRcdFx0XHRcdGkgPSBhLmxlbmd0aCxcblx0XHRcdFx0XHRcdHRpbWUgPSB0aGlzLl9wYXJzZVRpbWVPckxhYmVsKHBvc2l0aW9uKTtcblx0XHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRcdGlmIChhW2ldLl9zdGFydFRpbWUgPT09IHRpbWUpIHtcblx0XHRcdFx0XHRcdFx0YVtpXS5fZW5hYmxlZChmYWxzZSwgZmFsc2UpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fTtcblxuXHRcdHAucmVtb3ZlUGF1c2UgPSBmdW5jdGlvbihwb3NpdGlvbikge1xuXHRcdFx0cmV0dXJuIHRoaXMucmVtb3ZlQ2FsbGJhY2soVGltZWxpbmVMaXRlLl9pbnRlcm5hbHMucGF1c2VDYWxsYmFjaywgcG9zaXRpb24pO1xuXHRcdH07XG5cblx0XHRwLnR3ZWVuVG8gPSBmdW5jdGlvbihwb3NpdGlvbiwgdmFycykge1xuXHRcdFx0dmFycyA9IHZhcnMgfHwge307XG5cdFx0XHR2YXIgY29weSA9IHtlYXNlOl9lYXNlTm9uZSwgdXNlRnJhbWVzOnRoaXMudXNlc0ZyYW1lcygpLCBpbW1lZGlhdGVSZW5kZXI6ZmFsc2V9LFxuXHRcdFx0XHRFbmdpbmUgPSAodmFycy5yZXBlYXQgJiYgX2dsb2JhbHMuVHdlZW5NYXgpIHx8IFR3ZWVuTGl0ZSxcblx0XHRcdFx0ZHVyYXRpb24sIHAsIHQ7XG5cdFx0XHRmb3IgKHAgaW4gdmFycykge1xuXHRcdFx0XHRjb3B5W3BdID0gdmFyc1twXTtcblx0XHRcdH1cblx0XHRcdGNvcHkudGltZSA9IHRoaXMuX3BhcnNlVGltZU9yTGFiZWwocG9zaXRpb24pO1xuXHRcdFx0ZHVyYXRpb24gPSAoTWF0aC5hYnMoTnVtYmVyKGNvcHkudGltZSkgLSB0aGlzLl90aW1lKSAvIHRoaXMuX3RpbWVTY2FsZSkgfHwgMC4wMDE7XG5cdFx0XHR0ID0gbmV3IEVuZ2luZSh0aGlzLCBkdXJhdGlvbiwgY29weSk7XG5cdFx0XHRjb3B5Lm9uU3RhcnQgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0dC50YXJnZXQucGF1c2VkKHRydWUpO1xuXHRcdFx0XHRpZiAodC52YXJzLnRpbWUgIT09IHQudGFyZ2V0LnRpbWUoKSAmJiBkdXJhdGlvbiA9PT0gdC5kdXJhdGlvbigpKSB7IC8vZG9uJ3QgbWFrZSB0aGUgZHVyYXRpb24gemVybyAtIGlmIGl0J3Mgc3VwcG9zZWQgdG8gYmUgemVybywgZG9uJ3Qgd29ycnkgYmVjYXVzZSBpdCdzIGFscmVhZHkgaW5pdHRpbmcgdGhlIHR3ZWVuIGFuZCB3aWxsIGNvbXBsZXRlIGltbWVkaWF0ZWx5LCBlZmZlY3RpdmVseSBtYWtpbmcgdGhlIGR1cmF0aW9uIHplcm8gYW55d2F5LiBJZiB3ZSBtYWtlIGR1cmF0aW9uIHplcm8sIHRoZSB0d2VlbiB3b24ndCBydW4gYXQgYWxsLlxuXHRcdFx0XHRcdHQuZHVyYXRpb24oIE1hdGguYWJzKCB0LnZhcnMudGltZSAtIHQudGFyZ2V0LnRpbWUoKSkgLyB0LnRhcmdldC5fdGltZVNjYWxlICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHZhcnMub25TdGFydCkgeyAvL2luIGNhc2UgdGhlIHVzZXIgaGFkIGFuIG9uU3RhcnQgaW4gdGhlIHZhcnMgLSB3ZSBkb24ndCB3YW50IHRvIG92ZXJ3cml0ZSBpdC5cblx0XHRcdFx0XHR0Ll9jYWxsYmFjayhcIm9uU3RhcnRcIik7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0XHRyZXR1cm4gdDtcblx0XHR9O1xuXG5cdFx0cC50d2VlbkZyb21UbyA9IGZ1bmN0aW9uKGZyb21Qb3NpdGlvbiwgdG9Qb3NpdGlvbiwgdmFycykge1xuXHRcdFx0dmFycyA9IHZhcnMgfHwge307XG5cdFx0XHRmcm9tUG9zaXRpb24gPSB0aGlzLl9wYXJzZVRpbWVPckxhYmVsKGZyb21Qb3NpdGlvbik7XG5cdFx0XHR2YXJzLnN0YXJ0QXQgPSB7b25Db21wbGV0ZTp0aGlzLnNlZWssIG9uQ29tcGxldGVQYXJhbXM6W2Zyb21Qb3NpdGlvbl0sIGNhbGxiYWNrU2NvcGU6dGhpc307XG5cdFx0XHR2YXJzLmltbWVkaWF0ZVJlbmRlciA9ICh2YXJzLmltbWVkaWF0ZVJlbmRlciAhPT0gZmFsc2UpO1xuXHRcdFx0dmFyIHQgPSB0aGlzLnR3ZWVuVG8odG9Qb3NpdGlvbiwgdmFycyk7XG5cdFx0XHRyZXR1cm4gdC5kdXJhdGlvbigoTWF0aC5hYnMoIHQudmFycy50aW1lIC0gZnJvbVBvc2l0aW9uKSAvIHRoaXMuX3RpbWVTY2FsZSkgfHwgMC4wMDEpO1xuXHRcdH07XG5cblx0XHRwLnJlbmRlciA9IGZ1bmN0aW9uKHRpbWUsIHN1cHByZXNzRXZlbnRzLCBmb3JjZSkge1xuXHRcdFx0aWYgKHRoaXMuX2djKSB7XG5cdFx0XHRcdHRoaXMuX2VuYWJsZWQodHJ1ZSwgZmFsc2UpO1xuXHRcdFx0fVxuXHRcdFx0dmFyIHRvdGFsRHVyID0gKCF0aGlzLl9kaXJ0eSkgPyB0aGlzLl90b3RhbER1cmF0aW9uIDogdGhpcy50b3RhbER1cmF0aW9uKCksXG5cdFx0XHRcdGR1ciA9IHRoaXMuX2R1cmF0aW9uLFxuXHRcdFx0XHRwcmV2VGltZSA9IHRoaXMuX3RpbWUsXG5cdFx0XHRcdHByZXZUb3RhbFRpbWUgPSB0aGlzLl90b3RhbFRpbWUsXG5cdFx0XHRcdHByZXZTdGFydCA9IHRoaXMuX3N0YXJ0VGltZSxcblx0XHRcdFx0cHJldlRpbWVTY2FsZSA9IHRoaXMuX3RpbWVTY2FsZSxcblx0XHRcdFx0cHJldlJhd1ByZXZUaW1lID0gdGhpcy5fcmF3UHJldlRpbWUsXG5cdFx0XHRcdHByZXZQYXVzZWQgPSB0aGlzLl9wYXVzZWQsXG5cdFx0XHRcdHByZXZDeWNsZSA9IHRoaXMuX2N5Y2xlLFxuXHRcdFx0XHR0d2VlbiwgaXNDb21wbGV0ZSwgbmV4dCwgY2FsbGJhY2ssIGludGVybmFsRm9yY2UsIGN5Y2xlRHVyYXRpb24sIHBhdXNlVHdlZW4sIGN1clRpbWU7XG5cdFx0XHRpZiAodGltZSA+PSB0b3RhbER1ciAtIDAuMDAwMDAwMSkgeyAvL3RvIHdvcmsgYXJvdW5kIG9jY2FzaW9uYWwgZmxvYXRpbmcgcG9pbnQgbWF0aCBhcnRpZmFjdHMuXG5cdFx0XHRcdGlmICghdGhpcy5fbG9ja2VkKSB7XG5cdFx0XHRcdFx0dGhpcy5fdG90YWxUaW1lID0gdG90YWxEdXI7XG5cdFx0XHRcdFx0dGhpcy5fY3ljbGUgPSB0aGlzLl9yZXBlYXQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCF0aGlzLl9yZXZlcnNlZCkgaWYgKCF0aGlzLl9oYXNQYXVzZWRDaGlsZCgpKSB7XG5cdFx0XHRcdFx0aXNDb21wbGV0ZSA9IHRydWU7XG5cdFx0XHRcdFx0Y2FsbGJhY2sgPSBcIm9uQ29tcGxldGVcIjtcblx0XHRcdFx0XHRpbnRlcm5hbEZvcmNlID0gISF0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW47IC8vb3RoZXJ3aXNlLCBpZiB0aGUgYW5pbWF0aW9uIGlzIHVucGF1c2VkL2FjdGl2YXRlZCBhZnRlciBpdCdzIGFscmVhZHkgZmluaXNoZWQsIGl0IGRvZXNuJ3QgZ2V0IHJlbW92ZWQgZnJvbSB0aGUgcGFyZW50IHRpbWVsaW5lLlxuXHRcdFx0XHRcdGlmICh0aGlzLl9kdXJhdGlvbiA9PT0gMCkgaWYgKCh0aW1lIDw9IDAgJiYgdGltZSA+PSAtMC4wMDAwMDAxKSB8fCBwcmV2UmF3UHJldlRpbWUgPCAwIHx8IHByZXZSYXdQcmV2VGltZSA9PT0gX3RpbnlOdW0pIGlmIChwcmV2UmF3UHJldlRpbWUgIT09IHRpbWUgJiYgdGhpcy5fZmlyc3QpIHtcblx0XHRcdFx0XHRcdGludGVybmFsRm9yY2UgPSB0cnVlO1xuXHRcdFx0XHRcdFx0aWYgKHByZXZSYXdQcmV2VGltZSA+IF90aW55TnVtKSB7XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrID0gXCJvblJldmVyc2VDb21wbGV0ZVwiO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLl9yYXdQcmV2VGltZSA9ICh0aGlzLl9kdXJhdGlvbiB8fCAhc3VwcHJlc3NFdmVudHMgfHwgdGltZSB8fCB0aGlzLl9yYXdQcmV2VGltZSA9PT0gdGltZSkgPyB0aW1lIDogX3RpbnlOdW07IC8vd2hlbiB0aGUgcGxheWhlYWQgYXJyaXZlcyBhdCBFWEFDVExZIHRpbWUgMCAocmlnaHQgb24gdG9wKSBvZiBhIHplcm8tZHVyYXRpb24gdGltZWxpbmUgb3IgdHdlZW4sIHdlIG5lZWQgdG8gZGlzY2VybiBpZiBldmVudHMgYXJlIHN1cHByZXNzZWQgc28gdGhhdCB3aGVuIHRoZSBwbGF5aGVhZCBtb3ZlcyBhZ2FpbiAobmV4dCB0aW1lKSwgaXQnbGwgdHJpZ2dlciB0aGUgY2FsbGJhY2suIElmIGV2ZW50cyBhcmUgTk9UIHN1cHByZXNzZWQsIG9idmlvdXNseSB0aGUgY2FsbGJhY2sgd291bGQgYmUgdHJpZ2dlcmVkIGluIHRoaXMgcmVuZGVyLiBCYXNpY2FsbHksIHRoZSBjYWxsYmFjayBzaG91bGQgZmlyZSBlaXRoZXIgd2hlbiB0aGUgcGxheWhlYWQgQVJSSVZFUyBvciBMRUFWRVMgdGhpcyBleGFjdCBzcG90LCBub3QgYm90aC4gSW1hZ2luZSBkb2luZyBhIHRpbWVsaW5lLnNlZWsoMCkgYW5kIHRoZXJlJ3MgYSBjYWxsYmFjayB0aGF0IHNpdHMgYXQgMC4gU2luY2UgZXZlbnRzIGFyZSBzdXBwcmVzc2VkIG9uIHRoYXQgc2VlaygpIGJ5IGRlZmF1bHQsIG5vdGhpbmcgd2lsbCBmaXJlLCBidXQgd2hlbiB0aGUgcGxheWhlYWQgbW92ZXMgb2ZmIG9mIHRoYXQgcG9zaXRpb24sIHRoZSBjYWxsYmFjayBzaG91bGQgZmlyZS4gVGhpcyBiZWhhdmlvciBpcyB3aGF0IHBlb3BsZSBpbnR1aXRpdmVseSBleHBlY3QuIFdlIHNldCB0aGUgX3Jhd1ByZXZUaW1lIHRvIGJlIGEgcHJlY2lzZSB0aW55IG51bWJlciB0byBpbmRpY2F0ZSB0aGlzIHNjZW5hcmlvIHJhdGhlciB0aGFuIHVzaW5nIGFub3RoZXIgcHJvcGVydHkvdmFyaWFibGUgd2hpY2ggd291bGQgaW5jcmVhc2UgbWVtb3J5IHVzYWdlLiBUaGlzIHRlY2huaXF1ZSBpcyBsZXNzIHJlYWRhYmxlLCBidXQgbW9yZSBlZmZpY2llbnQuXG5cdFx0XHRcdGlmICh0aGlzLl95b3lvICYmICh0aGlzLl9jeWNsZSAmIDEpICE9PSAwKSB7XG5cdFx0XHRcdFx0dGhpcy5fdGltZSA9IHRpbWUgPSAwO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRoaXMuX3RpbWUgPSBkdXI7XG5cdFx0XHRcdFx0dGltZSA9IGR1ciArIDAuMDAwMTsgLy90byBhdm9pZCBvY2Nhc2lvbmFsIGZsb2F0aW5nIHBvaW50IHJvdW5kaW5nIGVycm9ycyAtIHNvbWV0aW1lcyBjaGlsZCB0d2VlbnMvdGltZWxpbmVzIHdlcmUgbm90IGJlaW5nIGZ1bGx5IGNvbXBsZXRlZCAodGhlaXIgcHJvZ3Jlc3MgbWlnaHQgYmUgMC45OTk5OTk5OTk5OTk5OTggaW5zdGVhZCBvZiAxIGJlY2F1c2Ugd2hlbiBfdGltZSAtIHR3ZWVuLl9zdGFydFRpbWUgaXMgcGVyZm9ybWVkLCBmbG9hdGluZyBwb2ludCBlcnJvcnMgd291bGQgcmV0dXJuIGEgdmFsdWUgdGhhdCB3YXMgU0xJR0hUTFkgb2ZmKS4gVHJ5ICg5OTk5OTk5OTk5OTkuNyAtIDk5OTk5OTk5OTk5OSkgKiAxID0gMC42OTk5NTExNzE4NzUgaW5zdGVhZCBvZiAwLjcuIFdlIGNhbm5vdCBkbyBsZXNzIHRoZW4gMC4wMDAxIGJlY2F1c2UgdGhlIHNhbWUgaXNzdWUgY2FuIG9jY3VyIHdoZW4gdGhlIGR1cmF0aW9uIGlzIGV4dHJlbWVseSBsYXJnZSBsaWtlIDk5OTk5OTk5OTk5OSBpbiB3aGljaCBjYXNlIGFkZGluZyAwLjAwMDAwMDAxLCBmb3IgZXhhbXBsZSwgY2F1c2VzIGl0IHRvIGFjdCBsaWtlIG5vdGhpbmcgd2FzIGFkZGVkLlxuXHRcdFx0XHR9XG5cblx0XHRcdH0gZWxzZSBpZiAodGltZSA8IDAuMDAwMDAwMSkgeyAvL3RvIHdvcmsgYXJvdW5kIG9jY2FzaW9uYWwgZmxvYXRpbmcgcG9pbnQgbWF0aCBhcnRpZmFjdHMsIHJvdW5kIHN1cGVyIHNtYWxsIHZhbHVlcyB0byAwLlxuXHRcdFx0XHRpZiAoIXRoaXMuX2xvY2tlZCkge1xuXHRcdFx0XHRcdHRoaXMuX3RvdGFsVGltZSA9IHRoaXMuX2N5Y2xlID0gMDtcblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLl90aW1lID0gMDtcblx0XHRcdFx0aWYgKHByZXZUaW1lICE9PSAwIHx8IChkdXIgPT09IDAgJiYgcHJldlJhd1ByZXZUaW1lICE9PSBfdGlueU51bSAmJiAocHJldlJhd1ByZXZUaW1lID4gMCB8fCAodGltZSA8IDAgJiYgcHJldlJhd1ByZXZUaW1lID49IDApKSAmJiAhdGhpcy5fbG9ja2VkKSkgeyAvL2VkZ2UgY2FzZSBmb3IgY2hlY2tpbmcgdGltZSA8IDAgJiYgcHJldlJhd1ByZXZUaW1lID49IDA6IGEgemVyby1kdXJhdGlvbiBmcm9tVG8oKSB0d2VlbiBpbnNpZGUgYSB6ZXJvLWR1cmF0aW9uIHRpbWVsaW5lICh5ZWFoLCB2ZXJ5IHJhcmUpXG5cdFx0XHRcdFx0Y2FsbGJhY2sgPSBcIm9uUmV2ZXJzZUNvbXBsZXRlXCI7XG5cdFx0XHRcdFx0aXNDb21wbGV0ZSA9IHRoaXMuX3JldmVyc2VkO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0aW1lIDwgMCkge1xuXHRcdFx0XHRcdHRoaXMuX2FjdGl2ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdGlmICh0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4gJiYgdGhpcy5fcmV2ZXJzZWQpIHtcblx0XHRcdFx0XHRcdGludGVybmFsRm9yY2UgPSBpc0NvbXBsZXRlID0gdHJ1ZTtcblx0XHRcdFx0XHRcdGNhbGxiYWNrID0gXCJvblJldmVyc2VDb21wbGV0ZVwiO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAocHJldlJhd1ByZXZUaW1lID49IDAgJiYgdGhpcy5fZmlyc3QpIHsgLy93aGVuIGdvaW5nIGJhY2sgYmV5b25kIHRoZSBzdGFydCwgZm9yY2UgYSByZW5kZXIgc28gdGhhdCB6ZXJvLWR1cmF0aW9uIHR3ZWVucyB0aGF0IHNpdCBhdCB0aGUgdmVyeSBiZWdpbm5pbmcgcmVuZGVyIHRoZWlyIHN0YXJ0IHZhbHVlcyBwcm9wZXJseS4gT3RoZXJ3aXNlLCBpZiB0aGUgcGFyZW50IHRpbWVsaW5lJ3MgcGxheWhlYWQgbGFuZHMgZXhhY3RseSBhdCB0aGlzIHRpbWVsaW5lJ3Mgc3RhcnRUaW1lLCBhbmQgdGhlbiBtb3ZlcyBiYWNrd2FyZHMsIHRoZSB6ZXJvLWR1cmF0aW9uIHR3ZWVucyBhdCB0aGUgYmVnaW5uaW5nIHdvdWxkIHN0aWxsIGJlIGF0IHRoZWlyIGVuZCBzdGF0ZS5cblx0XHRcdFx0XHRcdGludGVybmFsRm9yY2UgPSB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0aGlzLl9yYXdQcmV2VGltZSA9IHRpbWU7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhpcy5fcmF3UHJldlRpbWUgPSAoZHVyIHx8ICFzdXBwcmVzc0V2ZW50cyB8fCB0aW1lIHx8IHRoaXMuX3Jhd1ByZXZUaW1lID09PSB0aW1lKSA/IHRpbWUgOiBfdGlueU51bTsgLy93aGVuIHRoZSBwbGF5aGVhZCBhcnJpdmVzIGF0IEVYQUNUTFkgdGltZSAwIChyaWdodCBvbiB0b3ApIG9mIGEgemVyby1kdXJhdGlvbiB0aW1lbGluZSBvciB0d2Vlbiwgd2UgbmVlZCB0byBkaXNjZXJuIGlmIGV2ZW50cyBhcmUgc3VwcHJlc3NlZCBzbyB0aGF0IHdoZW4gdGhlIHBsYXloZWFkIG1vdmVzIGFnYWluIChuZXh0IHRpbWUpLCBpdCdsbCB0cmlnZ2VyIHRoZSBjYWxsYmFjay4gSWYgZXZlbnRzIGFyZSBOT1Qgc3VwcHJlc3NlZCwgb2J2aW91c2x5IHRoZSBjYWxsYmFjayB3b3VsZCBiZSB0cmlnZ2VyZWQgaW4gdGhpcyByZW5kZXIuIEJhc2ljYWxseSwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlIGVpdGhlciB3aGVuIHRoZSBwbGF5aGVhZCBBUlJJVkVTIG9yIExFQVZFUyB0aGlzIGV4YWN0IHNwb3QsIG5vdCBib3RoLiBJbWFnaW5lIGRvaW5nIGEgdGltZWxpbmUuc2VlaygwKSBhbmQgdGhlcmUncyBhIGNhbGxiYWNrIHRoYXQgc2l0cyBhdCAwLiBTaW5jZSBldmVudHMgYXJlIHN1cHByZXNzZWQgb24gdGhhdCBzZWVrKCkgYnkgZGVmYXVsdCwgbm90aGluZyB3aWxsIGZpcmUsIGJ1dCB3aGVuIHRoZSBwbGF5aGVhZCBtb3ZlcyBvZmYgb2YgdGhhdCBwb3NpdGlvbiwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlLiBUaGlzIGJlaGF2aW9yIGlzIHdoYXQgcGVvcGxlIGludHVpdGl2ZWx5IGV4cGVjdC4gV2Ugc2V0IHRoZSBfcmF3UHJldlRpbWUgdG8gYmUgYSBwcmVjaXNlIHRpbnkgbnVtYmVyIHRvIGluZGljYXRlIHRoaXMgc2NlbmFyaW8gcmF0aGVyIHRoYW4gdXNpbmcgYW5vdGhlciBwcm9wZXJ0eS92YXJpYWJsZSB3aGljaCB3b3VsZCBpbmNyZWFzZSBtZW1vcnkgdXNhZ2UuIFRoaXMgdGVjaG5pcXVlIGlzIGxlc3MgcmVhZGFibGUsIGJ1dCBtb3JlIGVmZmljaWVudC5cblx0XHRcdFx0XHRpZiAodGltZSA9PT0gMCAmJiBpc0NvbXBsZXRlKSB7IC8vaWYgdGhlcmUncyBhIHplcm8tZHVyYXRpb24gdHdlZW4gYXQgdGhlIHZlcnkgYmVnaW5uaW5nIG9mIGEgdGltZWxpbmUgYW5kIHRoZSBwbGF5aGVhZCBsYW5kcyBFWEFDVExZIGF0IHRpbWUgMCwgdGhhdCB0d2VlbiB3aWxsIGNvcnJlY3RseSByZW5kZXIgaXRzIGVuZCB2YWx1ZXMsIGJ1dCB3ZSBuZWVkIHRvIGtlZXAgdGhlIHRpbWVsaW5lIGFsaXZlIGZvciBvbmUgbW9yZSByZW5kZXIgc28gdGhhdCB0aGUgYmVnaW5uaW5nIHZhbHVlcyByZW5kZXIgcHJvcGVybHkgYXMgdGhlIHBhcmVudCdzIHBsYXloZWFkIGtlZXBzIG1vdmluZyBiZXlvbmQgdGhlIGJlZ2luaW5nLiBJbWFnaW5lIG9iai54IHN0YXJ0cyBhdCAwIGFuZCB0aGVuIHdlIGRvIHRsLnNldChvYmosIHt4OjEwMH0pLnRvKG9iaiwgMSwge3g6MjAwfSkgYW5kIHRoZW4gbGF0ZXIgd2UgdGwucmV2ZXJzZSgpLi4udGhlIGdvYWwgaXMgdG8gaGF2ZSBvYmoueCByZXZlcnQgdG8gMC4gSWYgdGhlIHBsYXloZWFkIGhhcHBlbnMgdG8gbGFuZCBvbiBleGFjdGx5IDAsIHdpdGhvdXQgdGhpcyBjaHVuayBvZiBjb2RlLCBpdCdkIGNvbXBsZXRlIHRoZSB0aW1lbGluZSBhbmQgcmVtb3ZlIGl0IGZyb20gdGhlIHJlbmRlcmluZyBxdWV1ZSAobm90IGdvb2QpLlxuXHRcdFx0XHRcdFx0dHdlZW4gPSB0aGlzLl9maXJzdDtcblx0XHRcdFx0XHRcdHdoaWxlICh0d2VlbiAmJiB0d2Vlbi5fc3RhcnRUaW1lID09PSAwKSB7XG5cdFx0XHRcdFx0XHRcdGlmICghdHdlZW4uX2R1cmF0aW9uKSB7XG5cdFx0XHRcdFx0XHRcdFx0aXNDb21wbGV0ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHR3ZWVuID0gdHdlZW4uX25leHQ7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRpbWUgPSAwOyAvL3RvIGF2b2lkIG9jY2FzaW9uYWwgZmxvYXRpbmcgcG9pbnQgcm91bmRpbmcgZXJyb3JzIChjb3VsZCBjYXVzZSBwcm9ibGVtcyBlc3BlY2lhbGx5IHdpdGggemVyby1kdXJhdGlvbiB0d2VlbnMgYXQgdGhlIHZlcnkgYmVnaW5uaW5nIG9mIHRoZSB0aW1lbGluZSlcblx0XHRcdFx0XHRpZiAoIXRoaXMuX2luaXR0ZWQpIHtcblx0XHRcdFx0XHRcdGludGVybmFsRm9yY2UgPSB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZiAoZHVyID09PSAwICYmIHByZXZSYXdQcmV2VGltZSA8IDApIHsgLy93aXRob3V0IHRoaXMsIHplcm8tZHVyYXRpb24gcmVwZWF0aW5nIHRpbWVsaW5lcyAobGlrZSB3aXRoIGEgc2ltcGxlIGNhbGxiYWNrIG5lc3RlZCBhdCB0aGUgdmVyeSBiZWdpbm5pbmcgYW5kIGEgcmVwZWF0RGVsYXkpIHdvdWxkbid0IHJlbmRlciB0aGUgZmlyc3QgdGltZSB0aHJvdWdoLlxuXHRcdFx0XHRcdGludGVybmFsRm9yY2UgPSB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuX3RpbWUgPSB0aGlzLl9yYXdQcmV2VGltZSA9IHRpbWU7XG5cdFx0XHRcdGlmICghdGhpcy5fbG9ja2VkKSB7XG5cdFx0XHRcdFx0dGhpcy5fdG90YWxUaW1lID0gdGltZTtcblx0XHRcdFx0XHRpZiAodGhpcy5fcmVwZWF0ICE9PSAwKSB7XG5cdFx0XHRcdFx0XHRjeWNsZUR1cmF0aW9uID0gZHVyICsgdGhpcy5fcmVwZWF0RGVsYXk7XG5cdFx0XHRcdFx0XHR0aGlzLl9jeWNsZSA9ICh0aGlzLl90b3RhbFRpbWUgLyBjeWNsZUR1cmF0aW9uKSA+PiAwOyAvL29yaWdpbmFsbHkgX3RvdGFsVGltZSAlIGN5Y2xlRHVyYXRpb24gYnV0IGZsb2F0aW5nIHBvaW50IGVycm9ycyBjYXVzZWQgcHJvYmxlbXMsIHNvIEkgbm9ybWFsaXplZCBpdC4gKDQgJSAwLjggc2hvdWxkIGJlIDAgYnV0IGl0IGdldHMgcmVwb3J0ZWQgYXMgMC43OTk5OTk5OSEpXG5cdFx0XHRcdFx0XHRpZiAodGhpcy5fY3ljbGUgIT09IDApIGlmICh0aGlzLl9jeWNsZSA9PT0gdGhpcy5fdG90YWxUaW1lIC8gY3ljbGVEdXJhdGlvbiAmJiBwcmV2VG90YWxUaW1lIDw9IHRpbWUpIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5fY3ljbGUtLTsgLy9vdGhlcndpc2Ugd2hlbiByZW5kZXJlZCBleGFjdGx5IGF0IHRoZSBlbmQgdGltZSwgaXQgd2lsbCBhY3QgYXMgdGhvdWdoIGl0IGlzIHJlcGVhdGluZyAoYXQgdGhlIGJlZ2lubmluZylcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHRoaXMuX3RpbWUgPSB0aGlzLl90b3RhbFRpbWUgLSAodGhpcy5fY3ljbGUgKiBjeWNsZUR1cmF0aW9uKTtcblx0XHRcdFx0XHRcdGlmICh0aGlzLl95b3lvKSBpZiAoKHRoaXMuX2N5Y2xlICYgMSkgIT09IDApIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5fdGltZSA9IGR1ciAtIHRoaXMuX3RpbWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAodGhpcy5fdGltZSA+IGR1cikge1xuXHRcdFx0XHRcdFx0XHR0aGlzLl90aW1lID0gZHVyO1xuXHRcdFx0XHRcdFx0XHR0aW1lID0gZHVyICsgMC4wMDAxOyAvL3RvIGF2b2lkIG9jY2FzaW9uYWwgZmxvYXRpbmcgcG9pbnQgcm91bmRpbmcgZXJyb3Jcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAodGhpcy5fdGltZSA8IDApIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5fdGltZSA9IHRpbWUgPSAwO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0dGltZSA9IHRoaXMuX3RpbWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKHRoaXMuX2hhc1BhdXNlICYmICF0aGlzLl9mb3JjaW5nUGxheWhlYWQgJiYgIXN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRcdFx0dGltZSA9IHRoaXMuX3RpbWU7XG5cdFx0XHRcdFx0aWYgKHRpbWUgPj0gcHJldlRpbWUpIHtcblx0XHRcdFx0XHRcdHR3ZWVuID0gdGhpcy5fZmlyc3Q7XG5cdFx0XHRcdFx0XHR3aGlsZSAodHdlZW4gJiYgdHdlZW4uX3N0YXJ0VGltZSA8PSB0aW1lICYmICFwYXVzZVR3ZWVuKSB7XG5cdFx0XHRcdFx0XHRcdGlmICghdHdlZW4uX2R1cmF0aW9uKSBpZiAodHdlZW4uZGF0YSA9PT0gXCJpc1BhdXNlXCIgJiYgIXR3ZWVuLnJhdGlvICYmICEodHdlZW4uX3N0YXJ0VGltZSA9PT0gMCAmJiB0aGlzLl9yYXdQcmV2VGltZSA9PT0gMCkpIHtcblx0XHRcdFx0XHRcdFx0XHRwYXVzZVR3ZWVuID0gdHdlZW47XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0dHdlZW4gPSB0d2Vlbi5fbmV4dDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dHdlZW4gPSB0aGlzLl9sYXN0O1xuXHRcdFx0XHRcdFx0d2hpbGUgKHR3ZWVuICYmIHR3ZWVuLl9zdGFydFRpbWUgPj0gdGltZSAmJiAhcGF1c2VUd2Vlbikge1xuXHRcdFx0XHRcdFx0XHRpZiAoIXR3ZWVuLl9kdXJhdGlvbikgaWYgKHR3ZWVuLmRhdGEgPT09IFwiaXNQYXVzZVwiICYmIHR3ZWVuLl9yYXdQcmV2VGltZSA+IDApIHtcblx0XHRcdFx0XHRcdFx0XHRwYXVzZVR3ZWVuID0gdHdlZW47XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0dHdlZW4gPSB0d2Vlbi5fcHJldjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHBhdXNlVHdlZW4pIHtcblx0XHRcdFx0XHRcdHRoaXMuX3RpbWUgPSB0aW1lID0gcGF1c2VUd2Vlbi5fc3RhcnRUaW1lO1xuXHRcdFx0XHRcdFx0dGhpcy5fdG90YWxUaW1lID0gdGltZSArICh0aGlzLl9jeWNsZSAqICh0aGlzLl90b3RhbER1cmF0aW9uICsgdGhpcy5fcmVwZWF0RGVsYXkpKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0fVxuXG5cdFx0XHRpZiAodGhpcy5fY3ljbGUgIT09IHByZXZDeWNsZSkgaWYgKCF0aGlzLl9sb2NrZWQpIHtcblx0XHRcdFx0Lypcblx0XHRcdFx0bWFrZSBzdXJlIGNoaWxkcmVuIGF0IHRoZSBlbmQvYmVnaW5uaW5nIG9mIHRoZSB0aW1lbGluZSBhcmUgcmVuZGVyZWQgcHJvcGVybHkuIElmLCBmb3IgZXhhbXBsZSxcblx0XHRcdFx0YSAzLXNlY29uZCBsb25nIHRpbWVsaW5lIHJlbmRlcmVkIGF0IDIuOSBzZWNvbmRzIHByZXZpb3VzbHksIGFuZCBub3cgcmVuZGVycyBhdCAzLjIgc2Vjb25kcyAod2hpY2hcblx0XHRcdFx0d291bGQgZ2V0IHRyYW5zYXRlZCB0byAyLjggc2Vjb25kcyBpZiB0aGUgdGltZWxpbmUgeW95b3Mgb3IgMC4yIHNlY29uZHMgaWYgaXQganVzdCByZXBlYXRzKSwgdGhlcmVcblx0XHRcdFx0Y291bGQgYmUgYSBjYWxsYmFjayBvciBhIHNob3J0IHR3ZWVuIHRoYXQncyBhdCAyLjk1IG9yIDMgc2Vjb25kcyBpbiB3aGljaCB3b3VsZG4ndCByZW5kZXIuIFNvXG5cdFx0XHRcdHdlIG5lZWQgdG8gcHVzaCB0aGUgdGltZWxpbmUgdG8gdGhlIGVuZCAoYW5kL29yIGJlZ2lubmluZyBkZXBlbmRpbmcgb24gaXRzIHlveW8gdmFsdWUpLiBBbHNvIHdlIG11c3Rcblx0XHRcdFx0ZW5zdXJlIHRoYXQgemVyby1kdXJhdGlvbiB0d2VlbnMgYXQgdGhlIHZlcnkgYmVnaW5uaW5nIG9yIGVuZCBvZiB0aGUgVGltZWxpbmVNYXggd29yay5cblx0XHRcdFx0Ki9cblx0XHRcdFx0dmFyIGJhY2t3YXJkcyA9ICh0aGlzLl95b3lvICYmIChwcmV2Q3ljbGUgJiAxKSAhPT0gMCksXG5cdFx0XHRcdFx0d3JhcCA9IChiYWNrd2FyZHMgPT09ICh0aGlzLl95b3lvICYmICh0aGlzLl9jeWNsZSAmIDEpICE9PSAwKSksXG5cdFx0XHRcdFx0cmVjVG90YWxUaW1lID0gdGhpcy5fdG90YWxUaW1lLFxuXHRcdFx0XHRcdHJlY0N5Y2xlID0gdGhpcy5fY3ljbGUsXG5cdFx0XHRcdFx0cmVjUmF3UHJldlRpbWUgPSB0aGlzLl9yYXdQcmV2VGltZSxcblx0XHRcdFx0XHRyZWNUaW1lID0gdGhpcy5fdGltZTtcblxuXHRcdFx0XHR0aGlzLl90b3RhbFRpbWUgPSBwcmV2Q3ljbGUgKiBkdXI7XG5cdFx0XHRcdGlmICh0aGlzLl9jeWNsZSA8IHByZXZDeWNsZSkge1xuXHRcdFx0XHRcdGJhY2t3YXJkcyA9ICFiYWNrd2FyZHM7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhpcy5fdG90YWxUaW1lICs9IGR1cjtcblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLl90aW1lID0gcHJldlRpbWU7IC8vdGVtcG9yYXJpbHkgcmV2ZXJ0IF90aW1lIHNvIHRoYXQgcmVuZGVyKCkgcmVuZGVycyB0aGUgY2hpbGRyZW4gaW4gdGhlIGNvcnJlY3Qgb3JkZXIuIFdpdGhvdXQgdGhpcywgdHdlZW5zIHdvbid0IHJld2luZCBjb3JyZWN0bHkuIFdlIGNvdWxkIGFyaGljdGVjdCB0aGluZ3MgaW4gYSBcImNsZWFuZXJcIiB3YXkgYnkgc3BsaXR0aW5nIG91dCB0aGUgcmVuZGVyaW5nIHF1ZXVlIGludG8gYSBzZXBhcmF0ZSBtZXRob2QgYnV0IGZvciBwZXJmb3JtYW5jZSByZWFzb25zLCB3ZSBrZXB0IGl0IGFsbCBpbnNpZGUgdGhpcyBtZXRob2QuXG5cblx0XHRcdFx0dGhpcy5fcmF3UHJldlRpbWUgPSAoZHVyID09PSAwKSA/IHByZXZSYXdQcmV2VGltZSAtIDAuMDAwMSA6IHByZXZSYXdQcmV2VGltZTtcblx0XHRcdFx0dGhpcy5fY3ljbGUgPSBwcmV2Q3ljbGU7XG5cdFx0XHRcdHRoaXMuX2xvY2tlZCA9IHRydWU7IC8vcHJldmVudHMgY2hhbmdlcyB0byB0b3RhbFRpbWUgYW5kIHNraXBzIHJlcGVhdC95b3lvIGJlaGF2aW9yIHdoZW4gd2UgcmVjdXJzaXZlbHkgY2FsbCByZW5kZXIoKVxuXHRcdFx0XHRwcmV2VGltZSA9IChiYWNrd2FyZHMpID8gMCA6IGR1cjtcblx0XHRcdFx0dGhpcy5yZW5kZXIocHJldlRpbWUsIHN1cHByZXNzRXZlbnRzLCAoZHVyID09PSAwKSk7XG5cdFx0XHRcdGlmICghc3VwcHJlc3NFdmVudHMpIGlmICghdGhpcy5fZ2MpIHtcblx0XHRcdFx0XHRpZiAodGhpcy52YXJzLm9uUmVwZWF0KSB7XG5cdFx0XHRcdFx0XHR0aGlzLl9jYWxsYmFjayhcIm9uUmVwZWF0XCIpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAocHJldlRpbWUgIT09IHRoaXMuX3RpbWUpIHsgLy9pbiBjYXNlIHRoZXJlJ3MgYSBjYWxsYmFjayBsaWtlIG9uQ29tcGxldGUgaW4gYSBuZXN0ZWQgdHdlZW4vdGltZWxpbmUgdGhhdCBjaGFuZ2VzIHRoZSBwbGF5aGVhZCBwb3NpdGlvbiwgbGlrZSB2aWEgc2VlaygpLCB3ZSBzaG91bGQganVzdCBhYm9ydC5cblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHdyYXApIHtcblx0XHRcdFx0XHRwcmV2VGltZSA9IChiYWNrd2FyZHMpID8gZHVyICsgMC4wMDAxIDogLTAuMDAwMTtcblx0XHRcdFx0XHR0aGlzLnJlbmRlcihwcmV2VGltZSwgdHJ1ZSwgZmFsc2UpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuX2xvY2tlZCA9IGZhbHNlO1xuXHRcdFx0XHRpZiAodGhpcy5fcGF1c2VkICYmICFwcmV2UGF1c2VkKSB7IC8vaWYgdGhlIHJlbmRlcigpIHRyaWdnZXJlZCBjYWxsYmFjayB0aGF0IHBhdXNlZCB0aGlzIHRpbWVsaW5lLCB3ZSBzaG91bGQgYWJvcnQgKHZlcnkgcmFyZSwgYnV0IHBvc3NpYmxlKVxuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLl90aW1lID0gcmVjVGltZTtcblx0XHRcdFx0dGhpcy5fdG90YWxUaW1lID0gcmVjVG90YWxUaW1lO1xuXHRcdFx0XHR0aGlzLl9jeWNsZSA9IHJlY0N5Y2xlO1xuXHRcdFx0XHR0aGlzLl9yYXdQcmV2VGltZSA9IHJlY1Jhd1ByZXZUaW1lO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoKHRoaXMuX3RpbWUgPT09IHByZXZUaW1lIHx8ICF0aGlzLl9maXJzdCkgJiYgIWZvcmNlICYmICFpbnRlcm5hbEZvcmNlICYmICFwYXVzZVR3ZWVuKSB7XG5cdFx0XHRcdGlmIChwcmV2VG90YWxUaW1lICE9PSB0aGlzLl90b3RhbFRpbWUpIGlmICh0aGlzLl9vblVwZGF0ZSkgaWYgKCFzdXBwcmVzc0V2ZW50cykgeyAvL3NvIHRoYXQgb25VcGRhdGUgZmlyZXMgZXZlbiBkdXJpbmcgdGhlIHJlcGVhdERlbGF5IC0gYXMgbG9uZyBhcyB0aGUgdG90YWxUaW1lIGNoYW5nZWQsIHdlIHNob3VsZCB0cmlnZ2VyIG9uVXBkYXRlLlxuXHRcdFx0XHRcdHRoaXMuX2NhbGxiYWNrKFwib25VcGRhdGVcIik7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fSBlbHNlIGlmICghdGhpcy5faW5pdHRlZCkge1xuXHRcdFx0XHR0aGlzLl9pbml0dGVkID0gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCF0aGlzLl9hY3RpdmUpIGlmICghdGhpcy5fcGF1c2VkICYmIHRoaXMuX3RvdGFsVGltZSAhPT0gcHJldlRvdGFsVGltZSAmJiB0aW1lID4gMCkge1xuXHRcdFx0XHR0aGlzLl9hY3RpdmUgPSB0cnVlOyAgLy9zbyB0aGF0IGlmIHRoZSB1c2VyIHJlbmRlcnMgdGhlIHRpbWVsaW5lIChhcyBvcHBvc2VkIHRvIHRoZSBwYXJlbnQgdGltZWxpbmUgcmVuZGVyaW5nIGl0KSwgaXQgaXMgZm9yY2VkIHRvIHJlLXJlbmRlciBhbmQgYWxpZ24gaXQgd2l0aCB0aGUgcHJvcGVyIHRpbWUvZnJhbWUgb24gdGhlIG5leHQgcmVuZGVyaW5nIGN5Y2xlLiBNYXliZSB0aGUgdGltZWxpbmUgYWxyZWFkeSBmaW5pc2hlZCBidXQgdGhlIHVzZXIgbWFudWFsbHkgcmUtcmVuZGVycyBpdCBhcyBoYWxmd2F5IGRvbmUsIGZvciBleGFtcGxlLlxuXHRcdFx0fVxuXG5cdFx0XHRpZiAocHJldlRvdGFsVGltZSA9PT0gMCkgaWYgKHRoaXMudmFycy5vblN0YXJ0KSBpZiAodGhpcy5fdG90YWxUaW1lICE9PSAwIHx8ICF0aGlzLl90b3RhbER1cmF0aW9uKSBpZiAoIXN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRcdHRoaXMuX2NhbGxiYWNrKFwib25TdGFydFwiKTtcblx0XHRcdH1cblxuXHRcdFx0Y3VyVGltZSA9IHRoaXMuX3RpbWU7XG5cdFx0XHRpZiAoY3VyVGltZSA+PSBwcmV2VGltZSkge1xuXHRcdFx0XHR0d2VlbiA9IHRoaXMuX2ZpcnN0O1xuXHRcdFx0XHR3aGlsZSAodHdlZW4pIHtcblx0XHRcdFx0XHRuZXh0ID0gdHdlZW4uX25leHQ7IC8vcmVjb3JkIGl0IGhlcmUgYmVjYXVzZSB0aGUgdmFsdWUgY291bGQgY2hhbmdlIGFmdGVyIHJlbmRlcmluZy4uLlxuXHRcdFx0XHRcdGlmIChjdXJUaW1lICE9PSB0aGlzLl90aW1lIHx8ICh0aGlzLl9wYXVzZWQgJiYgIXByZXZQYXVzZWQpKSB7IC8vaW4gY2FzZSBhIHR3ZWVuIHBhdXNlcyBvciBzZWVrcyB0aGUgdGltZWxpbmUgd2hlbiByZW5kZXJpbmcsIGxpa2UgaW5zaWRlIG9mIGFuIG9uVXBkYXRlL29uQ29tcGxldGVcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAodHdlZW4uX2FjdGl2ZSB8fCAodHdlZW4uX3N0YXJ0VGltZSA8PSB0aGlzLl90aW1lICYmICF0d2Vlbi5fcGF1c2VkICYmICF0d2Vlbi5fZ2MpKSB7XG5cdFx0XHRcdFx0XHRpZiAocGF1c2VUd2VlbiA9PT0gdHdlZW4pIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5wYXVzZSgpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCF0d2Vlbi5fcmV2ZXJzZWQpIHtcblx0XHRcdFx0XHRcdFx0dHdlZW4ucmVuZGVyKCh0aW1lIC0gdHdlZW4uX3N0YXJ0VGltZSkgKiB0d2Vlbi5fdGltZVNjYWxlLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0dHdlZW4ucmVuZGVyKCgoIXR3ZWVuLl9kaXJ0eSkgPyB0d2Vlbi5fdG90YWxEdXJhdGlvbiA6IHR3ZWVuLnRvdGFsRHVyYXRpb24oKSkgLSAoKHRpbWUgLSB0d2Vlbi5fc3RhcnRUaW1lKSAqIHR3ZWVuLl90aW1lU2NhbGUpLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0d2VlbiA9IG5leHQ7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHR3ZWVuID0gdGhpcy5fbGFzdDtcblx0XHRcdFx0d2hpbGUgKHR3ZWVuKSB7XG5cdFx0XHRcdFx0bmV4dCA9IHR3ZWVuLl9wcmV2OyAvL3JlY29yZCBpdCBoZXJlIGJlY2F1c2UgdGhlIHZhbHVlIGNvdWxkIGNoYW5nZSBhZnRlciByZW5kZXJpbmcuLi5cblx0XHRcdFx0XHRpZiAoY3VyVGltZSAhPT0gdGhpcy5fdGltZSB8fCAodGhpcy5fcGF1c2VkICYmICFwcmV2UGF1c2VkKSkgeyAvL2luIGNhc2UgYSB0d2VlbiBwYXVzZXMgb3Igc2Vla3MgdGhlIHRpbWVsaW5lIHdoZW4gcmVuZGVyaW5nLCBsaWtlIGluc2lkZSBvZiBhbiBvblVwZGF0ZS9vbkNvbXBsZXRlXG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHR3ZWVuLl9hY3RpdmUgfHwgKHR3ZWVuLl9zdGFydFRpbWUgPD0gcHJldlRpbWUgJiYgIXR3ZWVuLl9wYXVzZWQgJiYgIXR3ZWVuLl9nYykpIHtcblx0XHRcdFx0XHRcdGlmIChwYXVzZVR3ZWVuID09PSB0d2Vlbikge1xuXHRcdFx0XHRcdFx0XHRwYXVzZVR3ZWVuID0gdHdlZW4uX3ByZXY7IC8vdGhlIGxpbmtlZCBsaXN0IGlzIG9yZ2FuaXplZCBieSBfc3RhcnRUaW1lLCB0aHVzIGl0J3MgcG9zc2libGUgdGhhdCBhIHR3ZWVuIGNvdWxkIHN0YXJ0IEJFRk9SRSB0aGUgcGF1c2UgYW5kIGVuZCBhZnRlciBpdCwgaW4gd2hpY2ggY2FzZSBpdCB3b3VsZCBiZSBwb3NpdGlvbmVkIGJlZm9yZSB0aGUgcGF1c2UgdHdlZW4gaW4gdGhlIGxpbmtlZCBsaXN0LCBidXQgd2Ugc2hvdWxkIHJlbmRlciBpdCBiZWZvcmUgd2UgcGF1c2UoKSB0aGUgdGltZWxpbmUgYW5kIGNlYXNlIHJlbmRlcmluZy4gVGhpcyBpcyBvbmx5IGEgY29uY2VybiB3aGVuIGdvaW5nIGluIHJldmVyc2UuXG5cdFx0XHRcdFx0XHRcdHdoaWxlIChwYXVzZVR3ZWVuICYmIHBhdXNlVHdlZW4uZW5kVGltZSgpID4gdGhpcy5fdGltZSkge1xuXHRcdFx0XHRcdFx0XHRcdHBhdXNlVHdlZW4ucmVuZGVyKCAocGF1c2VUd2Vlbi5fcmV2ZXJzZWQgPyBwYXVzZVR3ZWVuLnRvdGFsRHVyYXRpb24oKSAtICgodGltZSAtIHBhdXNlVHdlZW4uX3N0YXJ0VGltZSkgKiBwYXVzZVR3ZWVuLl90aW1lU2NhbGUpIDogKHRpbWUgLSBwYXVzZVR3ZWVuLl9zdGFydFRpbWUpICogcGF1c2VUd2Vlbi5fdGltZVNjYWxlKSwgc3VwcHJlc3NFdmVudHMsIGZvcmNlKTtcblx0XHRcdFx0XHRcdFx0XHRwYXVzZVR3ZWVuID0gcGF1c2VUd2Vlbi5fcHJldjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRwYXVzZVR3ZWVuID0gbnVsbDtcblx0XHRcdFx0XHRcdFx0dGhpcy5wYXVzZSgpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCF0d2Vlbi5fcmV2ZXJzZWQpIHtcblx0XHRcdFx0XHRcdFx0dHdlZW4ucmVuZGVyKCh0aW1lIC0gdHdlZW4uX3N0YXJ0VGltZSkgKiB0d2Vlbi5fdGltZVNjYWxlLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0dHdlZW4ucmVuZGVyKCgoIXR3ZWVuLl9kaXJ0eSkgPyB0d2Vlbi5fdG90YWxEdXJhdGlvbiA6IHR3ZWVuLnRvdGFsRHVyYXRpb24oKSkgLSAoKHRpbWUgLSB0d2Vlbi5fc3RhcnRUaW1lKSAqIHR3ZWVuLl90aW1lU2NhbGUpLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0d2VlbiA9IG5leHQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0aWYgKHRoaXMuX29uVXBkYXRlKSBpZiAoIXN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRcdGlmIChfbGF6eVR3ZWVucy5sZW5ndGgpIHsgLy9pbiBjYXNlIHJlbmRlcmluZyBjYXVzZWQgYW55IHR3ZWVucyB0byBsYXp5LWluaXQsIHdlIHNob3VsZCByZW5kZXIgdGhlbSBiZWNhdXNlIHR5cGljYWxseSB3aGVuIGEgdGltZWxpbmUgZmluaXNoZXMsIHVzZXJzIGV4cGVjdCB0aGluZ3MgdG8gaGF2ZSByZW5kZXJlZCBmdWxseS4gSW1hZ2luZSBhbiBvblVwZGF0ZSBvbiBhIHRpbWVsaW5lIHRoYXQgcmVwb3J0cy9jaGVja3MgdHdlZW5lZCB2YWx1ZXMuXG5cdFx0XHRcdFx0X2xhenlSZW5kZXIoKTtcblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLl9jYWxsYmFjayhcIm9uVXBkYXRlXCIpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGNhbGxiYWNrKSBpZiAoIXRoaXMuX2xvY2tlZCkgaWYgKCF0aGlzLl9nYykgaWYgKHByZXZTdGFydCA9PT0gdGhpcy5fc3RhcnRUaW1lIHx8IHByZXZUaW1lU2NhbGUgIT09IHRoaXMuX3RpbWVTY2FsZSkgaWYgKHRoaXMuX3RpbWUgPT09IDAgfHwgdG90YWxEdXIgPj0gdGhpcy50b3RhbER1cmF0aW9uKCkpIHsgLy9pZiBvbmUgb2YgdGhlIHR3ZWVucyB0aGF0IHdhcyByZW5kZXJlZCBhbHRlcmVkIHRoaXMgdGltZWxpbmUncyBzdGFydFRpbWUgKGxpa2UgaWYgYW4gb25Db21wbGV0ZSByZXZlcnNlZCB0aGUgdGltZWxpbmUpLCBpdCBwcm9iYWJseSBpc24ndCBjb21wbGV0ZS4gSWYgaXQgaXMsIGRvbid0IHdvcnJ5LCBiZWNhdXNlIHdoYXRldmVyIGNhbGwgYWx0ZXJlZCB0aGUgc3RhcnRUaW1lIHdvdWxkIGNvbXBsZXRlIGlmIGl0IHdhcyBuZWNlc3NhcnkgYXQgdGhlIG5ldyB0aW1lLiBUaGUgb25seSBleGNlcHRpb24gaXMgdGhlIHRpbWVTY2FsZSBwcm9wZXJ0eS4gQWxzbyBjaGVjayBfZ2MgYmVjYXVzZSB0aGVyZSdzIGEgY2hhbmNlIHRoYXQga2lsbCgpIGNvdWxkIGJlIGNhbGxlZCBpbiBhbiBvblVwZGF0ZVxuXHRcdFx0XHRpZiAoaXNDb21wbGV0ZSkge1xuXHRcdFx0XHRcdGlmIChfbGF6eVR3ZWVucy5sZW5ndGgpIHsgLy9pbiBjYXNlIHJlbmRlcmluZyBjYXVzZWQgYW55IHR3ZWVucyB0byBsYXp5LWluaXQsIHdlIHNob3VsZCByZW5kZXIgdGhlbSBiZWNhdXNlIHR5cGljYWxseSB3aGVuIGEgdGltZWxpbmUgZmluaXNoZXMsIHVzZXJzIGV4cGVjdCB0aGluZ3MgdG8gaGF2ZSByZW5kZXJlZCBmdWxseS4gSW1hZ2luZSBhbiBvbkNvbXBsZXRlIG9uIGEgdGltZWxpbmUgdGhhdCByZXBvcnRzL2NoZWNrcyB0d2VlbmVkIHZhbHVlcy5cblx0XHRcdFx0XHRcdF9sYXp5UmVuZGVyKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICh0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4pIHtcblx0XHRcdFx0XHRcdHRoaXMuX2VuYWJsZWQoZmFsc2UsIGZhbHNlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dGhpcy5fYWN0aXZlID0gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFzdXBwcmVzc0V2ZW50cyAmJiB0aGlzLnZhcnNbY2FsbGJhY2tdKSB7XG5cdFx0XHRcdFx0dGhpcy5fY2FsbGJhY2soY2FsbGJhY2spO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdHAuZ2V0QWN0aXZlID0gZnVuY3Rpb24obmVzdGVkLCB0d2VlbnMsIHRpbWVsaW5lcykge1xuXHRcdFx0aWYgKG5lc3RlZCA9PSBudWxsKSB7XG5cdFx0XHRcdG5lc3RlZCA9IHRydWU7XG5cdFx0XHR9XG5cdFx0XHRpZiAodHdlZW5zID09IG51bGwpIHtcblx0XHRcdFx0dHdlZW5zID0gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdGlmICh0aW1lbGluZXMgPT0gbnVsbCkge1xuXHRcdFx0XHR0aW1lbGluZXMgPSBmYWxzZTtcblx0XHRcdH1cblx0XHRcdHZhciBhID0gW10sXG5cdFx0XHRcdGFsbCA9IHRoaXMuZ2V0Q2hpbGRyZW4obmVzdGVkLCB0d2VlbnMsIHRpbWVsaW5lcyksXG5cdFx0XHRcdGNudCA9IDAsXG5cdFx0XHRcdGwgPSBhbGwubGVuZ3RoLFxuXHRcdFx0XHRpLCB0d2Vlbjtcblx0XHRcdGZvciAoaSA9IDA7IGkgPCBsOyBpKyspIHtcblx0XHRcdFx0dHdlZW4gPSBhbGxbaV07XG5cdFx0XHRcdGlmICh0d2Vlbi5pc0FjdGl2ZSgpKSB7XG5cdFx0XHRcdFx0YVtjbnQrK10gPSB0d2Vlbjtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGE7XG5cdFx0fTtcblxuXG5cdFx0cC5nZXRMYWJlbEFmdGVyID0gZnVuY3Rpb24odGltZSkge1xuXHRcdFx0aWYgKCF0aW1lKSBpZiAodGltZSAhPT0gMCkgeyAvL2Zhc3RlciB0aGFuIGlzTmFuKClcblx0XHRcdFx0dGltZSA9IHRoaXMuX3RpbWU7XG5cdFx0XHR9XG5cdFx0XHR2YXIgbGFiZWxzID0gdGhpcy5nZXRMYWJlbHNBcnJheSgpLFxuXHRcdFx0XHRsID0gbGFiZWxzLmxlbmd0aCxcblx0XHRcdFx0aTtcblx0XHRcdGZvciAoaSA9IDA7IGkgPCBsOyBpKyspIHtcblx0XHRcdFx0aWYgKGxhYmVsc1tpXS50aW1lID4gdGltZSkge1xuXHRcdFx0XHRcdHJldHVybiBsYWJlbHNbaV0ubmFtZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fTtcblxuXHRcdHAuZ2V0TGFiZWxCZWZvcmUgPSBmdW5jdGlvbih0aW1lKSB7XG5cdFx0XHRpZiAodGltZSA9PSBudWxsKSB7XG5cdFx0XHRcdHRpbWUgPSB0aGlzLl90aW1lO1xuXHRcdFx0fVxuXHRcdFx0dmFyIGxhYmVscyA9IHRoaXMuZ2V0TGFiZWxzQXJyYXkoKSxcblx0XHRcdFx0aSA9IGxhYmVscy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0aWYgKGxhYmVsc1tpXS50aW1lIDwgdGltZSkge1xuXHRcdFx0XHRcdHJldHVybiBsYWJlbHNbaV0ubmFtZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fTtcblxuXHRcdHAuZ2V0TGFiZWxzQXJyYXkgPSBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBhID0gW10sXG5cdFx0XHRcdGNudCA9IDAsXG5cdFx0XHRcdHA7XG5cdFx0XHRmb3IgKHAgaW4gdGhpcy5fbGFiZWxzKSB7XG5cdFx0XHRcdGFbY250KytdID0ge3RpbWU6dGhpcy5fbGFiZWxzW3BdLCBuYW1lOnB9O1xuXHRcdFx0fVxuXHRcdFx0YS5zb3J0KGZ1bmN0aW9uKGEsYikge1xuXHRcdFx0XHRyZXR1cm4gYS50aW1lIC0gYi50aW1lO1xuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gYTtcblx0XHR9O1xuXG5cbi8vLS0tLSBHRVRURVJTIC8gU0VUVEVSUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblx0XHRwLnByb2dyZXNzID0gZnVuY3Rpb24odmFsdWUsIHN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRyZXR1cm4gKCFhcmd1bWVudHMubGVuZ3RoKSA/IHRoaXMuX3RpbWUgLyB0aGlzLmR1cmF0aW9uKCkgOiB0aGlzLnRvdGFsVGltZSggdGhpcy5kdXJhdGlvbigpICogKCh0aGlzLl95b3lvICYmICh0aGlzLl9jeWNsZSAmIDEpICE9PSAwKSA/IDEgLSB2YWx1ZSA6IHZhbHVlKSArICh0aGlzLl9jeWNsZSAqICh0aGlzLl9kdXJhdGlvbiArIHRoaXMuX3JlcGVhdERlbGF5KSksIHN1cHByZXNzRXZlbnRzKTtcblx0XHR9O1xuXG5cdFx0cC50b3RhbFByb2dyZXNzID0gZnVuY3Rpb24odmFsdWUsIHN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRyZXR1cm4gKCFhcmd1bWVudHMubGVuZ3RoKSA/IHRoaXMuX3RvdGFsVGltZSAvIHRoaXMudG90YWxEdXJhdGlvbigpIDogdGhpcy50b3RhbFRpbWUoIHRoaXMudG90YWxEdXJhdGlvbigpICogdmFsdWUsIHN1cHByZXNzRXZlbnRzKTtcblx0XHR9O1xuXG5cdFx0cC50b3RhbER1cmF0aW9uID0gZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuXHRcdFx0XHRpZiAodGhpcy5fZGlydHkpIHtcblx0XHRcdFx0XHRUaW1lbGluZUxpdGUucHJvdG90eXBlLnRvdGFsRHVyYXRpb24uY2FsbCh0aGlzKTsgLy9qdXN0IGZvcmNlcyByZWZyZXNoXG5cdFx0XHRcdFx0Ly9JbnN0ZWFkIG9mIEluZmluaXR5LCB3ZSB1c2UgOTk5OTk5OTk5OTk5IHNvIHRoYXQgd2UgY2FuIGFjY29tbW9kYXRlIHJldmVyc2VzLlxuXHRcdFx0XHRcdHRoaXMuX3RvdGFsRHVyYXRpb24gPSAodGhpcy5fcmVwZWF0ID09PSAtMSkgPyA5OTk5OTk5OTk5OTkgOiB0aGlzLl9kdXJhdGlvbiAqICh0aGlzLl9yZXBlYXQgKyAxKSArICh0aGlzLl9yZXBlYXREZWxheSAqIHRoaXMuX3JlcGVhdCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXMuX3RvdGFsRHVyYXRpb247XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gKHRoaXMuX3JlcGVhdCA9PT0gLTEgfHwgIXZhbHVlKSA/IHRoaXMgOiB0aGlzLnRpbWVTY2FsZSggdGhpcy50b3RhbER1cmF0aW9uKCkgLyB2YWx1ZSApO1xuXHRcdH07XG5cblx0XHRwLnRpbWUgPSBmdW5jdGlvbih2YWx1ZSwgc3VwcHJlc3NFdmVudHMpIHtcblx0XHRcdGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5fdGltZTtcblx0XHRcdH1cblx0XHRcdGlmICh0aGlzLl9kaXJ0eSkge1xuXHRcdFx0XHR0aGlzLnRvdGFsRHVyYXRpb24oKTtcblx0XHRcdH1cblx0XHRcdGlmICh2YWx1ZSA+IHRoaXMuX2R1cmF0aW9uKSB7XG5cdFx0XHRcdHZhbHVlID0gdGhpcy5fZHVyYXRpb247XG5cdFx0XHR9XG5cdFx0XHRpZiAodGhpcy5feW95byAmJiAodGhpcy5fY3ljbGUgJiAxKSAhPT0gMCkge1xuXHRcdFx0XHR2YWx1ZSA9ICh0aGlzLl9kdXJhdGlvbiAtIHZhbHVlKSArICh0aGlzLl9jeWNsZSAqICh0aGlzLl9kdXJhdGlvbiArIHRoaXMuX3JlcGVhdERlbGF5KSk7XG5cdFx0XHR9IGVsc2UgaWYgKHRoaXMuX3JlcGVhdCAhPT0gMCkge1xuXHRcdFx0XHR2YWx1ZSArPSB0aGlzLl9jeWNsZSAqICh0aGlzLl9kdXJhdGlvbiArIHRoaXMuX3JlcGVhdERlbGF5KTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzLnRvdGFsVGltZSh2YWx1ZSwgc3VwcHJlc3NFdmVudHMpO1xuXHRcdH07XG5cblx0XHRwLnJlcGVhdCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX3JlcGVhdDtcblx0XHRcdH1cblx0XHRcdHRoaXMuX3JlcGVhdCA9IHZhbHVlO1xuXHRcdFx0cmV0dXJuIHRoaXMuX3VuY2FjaGUodHJ1ZSk7XG5cdFx0fTtcblxuXHRcdHAucmVwZWF0RGVsYXkgPSBmdW5jdGlvbih2YWx1ZSkge1xuXHRcdFx0aWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLl9yZXBlYXREZWxheTtcblx0XHRcdH1cblx0XHRcdHRoaXMuX3JlcGVhdERlbGF5ID0gdmFsdWU7XG5cdFx0XHRyZXR1cm4gdGhpcy5fdW5jYWNoZSh0cnVlKTtcblx0XHR9O1xuXG5cdFx0cC55b3lvID0gZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5feW95bztcblx0XHRcdH1cblx0XHRcdHRoaXMuX3lveW8gPSB2YWx1ZTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLmN1cnJlbnRMYWJlbCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuZ2V0TGFiZWxCZWZvcmUodGhpcy5fdGltZSArIDAuMDAwMDAwMDEpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRoaXMuc2Vlayh2YWx1ZSwgdHJ1ZSk7XG5cdFx0fTtcblxuXHRcdHJldHVybiBUaW1lbGluZU1heDtcblxuXHR9LCB0cnVlKTtcblx0XG5cblxuXG5cblx0XG5cdFxuXHRcblx0XG5cdFxuXHRcblx0XG4vKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQmV6aWVyUGx1Z2luXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblx0KGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIF9SQUQyREVHID0gMTgwIC8gTWF0aC5QSSxcblx0XHRcdF9yMSA9IFtdLFxuXHRcdFx0X3IyID0gW10sXG5cdFx0XHRfcjMgPSBbXSxcblx0XHRcdF9jb3JQcm9wcyA9IHt9LFxuXHRcdFx0X2dsb2JhbHMgPSBfZ3NTY29wZS5fZ3NEZWZpbmUuZ2xvYmFscyxcblx0XHRcdFNlZ21lbnQgPSBmdW5jdGlvbihhLCBiLCBjLCBkKSB7XG5cdFx0XHRcdGlmIChjID09PSBkKSB7IC8vaWYgYyBhbmQgZCBtYXRjaCwgdGhlIGZpbmFsIGF1dG9Sb3RhdGUgdmFsdWUgY291bGQgbG9jayBhdCAtOTAgZGVncmVlcywgc28gZGlmZmVyZW50aWF0ZSB0aGVtIHNsaWdodGx5LlxuXHRcdFx0XHRcdGMgPSBkIC0gKGQgLSBiKSAvIDEwMDAwMDA7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGEgPT09IGIpIHsgLy9pZiBhIGFuZCBiIG1hdGNoLCB0aGUgc3RhcnRpbmcgYXV0b1JvdGF0ZSB2YWx1ZSBjb3VsZCBsb2NrIGF0IC05MCBkZWdyZWVzLCBzbyBkaWZmZXJlbnRpYXRlIHRoZW0gc2xpZ2h0bHkuXG5cdFx0XHRcdFx0YiA9IGEgKyAoYyAtIGEpIC8gMTAwMDAwMDtcblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLmEgPSBhO1xuXHRcdFx0XHR0aGlzLmIgPSBiO1xuXHRcdFx0XHR0aGlzLmMgPSBjO1xuXHRcdFx0XHR0aGlzLmQgPSBkO1xuXHRcdFx0XHR0aGlzLmRhID0gZCAtIGE7XG5cdFx0XHRcdHRoaXMuY2EgPSBjIC0gYTtcblx0XHRcdFx0dGhpcy5iYSA9IGIgLSBhO1xuXHRcdFx0fSxcblx0XHRcdF9jb3JyZWxhdGUgPSBcIix4LHkseixsZWZ0LHRvcCxyaWdodCxib3R0b20sbWFyZ2luVG9wLG1hcmdpbkxlZnQsbWFyZ2luUmlnaHQsbWFyZ2luQm90dG9tLHBhZGRpbmdMZWZ0LHBhZGRpbmdUb3AscGFkZGluZ1JpZ2h0LHBhZGRpbmdCb3R0b20sYmFja2dyb3VuZFBvc2l0aW9uLGJhY2tncm91bmRQb3NpdGlvbl95LFwiLFxuXHRcdFx0Y3ViaWNUb1F1YWRyYXRpYyA9IGZ1bmN0aW9uKGEsIGIsIGMsIGQpIHtcblx0XHRcdFx0dmFyIHExID0ge2E6YX0sXG5cdFx0XHRcdFx0cTIgPSB7fSxcblx0XHRcdFx0XHRxMyA9IHt9LFxuXHRcdFx0XHRcdHE0ID0ge2M6ZH0sXG5cdFx0XHRcdFx0bWFiID0gKGEgKyBiKSAvIDIsXG5cdFx0XHRcdFx0bWJjID0gKGIgKyBjKSAvIDIsXG5cdFx0XHRcdFx0bWNkID0gKGMgKyBkKSAvIDIsXG5cdFx0XHRcdFx0bWFiYyA9IChtYWIgKyBtYmMpIC8gMixcblx0XHRcdFx0XHRtYmNkID0gKG1iYyArIG1jZCkgLyAyLFxuXHRcdFx0XHRcdG04ID0gKG1iY2QgLSBtYWJjKSAvIDg7XG5cdFx0XHRcdHExLmIgPSBtYWIgKyAoYSAtIG1hYikgLyA0O1xuXHRcdFx0XHRxMi5iID0gbWFiYyArIG04O1xuXHRcdFx0XHRxMS5jID0gcTIuYSA9IChxMS5iICsgcTIuYikgLyAyO1xuXHRcdFx0XHRxMi5jID0gcTMuYSA9IChtYWJjICsgbWJjZCkgLyAyO1xuXHRcdFx0XHRxMy5iID0gbWJjZCAtIG04O1xuXHRcdFx0XHRxNC5iID0gbWNkICsgKGQgLSBtY2QpIC8gNDtcblx0XHRcdFx0cTMuYyA9IHE0LmEgPSAocTMuYiArIHE0LmIpIC8gMjtcblx0XHRcdFx0cmV0dXJuIFtxMSwgcTIsIHEzLCBxNF07XG5cdFx0XHR9LFxuXHRcdFx0X2NhbGN1bGF0ZUNvbnRyb2xQb2ludHMgPSBmdW5jdGlvbihhLCBjdXJ2aW5lc3MsIHF1YWQsIGJhc2ljLCBjb3JyZWxhdGUpIHtcblx0XHRcdFx0dmFyIGwgPSBhLmxlbmd0aCAtIDEsXG5cdFx0XHRcdFx0aWkgPSAwLFxuXHRcdFx0XHRcdGNwMSA9IGFbMF0uYSxcblx0XHRcdFx0XHRpLCBwMSwgcDIsIHAzLCBzZWcsIG0xLCBtMiwgbW0sIGNwMiwgcWIsIHIxLCByMiwgdGw7XG5cdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBsOyBpKyspIHtcblx0XHRcdFx0XHRzZWcgPSBhW2lpXTtcblx0XHRcdFx0XHRwMSA9IHNlZy5hO1xuXHRcdFx0XHRcdHAyID0gc2VnLmQ7XG5cdFx0XHRcdFx0cDMgPSBhW2lpKzFdLmQ7XG5cblx0XHRcdFx0XHRpZiAoY29ycmVsYXRlKSB7XG5cdFx0XHRcdFx0XHRyMSA9IF9yMVtpXTtcblx0XHRcdFx0XHRcdHIyID0gX3IyW2ldO1xuXHRcdFx0XHRcdFx0dGwgPSAoKHIyICsgcjEpICogY3VydmluZXNzICogMC4yNSkgLyAoYmFzaWMgPyAwLjUgOiBfcjNbaV0gfHwgMC41KTtcblx0XHRcdFx0XHRcdG0xID0gcDIgLSAocDIgLSBwMSkgKiAoYmFzaWMgPyBjdXJ2aW5lc3MgKiAwLjUgOiAocjEgIT09IDAgPyB0bCAvIHIxIDogMCkpO1xuXHRcdFx0XHRcdFx0bTIgPSBwMiArIChwMyAtIHAyKSAqIChiYXNpYyA/IGN1cnZpbmVzcyAqIDAuNSA6IChyMiAhPT0gMCA/IHRsIC8gcjIgOiAwKSk7XG5cdFx0XHRcdFx0XHRtbSA9IHAyIC0gKG0xICsgKCgobTIgLSBtMSkgKiAoKHIxICogMyAvIChyMSArIHIyKSkgKyAwLjUpIC8gNCkgfHwgMCkpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRtMSA9IHAyIC0gKHAyIC0gcDEpICogY3VydmluZXNzICogMC41O1xuXHRcdFx0XHRcdFx0bTIgPSBwMiArIChwMyAtIHAyKSAqIGN1cnZpbmVzcyAqIDAuNTtcblx0XHRcdFx0XHRcdG1tID0gcDIgLSAobTEgKyBtMikgLyAyO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRtMSArPSBtbTtcblx0XHRcdFx0XHRtMiArPSBtbTtcblxuXHRcdFx0XHRcdHNlZy5jID0gY3AyID0gbTE7XG5cdFx0XHRcdFx0aWYgKGkgIT09IDApIHtcblx0XHRcdFx0XHRcdHNlZy5iID0gY3AxO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRzZWcuYiA9IGNwMSA9IHNlZy5hICsgKHNlZy5jIC0gc2VnLmEpICogMC42OyAvL2luc3RlYWQgb2YgcGxhY2luZyBiIG9uIGEgZXhhY3RseSwgd2UgbW92ZSBpdCBpbmxpbmUgd2l0aCBjIHNvIHRoYXQgaWYgdGhlIHVzZXIgc3BlY2lmaWVzIGFuIGVhc2UgbGlrZSBCYWNrLmVhc2VJbiBvciBFbGFzdGljLmVhc2VJbiB3aGljaCBnb2VzIEJFWU9ORCB0aGUgYmVnaW5uaW5nLCBpdCB3aWxsIGRvIHNvIHNtb290aGx5LlxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHNlZy5kYSA9IHAyIC0gcDE7XG5cdFx0XHRcdFx0c2VnLmNhID0gY3AyIC0gcDE7XG5cdFx0XHRcdFx0c2VnLmJhID0gY3AxIC0gcDE7XG5cblx0XHRcdFx0XHRpZiAocXVhZCkge1xuXHRcdFx0XHRcdFx0cWIgPSBjdWJpY1RvUXVhZHJhdGljKHAxLCBjcDEsIGNwMiwgcDIpO1xuXHRcdFx0XHRcdFx0YS5zcGxpY2UoaWksIDEsIHFiWzBdLCBxYlsxXSwgcWJbMl0sIHFiWzNdKTtcblx0XHRcdFx0XHRcdGlpICs9IDQ7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGlpKys7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Y3AxID0gbTI7XG5cdFx0XHRcdH1cblx0XHRcdFx0c2VnID0gYVtpaV07XG5cdFx0XHRcdHNlZy5iID0gY3AxO1xuXHRcdFx0XHRzZWcuYyA9IGNwMSArIChzZWcuZCAtIGNwMSkgKiAwLjQ7IC8vaW5zdGVhZCBvZiBwbGFjaW5nIGMgb24gZCBleGFjdGx5LCB3ZSBtb3ZlIGl0IGlubGluZSB3aXRoIGIgc28gdGhhdCBpZiB0aGUgdXNlciBzcGVjaWZpZXMgYW4gZWFzZSBsaWtlIEJhY2suZWFzZU91dCBvciBFbGFzdGljLmVhc2VPdXQgd2hpY2ggZ29lcyBCRVlPTkQgdGhlIGVuZCwgaXQgd2lsbCBkbyBzbyBzbW9vdGhseS5cblx0XHRcdFx0c2VnLmRhID0gc2VnLmQgLSBzZWcuYTtcblx0XHRcdFx0c2VnLmNhID0gc2VnLmMgLSBzZWcuYTtcblx0XHRcdFx0c2VnLmJhID0gY3AxIC0gc2VnLmE7XG5cdFx0XHRcdGlmIChxdWFkKSB7XG5cdFx0XHRcdFx0cWIgPSBjdWJpY1RvUXVhZHJhdGljKHNlZy5hLCBjcDEsIHNlZy5jLCBzZWcuZCk7XG5cdFx0XHRcdFx0YS5zcGxpY2UoaWksIDEsIHFiWzBdLCBxYlsxXSwgcWJbMl0sIHFiWzNdKTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdF9wYXJzZUFuY2hvcnMgPSBmdW5jdGlvbih2YWx1ZXMsIHAsIGNvcnJlbGF0ZSwgcHJlcGVuZCkge1xuXHRcdFx0XHR2YXIgYSA9IFtdLFxuXHRcdFx0XHRcdGwsIGksIHAxLCBwMiwgcDMsIHRtcDtcblx0XHRcdFx0aWYgKHByZXBlbmQpIHtcblx0XHRcdFx0XHR2YWx1ZXMgPSBbcHJlcGVuZF0uY29uY2F0KHZhbHVlcyk7XG5cdFx0XHRcdFx0aSA9IHZhbHVlcy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0XHRpZiAodHlwZW9mKCAodG1wID0gdmFsdWVzW2ldW3BdKSApID09PSBcInN0cmluZ1wiKSBpZiAodG1wLmNoYXJBdCgxKSA9PT0gXCI9XCIpIHtcblx0XHRcdFx0XHRcdFx0dmFsdWVzW2ldW3BdID0gcHJlcGVuZFtwXSArIE51bWJlcih0bXAuY2hhckF0KDApICsgdG1wLnN1YnN0cigyKSk7IC8vYWNjb21tb2RhdGUgcmVsYXRpdmUgdmFsdWVzLiBEbyBpdCBpbmxpbmUgaW5zdGVhZCBvZiBicmVha2luZyBpdCBvdXQgaW50byBhIGZ1bmN0aW9uIGZvciBzcGVlZCByZWFzb25zXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGwgPSB2YWx1ZXMubGVuZ3RoIC0gMjtcblx0XHRcdFx0aWYgKGwgPCAwKSB7XG5cdFx0XHRcdFx0YVswXSA9IG5ldyBTZWdtZW50KHZhbHVlc1swXVtwXSwgMCwgMCwgdmFsdWVzWyhsIDwgLTEpID8gMCA6IDFdW3BdKTtcblx0XHRcdFx0XHRyZXR1cm4gYTtcblx0XHRcdFx0fVxuXHRcdFx0XHRmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRcdFx0cDEgPSB2YWx1ZXNbaV1bcF07XG5cdFx0XHRcdFx0cDIgPSB2YWx1ZXNbaSsxXVtwXTtcblx0XHRcdFx0XHRhW2ldID0gbmV3IFNlZ21lbnQocDEsIDAsIDAsIHAyKTtcblx0XHRcdFx0XHRpZiAoY29ycmVsYXRlKSB7XG5cdFx0XHRcdFx0XHRwMyA9IHZhbHVlc1tpKzJdW3BdO1xuXHRcdFx0XHRcdFx0X3IxW2ldID0gKF9yMVtpXSB8fCAwKSArIChwMiAtIHAxKSAqIChwMiAtIHAxKTtcblx0XHRcdFx0XHRcdF9yMltpXSA9IChfcjJbaV0gfHwgMCkgKyAocDMgLSBwMikgKiAocDMgLSBwMik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGFbaV0gPSBuZXcgU2VnbWVudCh2YWx1ZXNbaV1bcF0sIDAsIDAsIHZhbHVlc1tpKzFdW3BdKTtcblx0XHRcdFx0cmV0dXJuIGE7XG5cdFx0XHR9LFxuXHRcdFx0YmV6aWVyVGhyb3VnaCA9IGZ1bmN0aW9uKHZhbHVlcywgY3VydmluZXNzLCBxdWFkcmF0aWMsIGJhc2ljLCBjb3JyZWxhdGUsIHByZXBlbmQpIHtcblx0XHRcdFx0dmFyIG9iaiA9IHt9LFxuXHRcdFx0XHRcdHByb3BzID0gW10sXG5cdFx0XHRcdFx0Zmlyc3QgPSBwcmVwZW5kIHx8IHZhbHVlc1swXSxcblx0XHRcdFx0XHRpLCBwLCBhLCBqLCByLCBsLCBzZWFtbGVzcywgbGFzdDtcblx0XHRcdFx0Y29ycmVsYXRlID0gKHR5cGVvZihjb3JyZWxhdGUpID09PSBcInN0cmluZ1wiKSA/IFwiLFwiK2NvcnJlbGF0ZStcIixcIiA6IF9jb3JyZWxhdGU7XG5cdFx0XHRcdGlmIChjdXJ2aW5lc3MgPT0gbnVsbCkge1xuXHRcdFx0XHRcdGN1cnZpbmVzcyA9IDE7XG5cdFx0XHRcdH1cblx0XHRcdFx0Zm9yIChwIGluIHZhbHVlc1swXSkge1xuXHRcdFx0XHRcdHByb3BzLnB1c2gocCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly9jaGVjayB0byBzZWUgaWYgdGhlIGxhc3QgYW5kIGZpcnN0IHZhbHVlcyBhcmUgaWRlbnRpY2FsICh3ZWxsLCB3aXRoaW4gMC4wNSkuIElmIHNvLCBtYWtlIHNlYW1sZXNzIGJ5IGFwcGVuZGluZyB0aGUgc2Vjb25kIGVsZW1lbnQgdG8gdGhlIHZlcnkgZW5kIG9mIHRoZSB2YWx1ZXMgYXJyYXkgYW5kIHRoZSAybmQtdG8tbGFzdCBlbGVtZW50IHRvIHRoZSB2ZXJ5IGJlZ2lubmluZyAod2UnbGwgcmVtb3ZlIHRob3NlIHNlZ21lbnRzIGxhdGVyKVxuXHRcdFx0XHRpZiAodmFsdWVzLmxlbmd0aCA+IDEpIHtcblx0XHRcdFx0XHRsYXN0ID0gdmFsdWVzW3ZhbHVlcy5sZW5ndGggLSAxXTtcblx0XHRcdFx0XHRzZWFtbGVzcyA9IHRydWU7XG5cdFx0XHRcdFx0aSA9IHByb3BzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRcdHAgPSBwcm9wc1tpXTtcblx0XHRcdFx0XHRcdGlmIChNYXRoLmFicyhmaXJzdFtwXSAtIGxhc3RbcF0pID4gMC4wNSkgeyAvL2J1aWxkIGluIGEgdG9sZXJhbmNlIG9mICsvLTAuMDUgdG8gYWNjb21tb2RhdGUgcm91bmRpbmcgZXJyb3JzLlxuXHRcdFx0XHRcdFx0XHRzZWFtbGVzcyA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHNlYW1sZXNzKSB7XG5cdFx0XHRcdFx0XHR2YWx1ZXMgPSB2YWx1ZXMuY29uY2F0KCk7IC8vZHVwbGljYXRlIHRoZSBhcnJheSB0byBhdm9pZCBjb250YW1pbmF0aW5nIHRoZSBvcmlnaW5hbCB3aGljaCB0aGUgdXNlciBtYXkgYmUgcmV1c2luZyBmb3Igb3RoZXIgdHdlZW5zXG5cdFx0XHRcdFx0XHRpZiAocHJlcGVuZCkge1xuXHRcdFx0XHRcdFx0XHR2YWx1ZXMudW5zaGlmdChwcmVwZW5kKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHZhbHVlcy5wdXNoKHZhbHVlc1sxXSk7XG5cdFx0XHRcdFx0XHRwcmVwZW5kID0gdmFsdWVzW3ZhbHVlcy5sZW5ndGggLSAzXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0X3IxLmxlbmd0aCA9IF9yMi5sZW5ndGggPSBfcjMubGVuZ3RoID0gMDtcblx0XHRcdFx0aSA9IHByb3BzLmxlbmd0aDtcblx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0cCA9IHByb3BzW2ldO1xuXHRcdFx0XHRcdF9jb3JQcm9wc1twXSA9IChjb3JyZWxhdGUuaW5kZXhPZihcIixcIitwK1wiLFwiKSAhPT0gLTEpO1xuXHRcdFx0XHRcdG9ialtwXSA9IF9wYXJzZUFuY2hvcnModmFsdWVzLCBwLCBfY29yUHJvcHNbcF0sIHByZXBlbmQpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGkgPSBfcjEubGVuZ3RoO1xuXHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRfcjFbaV0gPSBNYXRoLnNxcnQoX3IxW2ldKTtcblx0XHRcdFx0XHRfcjJbaV0gPSBNYXRoLnNxcnQoX3IyW2ldKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIWJhc2ljKSB7XG5cdFx0XHRcdFx0aSA9IHByb3BzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRcdGlmIChfY29yUHJvcHNbcF0pIHtcblx0XHRcdFx0XHRcdFx0YSA9IG9ialtwcm9wc1tpXV07XG5cdFx0XHRcdFx0XHRcdGwgPSBhLmxlbmd0aCAtIDE7XG5cdFx0XHRcdFx0XHRcdGZvciAoaiA9IDA7IGogPCBsOyBqKyspIHtcblx0XHRcdFx0XHRcdFx0XHRyID0gKGFbaisxXS5kYSAvIF9yMltqXSArIGFbal0uZGEgLyBfcjFbal0pIHx8IDA7XG5cdFx0XHRcdFx0XHRcdFx0X3IzW2pdID0gKF9yM1tqXSB8fCAwKSArIHIgKiByO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGkgPSBfcjMubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdFx0X3IzW2ldID0gTWF0aC5zcXJ0KF9yM1tpXSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGkgPSBwcm9wcy5sZW5ndGg7XG5cdFx0XHRcdGogPSBxdWFkcmF0aWMgPyA0IDogMTtcblx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0cCA9IHByb3BzW2ldO1xuXHRcdFx0XHRcdGEgPSBvYmpbcF07XG5cdFx0XHRcdFx0X2NhbGN1bGF0ZUNvbnRyb2xQb2ludHMoYSwgY3VydmluZXNzLCBxdWFkcmF0aWMsIGJhc2ljLCBfY29yUHJvcHNbcF0pOyAvL3RoaXMgbWV0aG9kIHJlcXVpcmVzIHRoYXQgX3BhcnNlQW5jaG9ycygpIGFuZCBfc2V0U2VnbWVudFJhdGlvcygpIHJhbiBmaXJzdCBzbyB0aGF0IF9yMSwgX3IyLCBhbmQgX3IzIHZhbHVlcyBhcmUgcG9wdWxhdGVkIGZvciBhbGwgcHJvcGVydGllc1xuXHRcdFx0XHRcdGlmIChzZWFtbGVzcykge1xuXHRcdFx0XHRcdFx0YS5zcGxpY2UoMCwgaik7XG5cdFx0XHRcdFx0XHRhLnNwbGljZShhLmxlbmd0aCAtIGosIGopO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gb2JqO1xuXHRcdFx0fSxcblx0XHRcdF9wYXJzZUJlemllckRhdGEgPSBmdW5jdGlvbih2YWx1ZXMsIHR5cGUsIHByZXBlbmQpIHtcblx0XHRcdFx0dHlwZSA9IHR5cGUgfHwgXCJzb2Z0XCI7XG5cdFx0XHRcdHZhciBvYmogPSB7fSxcblx0XHRcdFx0XHRpbmMgPSAodHlwZSA9PT0gXCJjdWJpY1wiKSA/IDMgOiAyLFxuXHRcdFx0XHRcdHNvZnQgPSAodHlwZSA9PT0gXCJzb2Z0XCIpLFxuXHRcdFx0XHRcdHByb3BzID0gW10sXG5cdFx0XHRcdFx0YSwgYiwgYywgZCwgY3VyLCBpLCBqLCBsLCBwLCBjbnQsIHRtcDtcblx0XHRcdFx0aWYgKHNvZnQgJiYgcHJlcGVuZCkge1xuXHRcdFx0XHRcdHZhbHVlcyA9IFtwcmVwZW5kXS5jb25jYXQodmFsdWVzKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodmFsdWVzID09IG51bGwgfHwgdmFsdWVzLmxlbmd0aCA8IGluYyArIDEpIHsgdGhyb3cgXCJpbnZhbGlkIEJlemllciBkYXRhXCI7IH1cblx0XHRcdFx0Zm9yIChwIGluIHZhbHVlc1swXSkge1xuXHRcdFx0XHRcdHByb3BzLnB1c2gocCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aSA9IHByb3BzLmxlbmd0aDtcblx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0cCA9IHByb3BzW2ldO1xuXHRcdFx0XHRcdG9ialtwXSA9IGN1ciA9IFtdO1xuXHRcdFx0XHRcdGNudCA9IDA7XG5cdFx0XHRcdFx0bCA9IHZhbHVlcy5sZW5ndGg7XG5cdFx0XHRcdFx0Zm9yIChqID0gMDsgaiA8IGw7IGorKykge1xuXHRcdFx0XHRcdFx0YSA9IChwcmVwZW5kID09IG51bGwpID8gdmFsdWVzW2pdW3BdIDogKHR5cGVvZiggKHRtcCA9IHZhbHVlc1tqXVtwXSkgKSA9PT0gXCJzdHJpbmdcIiAmJiB0bXAuY2hhckF0KDEpID09PSBcIj1cIikgPyBwcmVwZW5kW3BdICsgTnVtYmVyKHRtcC5jaGFyQXQoMCkgKyB0bXAuc3Vic3RyKDIpKSA6IE51bWJlcih0bXApO1xuXHRcdFx0XHRcdFx0aWYgKHNvZnQpIGlmIChqID4gMSkgaWYgKGogPCBsIC0gMSkge1xuXHRcdFx0XHRcdFx0XHRjdXJbY250KytdID0gKGEgKyBjdXJbY250LTJdKSAvIDI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRjdXJbY250KytdID0gYTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bCA9IGNudCAtIGluYyArIDE7XG5cdFx0XHRcdFx0Y250ID0gMDtcblx0XHRcdFx0XHRmb3IgKGogPSAwOyBqIDwgbDsgaiArPSBpbmMpIHtcblx0XHRcdFx0XHRcdGEgPSBjdXJbal07XG5cdFx0XHRcdFx0XHRiID0gY3VyW2orMV07XG5cdFx0XHRcdFx0XHRjID0gY3VyW2orMl07XG5cdFx0XHRcdFx0XHRkID0gKGluYyA9PT0gMikgPyAwIDogY3VyW2orM107XG5cdFx0XHRcdFx0XHRjdXJbY250KytdID0gdG1wID0gKGluYyA9PT0gMykgPyBuZXcgU2VnbWVudChhLCBiLCBjLCBkKSA6IG5ldyBTZWdtZW50KGEsICgyICogYiArIGEpIC8gMywgKDIgKiBiICsgYykgLyAzLCBjKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Y3VyLmxlbmd0aCA9IGNudDtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gb2JqO1xuXHRcdFx0fSxcblx0XHRcdF9hZGRDdWJpY0xlbmd0aHMgPSBmdW5jdGlvbihhLCBzdGVwcywgcmVzb2x1dGlvbikge1xuXHRcdFx0XHR2YXIgaW5jID0gMSAvIHJlc29sdXRpb24sXG5cdFx0XHRcdFx0aiA9IGEubGVuZ3RoLFxuXHRcdFx0XHRcdGQsIGQxLCBzLCBkYSwgY2EsIGJhLCBwLCBpLCBpbnYsIGJleiwgaW5kZXg7XG5cdFx0XHRcdHdoaWxlICgtLWogPiAtMSkge1xuXHRcdFx0XHRcdGJleiA9IGFbal07XG5cdFx0XHRcdFx0cyA9IGJlei5hO1xuXHRcdFx0XHRcdGRhID0gYmV6LmQgLSBzO1xuXHRcdFx0XHRcdGNhID0gYmV6LmMgLSBzO1xuXHRcdFx0XHRcdGJhID0gYmV6LmIgLSBzO1xuXHRcdFx0XHRcdGQgPSBkMSA9IDA7XG5cdFx0XHRcdFx0Zm9yIChpID0gMTsgaSA8PSByZXNvbHV0aW9uOyBpKyspIHtcblx0XHRcdFx0XHRcdHAgPSBpbmMgKiBpO1xuXHRcdFx0XHRcdFx0aW52ID0gMSAtIHA7XG5cdFx0XHRcdFx0XHRkID0gZDEgLSAoZDEgPSAocCAqIHAgKiBkYSArIDMgKiBpbnYgKiAocCAqIGNhICsgaW52ICogYmEpKSAqIHApO1xuXHRcdFx0XHRcdFx0aW5kZXggPSBqICogcmVzb2x1dGlvbiArIGkgLSAxO1xuXHRcdFx0XHRcdFx0c3RlcHNbaW5kZXhdID0gKHN0ZXBzW2luZGV4XSB8fCAwKSArIGQgKiBkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdF9wYXJzZUxlbmd0aERhdGEgPSBmdW5jdGlvbihvYmosIHJlc29sdXRpb24pIHtcblx0XHRcdFx0cmVzb2x1dGlvbiA9IHJlc29sdXRpb24gPj4gMCB8fCA2O1xuXHRcdFx0XHR2YXIgYSA9IFtdLFxuXHRcdFx0XHRcdGxlbmd0aHMgPSBbXSxcblx0XHRcdFx0XHRkID0gMCxcblx0XHRcdFx0XHR0b3RhbCA9IDAsXG5cdFx0XHRcdFx0dGhyZXNob2xkID0gcmVzb2x1dGlvbiAtIDEsXG5cdFx0XHRcdFx0c2VnbWVudHMgPSBbXSxcblx0XHRcdFx0XHRjdXJMUyA9IFtdLCAvL2N1cnJlbnQgbGVuZ3RoIHNlZ21lbnRzIGFycmF5XG5cdFx0XHRcdFx0cCwgaSwgbCwgaW5kZXg7XG5cdFx0XHRcdGZvciAocCBpbiBvYmopIHtcblx0XHRcdFx0XHRfYWRkQ3ViaWNMZW5ndGhzKG9ialtwXSwgYSwgcmVzb2x1dGlvbik7XG5cdFx0XHRcdH1cblx0XHRcdFx0bCA9IGEubGVuZ3RoO1xuXHRcdFx0XHRmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRcdFx0ZCArPSBNYXRoLnNxcnQoYVtpXSk7XG5cdFx0XHRcdFx0aW5kZXggPSBpICUgcmVzb2x1dGlvbjtcblx0XHRcdFx0XHRjdXJMU1tpbmRleF0gPSBkO1xuXHRcdFx0XHRcdGlmIChpbmRleCA9PT0gdGhyZXNob2xkKSB7XG5cdFx0XHRcdFx0XHR0b3RhbCArPSBkO1xuXHRcdFx0XHRcdFx0aW5kZXggPSAoaSAvIHJlc29sdXRpb24pID4+IDA7XG5cdFx0XHRcdFx0XHRzZWdtZW50c1tpbmRleF0gPSBjdXJMUztcblx0XHRcdFx0XHRcdGxlbmd0aHNbaW5kZXhdID0gdG90YWw7XG5cdFx0XHRcdFx0XHRkID0gMDtcblx0XHRcdFx0XHRcdGN1ckxTID0gW107XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB7bGVuZ3RoOnRvdGFsLCBsZW5ndGhzOmxlbmd0aHMsIHNlZ21lbnRzOnNlZ21lbnRzfTtcblx0XHRcdH0sXG5cblxuXG5cdFx0XHRCZXppZXJQbHVnaW4gPSBfZ3NTY29wZS5fZ3NEZWZpbmUucGx1Z2luKHtcblx0XHRcdFx0XHRwcm9wTmFtZTogXCJiZXppZXJcIixcblx0XHRcdFx0XHRwcmlvcml0eTogLTEsXG5cdFx0XHRcdFx0dmVyc2lvbjogXCIxLjMuN1wiLFxuXHRcdFx0XHRcdEFQSTogMixcblx0XHRcdFx0XHRnbG9iYWw6dHJ1ZSxcblxuXHRcdFx0XHRcdC8vZ2V0cyBjYWxsZWQgd2hlbiB0aGUgdHdlZW4gcmVuZGVycyBmb3IgdGhlIGZpcnN0IHRpbWUuIFRoaXMgaXMgd2hlcmUgaW5pdGlhbCB2YWx1ZXMgc2hvdWxkIGJlIHJlY29yZGVkIGFuZCBhbnkgc2V0dXAgcm91dGluZXMgc2hvdWxkIHJ1bi5cblx0XHRcdFx0XHRpbml0OiBmdW5jdGlvbih0YXJnZXQsIHZhcnMsIHR3ZWVuKSB7XG5cdFx0XHRcdFx0XHR0aGlzLl90YXJnZXQgPSB0YXJnZXQ7XG5cdFx0XHRcdFx0XHRpZiAodmFycyBpbnN0YW5jZW9mIEFycmF5KSB7XG5cdFx0XHRcdFx0XHRcdHZhcnMgPSB7dmFsdWVzOnZhcnN9O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0dGhpcy5fZnVuYyA9IHt9O1xuXHRcdFx0XHRcdFx0dGhpcy5fbW9kID0ge307XG5cdFx0XHRcdFx0XHR0aGlzLl9wcm9wcyA9IFtdO1xuXHRcdFx0XHRcdFx0dGhpcy5fdGltZVJlcyA9ICh2YXJzLnRpbWVSZXNvbHV0aW9uID09IG51bGwpID8gNiA6IHBhcnNlSW50KHZhcnMudGltZVJlc29sdXRpb24sIDEwKTtcblx0XHRcdFx0XHRcdHZhciB2YWx1ZXMgPSB2YXJzLnZhbHVlcyB8fCBbXSxcblx0XHRcdFx0XHRcdFx0Zmlyc3QgPSB7fSxcblx0XHRcdFx0XHRcdFx0c2Vjb25kID0gdmFsdWVzWzBdLFxuXHRcdFx0XHRcdFx0XHRhdXRvUm90YXRlID0gdmFycy5hdXRvUm90YXRlIHx8IHR3ZWVuLnZhcnMub3JpZW50VG9CZXppZXIsXG5cdFx0XHRcdFx0XHRcdHAsIGlzRnVuYywgaSwgaiwgcHJlcGVuZDtcblxuXHRcdFx0XHRcdFx0dGhpcy5fYXV0b1JvdGF0ZSA9IGF1dG9Sb3RhdGUgPyAoYXV0b1JvdGF0ZSBpbnN0YW5jZW9mIEFycmF5KSA/IGF1dG9Sb3RhdGUgOiBbW1wieFwiLFwieVwiLFwicm90YXRpb25cIiwoKGF1dG9Sb3RhdGUgPT09IHRydWUpID8gMCA6IE51bWJlcihhdXRvUm90YXRlKSB8fCAwKV1dIDogbnVsbDtcblx0XHRcdFx0XHRcdGZvciAocCBpbiBzZWNvbmQpIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5fcHJvcHMucHVzaChwKTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0aSA9IHRoaXMuX3Byb3BzLmxlbmd0aDtcblx0XHRcdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdFx0XHRwID0gdGhpcy5fcHJvcHNbaV07XG5cblx0XHRcdFx0XHRcdFx0dGhpcy5fb3ZlcndyaXRlUHJvcHMucHVzaChwKTtcblx0XHRcdFx0XHRcdFx0aXNGdW5jID0gdGhpcy5fZnVuY1twXSA9ICh0eXBlb2YodGFyZ2V0W3BdKSA9PT0gXCJmdW5jdGlvblwiKTtcblx0XHRcdFx0XHRcdFx0Zmlyc3RbcF0gPSAoIWlzRnVuYykgPyBwYXJzZUZsb2F0KHRhcmdldFtwXSkgOiB0YXJnZXRbICgocC5pbmRleE9mKFwic2V0XCIpIHx8IHR5cGVvZih0YXJnZXRbXCJnZXRcIiArIHAuc3Vic3RyKDMpXSkgIT09IFwiZnVuY3Rpb25cIikgPyBwIDogXCJnZXRcIiArIHAuc3Vic3RyKDMpKSBdKCk7XG5cdFx0XHRcdFx0XHRcdGlmICghcHJlcGVuZCkgaWYgKGZpcnN0W3BdICE9PSB2YWx1ZXNbMF1bcF0pIHtcblx0XHRcdFx0XHRcdFx0XHRwcmVwZW5kID0gZmlyc3Q7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHRoaXMuX2JlemllcnMgPSAodmFycy50eXBlICE9PSBcImN1YmljXCIgJiYgdmFycy50eXBlICE9PSBcInF1YWRyYXRpY1wiICYmIHZhcnMudHlwZSAhPT0gXCJzb2Z0XCIpID8gYmV6aWVyVGhyb3VnaCh2YWx1ZXMsIGlzTmFOKHZhcnMuY3VydmluZXNzKSA/IDEgOiB2YXJzLmN1cnZpbmVzcywgZmFsc2UsICh2YXJzLnR5cGUgPT09IFwidGhydUJhc2ljXCIpLCB2YXJzLmNvcnJlbGF0ZSwgcHJlcGVuZCkgOiBfcGFyc2VCZXppZXJEYXRhKHZhbHVlcywgdmFycy50eXBlLCBmaXJzdCk7XG5cdFx0XHRcdFx0XHR0aGlzLl9zZWdDb3VudCA9IHRoaXMuX2JlemllcnNbcF0ubGVuZ3RoO1xuXG5cdFx0XHRcdFx0XHRpZiAodGhpcy5fdGltZVJlcykge1xuXHRcdFx0XHRcdFx0XHR2YXIgbGQgPSBfcGFyc2VMZW5ndGhEYXRhKHRoaXMuX2JlemllcnMsIHRoaXMuX3RpbWVSZXMpO1xuXHRcdFx0XHRcdFx0XHR0aGlzLl9sZW5ndGggPSBsZC5sZW5ndGg7XG5cdFx0XHRcdFx0XHRcdHRoaXMuX2xlbmd0aHMgPSBsZC5sZW5ndGhzO1xuXHRcdFx0XHRcdFx0XHR0aGlzLl9zZWdtZW50cyA9IGxkLnNlZ21lbnRzO1xuXHRcdFx0XHRcdFx0XHR0aGlzLl9sMSA9IHRoaXMuX2xpID0gdGhpcy5fczEgPSB0aGlzLl9zaSA9IDA7XG5cdFx0XHRcdFx0XHRcdHRoaXMuX2wyID0gdGhpcy5fbGVuZ3Roc1swXTtcblx0XHRcdFx0XHRcdFx0dGhpcy5fY3VyU2VnID0gdGhpcy5fc2VnbWVudHNbMF07XG5cdFx0XHRcdFx0XHRcdHRoaXMuX3MyID0gdGhpcy5fY3VyU2VnWzBdO1xuXHRcdFx0XHRcdFx0XHR0aGlzLl9wcmVjID0gMSAvIHRoaXMuX2N1clNlZy5sZW5ndGg7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmICgoYXV0b1JvdGF0ZSA9IHRoaXMuX2F1dG9Sb3RhdGUpKSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMuX2luaXRpYWxSb3RhdGlvbnMgPSBbXTtcblx0XHRcdFx0XHRcdFx0aWYgKCEoYXV0b1JvdGF0ZVswXSBpbnN0YW5jZW9mIEFycmF5KSkge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuX2F1dG9Sb3RhdGUgPSBhdXRvUm90YXRlID0gW2F1dG9Sb3RhdGVdO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGkgPSBhdXRvUm90YXRlLmxlbmd0aDtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0XHRcdFx0Zm9yIChqID0gMDsgaiA8IDM7IGorKykge1xuXHRcdFx0XHRcdFx0XHRcdFx0cCA9IGF1dG9Sb3RhdGVbaV1bal07XG5cdFx0XHRcdFx0XHRcdFx0XHR0aGlzLl9mdW5jW3BdID0gKHR5cGVvZih0YXJnZXRbcF0pID09PSBcImZ1bmN0aW9uXCIpID8gdGFyZ2V0WyAoKHAuaW5kZXhPZihcInNldFwiKSB8fCB0eXBlb2YodGFyZ2V0W1wiZ2V0XCIgKyBwLnN1YnN0cigzKV0pICE9PSBcImZ1bmN0aW9uXCIpID8gcCA6IFwiZ2V0XCIgKyBwLnN1YnN0cigzKSkgXSA6IGZhbHNlO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRwID0gYXV0b1JvdGF0ZVtpXVsyXTtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLl9pbml0aWFsUm90YXRpb25zW2ldID0gKHRoaXMuX2Z1bmNbcF0gPyB0aGlzLl9mdW5jW3BdLmNhbGwodGhpcy5fdGFyZ2V0KSA6IHRoaXMuX3RhcmdldFtwXSkgfHwgMDtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLl9vdmVyd3JpdGVQcm9wcy5wdXNoKHApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR0aGlzLl9zdGFydFJhdGlvID0gdHdlZW4udmFycy5ydW5CYWNrd2FyZHMgPyAxIDogMDsgLy93ZSBkZXRlcm1pbmUgdGhlIHN0YXJ0aW5nIHJhdGlvIHdoZW4gdGhlIHR3ZWVuIGluaXRzIHdoaWNoIGlzIGFsd2F5cyAwIHVubGVzcyB0aGUgdHdlZW4gaGFzIHJ1bkJhY2t3YXJkczp0cnVlIChpbmRpY2F0aW5nIGl0J3MgYSBmcm9tKCkgdHdlZW4pIGluIHdoaWNoIGNhc2UgaXQncyAxLlxuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fSxcblxuXHRcdFx0XHRcdC8vY2FsbGVkIGVhY2ggdGltZSB0aGUgdmFsdWVzIHNob3VsZCBiZSB1cGRhdGVkLCBhbmQgdGhlIHJhdGlvIGdldHMgcGFzc2VkIGFzIHRoZSBvbmx5IHBhcmFtZXRlciAodHlwaWNhbGx5IGl0J3MgYSB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEsIGJ1dCBpdCBjYW4gZXhjZWVkIHRob3NlIHdoZW4gdXNpbmcgYW4gZWFzZSBsaWtlIEVsYXN0aWMuZWFzZU91dCBvciBCYWNrLmVhc2VPdXQsIGV0Yy4pXG5cdFx0XHRcdFx0c2V0OiBmdW5jdGlvbih2KSB7XG5cdFx0XHRcdFx0XHR2YXIgc2VnbWVudHMgPSB0aGlzLl9zZWdDb3VudCxcblx0XHRcdFx0XHRcdFx0ZnVuYyA9IHRoaXMuX2Z1bmMsXG5cdFx0XHRcdFx0XHRcdHRhcmdldCA9IHRoaXMuX3RhcmdldCxcblx0XHRcdFx0XHRcdFx0bm90U3RhcnQgPSAodiAhPT0gdGhpcy5fc3RhcnRSYXRpbyksXG5cdFx0XHRcdFx0XHRcdGN1ckluZGV4LCBpbnYsIGksIHAsIGIsIHQsIHZhbCwgbCwgbGVuZ3RocywgY3VyU2VnO1xuXHRcdFx0XHRcdFx0aWYgKCF0aGlzLl90aW1lUmVzKSB7XG5cdFx0XHRcdFx0XHRcdGN1ckluZGV4ID0gKHYgPCAwKSA/IDAgOiAodiA+PSAxKSA/IHNlZ21lbnRzIC0gMSA6IChzZWdtZW50cyAqIHYpID4+IDA7XG5cdFx0XHRcdFx0XHRcdHQgPSAodiAtIChjdXJJbmRleCAqICgxIC8gc2VnbWVudHMpKSkgKiBzZWdtZW50cztcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGxlbmd0aHMgPSB0aGlzLl9sZW5ndGhzO1xuXHRcdFx0XHRcdFx0XHRjdXJTZWcgPSB0aGlzLl9jdXJTZWc7XG5cdFx0XHRcdFx0XHRcdHYgKj0gdGhpcy5fbGVuZ3RoO1xuXHRcdFx0XHRcdFx0XHRpID0gdGhpcy5fbGk7XG5cdFx0XHRcdFx0XHRcdC8vZmluZCB0aGUgYXBwcm9wcmlhdGUgc2VnbWVudCAoaWYgdGhlIGN1cnJlbnRseSBjYWNoZWQgb25lIGlzbid0IGNvcnJlY3QpXG5cdFx0XHRcdFx0XHRcdGlmICh2ID4gdGhpcy5fbDIgJiYgaSA8IHNlZ21lbnRzIC0gMSkge1xuXHRcdFx0XHRcdFx0XHRcdGwgPSBzZWdtZW50cyAtIDE7XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKGkgPCBsICYmICh0aGlzLl9sMiA9IGxlbmd0aHNbKytpXSkgPD0gdikge1x0fVxuXHRcdFx0XHRcdFx0XHRcdHRoaXMuX2wxID0gbGVuZ3Roc1tpLTFdO1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuX2xpID0gaTtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLl9jdXJTZWcgPSBjdXJTZWcgPSB0aGlzLl9zZWdtZW50c1tpXTtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLl9zMiA9IGN1clNlZ1sodGhpcy5fczEgPSB0aGlzLl9zaSA9IDApXTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICh2IDwgdGhpcy5fbDEgJiYgaSA+IDApIHtcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoaSA+IDAgJiYgKHRoaXMuX2wxID0gbGVuZ3Roc1stLWldKSA+PSB2KSB7IH1cblx0XHRcdFx0XHRcdFx0XHRpZiAoaSA9PT0gMCAmJiB2IDwgdGhpcy5fbDEpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHRoaXMuX2wxID0gMDtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0aSsrO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR0aGlzLl9sMiA9IGxlbmd0aHNbaV07XG5cdFx0XHRcdFx0XHRcdFx0dGhpcy5fbGkgPSBpO1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuX2N1clNlZyA9IGN1clNlZyA9IHRoaXMuX3NlZ21lbnRzW2ldO1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuX3MxID0gY3VyU2VnWyh0aGlzLl9zaSA9IGN1clNlZy5sZW5ndGggLSAxKSAtIDFdIHx8IDA7XG5cdFx0XHRcdFx0XHRcdFx0dGhpcy5fczIgPSBjdXJTZWdbdGhpcy5fc2ldO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGN1ckluZGV4ID0gaTtcblx0XHRcdFx0XHRcdFx0Ly9ub3cgZmluZCB0aGUgYXBwcm9wcmlhdGUgc3ViLXNlZ21lbnQgKHdlIHNwbGl0IGl0IGludG8gdGhlIG51bWJlciBvZiBwaWVjZXMgdGhhdCB3YXMgZGVmaW5lZCBieSBcInByZWNpc2lvblwiIGFuZCBtZWFzdXJlZCBlYWNoIG9uZSlcblx0XHRcdFx0XHRcdFx0diAtPSB0aGlzLl9sMTtcblx0XHRcdFx0XHRcdFx0aSA9IHRoaXMuX3NpO1xuXHRcdFx0XHRcdFx0XHRpZiAodiA+IHRoaXMuX3MyICYmIGkgPCBjdXJTZWcubGVuZ3RoIC0gMSkge1xuXHRcdFx0XHRcdFx0XHRcdGwgPSBjdXJTZWcubGVuZ3RoIC0gMTtcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoaSA8IGwgJiYgKHRoaXMuX3MyID0gY3VyU2VnWysraV0pIDw9IHYpIHtcdH1cblx0XHRcdFx0XHRcdFx0XHR0aGlzLl9zMSA9IGN1clNlZ1tpLTFdO1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuX3NpID0gaTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICh2IDwgdGhpcy5fczEgJiYgaSA+IDApIHtcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoaSA+IDAgJiYgKHRoaXMuX3MxID0gY3VyU2VnWy0taV0pID49IHYpIHtcdH1cblx0XHRcdFx0XHRcdFx0XHRpZiAoaSA9PT0gMCAmJiB2IDwgdGhpcy5fczEpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHRoaXMuX3MxID0gMDtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0aSsrO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR0aGlzLl9zMiA9IGN1clNlZ1tpXTtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLl9zaSA9IGk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0dCA9ICgoaSArICh2IC0gdGhpcy5fczEpIC8gKHRoaXMuX3MyIC0gdGhpcy5fczEpKSAqIHRoaXMuX3ByZWMpIHx8IDA7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpbnYgPSAxIC0gdDtcblxuXHRcdFx0XHRcdFx0aSA9IHRoaXMuX3Byb3BzLmxlbmd0aDtcblx0XHRcdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdFx0XHRwID0gdGhpcy5fcHJvcHNbaV07XG5cdFx0XHRcdFx0XHRcdGIgPSB0aGlzLl9iZXppZXJzW3BdW2N1ckluZGV4XTtcblx0XHRcdFx0XHRcdFx0dmFsID0gKHQgKiB0ICogYi5kYSArIDMgKiBpbnYgKiAodCAqIGIuY2EgKyBpbnYgKiBiLmJhKSkgKiB0ICsgYi5hO1xuXHRcdFx0XHRcdFx0XHRpZiAodGhpcy5fbW9kW3BdKSB7XG5cdFx0XHRcdFx0XHRcdFx0dmFsID0gdGhpcy5fbW9kW3BdKHZhbCwgdGFyZ2V0KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRpZiAoZnVuY1twXSkge1xuXHRcdFx0XHRcdFx0XHRcdHRhcmdldFtwXSh2YWwpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdHRhcmdldFtwXSA9IHZhbDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRpZiAodGhpcy5fYXV0b1JvdGF0ZSkge1xuXHRcdFx0XHRcdFx0XHR2YXIgYXIgPSB0aGlzLl9hdXRvUm90YXRlLFxuXHRcdFx0XHRcdFx0XHRcdGIyLCB4MSwgeTEsIHgyLCB5MiwgYWRkLCBjb252O1xuXHRcdFx0XHRcdFx0XHRpID0gYXIubGVuZ3RoO1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRcdFx0XHRwID0gYXJbaV1bMl07XG5cdFx0XHRcdFx0XHRcdFx0YWRkID0gYXJbaV1bM10gfHwgMDtcblx0XHRcdFx0XHRcdFx0XHRjb252ID0gKGFyW2ldWzRdID09PSB0cnVlKSA/IDEgOiBfUkFEMkRFRztcblx0XHRcdFx0XHRcdFx0XHRiID0gdGhpcy5fYmV6aWVyc1thcltpXVswXV07XG5cdFx0XHRcdFx0XHRcdFx0YjIgPSB0aGlzLl9iZXppZXJzW2FyW2ldWzFdXTtcblxuXHRcdFx0XHRcdFx0XHRcdGlmIChiICYmIGIyKSB7IC8vaW4gY2FzZSBvbmUgb2YgdGhlIHByb3BlcnRpZXMgZ290IG92ZXJ3cml0dGVuLlxuXHRcdFx0XHRcdFx0XHRcdFx0YiA9IGJbY3VySW5kZXhdO1xuXHRcdFx0XHRcdFx0XHRcdFx0YjIgPSBiMltjdXJJbmRleF07XG5cblx0XHRcdFx0XHRcdFx0XHRcdHgxID0gYi5hICsgKGIuYiAtIGIuYSkgKiB0O1xuXHRcdFx0XHRcdFx0XHRcdFx0eDIgPSBiLmIgKyAoYi5jIC0gYi5iKSAqIHQ7XG5cdFx0XHRcdFx0XHRcdFx0XHR4MSArPSAoeDIgLSB4MSkgKiB0O1xuXHRcdFx0XHRcdFx0XHRcdFx0eDIgKz0gKChiLmMgKyAoYi5kIC0gYi5jKSAqIHQpIC0geDIpICogdDtcblxuXHRcdFx0XHRcdFx0XHRcdFx0eTEgPSBiMi5hICsgKGIyLmIgLSBiMi5hKSAqIHQ7XG5cdFx0XHRcdFx0XHRcdFx0XHR5MiA9IGIyLmIgKyAoYjIuYyAtIGIyLmIpICogdDtcblx0XHRcdFx0XHRcdFx0XHRcdHkxICs9ICh5MiAtIHkxKSAqIHQ7XG5cdFx0XHRcdFx0XHRcdFx0XHR5MiArPSAoKGIyLmMgKyAoYjIuZCAtIGIyLmMpICogdCkgLSB5MikgKiB0O1xuXG5cdFx0XHRcdFx0XHRcdFx0XHR2YWwgPSBub3RTdGFydCA/IE1hdGguYXRhbjIoeTIgLSB5MSwgeDIgLSB4MSkgKiBjb252ICsgYWRkIDogdGhpcy5faW5pdGlhbFJvdGF0aW9uc1tpXTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKHRoaXMuX21vZFtwXSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YWwgPSB0aGlzLl9tb2RbcF0odmFsLCB0YXJnZXQpOyAvL2ZvciBtb2RQcm9wc1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoZnVuY1twXSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR0YXJnZXRbcF0odmFsKTtcblx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRhcmdldFtwXSA9IHZhbDtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHR9KSxcblx0XHRcdHAgPSBCZXppZXJQbHVnaW4ucHJvdG90eXBlO1xuXG5cblx0XHRCZXppZXJQbHVnaW4uYmV6aWVyVGhyb3VnaCA9IGJlemllclRocm91Z2g7XG5cdFx0QmV6aWVyUGx1Z2luLmN1YmljVG9RdWFkcmF0aWMgPSBjdWJpY1RvUXVhZHJhdGljO1xuXHRcdEJlemllclBsdWdpbi5fYXV0b0NTUyA9IHRydWU7IC8vaW5kaWNhdGVzIHRoYXQgdGhpcyBwbHVnaW4gY2FuIGJlIGluc2VydGVkIGludG8gdGhlIFwiY3NzXCIgb2JqZWN0IHVzaW5nIHRoZSBhdXRvQ1NTIGZlYXR1cmUgb2YgVHdlZW5MaXRlXG5cdFx0QmV6aWVyUGx1Z2luLnF1YWRyYXRpY1RvQ3ViaWMgPSBmdW5jdGlvbihhLCBiLCBjKSB7XG5cdFx0XHRyZXR1cm4gbmV3IFNlZ21lbnQoYSwgKDIgKiBiICsgYSkgLyAzLCAoMiAqIGIgKyBjKSAvIDMsIGMpO1xuXHRcdH07XG5cblx0XHRCZXppZXJQbHVnaW4uX2Nzc1JlZ2lzdGVyID0gZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgQ1NTUGx1Z2luID0gX2dsb2JhbHMuQ1NTUGx1Z2luO1xuXHRcdFx0aWYgKCFDU1NQbHVnaW4pIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0dmFyIF9pbnRlcm5hbHMgPSBDU1NQbHVnaW4uX2ludGVybmFscyxcblx0XHRcdFx0X3BhcnNlVG9Qcm94eSA9IF9pbnRlcm5hbHMuX3BhcnNlVG9Qcm94eSxcblx0XHRcdFx0X3NldFBsdWdpblJhdGlvID0gX2ludGVybmFscy5fc2V0UGx1Z2luUmF0aW8sXG5cdFx0XHRcdENTU1Byb3BUd2VlbiA9IF9pbnRlcm5hbHMuQ1NTUHJvcFR3ZWVuO1xuXHRcdFx0X2ludGVybmFscy5fcmVnaXN0ZXJDb21wbGV4U3BlY2lhbFByb3AoXCJiZXppZXJcIiwge3BhcnNlcjpmdW5jdGlvbih0LCBlLCBwcm9wLCBjc3NwLCBwdCwgcGx1Z2luKSB7XG5cdFx0XHRcdGlmIChlIGluc3RhbmNlb2YgQXJyYXkpIHtcblx0XHRcdFx0XHRlID0ge3ZhbHVlczplfTtcblx0XHRcdFx0fVxuXHRcdFx0XHRwbHVnaW4gPSBuZXcgQmV6aWVyUGx1Z2luKCk7XG5cdFx0XHRcdHZhciB2YWx1ZXMgPSBlLnZhbHVlcyxcblx0XHRcdFx0XHRsID0gdmFsdWVzLmxlbmd0aCAtIDEsXG5cdFx0XHRcdFx0cGx1Z2luVmFsdWVzID0gW10sXG5cdFx0XHRcdFx0diA9IHt9LFxuXHRcdFx0XHRcdGksIHAsIGRhdGE7XG5cdFx0XHRcdGlmIChsIDwgMCkge1xuXHRcdFx0XHRcdHJldHVybiBwdDtcblx0XHRcdFx0fVxuXHRcdFx0XHRmb3IgKGkgPSAwOyBpIDw9IGw7IGkrKykge1xuXHRcdFx0XHRcdGRhdGEgPSBfcGFyc2VUb1Byb3h5KHQsIHZhbHVlc1tpXSwgY3NzcCwgcHQsIHBsdWdpbiwgKGwgIT09IGkpKTtcblx0XHRcdFx0XHRwbHVnaW5WYWx1ZXNbaV0gPSBkYXRhLmVuZDtcblx0XHRcdFx0fVxuXHRcdFx0XHRmb3IgKHAgaW4gZSkge1xuXHRcdFx0XHRcdHZbcF0gPSBlW3BdOyAvL2R1cGxpY2F0ZSB0aGUgdmFycyBvYmplY3QgYmVjYXVzZSB3ZSBuZWVkIHRvIGFsdGVyIHNvbWUgdGhpbmdzIHdoaWNoIHdvdWxkIGNhdXNlIHByb2JsZW1zIGlmIHRoZSB1c2VyIHBsYW5zIHRvIHJldXNlIHRoZSBzYW1lIHZhcnMgb2JqZWN0IGZvciBhbm90aGVyIHR3ZWVuLlxuXHRcdFx0XHR9XG5cdFx0XHRcdHYudmFsdWVzID0gcGx1Z2luVmFsdWVzO1xuXHRcdFx0XHRwdCA9IG5ldyBDU1NQcm9wVHdlZW4odCwgXCJiZXppZXJcIiwgMCwgMCwgZGF0YS5wdCwgMik7XG5cdFx0XHRcdHB0LmRhdGEgPSBkYXRhO1xuXHRcdFx0XHRwdC5wbHVnaW4gPSBwbHVnaW47XG5cdFx0XHRcdHB0LnNldFJhdGlvID0gX3NldFBsdWdpblJhdGlvO1xuXHRcdFx0XHRpZiAodi5hdXRvUm90YXRlID09PSAwKSB7XG5cdFx0XHRcdFx0di5hdXRvUm90YXRlID0gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodi5hdXRvUm90YXRlICYmICEodi5hdXRvUm90YXRlIGluc3RhbmNlb2YgQXJyYXkpKSB7XG5cdFx0XHRcdFx0aSA9ICh2LmF1dG9Sb3RhdGUgPT09IHRydWUpID8gMCA6IE51bWJlcih2LmF1dG9Sb3RhdGUpO1xuXHRcdFx0XHRcdHYuYXV0b1JvdGF0ZSA9IChkYXRhLmVuZC5sZWZ0ICE9IG51bGwpID8gW1tcImxlZnRcIixcInRvcFwiLFwicm90YXRpb25cIixpLGZhbHNlXV0gOiAoZGF0YS5lbmQueCAhPSBudWxsKSA/IFtbXCJ4XCIsXCJ5XCIsXCJyb3RhdGlvblwiLGksZmFsc2VdXSA6IGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh2LmF1dG9Sb3RhdGUpIHtcblx0XHRcdFx0XHRpZiAoIWNzc3AuX3RyYW5zZm9ybSkge1xuXHRcdFx0XHRcdFx0Y3NzcC5fZW5hYmxlVHJhbnNmb3JtcyhmYWxzZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRhdGEuYXV0b1JvdGF0ZSA9IGNzc3AuX3RhcmdldC5fZ3NUcmFuc2Zvcm07XG5cdFx0XHRcdFx0ZGF0YS5wcm94eS5yb3RhdGlvbiA9IGRhdGEuYXV0b1JvdGF0ZS5yb3RhdGlvbiB8fCAwO1xuXHRcdFx0XHRcdGNzc3AuX292ZXJ3cml0ZVByb3BzLnB1c2goXCJyb3RhdGlvblwiKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRwbHVnaW4uX29uSW5pdFR3ZWVuKGRhdGEucHJveHksIHYsIGNzc3AuX3R3ZWVuKTtcblx0XHRcdFx0cmV0dXJuIHB0O1xuXHRcdFx0fX0pO1xuXHRcdH07XG5cblx0XHRwLl9tb2QgPSBmdW5jdGlvbihsb29rdXApIHtcblx0XHRcdHZhciBvcCA9IHRoaXMuX292ZXJ3cml0ZVByb3BzLFxuXHRcdFx0XHRpID0gb3AubGVuZ3RoLFxuXHRcdFx0XHR2YWw7XG5cdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0dmFsID0gbG9va3VwW29wW2ldXTtcblx0XHRcdFx0aWYgKHZhbCAmJiB0eXBlb2YodmFsKSA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRcdFx0dGhpcy5fbW9kW29wW2ldXSA9IHZhbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cblx0XHRwLl9raWxsID0gZnVuY3Rpb24obG9va3VwKSB7XG5cdFx0XHR2YXIgYSA9IHRoaXMuX3Byb3BzLFxuXHRcdFx0XHRwLCBpO1xuXHRcdFx0Zm9yIChwIGluIHRoaXMuX2JlemllcnMpIHtcblx0XHRcdFx0aWYgKHAgaW4gbG9va3VwKSB7XG5cdFx0XHRcdFx0ZGVsZXRlIHRoaXMuX2JlemllcnNbcF07XG5cdFx0XHRcdFx0ZGVsZXRlIHRoaXMuX2Z1bmNbcF07XG5cdFx0XHRcdFx0aSA9IGEubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdFx0aWYgKGFbaV0gPT09IHApIHtcblx0XHRcdFx0XHRcdFx0YS5zcGxpY2UoaSwgMSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRhID0gdGhpcy5fYXV0b1JvdGF0ZTtcblx0XHRcdGlmIChhKSB7XG5cdFx0XHRcdGkgPSBhLmxlbmd0aDtcblx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0aWYgKGxvb2t1cFthW2ldWzJdXSkge1xuXHRcdFx0XHRcdFx0YS5zcGxpY2UoaSwgMSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy5fc3VwZXIuX2tpbGwuY2FsbCh0aGlzLCBsb29rdXApO1xuXHRcdH07XG5cblx0fSgpKTtcblxuXG5cblxuXG5cblx0XG5cdFxuXHRcblx0XG5cdFxuXHRcblx0XG5cdFxuLypcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIENTU1BsdWdpblxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cdF9nc1Njb3BlLl9nc0RlZmluZShcInBsdWdpbnMuQ1NTUGx1Z2luXCIsIFtcInBsdWdpbnMuVHdlZW5QbHVnaW5cIixcIlR3ZWVuTGl0ZVwiXSwgZnVuY3Rpb24oVHdlZW5QbHVnaW4sIFR3ZWVuTGl0ZSkge1xuXG5cdFx0LyoqIEBjb25zdHJ1Y3RvciAqKi9cblx0XHR2YXIgQ1NTUGx1Z2luID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFR3ZWVuUGx1Z2luLmNhbGwodGhpcywgXCJjc3NcIik7XG5cdFx0XHRcdHRoaXMuX292ZXJ3cml0ZVByb3BzLmxlbmd0aCA9IDA7XG5cdFx0XHRcdHRoaXMuc2V0UmF0aW8gPSBDU1NQbHVnaW4ucHJvdG90eXBlLnNldFJhdGlvOyAvL3NwZWVkIG9wdGltaXphdGlvbiAoYXZvaWQgcHJvdG90eXBlIGxvb2t1cCBvbiB0aGlzIFwiaG90XCIgbWV0aG9kKVxuXHRcdFx0fSxcblx0XHRcdF9nbG9iYWxzID0gX2dzU2NvcGUuX2dzRGVmaW5lLmdsb2JhbHMsXG5cdFx0XHRfaGFzUHJpb3JpdHksIC8vdHVybnMgdHJ1ZSB3aGVuZXZlciBhIENTU1Byb3BUd2VlbiBpbnN0YW5jZSBpcyBjcmVhdGVkIHRoYXQgaGFzIGEgcHJpb3JpdHkgb3RoZXIgdGhhbiAwLiBUaGlzIGhlbHBzIHVzIGRpc2Nlcm4gd2hldGhlciBvciBub3Qgd2Ugc2hvdWxkIHNwZW5kIHRoZSB0aW1lIG9yZ2FuaXppbmcgdGhlIGxpbmtlZCBsaXN0IG9yIG5vdCBhZnRlciBhIENTU1BsdWdpbidzIF9vbkluaXRUd2VlbigpIG1ldGhvZCBpcyBjYWxsZWQuXG5cdFx0XHRfc3VmZml4TWFwLCAvL3dlIHNldCB0aGlzIGluIF9vbkluaXRUd2VlbigpIGVhY2ggdGltZSBhcyBhIHdheSB0byBoYXZlIGEgcGVyc2lzdGVudCB2YXJpYWJsZSB3ZSBjYW4gdXNlIGluIG90aGVyIG1ldGhvZHMgbGlrZSBfcGFyc2UoKSB3aXRob3V0IGhhdmluZyB0byBwYXNzIGl0IGFyb3VuZCBhcyBhIHBhcmFtZXRlciBhbmQgd2Uga2VlcCBfcGFyc2UoKSBkZWNvdXBsZWQgZnJvbSBhIHBhcnRpY3VsYXIgQ1NTUGx1Z2luIGluc3RhbmNlXG5cdFx0XHRfY3MsIC8vY29tcHV0ZWQgc3R5bGUgKHdlIHN0b3JlIHRoaXMgaW4gYSBzaGFyZWQgdmFyaWFibGUgdG8gY29uc2VydmUgbWVtb3J5IGFuZCBtYWtlIG1pbmlmaWNhdGlvbiB0aWdodGVyXG5cdFx0XHRfb3ZlcndyaXRlUHJvcHMsIC8vYWxpYXMgdG8gdGhlIGN1cnJlbnRseSBpbnN0YW50aWF0aW5nIENTU1BsdWdpbidzIF9vdmVyd3JpdGVQcm9wcyBhcnJheS4gV2UgdXNlIHRoaXMgY2xvc3VyZSBpbiBvcmRlciB0byBhdm9pZCBoYXZpbmcgdG8gcGFzcyBhIHJlZmVyZW5jZSBhcm91bmQgZnJvbSBtZXRob2QgdG8gbWV0aG9kIGFuZCBhaWQgaW4gbWluaWZpY2F0aW9uLlxuXHRcdFx0X3NwZWNpYWxQcm9wcyA9IHt9LFxuXHRcdFx0cCA9IENTU1BsdWdpbi5wcm90b3R5cGUgPSBuZXcgVHdlZW5QbHVnaW4oXCJjc3NcIik7XG5cblx0XHRwLmNvbnN0cnVjdG9yID0gQ1NTUGx1Z2luO1xuXHRcdENTU1BsdWdpbi52ZXJzaW9uID0gXCIxLjE5LjBcIjtcblx0XHRDU1NQbHVnaW4uQVBJID0gMjtcblx0XHRDU1NQbHVnaW4uZGVmYXVsdFRyYW5zZm9ybVBlcnNwZWN0aXZlID0gMDtcblx0XHRDU1NQbHVnaW4uZGVmYXVsdFNrZXdUeXBlID0gXCJjb21wZW5zYXRlZFwiO1xuXHRcdENTU1BsdWdpbi5kZWZhdWx0U21vb3RoT3JpZ2luID0gdHJ1ZTtcblx0XHRwID0gXCJweFwiOyAvL3dlJ2xsIHJldXNlIHRoZSBcInBcIiB2YXJpYWJsZSB0byBrZWVwIGZpbGUgc2l6ZSBkb3duXG5cdFx0Q1NTUGx1Z2luLnN1ZmZpeE1hcCA9IHt0b3A6cCwgcmlnaHQ6cCwgYm90dG9tOnAsIGxlZnQ6cCwgd2lkdGg6cCwgaGVpZ2h0OnAsIGZvbnRTaXplOnAsIHBhZGRpbmc6cCwgbWFyZ2luOnAsIHBlcnNwZWN0aXZlOnAsIGxpbmVIZWlnaHQ6XCJcIn07XG5cblxuXHRcdHZhciBfbnVtRXhwID0gLyg/OlxcLXxcXC58XFxiKShcXGR8XFwufGVcXC0pKy9nLFxuXHRcdFx0X3JlbE51bUV4cCA9IC8oPzpcXGR8XFwtXFxkfFxcLlxcZHxcXC1cXC5cXGR8XFwrPVxcZHxcXC09XFxkfFxcKz0uXFxkfFxcLT1cXC5cXGQpKy9nLFxuXHRcdFx0X3ZhbHVlc0V4cCA9IC8oPzpcXCs9fFxcLT18XFwtfFxcYilbXFxkXFwtXFwuXStbYS16QS1aMC05XSooPzolfFxcYikvZ2ksIC8vZmluZHMgYWxsIHRoZSB2YWx1ZXMgdGhhdCBiZWdpbiB3aXRoIG51bWJlcnMgb3IgKz0gb3IgLT0gYW5kIHRoZW4gYSBudW1iZXIuIEluY2x1ZGVzIHN1ZmZpeGVzLiBXZSB1c2UgdGhpcyB0byBzcGxpdCBjb21wbGV4IHZhbHVlcyBhcGFydCBsaWtlIFwiMXB4IDVweCAyMHB4IHJnYigyNTUsMTAyLDUxKVwiXG5cdFx0XHRfTmFORXhwID0gLyg/IVsrLV0/XFxkKlxcLj9cXGQrfFsrLV18ZVsrLV1cXGQrKVteMC05XS9nLCAvL2Fsc28gYWxsb3dzIHNjaWVudGlmaWMgbm90YXRpb24gYW5kIGRvZXNuJ3Qga2lsbCB0aGUgbGVhZGluZyAtLysgaW4gLT0gYW5kICs9XG5cdFx0XHRfc3VmZml4RXhwID0gLyg/OlxcZHxcXC18XFwrfD18I3xcXC4pKi9nLFxuXHRcdFx0X29wYWNpdHlFeHAgPSAvb3BhY2l0eSAqPSAqKFteKV0qKS9pLFxuXHRcdFx0X29wYWNpdHlWYWxFeHAgPSAvb3BhY2l0eTooW147XSopL2ksXG5cdFx0XHRfYWxwaGFGaWx0ZXJFeHAgPSAvYWxwaGFcXChvcGFjaXR5ICo9Lis/XFwpL2ksXG5cdFx0XHRfcmdiaHNsRXhwID0gL14ocmdifGhzbCkvLFxuXHRcdFx0X2NhcHNFeHAgPSAvKFtBLVpdKS9nLFxuXHRcdFx0X2NhbWVsRXhwID0gLy0oW2Etel0pL2dpLFxuXHRcdFx0X3VybEV4cCA9IC8oXig/OnVybFxcKFxcXCJ8dXJsXFwoKSl8KD86KFxcXCJcXCkpJHxcXCkkKS9naSwgLy9mb3IgcHVsbGluZyBvdXQgdXJscyBmcm9tIHVybCguLi4pIG9yIHVybChcIi4uLlwiKSBzdHJpbmdzIChzb21lIGJyb3dzZXJzIHdyYXAgdXJscyBpbiBxdW90ZXMsIHNvbWUgZG9uJ3Qgd2hlbiByZXBvcnRpbmcgdGhpbmdzIGxpa2UgYmFja2dyb3VuZEltYWdlKVxuXHRcdFx0X2NhbWVsRnVuYyA9IGZ1bmN0aW9uKHMsIGcpIHsgcmV0dXJuIGcudG9VcHBlckNhc2UoKTsgfSxcblx0XHRcdF9ob3JpekV4cCA9IC8oPzpMZWZ0fFJpZ2h0fFdpZHRoKS9pLFxuXHRcdFx0X2llR2V0TWF0cml4RXhwID0gLyhNMTF8TTEyfE0yMXxNMjIpPVtcXGRcXC1cXC5lXSsvZ2ksXG5cdFx0XHRfaWVTZXRNYXRyaXhFeHAgPSAvcHJvZ2lkXFw6RFhJbWFnZVRyYW5zZm9ybVxcLk1pY3Jvc29mdFxcLk1hdHJpeFxcKC4rP1xcKS9pLFxuXHRcdFx0X2NvbW1hc091dHNpZGVQYXJlbkV4cCA9IC8sKD89W15cXCldKig/OlxcKHwkKSkvZ2ksIC8vZmluZHMgYW55IGNvbW1hcyB0aGF0IGFyZSBub3Qgd2l0aGluIHBhcmVudGhlc2lzXG5cdFx0XHRfY29tcGxleEV4cCA9IC9bXFxzLFxcKF0vaSwgLy9mb3IgdGVzdGluZyBhIHN0cmluZyB0byBmaW5kIGlmIGl0IGhhcyBhIHNwYWNlLCBjb21tYSwgb3Igb3BlbiBwYXJlbnRoZXNpcyAoY2x1ZXMgdGhhdCBpdCdzIGEgY29tcGxleCB2YWx1ZSlcblx0XHRcdF9ERUcyUkFEID0gTWF0aC5QSSAvIDE4MCxcblx0XHRcdF9SQUQyREVHID0gMTgwIC8gTWF0aC5QSSxcblx0XHRcdF9mb3JjZVBUID0ge30sXG5cdFx0XHRfZG9jID0gZG9jdW1lbnQsXG5cdFx0XHRfY3JlYXRlRWxlbWVudCA9IGZ1bmN0aW9uKHR5cGUpIHtcblx0XHRcdFx0cmV0dXJuIF9kb2MuY3JlYXRlRWxlbWVudE5TID8gX2RvYy5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsIHR5cGUpIDogX2RvYy5jcmVhdGVFbGVtZW50KHR5cGUpO1xuXHRcdFx0fSxcblx0XHRcdF90ZW1wRGl2ID0gX2NyZWF0ZUVsZW1lbnQoXCJkaXZcIiksXG5cdFx0XHRfdGVtcEltZyA9IF9jcmVhdGVFbGVtZW50KFwiaW1nXCIpLFxuXHRcdFx0X2ludGVybmFscyA9IENTU1BsdWdpbi5faW50ZXJuYWxzID0ge19zcGVjaWFsUHJvcHM6X3NwZWNpYWxQcm9wc30sIC8vcHJvdmlkZXMgYSBob29rIHRvIGEgZmV3IGludGVybmFsIG1ldGhvZHMgdGhhdCB3ZSBuZWVkIHRvIGFjY2VzcyBmcm9tIGluc2lkZSBvdGhlciBwbHVnaW5zXG5cdFx0XHRfYWdlbnQgPSBuYXZpZ2F0b3IudXNlckFnZW50LFxuXHRcdFx0X2F1dG9Sb3VuZCxcblx0XHRcdF9yZXFTYWZhcmlGaXgsIC8vd2Ugd29uJ3QgYXBwbHkgdGhlIFNhZmFyaSB0cmFuc2Zvcm0gZml4IHVudGlsIHdlIGFjdHVhbGx5IGNvbWUgYWNyb3NzIGEgdHdlZW4gdGhhdCBhZmZlY3RzIGEgdHJhbnNmb3JtIHByb3BlcnR5ICh0byBtYWludGFpbiBiZXN0IHBlcmZvcm1hbmNlKS5cblxuXHRcdFx0X2lzU2FmYXJpLFxuXHRcdFx0X2lzRmlyZWZveCwgLy9GaXJlZm94IGhhcyBhIGJ1ZyB0aGF0IGNhdXNlcyAzRCB0cmFuc2Zvcm1lZCBlbGVtZW50cyB0byByYW5kb21seSBkaXNhcHBlYXIgdW5sZXNzIGEgcmVwYWludCBpcyBmb3JjZWQgYWZ0ZXIgZWFjaCB1cGRhdGUgb24gZWFjaCBlbGVtZW50LlxuXHRcdFx0X2lzU2FmYXJpTFQ2LCAvL1NhZmFyaSAoYW5kIEFuZHJvaWQgNCB3aGljaCB1c2VzIGEgZmxhdm9yIG9mIFNhZmFyaSkgaGFzIGEgYnVnIHRoYXQgcHJldmVudHMgY2hhbmdlcyB0byBcInRvcFwiIGFuZCBcImxlZnRcIiBwcm9wZXJ0aWVzIGZyb20gcmVuZGVyaW5nIHByb3Blcmx5IGlmIGNoYW5nZWQgb24gdGhlIHNhbWUgZnJhbWUgYXMgYSB0cmFuc2Zvcm0gVU5MRVNTIHdlIHNldCB0aGUgZWxlbWVudCdzIFdlYmtpdEJhY2tmYWNlVmlzaWJpbGl0eSB0byBoaWRkZW4gKHdlaXJkLCBJIGtub3cpLiBEb2luZyB0aGlzIGZvciBBbmRyb2lkIDMgYW5kIGVhcmxpZXIgc2VlbXMgdG8gYWN0dWFsbHkgY2F1c2Ugb3RoZXIgcHJvYmxlbXMsIHRob3VnaCAoZnVuISlcblx0XHRcdF9pZVZlcnMsXG5cdFx0XHRfc3VwcG9ydHNPcGFjaXR5ID0gKGZ1bmN0aW9uKCkgeyAvL3dlIHNldCBfaXNTYWZhcmksIF9pZVZlcnMsIF9pc0ZpcmVmb3gsIGFuZCBfc3VwcG9ydHNPcGFjaXR5IGFsbCBpbiBvbmUgZnVuY3Rpb24gaGVyZSB0byByZWR1Y2UgZmlsZSBzaXplIHNsaWdodGx5LCBlc3BlY2lhbGx5IGluIHRoZSBtaW5pZmllZCB2ZXJzaW9uLlxuXHRcdFx0XHR2YXIgaSA9IF9hZ2VudC5pbmRleE9mKFwiQW5kcm9pZFwiKSxcblx0XHRcdFx0XHRhID0gX2NyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuXHRcdFx0XHRfaXNTYWZhcmkgPSAoX2FnZW50LmluZGV4T2YoXCJTYWZhcmlcIikgIT09IC0xICYmIF9hZ2VudC5pbmRleE9mKFwiQ2hyb21lXCIpID09PSAtMSAmJiAoaSA9PT0gLTEgfHwgTnVtYmVyKF9hZ2VudC5zdWJzdHIoaSs4LCAxKSkgPiAzKSk7XG5cdFx0XHRcdF9pc1NhZmFyaUxUNiA9IChfaXNTYWZhcmkgJiYgKE51bWJlcihfYWdlbnQuc3Vic3RyKF9hZ2VudC5pbmRleE9mKFwiVmVyc2lvbi9cIikrOCwgMSkpIDwgNikpO1xuXHRcdFx0XHRfaXNGaXJlZm94ID0gKF9hZ2VudC5pbmRleE9mKFwiRmlyZWZveFwiKSAhPT0gLTEpO1xuXHRcdFx0XHRpZiAoKC9NU0lFIChbMC05XXsxLH1bXFwuMC05XXswLH0pLykuZXhlYyhfYWdlbnQpIHx8ICgvVHJpZGVudFxcLy4qcnY6KFswLTldezEsfVtcXC4wLTldezAsfSkvKS5leGVjKF9hZ2VudCkpIHtcblx0XHRcdFx0XHRfaWVWZXJzID0gcGFyc2VGbG9hdCggUmVnRXhwLiQxICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFhKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGEuc3R5bGUuY3NzVGV4dCA9IFwidG9wOjFweDtvcGFjaXR5Oi41NTtcIjtcblx0XHRcdFx0cmV0dXJuIC9eMC41NS8udGVzdChhLnN0eWxlLm9wYWNpdHkpO1xuXHRcdFx0fSgpKSxcblx0XHRcdF9nZXRJRU9wYWNpdHkgPSBmdW5jdGlvbih2KSB7XG5cdFx0XHRcdHJldHVybiAoX29wYWNpdHlFeHAudGVzdCggKCh0eXBlb2YodikgPT09IFwic3RyaW5nXCIpID8gdiA6ICh2LmN1cnJlbnRTdHlsZSA/IHYuY3VycmVudFN0eWxlLmZpbHRlciA6IHYuc3R5bGUuZmlsdGVyKSB8fCBcIlwiKSApID8gKCBwYXJzZUZsb2F0KCBSZWdFeHAuJDEgKSAvIDEwMCApIDogMSk7XG5cdFx0XHR9LFxuXHRcdFx0X2xvZyA9IGZ1bmN0aW9uKHMpIHsvL2ZvciBsb2dnaW5nIG1lc3NhZ2VzLCBidXQgaW4gYSB3YXkgdGhhdCB3b24ndCB0aHJvdyBlcnJvcnMgaW4gb2xkIHZlcnNpb25zIG9mIElFLlxuXHRcdFx0XHRpZiAod2luZG93LmNvbnNvbGUpIHtcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhzKTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdF90YXJnZXQsIC8vd2hlbiBpbml0dGluZyBhIENTU1BsdWdpbiwgd2Ugc2V0IHRoaXMgdmFyaWFibGUgc28gdGhhdCB3ZSBjYW4gYWNjZXNzIGl0IGZyb20gd2l0aGluIG1hbnkgb3RoZXIgZnVuY3Rpb25zIHdpdGhvdXQgaGF2aW5nIHRvIHBhc3MgaXQgYXJvdW5kIGFzIHBhcmFtc1xuXHRcdFx0X2luZGV4LCAvL3doZW4gaW5pdHRpbmcgYSBDU1NQbHVnaW4sIHdlIHNldCB0aGlzIHZhcmlhYmxlIHNvIHRoYXQgd2UgY2FuIGFjY2VzcyBpdCBmcm9tIHdpdGhpbiBtYW55IG90aGVyIGZ1bmN0aW9ucyB3aXRob3V0IGhhdmluZyB0byBwYXNzIGl0IGFyb3VuZCBhcyBwYXJhbXNcblxuXHRcdFx0X3ByZWZpeENTUyA9IFwiXCIsIC8vdGhlIG5vbi1jYW1lbENhc2UgdmVuZG9yIHByZWZpeCBsaWtlIFwiLW8tXCIsIFwiLW1vei1cIiwgXCItbXMtXCIsIG9yIFwiLXdlYmtpdC1cIlxuXHRcdFx0X3ByZWZpeCA9IFwiXCIsIC8vY2FtZWxDYXNlIHZlbmRvciBwcmVmaXggbGlrZSBcIk9cIiwgXCJtc1wiLCBcIldlYmtpdFwiLCBvciBcIk1velwiLlxuXG5cdFx0XHQvLyBAcHJpdmF0ZSBmZWVkIGluIGEgY2FtZWxDYXNlIHByb3BlcnR5IG5hbWUgbGlrZSBcInRyYW5zZm9ybVwiIGFuZCBpdCB3aWxsIGNoZWNrIHRvIHNlZSBpZiBpdCBpcyB2YWxpZCBhcy1pcyBvciBpZiBpdCBuZWVkcyBhIHZlbmRvciBwcmVmaXguIEl0IHJldHVybnMgdGhlIGNvcnJlY3RlZCBjYW1lbENhc2UgcHJvcGVydHkgbmFtZSAoaS5lLiBcIldlYmtpdFRyYW5zZm9ybVwiIG9yIFwiTW96VHJhbnNmb3JtXCIgb3IgXCJ0cmFuc2Zvcm1cIiBvciBudWxsIGlmIG5vIHN1Y2ggcHJvcGVydHkgaXMgZm91bmQsIGxpa2UgaWYgdGhlIGJyb3dzZXIgaXMgSUU4IG9yIGJlZm9yZSwgXCJ0cmFuc2Zvcm1cIiB3b24ndCBiZSBmb3VuZCBhdCBhbGwpXG5cdFx0XHRfY2hlY2tQcm9wUHJlZml4ID0gZnVuY3Rpb24ocCwgZSkge1xuXHRcdFx0XHRlID0gZSB8fCBfdGVtcERpdjtcblx0XHRcdFx0dmFyIHMgPSBlLnN0eWxlLFxuXHRcdFx0XHRcdGEsIGk7XG5cdFx0XHRcdGlmIChzW3BdICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRyZXR1cm4gcDtcblx0XHRcdFx0fVxuXHRcdFx0XHRwID0gcC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHAuc3Vic3RyKDEpO1xuXHRcdFx0XHRhID0gW1wiT1wiLFwiTW96XCIsXCJtc1wiLFwiTXNcIixcIldlYmtpdFwiXTtcblx0XHRcdFx0aSA9IDU7XG5cdFx0XHRcdHdoaWxlICgtLWkgPiAtMSAmJiBzW2FbaV0rcF0gPT09IHVuZGVmaW5lZCkgeyB9XG5cdFx0XHRcdGlmIChpID49IDApIHtcblx0XHRcdFx0XHRfcHJlZml4ID0gKGkgPT09IDMpID8gXCJtc1wiIDogYVtpXTtcblx0XHRcdFx0XHRfcHJlZml4Q1NTID0gXCItXCIgKyBfcHJlZml4LnRvTG93ZXJDYXNlKCkgKyBcIi1cIjtcblx0XHRcdFx0XHRyZXR1cm4gX3ByZWZpeCArIHA7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9LFxuXG5cdFx0XHRfZ2V0Q29tcHV0ZWRTdHlsZSA9IF9kb2MuZGVmYXVsdFZpZXcgPyBfZG9jLmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGUgOiBmdW5jdGlvbigpIHt9LFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIEBwcml2YXRlIFJldHVybnMgdGhlIGNzcyBzdHlsZSBmb3IgYSBwYXJ0aWN1bGFyIHByb3BlcnR5IG9mIGFuIGVsZW1lbnQuIEZvciBleGFtcGxlLCB0byBnZXQgd2hhdGV2ZXIgdGhlIGN1cnJlbnQgXCJsZWZ0XCIgY3NzIHZhbHVlIGZvciBhbiBlbGVtZW50IHdpdGggYW4gSUQgb2YgXCJteUVsZW1lbnRcIiwgeW91IGNvdWxkIGRvOlxuXHRcdFx0ICogdmFyIGN1cnJlbnRMZWZ0ID0gQ1NTUGx1Z2luLmdldFN0eWxlKCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm15RWxlbWVudFwiKSwgXCJsZWZ0XCIpO1xuXHRcdFx0ICpcblx0XHRcdCAqIEBwYXJhbSB7IU9iamVjdH0gdCBUYXJnZXQgZWxlbWVudCB3aG9zZSBzdHlsZSBwcm9wZXJ0eSB5b3Ugd2FudCB0byBxdWVyeVxuXHRcdFx0ICogQHBhcmFtIHshc3RyaW5nfSBwIFByb3BlcnR5IG5hbWUgKGxpa2UgXCJsZWZ0XCIgb3IgXCJ0b3BcIiBvciBcIm1hcmdpblRvcFwiLCBldGMuKVxuXHRcdFx0ICogQHBhcmFtIHtPYmplY3Q9fSBjcyBDb21wdXRlZCBzdHlsZSBvYmplY3QuIFRoaXMganVzdCBwcm92aWRlcyBhIHdheSB0byBzcGVlZCBwcm9jZXNzaW5nIGlmIHlvdSdyZSBnb2luZyB0byBnZXQgc2V2ZXJhbCBwcm9wZXJ0aWVzIG9uIHRoZSBzYW1lIGVsZW1lbnQgaW4gcXVpY2sgc3VjY2Vzc2lvbiAtIHlvdSBjYW4gcmV1c2UgdGhlIHJlc3VsdCBvZiB0aGUgZ2V0Q29tcHV0ZWRTdHlsZSgpIGNhbGwuXG5cdFx0XHQgKiBAcGFyYW0ge2Jvb2xlYW49fSBjYWxjIElmIHRydWUsIHRoZSB2YWx1ZSB3aWxsIG5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGVsZW1lbnQncyBcInN0eWxlXCIgcHJvcGVydHkgKGlmIGl0IGV4aXN0cyB0aGVyZSksIGJ1dCBpbnN0ZWFkIHRoZSBnZXRDb21wdXRlZFN0eWxlKCkgcmVzdWx0IHdpbGwgYmUgdXNlZC4gVGhpcyBjYW4gYmUgdXNlZnVsIHdoZW4geW91IHdhbnQgdG8gZW5zdXJlIHRoYXQgdGhlIGJyb3dzZXIgaXRzZWxmIGlzIGludGVycHJldGluZyB0aGUgdmFsdWUuXG5cdFx0XHQgKiBAcGFyYW0ge3N0cmluZz19IGRmbHQgRGVmYXVsdCB2YWx1ZSB0aGF0IHNob3VsZCBiZSByZXR1cm5lZCBpbiB0aGUgcGxhY2Ugb2YgbnVsbCwgXCJub25lXCIsIFwiYXV0b1wiIG9yIFwiYXV0byBhdXRvXCIuXG5cdFx0XHQgKiBAcmV0dXJuIHs/c3RyaW5nfSBUaGUgY3VycmVudCBwcm9wZXJ0eSB2YWx1ZVxuXHRcdFx0ICovXG5cdFx0XHRfZ2V0U3R5bGUgPSBDU1NQbHVnaW4uZ2V0U3R5bGUgPSBmdW5jdGlvbih0LCBwLCBjcywgY2FsYywgZGZsdCkge1xuXHRcdFx0XHR2YXIgcnY7XG5cdFx0XHRcdGlmICghX3N1cHBvcnRzT3BhY2l0eSkgaWYgKHAgPT09IFwib3BhY2l0eVwiKSB7IC8vc2V2ZXJhbCB2ZXJzaW9ucyBvZiBJRSBkb24ndCB1c2UgdGhlIHN0YW5kYXJkIFwib3BhY2l0eVwiIHByb3BlcnR5IC0gdGhleSB1c2UgdGhpbmdzIGxpa2UgZmlsdGVyOmFscGhhKG9wYWNpdHk9NTApLCBzbyB3ZSBwYXJzZSB0aGF0IGhlcmUuXG5cdFx0XHRcdFx0cmV0dXJuIF9nZXRJRU9wYWNpdHkodCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFjYWxjICYmIHQuc3R5bGVbcF0pIHtcblx0XHRcdFx0XHRydiA9IHQuc3R5bGVbcF07XG5cdFx0XHRcdH0gZWxzZSBpZiAoKGNzID0gY3MgfHwgX2dldENvbXB1dGVkU3R5bGUodCkpKSB7XG5cdFx0XHRcdFx0cnYgPSBjc1twXSB8fCBjcy5nZXRQcm9wZXJ0eVZhbHVlKHApIHx8IGNzLmdldFByb3BlcnR5VmFsdWUocC5yZXBsYWNlKF9jYXBzRXhwLCBcIi0kMVwiKS50b0xvd2VyQ2FzZSgpKTtcblx0XHRcdFx0fSBlbHNlIGlmICh0LmN1cnJlbnRTdHlsZSkge1xuXHRcdFx0XHRcdHJ2ID0gdC5jdXJyZW50U3R5bGVbcF07XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIChkZmx0ICE9IG51bGwgJiYgKCFydiB8fCBydiA9PT0gXCJub25lXCIgfHwgcnYgPT09IFwiYXV0b1wiIHx8IHJ2ID09PSBcImF1dG8gYXV0b1wiKSkgPyBkZmx0IDogcnY7XG5cdFx0XHR9LFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIEBwcml2YXRlIFBhc3MgdGhlIHRhcmdldCBlbGVtZW50LCB0aGUgcHJvcGVydHkgbmFtZSwgdGhlIG51bWVyaWMgdmFsdWUsIGFuZCB0aGUgc3VmZml4IChsaWtlIFwiJVwiLCBcImVtXCIsIFwicHhcIiwgZXRjLikgYW5kIGl0IHdpbGwgc3BpdCBiYWNrIHRoZSBlcXVpdmFsZW50IHBpeGVsIG51bWJlci5cblx0XHRcdCAqIEBwYXJhbSB7IU9iamVjdH0gdCBUYXJnZXQgZWxlbWVudFxuXHRcdFx0ICogQHBhcmFtIHshc3RyaW5nfSBwIFByb3BlcnR5IG5hbWUgKGxpa2UgXCJsZWZ0XCIsIFwidG9wXCIsIFwibWFyZ2luTGVmdFwiLCBldGMuKVxuXHRcdFx0ICogQHBhcmFtIHshbnVtYmVyfSB2IFZhbHVlXG5cdFx0XHQgKiBAcGFyYW0ge3N0cmluZz19IHNmeCBTdWZmaXggKGxpa2UgXCJweFwiIG9yIFwiJVwiIG9yIFwiZW1cIilcblx0XHRcdCAqIEBwYXJhbSB7Ym9vbGVhbj19IHJlY3Vyc2UgSWYgdHJ1ZSwgdGhlIGNhbGwgaXMgYSByZWN1cnNpdmUgb25lLiBJbiBzb21lIGJyb3dzZXJzIChsaWtlIElFNy84KSwgb2NjYXNpb25hbGx5IHRoZSB2YWx1ZSBpc24ndCBhY2N1cmF0ZWx5IHJlcG9ydGVkIGluaXRpYWxseSwgYnV0IGlmIHdlIHJ1biB0aGUgZnVuY3Rpb24gYWdhaW4gaXQgd2lsbCB0YWtlIGVmZmVjdC5cblx0XHRcdCAqIEByZXR1cm4ge251bWJlcn0gdmFsdWUgaW4gcGl4ZWxzXG5cdFx0XHQgKi9cblx0XHRcdF9jb252ZXJ0VG9QaXhlbHMgPSBfaW50ZXJuYWxzLmNvbnZlcnRUb1BpeGVscyA9IGZ1bmN0aW9uKHQsIHAsIHYsIHNmeCwgcmVjdXJzZSkge1xuXHRcdFx0XHRpZiAoc2Z4ID09PSBcInB4XCIgfHwgIXNmeCkgeyByZXR1cm4gdjsgfVxuXHRcdFx0XHRpZiAoc2Z4ID09PSBcImF1dG9cIiB8fCAhdikgeyByZXR1cm4gMDsgfVxuXHRcdFx0XHR2YXIgaG9yaXogPSBfaG9yaXpFeHAudGVzdChwKSxcblx0XHRcdFx0XHRub2RlID0gdCxcblx0XHRcdFx0XHRzdHlsZSA9IF90ZW1wRGl2LnN0eWxlLFxuXHRcdFx0XHRcdG5lZyA9ICh2IDwgMCksXG5cdFx0XHRcdFx0cHJlY2lzZSA9ICh2ID09PSAxKSxcblx0XHRcdFx0XHRwaXgsIGNhY2hlLCB0aW1lO1xuXHRcdFx0XHRpZiAobmVnKSB7XG5cdFx0XHRcdFx0diA9IC12O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChwcmVjaXNlKSB7XG5cdFx0XHRcdFx0diAqPSAxMDA7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHNmeCA9PT0gXCIlXCIgJiYgcC5pbmRleE9mKFwiYm9yZGVyXCIpICE9PSAtMSkge1xuXHRcdFx0XHRcdHBpeCA9ICh2IC8gMTAwKSAqIChob3JpeiA/IHQuY2xpZW50V2lkdGggOiB0LmNsaWVudEhlaWdodCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3R5bGUuY3NzVGV4dCA9IFwiYm9yZGVyOjAgc29saWQgcmVkO3Bvc2l0aW9uOlwiICsgX2dldFN0eWxlKHQsIFwicG9zaXRpb25cIikgKyBcIjtsaW5lLWhlaWdodDowO1wiO1xuXHRcdFx0XHRcdGlmIChzZnggPT09IFwiJVwiIHx8ICFub2RlLmFwcGVuZENoaWxkIHx8IHNmeC5jaGFyQXQoMCkgPT09IFwidlwiIHx8IHNmeCA9PT0gXCJyZW1cIikge1xuXHRcdFx0XHRcdFx0bm9kZSA9IHQucGFyZW50Tm9kZSB8fCBfZG9jLmJvZHk7XG5cdFx0XHRcdFx0XHRjYWNoZSA9IG5vZGUuX2dzQ2FjaGU7XG5cdFx0XHRcdFx0XHR0aW1lID0gVHdlZW5MaXRlLnRpY2tlci5mcmFtZTtcblx0XHRcdFx0XHRcdGlmIChjYWNoZSAmJiBob3JpeiAmJiBjYWNoZS50aW1lID09PSB0aW1lKSB7IC8vcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9uOiB3ZSByZWNvcmQgdGhlIHdpZHRoIG9mIGVsZW1lbnRzIGFsb25nIHdpdGggdGhlIHRpY2tlciBmcmFtZSBzbyB0aGF0IHdlIGNhbiBxdWlja2x5IGdldCBpdCBhZ2FpbiBvbiB0aGUgc2FtZSB0aWNrIChzZWVtcyByZWxhdGl2ZWx5IHNhZmUgdG8gYXNzdW1lIGl0IHdvdWxkbid0IGNoYW5nZSBvbiB0aGUgc2FtZSB0aWNrKVxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gY2FjaGUud2lkdGggKiB2IC8gMTAwO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0c3R5bGVbKGhvcml6ID8gXCJ3aWR0aFwiIDogXCJoZWlnaHRcIildID0gdiArIHNmeDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0c3R5bGVbKGhvcml6ID8gXCJib3JkZXJMZWZ0V2lkdGhcIiA6IFwiYm9yZGVyVG9wV2lkdGhcIildID0gdiArIHNmeDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bm9kZS5hcHBlbmRDaGlsZChfdGVtcERpdik7XG5cdFx0XHRcdFx0cGl4ID0gcGFyc2VGbG9hdChfdGVtcERpdlsoaG9yaXogPyBcIm9mZnNldFdpZHRoXCIgOiBcIm9mZnNldEhlaWdodFwiKV0pO1xuXHRcdFx0XHRcdG5vZGUucmVtb3ZlQ2hpbGQoX3RlbXBEaXYpO1xuXHRcdFx0XHRcdGlmIChob3JpeiAmJiBzZnggPT09IFwiJVwiICYmIENTU1BsdWdpbi5jYWNoZVdpZHRocyAhPT0gZmFsc2UpIHtcblx0XHRcdFx0XHRcdGNhY2hlID0gbm9kZS5fZ3NDYWNoZSA9IG5vZGUuX2dzQ2FjaGUgfHwge307XG5cdFx0XHRcdFx0XHRjYWNoZS50aW1lID0gdGltZTtcblx0XHRcdFx0XHRcdGNhY2hlLndpZHRoID0gcGl4IC8gdiAqIDEwMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHBpeCA9PT0gMCAmJiAhcmVjdXJzZSkge1xuXHRcdFx0XHRcdFx0cGl4ID0gX2NvbnZlcnRUb1BpeGVscyh0LCBwLCB2LCBzZngsIHRydWUpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAocHJlY2lzZSkge1xuXHRcdFx0XHRcdHBpeCAvPSAxMDA7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIG5lZyA/IC1waXggOiBwaXg7XG5cdFx0XHR9LFxuXHRcdFx0X2NhbGN1bGF0ZU9mZnNldCA9IF9pbnRlcm5hbHMuY2FsY3VsYXRlT2Zmc2V0ID0gZnVuY3Rpb24odCwgcCwgY3MpIHsgLy9mb3IgZmlndXJpbmcgb3V0IFwidG9wXCIgb3IgXCJsZWZ0XCIgaW4gcHggd2hlbiBpdCdzIFwiYXV0b1wiLiBXZSBuZWVkIHRvIGZhY3RvciBpbiBtYXJnaW4gd2l0aCB0aGUgb2Zmc2V0TGVmdC9vZmZzZXRUb3Bcblx0XHRcdFx0aWYgKF9nZXRTdHlsZSh0LCBcInBvc2l0aW9uXCIsIGNzKSAhPT0gXCJhYnNvbHV0ZVwiKSB7IHJldHVybiAwOyB9XG5cdFx0XHRcdHZhciBkaW0gPSAoKHAgPT09IFwibGVmdFwiKSA/IFwiTGVmdFwiIDogXCJUb3BcIiksXG5cdFx0XHRcdFx0diA9IF9nZXRTdHlsZSh0LCBcIm1hcmdpblwiICsgZGltLCBjcyk7XG5cdFx0XHRcdHJldHVybiB0W1wib2Zmc2V0XCIgKyBkaW1dIC0gKF9jb252ZXJ0VG9QaXhlbHModCwgcCwgcGFyc2VGbG9hdCh2KSwgdi5yZXBsYWNlKF9zdWZmaXhFeHAsIFwiXCIpKSB8fCAwKTtcblx0XHRcdH0sXG5cblx0XHRcdC8vIEBwcml2YXRlIHJldHVybnMgYXQgb2JqZWN0IGNvbnRhaW5pbmcgQUxMIG9mIHRoZSBzdHlsZSBwcm9wZXJ0aWVzIGluIGNhbWVsQ2FzZSBhbmQgdGhlaXIgYXNzb2NpYXRlZCB2YWx1ZXMuXG5cdFx0XHRfZ2V0QWxsU3R5bGVzID0gZnVuY3Rpb24odCwgY3MpIHtcblx0XHRcdFx0dmFyIHMgPSB7fSxcblx0XHRcdFx0XHRpLCB0ciwgcDtcblx0XHRcdFx0aWYgKChjcyA9IGNzIHx8IF9nZXRDb21wdXRlZFN0eWxlKHQsIG51bGwpKSkge1xuXHRcdFx0XHRcdGlmICgoaSA9IGNzLmxlbmd0aCkpIHtcblx0XHRcdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdFx0XHRwID0gY3NbaV07XG5cdFx0XHRcdFx0XHRcdGlmIChwLmluZGV4T2YoXCItdHJhbnNmb3JtXCIpID09PSAtMSB8fCBfdHJhbnNmb3JtUHJvcENTUyA9PT0gcCkgeyAvL1NvbWUgd2Via2l0IGJyb3dzZXJzIGR1cGxpY2F0ZSB0cmFuc2Zvcm0gdmFsdWVzLCBvbmUgbm9uLXByZWZpeGVkIGFuZCBvbmUgcHJlZml4ZWQgKFwidHJhbnNmb3JtXCIgYW5kIFwiV2Via2l0VHJhbnNmb3JtXCIpLCBzbyB3ZSBtdXN0IHdlZWQgb3V0IHRoZSBleHRyYSBvbmUgaGVyZS5cblx0XHRcdFx0XHRcdFx0XHRzW3AucmVwbGFjZShfY2FtZWxFeHAsIF9jYW1lbEZ1bmMpXSA9IGNzLmdldFByb3BlcnR5VmFsdWUocCk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2UgeyAvL3NvbWUgYnJvd3NlcnMgYmVoYXZlIGRpZmZlcmVudGx5IC0gY3MubGVuZ3RoIGlzIGFsd2F5cyAwLCBzbyB3ZSBtdXN0IGRvIGEgZm9yLi4uaW4gbG9vcC5cblx0XHRcdFx0XHRcdGZvciAoaSBpbiBjcykge1xuXHRcdFx0XHRcdFx0XHRpZiAoaS5pbmRleE9mKFwiVHJhbnNmb3JtXCIpID09PSAtMSB8fCBfdHJhbnNmb3JtUHJvcCA9PT0gaSkgeyAvL1NvbWUgd2Via2l0IGJyb3dzZXJzIGR1cGxpY2F0ZSB0cmFuc2Zvcm0gdmFsdWVzLCBvbmUgbm9uLXByZWZpeGVkIGFuZCBvbmUgcHJlZml4ZWQgKFwidHJhbnNmb3JtXCIgYW5kIFwiV2Via2l0VHJhbnNmb3JtXCIpLCBzbyB3ZSBtdXN0IHdlZWQgb3V0IHRoZSBleHRyYSBvbmUgaGVyZS5cblx0XHRcdFx0XHRcdFx0XHRzW2ldID0gY3NbaV07XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSBpZiAoKGNzID0gdC5jdXJyZW50U3R5bGUgfHwgdC5zdHlsZSkpIHtcblx0XHRcdFx0XHRmb3IgKGkgaW4gY3MpIHtcblx0XHRcdFx0XHRcdGlmICh0eXBlb2YoaSkgPT09IFwic3RyaW5nXCIgJiYgc1tpXSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRcdHNbaS5yZXBsYWNlKF9jYW1lbEV4cCwgX2NhbWVsRnVuYyldID0gY3NbaV07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICghX3N1cHBvcnRzT3BhY2l0eSkge1xuXHRcdFx0XHRcdHMub3BhY2l0eSA9IF9nZXRJRU9wYWNpdHkodCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0dHIgPSBfZ2V0VHJhbnNmb3JtKHQsIGNzLCBmYWxzZSk7XG5cdFx0XHRcdHMucm90YXRpb24gPSB0ci5yb3RhdGlvbjtcblx0XHRcdFx0cy5za2V3WCA9IHRyLnNrZXdYO1xuXHRcdFx0XHRzLnNjYWxlWCA9IHRyLnNjYWxlWDtcblx0XHRcdFx0cy5zY2FsZVkgPSB0ci5zY2FsZVk7XG5cdFx0XHRcdHMueCA9IHRyLng7XG5cdFx0XHRcdHMueSA9IHRyLnk7XG5cdFx0XHRcdGlmIChfc3VwcG9ydHMzRCkge1xuXHRcdFx0XHRcdHMueiA9IHRyLno7XG5cdFx0XHRcdFx0cy5yb3RhdGlvblggPSB0ci5yb3RhdGlvblg7XG5cdFx0XHRcdFx0cy5yb3RhdGlvblkgPSB0ci5yb3RhdGlvblk7XG5cdFx0XHRcdFx0cy5zY2FsZVogPSB0ci5zY2FsZVo7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHMuZmlsdGVycykge1xuXHRcdFx0XHRcdGRlbGV0ZSBzLmZpbHRlcnM7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBAcHJpdmF0ZSBhbmFseXplcyB0d28gc3R5bGUgb2JqZWN0cyAoYXMgcmV0dXJuZWQgYnkgX2dldEFsbFN0eWxlcygpKSBhbmQgb25seSBsb29rcyBmb3IgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGVtIHRoYXQgY29udGFpbiB0d2VlbmFibGUgdmFsdWVzIChsaWtlIGEgbnVtYmVyIG9yIGNvbG9yKS4gSXQgcmV0dXJucyBhbiBvYmplY3Qgd2l0aCBhIFwiZGlmc1wiIHByb3BlcnR5IHdoaWNoIHJlZmVycyB0byBhbiBvYmplY3QgY29udGFpbmluZyBvbmx5IHRob3NlIGlzb2xhdGVkIHByb3BlcnRpZXMgYW5kIHZhbHVlcyBmb3IgdHdlZW5pbmcsIGFuZCBhIFwiZmlyc3RNUFRcIiBwcm9wZXJ0eSB3aGljaCByZWZlcnMgdG8gdGhlIGZpcnN0IE1pbmlQcm9wVHdlZW4gaW5zdGFuY2UgaW4gYSBsaW5rZWQgbGlzdCB0aGF0IHJlY29yZGVkIGFsbCB0aGUgc3RhcnRpbmcgdmFsdWVzIG9mIHRoZSBkaWZmZXJlbnQgcHJvcGVydGllcyBzbyB0aGF0IHdlIGNhbiByZXZlcnQgdG8gdGhlbSBhdCB0aGUgZW5kIG9yIGJlZ2lubmluZyBvZiB0aGUgdHdlZW4gLSB3ZSBkb24ndCB3YW50IHRoZSBjYXNjYWRpbmcgdG8gZ2V0IG1lc3NlZCB1cC4gVGhlIGZvcmNlTG9va3VwIHBhcmFtZXRlciBpcyBhbiBvcHRpb25hbCBnZW5lcmljIG9iamVjdCB3aXRoIHByb3BlcnRpZXMgdGhhdCBzaG91bGQgYmUgZm9yY2VkIGludG8gdGhlIHJlc3VsdHMgLSB0aGlzIGlzIG5lY2Vzc2FyeSBmb3IgY2xhc3NOYW1lIHR3ZWVucyB0aGF0IGFyZSBvdmVyd3JpdGluZyBvdGhlcnMgYmVjYXVzZSBpbWFnaW5lIGEgc2NlbmFyaW8gd2hlcmUgYSByb2xsb3Zlci9yb2xsb3V0IGFkZHMvcmVtb3ZlcyBhIGNsYXNzIGFuZCB0aGUgdXNlciBzd2lwZXMgdGhlIG1vdXNlIG92ZXIgdGhlIHRhcmdldCBTVVBFUiBmYXN0LCB0aHVzIG5vdGhpbmcgYWN0dWFsbHkgY2hhbmdlZCB5ZXQgYW5kIHRoZSBzdWJzZXF1ZW50IGNvbXBhcmlzb24gb2YgdGhlIHByb3BlcnRpZXMgd291bGQgaW5kaWNhdGUgdGhleSBtYXRjaCAoZXNwZWNpYWxseSB3aGVuIHB4IHJvdW5kaW5nIGlzIHRha2VuIGludG8gY29uc2lkZXJhdGlvbiksIHRodXMgbm8gdHdlZW5pbmcgaXMgbmVjZXNzYXJ5IGV2ZW4gdGhvdWdoIGl0IFNIT1VMRCB0d2VlbiBhbmQgcmVtb3ZlIHRob3NlIHByb3BlcnRpZXMgYWZ0ZXIgdGhlIHR3ZWVuIChvdGhlcndpc2UgdGhlIGlubGluZSBzdHlsZXMgd2lsbCBjb250YW1pbmF0ZSB0aGluZ3MpLiBTZWUgdGhlIGNsYXNzTmFtZSBTcGVjaWFsUHJvcCBjb2RlIGZvciBkZXRhaWxzLlxuXHRcdFx0X2Nzc0RpZiA9IGZ1bmN0aW9uKHQsIHMxLCBzMiwgdmFycywgZm9yY2VMb29rdXApIHtcblx0XHRcdFx0dmFyIGRpZnMgPSB7fSxcblx0XHRcdFx0XHRzdHlsZSA9IHQuc3R5bGUsXG5cdFx0XHRcdFx0dmFsLCBwLCBtcHQ7XG5cdFx0XHRcdGZvciAocCBpbiBzMikge1xuXHRcdFx0XHRcdGlmIChwICE9PSBcImNzc1RleHRcIikgaWYgKHAgIT09IFwibGVuZ3RoXCIpIGlmIChpc05hTihwKSkgaWYgKHMxW3BdICE9PSAodmFsID0gczJbcF0pIHx8IChmb3JjZUxvb2t1cCAmJiBmb3JjZUxvb2t1cFtwXSkpIGlmIChwLmluZGV4T2YoXCJPcmlnaW5cIikgPT09IC0xKSBpZiAodHlwZW9mKHZhbCkgPT09IFwibnVtYmVyXCIgfHwgdHlwZW9mKHZhbCkgPT09IFwic3RyaW5nXCIpIHtcblx0XHRcdFx0XHRcdGRpZnNbcF0gPSAodmFsID09PSBcImF1dG9cIiAmJiAocCA9PT0gXCJsZWZ0XCIgfHwgcCA9PT0gXCJ0b3BcIikpID8gX2NhbGN1bGF0ZU9mZnNldCh0LCBwKSA6ICgodmFsID09PSBcIlwiIHx8IHZhbCA9PT0gXCJhdXRvXCIgfHwgdmFsID09PSBcIm5vbmVcIikgJiYgdHlwZW9mKHMxW3BdKSA9PT0gXCJzdHJpbmdcIiAmJiBzMVtwXS5yZXBsYWNlKF9OYU5FeHAsIFwiXCIpICE9PSBcIlwiKSA/IDAgOiB2YWw7IC8vaWYgdGhlIGVuZGluZyB2YWx1ZSBpcyBkZWZhdWx0aW5nIChcIlwiIG9yIFwiYXV0b1wiKSwgd2UgY2hlY2sgdGhlIHN0YXJ0aW5nIHZhbHVlIGFuZCBpZiBpdCBjYW4gYmUgcGFyc2VkIGludG8gYSBudW1iZXIgKGEgc3RyaW5nIHdoaWNoIGNvdWxkIGhhdmUgYSBzdWZmaXggdG9vLCBsaWtlIDcwMHB4KSwgdGhlbiB3ZSBzd2FwIGluIDAgZm9yIFwiXCIgb3IgXCJhdXRvXCIgc28gdGhhdCB0aGluZ3MgYWN0dWFsbHkgdHdlZW4uXG5cdFx0XHRcdFx0XHRpZiAoc3R5bGVbcF0gIT09IHVuZGVmaW5lZCkgeyAvL2ZvciBjbGFzc05hbWUgdHdlZW5zLCB3ZSBtdXN0IHJlbWVtYmVyIHdoaWNoIHByb3BlcnRpZXMgYWxyZWFkeSBleGlzdGVkIGlubGluZSAtIHRoZSBvbmVzIHRoYXQgZGlkbid0IHNob3VsZCBiZSByZW1vdmVkIHdoZW4gdGhlIHR3ZWVuIGlzbid0IGluIHByb2dyZXNzIGJlY2F1c2UgdGhleSB3ZXJlIG9ubHkgaW50cm9kdWNlZCB0byBmYWNpbGl0YXRlIHRoZSB0cmFuc2l0aW9uIGJldHdlZW4gY2xhc3Nlcy5cblx0XHRcdFx0XHRcdFx0bXB0ID0gbmV3IE1pbmlQcm9wVHdlZW4oc3R5bGUsIHAsIHN0eWxlW3BdLCBtcHQpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodmFycykge1xuXHRcdFx0XHRcdGZvciAocCBpbiB2YXJzKSB7IC8vY29weSBwcm9wZXJ0aWVzIChleGNlcHQgY2xhc3NOYW1lKVxuXHRcdFx0XHRcdFx0aWYgKHAgIT09IFwiY2xhc3NOYW1lXCIpIHtcblx0XHRcdFx0XHRcdFx0ZGlmc1twXSA9IHZhcnNbcF07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB7ZGlmczpkaWZzLCBmaXJzdE1QVDptcHR9O1xuXHRcdFx0fSxcblx0XHRcdF9kaW1lbnNpb25zID0ge3dpZHRoOltcIkxlZnRcIixcIlJpZ2h0XCJdLCBoZWlnaHQ6W1wiVG9wXCIsXCJCb3R0b21cIl19LFxuXHRcdFx0X21hcmdpbnMgPSBbXCJtYXJnaW5MZWZ0XCIsXCJtYXJnaW5SaWdodFwiLFwibWFyZ2luVG9wXCIsXCJtYXJnaW5Cb3R0b21cIl0sXG5cblx0XHRcdC8qKlxuXHRcdFx0ICogQHByaXZhdGUgR2V0cyB0aGUgd2lkdGggb3IgaGVpZ2h0IG9mIGFuIGVsZW1lbnRcblx0XHRcdCAqIEBwYXJhbSB7IU9iamVjdH0gdCBUYXJnZXQgZWxlbWVudFxuXHRcdFx0ICogQHBhcmFtIHshc3RyaW5nfSBwIFByb3BlcnR5IG5hbWUgKFwid2lkdGhcIiBvciBcImhlaWdodFwiKVxuXHRcdFx0ICogQHBhcmFtIHtPYmplY3Q9fSBjcyBDb21wdXRlZCBzdHlsZSBvYmplY3QgKGlmIG9uZSBleGlzdHMpLiBKdXN0IGEgc3BlZWQgb3B0aW1pemF0aW9uLlxuXHRcdFx0ICogQHJldHVybiB7bnVtYmVyfSBEaW1lbnNpb24gKGluIHBpeGVscylcblx0XHRcdCAqL1xuXHRcdFx0X2dldERpbWVuc2lvbiA9IGZ1bmN0aW9uKHQsIHAsIGNzKSB7XG5cdFx0XHRcdGlmICgodC5ub2RlTmFtZSArIFwiXCIpLnRvTG93ZXJDYXNlKCkgPT09IFwic3ZnXCIpIHsgLy9DaHJvbWUgbm8gbG9uZ2VyIHN1cHBvcnRzIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBvbiBTVkcgZWxlbWVudHMuXG5cdFx0XHRcdFx0cmV0dXJuIChjcyB8fCBfZ2V0Q29tcHV0ZWRTdHlsZSh0KSlbcF0gfHwgMDtcblx0XHRcdFx0fSBlbHNlIGlmICh0LmdldEJCb3ggJiYgX2lzU1ZHKHQpKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHQuZ2V0QkJveCgpW3BdIHx8IDA7XG5cdFx0XHRcdH1cblx0XHRcdFx0dmFyIHYgPSBwYXJzZUZsb2F0KChwID09PSBcIndpZHRoXCIpID8gdC5vZmZzZXRXaWR0aCA6IHQub2Zmc2V0SGVpZ2h0KSxcblx0XHRcdFx0XHRhID0gX2RpbWVuc2lvbnNbcF0sXG5cdFx0XHRcdFx0aSA9IGEubGVuZ3RoO1xuXHRcdFx0XHRjcyA9IGNzIHx8IF9nZXRDb21wdXRlZFN0eWxlKHQsIG51bGwpO1xuXHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHR2IC09IHBhcnNlRmxvYXQoIF9nZXRTdHlsZSh0LCBcInBhZGRpbmdcIiArIGFbaV0sIGNzLCB0cnVlKSApIHx8IDA7XG5cdFx0XHRcdFx0diAtPSBwYXJzZUZsb2F0KCBfZ2V0U3R5bGUodCwgXCJib3JkZXJcIiArIGFbaV0gKyBcIldpZHRoXCIsIGNzLCB0cnVlKSApIHx8IDA7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHY7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBAcHJpdmF0ZSBQYXJzZXMgcG9zaXRpb24tcmVsYXRlZCBjb21wbGV4IHN0cmluZ3MgbGlrZSBcInRvcCBsZWZ0XCIgb3IgXCI1MHB4IDEwcHhcIiBvciBcIjcwJSAyMCVcIiwgZXRjLiB3aGljaCBhcmUgdXNlZCBmb3IgdGhpbmdzIGxpa2UgdHJhbnNmb3JtT3JpZ2luIG9yIGJhY2tncm91bmRQb3NpdGlvbi4gT3B0aW9uYWxseSBkZWNvcmF0ZXMgYSBzdXBwbGllZCBvYmplY3QgKHJlY09iaikgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6IFwib3hcIiAob2Zmc2V0WCksIFwib3lcIiAob2Zmc2V0WSksIFwib3hwXCIgKGlmIHRydWUsIFwib3hcIiBpcyBhIHBlcmNlbnRhZ2Ugbm90IGEgcGl4ZWwgdmFsdWUpLCBhbmQgXCJveHlcIiAoaWYgdHJ1ZSwgXCJveVwiIGlzIGEgcGVyY2VudGFnZSBub3QgYSBwaXhlbCB2YWx1ZSlcblx0XHRcdF9wYXJzZVBvc2l0aW9uID0gZnVuY3Rpb24odiwgcmVjT2JqKSB7XG5cdFx0XHRcdGlmICh2ID09PSBcImNvbnRhaW5cIiB8fCB2ID09PSBcImF1dG9cIiB8fCB2ID09PSBcImF1dG8gYXV0b1wiKSB7IC8vbm90ZTogRmlyZWZveCB1c2VzIFwiYXV0byBhdXRvXCIgYXMgZGVmYXVsdCB3aGVyZWFzIENocm9tZSB1c2VzIFwiYXV0b1wiLlxuXHRcdFx0XHRcdHJldHVybiB2ICsgXCIgXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHYgPT0gbnVsbCB8fCB2ID09PSBcIlwiKSB7XG5cdFx0XHRcdFx0diA9IFwiMCAwXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0dmFyIGEgPSB2LnNwbGl0KFwiIFwiKSxcblx0XHRcdFx0XHR4ID0gKHYuaW5kZXhPZihcImxlZnRcIikgIT09IC0xKSA/IFwiMCVcIiA6ICh2LmluZGV4T2YoXCJyaWdodFwiKSAhPT0gLTEpID8gXCIxMDAlXCIgOiBhWzBdLFxuXHRcdFx0XHRcdHkgPSAodi5pbmRleE9mKFwidG9wXCIpICE9PSAtMSkgPyBcIjAlXCIgOiAodi5pbmRleE9mKFwiYm90dG9tXCIpICE9PSAtMSkgPyBcIjEwMCVcIiA6IGFbMV0sXG5cdFx0XHRcdFx0aTtcblx0XHRcdFx0aWYgKGEubGVuZ3RoID4gMyAmJiAhcmVjT2JqKSB7IC8vbXVsdGlwbGUgcG9zaXRpb25zXG5cdFx0XHRcdFx0YSA9IHYuc3BsaXQoXCIsIFwiKS5qb2luKFwiLFwiKS5zcGxpdChcIixcIik7XG5cdFx0XHRcdFx0diA9IFtdO1xuXHRcdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0XHR2LnB1c2goX3BhcnNlUG9zaXRpb24oYVtpXSkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdi5qb2luKFwiLFwiKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoeSA9PSBudWxsKSB7XG5cdFx0XHRcdFx0eSA9ICh4ID09PSBcImNlbnRlclwiKSA/IFwiNTAlXCIgOiBcIjBcIjtcblx0XHRcdFx0fSBlbHNlIGlmICh5ID09PSBcImNlbnRlclwiKSB7XG5cdFx0XHRcdFx0eSA9IFwiNTAlXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHggPT09IFwiY2VudGVyXCIgfHwgKGlzTmFOKHBhcnNlRmxvYXQoeCkpICYmICh4ICsgXCJcIikuaW5kZXhPZihcIj1cIikgPT09IC0xKSkgeyAvL3JlbWVtYmVyLCB0aGUgdXNlciBjb3VsZCBmbGlwLWZsb3AgdGhlIHZhbHVlcyBhbmQgc2F5IFwiYm90dG9tIGNlbnRlclwiIG9yIFwiY2VudGVyIGJvdHRvbVwiLCBldGMuIFwiY2VudGVyXCIgaXMgYW1iaWd1b3VzIGJlY2F1c2UgaXQgY291bGQgYmUgdXNlZCB0byBkZXNjcmliZSBob3Jpem9udGFsIG9yIHZlcnRpY2FsLCBoZW5jZSB0aGUgaXNOYU4oKS4gSWYgdGhlcmUncyBhbiBcIj1cIiBzaWduIGluIHRoZSB2YWx1ZSwgaXQncyByZWxhdGl2ZS5cblx0XHRcdFx0XHR4ID0gXCI1MCVcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHR2ID0geCArIFwiIFwiICsgeSArICgoYS5sZW5ndGggPiAyKSA/IFwiIFwiICsgYVsyXSA6IFwiXCIpO1xuXHRcdFx0XHRpZiAocmVjT2JqKSB7XG5cdFx0XHRcdFx0cmVjT2JqLm94cCA9ICh4LmluZGV4T2YoXCIlXCIpICE9PSAtMSk7XG5cdFx0XHRcdFx0cmVjT2JqLm95cCA9ICh5LmluZGV4T2YoXCIlXCIpICE9PSAtMSk7XG5cdFx0XHRcdFx0cmVjT2JqLm94ciA9ICh4LmNoYXJBdCgxKSA9PT0gXCI9XCIpO1xuXHRcdFx0XHRcdHJlY09iai5veXIgPSAoeS5jaGFyQXQoMSkgPT09IFwiPVwiKTtcblx0XHRcdFx0XHRyZWNPYmoub3ggPSBwYXJzZUZsb2F0KHgucmVwbGFjZShfTmFORXhwLCBcIlwiKSk7XG5cdFx0XHRcdFx0cmVjT2JqLm95ID0gcGFyc2VGbG9hdCh5LnJlcGxhY2UoX05hTkV4cCwgXCJcIikpO1xuXHRcdFx0XHRcdHJlY09iai52ID0gdjtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gcmVjT2JqIHx8IHY7XG5cdFx0XHR9LFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIEBwcml2YXRlIFRha2VzIGFuIGVuZGluZyB2YWx1ZSAodHlwaWNhbGx5IGEgc3RyaW5nLCBidXQgY2FuIGJlIGEgbnVtYmVyKSBhbmQgYSBzdGFydGluZyB2YWx1ZSBhbmQgcmV0dXJucyB0aGUgY2hhbmdlIGJldHdlZW4gdGhlIHR3bywgbG9va2luZyBmb3IgcmVsYXRpdmUgdmFsdWUgaW5kaWNhdG9ycyBsaWtlICs9IGFuZCAtPSBhbmQgaXQgYWxzbyBpZ25vcmVzIHN1ZmZpeGVzIChidXQgbWFrZSBzdXJlIHRoZSBlbmRpbmcgdmFsdWUgc3RhcnRzIHdpdGggYSBudW1iZXIgb3IgKz0vLT0gYW5kIHRoYXQgdGhlIHN0YXJ0aW5nIHZhbHVlIGlzIGEgTlVNQkVSISlcblx0XHRcdCAqIEBwYXJhbSB7KG51bWJlcnxzdHJpbmcpfSBlIEVuZCB2YWx1ZSB3aGljaCBpcyB0eXBpY2FsbHkgYSBzdHJpbmcsIGJ1dCBjb3VsZCBiZSBhIG51bWJlclxuXHRcdFx0ICogQHBhcmFtIHsobnVtYmVyfHN0cmluZyl9IGIgQmVnaW5uaW5nIHZhbHVlIHdoaWNoIGlzIHR5cGljYWxseSBhIHN0cmluZyBidXQgY291bGQgYmUgYSBudW1iZXJcblx0XHRcdCAqIEByZXR1cm4ge251bWJlcn0gQW1vdW50IG9mIGNoYW5nZSBiZXR3ZWVuIHRoZSBiZWdpbm5pbmcgYW5kIGVuZGluZyB2YWx1ZXMgKHJlbGF0aXZlIHZhbHVlcyB0aGF0IGhhdmUgYSBcIis9XCIgb3IgXCItPVwiIGFyZSByZWNvZ25pemVkKVxuXHRcdFx0ICovXG5cdFx0XHRfcGFyc2VDaGFuZ2UgPSBmdW5jdGlvbihlLCBiKSB7XG5cdFx0XHRcdGlmICh0eXBlb2YoZSkgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdGUgPSBlKF9pbmRleCwgX3RhcmdldCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuICh0eXBlb2YoZSkgPT09IFwic3RyaW5nXCIgJiYgZS5jaGFyQXQoMSkgPT09IFwiPVwiKSA/IHBhcnNlSW50KGUuY2hhckF0KDApICsgXCIxXCIsIDEwKSAqIHBhcnNlRmxvYXQoZS5zdWJzdHIoMikpIDogKHBhcnNlRmxvYXQoZSkgLSBwYXJzZUZsb2F0KGIpKSB8fCAwO1xuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBAcHJpdmF0ZSBUYWtlcyBhIHZhbHVlIGFuZCBhIGRlZmF1bHQgbnVtYmVyLCBjaGVja3MgaWYgdGhlIHZhbHVlIGlzIHJlbGF0aXZlLCBudWxsLCBvciBudW1lcmljIGFuZCBzcGl0cyBiYWNrIGEgbm9ybWFsaXplZCBudW1iZXIgYWNjb3JkaW5nbHkuIFByaW1hcmlseSB1c2VkIGluIHRoZSBfcGFyc2VUcmFuc2Zvcm0oKSBmdW5jdGlvbi5cblx0XHRcdCAqIEBwYXJhbSB7T2JqZWN0fSB2IFZhbHVlIHRvIGJlIHBhcnNlZFxuXHRcdFx0ICogQHBhcmFtIHshbnVtYmVyfSBkIERlZmF1bHQgdmFsdWUgKHdoaWNoIGlzIGFsc28gdXNlZCBmb3IgcmVsYXRpdmUgY2FsY3VsYXRpb25zIGlmIFwiKz1cIiBvciBcIi09XCIgaXMgZm91bmQgaW4gdGhlIGZpcnN0IHBhcmFtZXRlcilcblx0XHRcdCAqIEByZXR1cm4ge251bWJlcn0gUGFyc2VkIHZhbHVlXG5cdFx0XHQgKi9cblx0XHRcdF9wYXJzZVZhbCA9IGZ1bmN0aW9uKHYsIGQpIHtcblx0XHRcdFx0aWYgKHR5cGVvZih2KSA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRcdFx0diA9IHYoX2luZGV4LCBfdGFyZ2V0KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gKHYgPT0gbnVsbCkgPyBkIDogKHR5cGVvZih2KSA9PT0gXCJzdHJpbmdcIiAmJiB2LmNoYXJBdCgxKSA9PT0gXCI9XCIpID8gcGFyc2VJbnQodi5jaGFyQXQoMCkgKyBcIjFcIiwgMTApICogcGFyc2VGbG9hdCh2LnN1YnN0cigyKSkgKyBkIDogcGFyc2VGbG9hdCh2KSB8fCAwO1xuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBAcHJpdmF0ZSBUcmFuc2xhdGVzIHN0cmluZ3MgbGlrZSBcIjQwZGVnXCIgb3IgXCI0MFwiIG9yIDQwcmFkXCIgb3IgXCIrPTQwZGVnXCIgb3IgXCIyNzBfc2hvcnRcIiBvciBcIi05MF9jd1wiIG9yIFwiKz00NV9jY3dcIiB0byBhIG51bWVyaWMgcmFkaWFuIGFuZ2xlLiBPZiBjb3Vyc2UgYSBzdGFydGluZy9kZWZhdWx0IHZhbHVlIG11c3QgYmUgZmVkIGluIHRvbyBzbyB0aGF0IHJlbGF0aXZlIHZhbHVlcyBjYW4gYmUgY2FsY3VsYXRlZCBwcm9wZXJseS5cblx0XHRcdCAqIEBwYXJhbSB7T2JqZWN0fSB2IFZhbHVlIHRvIGJlIHBhcnNlZFxuXHRcdFx0ICogQHBhcmFtIHshbnVtYmVyfSBkIERlZmF1bHQgdmFsdWUgKHdoaWNoIGlzIGFsc28gdXNlZCBmb3IgcmVsYXRpdmUgY2FsY3VsYXRpb25zIGlmIFwiKz1cIiBvciBcIi09XCIgaXMgZm91bmQgaW4gdGhlIGZpcnN0IHBhcmFtZXRlcilcblx0XHRcdCAqIEBwYXJhbSB7c3RyaW5nPX0gcCBwcm9wZXJ0eSBuYW1lIGZvciBkaXJlY3Rpb25hbEVuZCAob3B0aW9uYWwgLSBvbmx5IHVzZWQgd2hlbiB0aGUgcGFyc2VkIHZhbHVlIGlzIGRpcmVjdGlvbmFsIChcIl9zaG9ydFwiLCBcIl9jd1wiLCBvciBcIl9jY3dcIiBzdWZmaXgpLiBXZSBuZWVkIGEgd2F5IHRvIHN0b3JlIHRoZSB1bmNvbXBlbnNhdGVkIHZhbHVlIHNvIHRoYXQgYXQgdGhlIGVuZCBvZiB0aGUgdHdlZW4sIHdlIHNldCBpdCB0byBleGFjdGx5IHdoYXQgd2FzIHJlcXVlc3RlZCB3aXRoIG5vIGRpcmVjdGlvbmFsIGNvbXBlbnNhdGlvbikuIFByb3BlcnR5IG5hbWUgd291bGQgYmUgXCJyb3RhdGlvblwiLCBcInJvdGF0aW9uWFwiLCBvciBcInJvdGF0aW9uWVwiXG5cdFx0XHQgKiBAcGFyYW0ge09iamVjdD19IGRpcmVjdGlvbmFsRW5kIEFuIG9iamVjdCB0aGF0IHdpbGwgc3RvcmUgdGhlIHJhdyBlbmQgdmFsdWVzIGZvciBkaXJlY3Rpb25hbCBhbmdsZXMgKFwiX3Nob3J0XCIsIFwiX2N3XCIsIG9yIFwiX2Njd1wiIHN1ZmZpeCkuIFdlIG5lZWQgYSB3YXkgdG8gc3RvcmUgdGhlIHVuY29tcGVuc2F0ZWQgdmFsdWUgc28gdGhhdCBhdCB0aGUgZW5kIG9mIHRoZSB0d2Vlbiwgd2Ugc2V0IGl0IHRvIGV4YWN0bHkgd2hhdCB3YXMgcmVxdWVzdGVkIHdpdGggbm8gZGlyZWN0aW9uYWwgY29tcGVuc2F0aW9uLlxuXHRcdFx0ICogQHJldHVybiB7bnVtYmVyfSBwYXJzZWQgYW5nbGUgaW4gcmFkaWFuc1xuXHRcdFx0ICovXG5cdFx0XHRfcGFyc2VBbmdsZSA9IGZ1bmN0aW9uKHYsIGQsIHAsIGRpcmVjdGlvbmFsRW5kKSB7XG5cdFx0XHRcdHZhciBtaW4gPSAwLjAwMDAwMSxcblx0XHRcdFx0XHRjYXAsIHNwbGl0LCBkaWYsIHJlc3VsdCwgaXNSZWxhdGl2ZTtcblx0XHRcdFx0aWYgKHR5cGVvZih2KSA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRcdFx0diA9IHYoX2luZGV4LCBfdGFyZ2V0KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodiA9PSBudWxsKSB7XG5cdFx0XHRcdFx0cmVzdWx0ID0gZDtcblx0XHRcdFx0fSBlbHNlIGlmICh0eXBlb2YodikgPT09IFwibnVtYmVyXCIpIHtcblx0XHRcdFx0XHRyZXN1bHQgPSB2O1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGNhcCA9IDM2MDtcblx0XHRcdFx0XHRzcGxpdCA9IHYuc3BsaXQoXCJfXCIpO1xuXHRcdFx0XHRcdGlzUmVsYXRpdmUgPSAodi5jaGFyQXQoMSkgPT09IFwiPVwiKTtcblx0XHRcdFx0XHRkaWYgPSAoaXNSZWxhdGl2ZSA/IHBhcnNlSW50KHYuY2hhckF0KDApICsgXCIxXCIsIDEwKSAqIHBhcnNlRmxvYXQoc3BsaXRbMF0uc3Vic3RyKDIpKSA6IHBhcnNlRmxvYXQoc3BsaXRbMF0pKSAqICgodi5pbmRleE9mKFwicmFkXCIpID09PSAtMSkgPyAxIDogX1JBRDJERUcpIC0gKGlzUmVsYXRpdmUgPyAwIDogZCk7XG5cdFx0XHRcdFx0aWYgKHNwbGl0Lmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0aWYgKGRpcmVjdGlvbmFsRW5kKSB7XG5cdFx0XHRcdFx0XHRcdGRpcmVjdGlvbmFsRW5kW3BdID0gZCArIGRpZjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICh2LmluZGV4T2YoXCJzaG9ydFwiKSAhPT0gLTEpIHtcblx0XHRcdFx0XHRcdFx0ZGlmID0gZGlmICUgY2FwO1xuXHRcdFx0XHRcdFx0XHRpZiAoZGlmICE9PSBkaWYgJSAoY2FwIC8gMikpIHtcblx0XHRcdFx0XHRcdFx0XHRkaWYgPSAoZGlmIDwgMCkgPyBkaWYgKyBjYXAgOiBkaWYgLSBjYXA7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICh2LmluZGV4T2YoXCJfY3dcIikgIT09IC0xICYmIGRpZiA8IDApIHtcblx0XHRcdFx0XHRcdFx0ZGlmID0gKChkaWYgKyBjYXAgKiA5OTk5OTk5OTk5KSAlIGNhcCkgLSAoKGRpZiAvIGNhcCkgfCAwKSAqIGNhcDtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAodi5pbmRleE9mKFwiY2N3XCIpICE9PSAtMSAmJiBkaWYgPiAwKSB7XG5cdFx0XHRcdFx0XHRcdGRpZiA9ICgoZGlmIC0gY2FwICogOTk5OTk5OTk5OSkgJSBjYXApIC0gKChkaWYgLyBjYXApIHwgMCkgKiBjYXA7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJlc3VsdCA9IGQgKyBkaWY7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHJlc3VsdCA8IG1pbiAmJiByZXN1bHQgPiAtbWluKSB7XG5cdFx0XHRcdFx0cmVzdWx0ID0gMDtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdFx0fSxcblxuXHRcdFx0X2NvbG9yTG9va3VwID0ge2FxdWE6WzAsMjU1LDI1NV0sXG5cdFx0XHRcdGxpbWU6WzAsMjU1LDBdLFxuXHRcdFx0XHRzaWx2ZXI6WzE5MiwxOTIsMTkyXSxcblx0XHRcdFx0YmxhY2s6WzAsMCwwXSxcblx0XHRcdFx0bWFyb29uOlsxMjgsMCwwXSxcblx0XHRcdFx0dGVhbDpbMCwxMjgsMTI4XSxcblx0XHRcdFx0Ymx1ZTpbMCwwLDI1NV0sXG5cdFx0XHRcdG5hdnk6WzAsMCwxMjhdLFxuXHRcdFx0XHR3aGl0ZTpbMjU1LDI1NSwyNTVdLFxuXHRcdFx0XHRmdWNoc2lhOlsyNTUsMCwyNTVdLFxuXHRcdFx0XHRvbGl2ZTpbMTI4LDEyOCwwXSxcblx0XHRcdFx0eWVsbG93OlsyNTUsMjU1LDBdLFxuXHRcdFx0XHRvcmFuZ2U6WzI1NSwxNjUsMF0sXG5cdFx0XHRcdGdyYXk6WzEyOCwxMjgsMTI4XSxcblx0XHRcdFx0cHVycGxlOlsxMjgsMCwxMjhdLFxuXHRcdFx0XHRncmVlbjpbMCwxMjgsMF0sXG5cdFx0XHRcdHJlZDpbMjU1LDAsMF0sXG5cdFx0XHRcdHBpbms6WzI1NSwxOTIsMjAzXSxcblx0XHRcdFx0Y3lhbjpbMCwyNTUsMjU1XSxcblx0XHRcdFx0dHJhbnNwYXJlbnQ6WzI1NSwyNTUsMjU1LDBdfSxcblxuXHRcdFx0X2h1ZSA9IGZ1bmN0aW9uKGgsIG0xLCBtMikge1xuXHRcdFx0XHRoID0gKGggPCAwKSA/IGggKyAxIDogKGggPiAxKSA/IGggLSAxIDogaDtcblx0XHRcdFx0cmV0dXJuICgoKChoICogNiA8IDEpID8gbTEgKyAobTIgLSBtMSkgKiBoICogNiA6IChoIDwgMC41KSA/IG0yIDogKGggKiAzIDwgMikgPyBtMSArIChtMiAtIG0xKSAqICgyIC8gMyAtIGgpICogNiA6IG0xKSAqIDI1NSkgKyAwLjUpIHwgMDtcblx0XHRcdH0sXG5cblx0XHRcdC8qKlxuXHRcdFx0ICogQHByaXZhdGUgUGFyc2VzIGEgY29sb3IgKGxpa2UgIzlGMCwgI0ZGOTkwMCwgcmdiKDI1NSw1MSwxNTMpIG9yIGhzbCgxMDgsIDUwJSwgMTAlKSkgaW50byBhbiBhcnJheSB3aXRoIDMgZWxlbWVudHMgZm9yIHJlZCwgZ3JlZW4sIGFuZCBibHVlIG9yIGlmIHRvSFNMIHBhcmFtZXRlciBpcyB0cnVlLCBpdCB3aWxsIHBvcHVsYXRlIHRoZSBhcnJheSB3aXRoIGh1ZSwgc2F0dXJhdGlvbiwgYW5kIGxpZ2h0bmVzcyB2YWx1ZXMuIElmIGEgcmVsYXRpdmUgdmFsdWUgaXMgZm91bmQgaW4gYW4gaHNsKCkgb3IgaHNsYSgpIHN0cmluZywgaXQgd2lsbCBwcmVzZXJ2ZSB0aG9zZSByZWxhdGl2ZSBwcmVmaXhlcyBhbmQgYWxsIHRoZSB2YWx1ZXMgaW4gdGhlIGFycmF5IHdpbGwgYmUgc3RyaW5ncyBpbnN0ZWFkIG9mIG51bWJlcnMgKGluIGFsbCBvdGhlciBjYXNlcyBpdCB3aWxsIGJlIHBvcHVsYXRlZCB3aXRoIG51bWJlcnMpLlxuXHRcdFx0ICogQHBhcmFtIHsoc3RyaW5nfG51bWJlcil9IHYgVGhlIHZhbHVlIHRoZSBzaG91bGQgYmUgcGFyc2VkIHdoaWNoIGNvdWxkIGJlIGEgc3RyaW5nIGxpa2UgIzlGMCBvciByZ2IoMjU1LDEwMiw1MSkgb3IgcmdiYSgyNTUsMCwwLDAuNSkgb3IgaXQgY291bGQgYmUgYSBudW1iZXIgbGlrZSAweEZGMDBDQyBvciBldmVuIGEgbmFtZWQgY29sb3IgbGlrZSByZWQsIGJsdWUsIHB1cnBsZSwgZXRjLlxuXHRcdFx0ICogQHBhcmFtIHsoYm9vbGVhbil9IHRvSFNMIElmIHRydWUsIGFuIGhzbCgpIG9yIGhzbGEoKSB2YWx1ZSB3aWxsIGJlIHJldHVybmVkIGluc3RlYWQgb2YgcmdiKCkgb3IgcmdiYSgpXG5cdFx0XHQgKiBAcmV0dXJuIHtBcnJheS48bnVtYmVyPn0gQW4gYXJyYXkgY29udGFpbmluZyByZWQsIGdyZWVuLCBhbmQgYmx1ZSAoYW5kIG9wdGlvbmFsbHkgYWxwaGEpIGluIHRoYXQgb3JkZXIsIG9yIGlmIHRoZSB0b0hTTCBwYXJhbWV0ZXIgd2FzIHRydWUsIHRoZSBhcnJheSB3aWxsIGNvbnRhaW4gaHVlLCBzYXR1cmF0aW9uIGFuZCBsaWdodG5lc3MgKGFuZCBvcHRpb25hbGx5IGFscGhhKSBpbiB0aGF0IG9yZGVyLiBBbHdheXMgbnVtYmVycyB1bmxlc3MgdGhlcmUncyBhIHJlbGF0aXZlIHByZWZpeCBmb3VuZCBpbiBhbiBoc2woKSBvciBoc2xhKCkgc3RyaW5nIGFuZCB0b0hTTCBpcyB0cnVlLlxuXHRcdFx0ICovXG5cdFx0XHRfcGFyc2VDb2xvciA9IENTU1BsdWdpbi5wYXJzZUNvbG9yID0gZnVuY3Rpb24odiwgdG9IU0wpIHtcblx0XHRcdFx0dmFyIGEsIHIsIGcsIGIsIGgsIHMsIGwsIG1heCwgbWluLCBkLCB3YXNIU0w7XG5cdFx0XHRcdGlmICghdikge1xuXHRcdFx0XHRcdGEgPSBfY29sb3JMb29rdXAuYmxhY2s7XG5cdFx0XHRcdH0gZWxzZSBpZiAodHlwZW9mKHYpID09PSBcIm51bWJlclwiKSB7XG5cdFx0XHRcdFx0YSA9IFt2ID4+IDE2LCAodiA+PiA4KSAmIDI1NSwgdiAmIDI1NV07XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0aWYgKHYuY2hhckF0KHYubGVuZ3RoIC0gMSkgPT09IFwiLFwiKSB7IC8vc29tZXRpbWVzIGEgdHJhaWxpbmcgY29tbWEgaXMgaW5jbHVkZWQgYW5kIHdlIHNob3VsZCBjaG9wIGl0IG9mZiAodHlwaWNhbGx5IGZyb20gYSBjb21tYS1kZWxpbWl0ZWQgbGlzdCBvZiB2YWx1ZXMgbGlrZSBhIHRleHRTaGFkb3c6XCIycHggMnB4IDJweCBibHVlLCA1cHggNXB4IDVweCByZ2IoMjU1LDAsMClcIiAtIGluIHRoaXMgZXhhbXBsZSBcImJsdWUsXCIgaGFzIGEgdHJhaWxpbmcgY29tbWEuIFdlIGNvdWxkIHN0cmlwIGl0IG91dCBpbnNpZGUgcGFyc2VDb21wbGV4KCkgYnV0IHdlJ2QgbmVlZCB0byBkbyBpdCB0byB0aGUgYmVnaW5uaW5nIGFuZCBlbmRpbmcgdmFsdWVzIHBsdXMgaXQgd291bGRuJ3QgcHJvdmlkZSBwcm90ZWN0aW9uIGZyb20gb3RoZXIgcG90ZW50aWFsIHNjZW5hcmlvcyBsaWtlIGlmIHRoZSB1c2VyIHBhc3NlcyBpbiBhIHNpbWlsYXIgdmFsdWUuXG5cdFx0XHRcdFx0XHR2ID0gdi5zdWJzdHIoMCwgdi5sZW5ndGggLSAxKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKF9jb2xvckxvb2t1cFt2XSkge1xuXHRcdFx0XHRcdFx0YSA9IF9jb2xvckxvb2t1cFt2XTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHYuY2hhckF0KDApID09PSBcIiNcIikge1xuXHRcdFx0XHRcdFx0aWYgKHYubGVuZ3RoID09PSA0KSB7IC8vZm9yIHNob3J0aGFuZCBsaWtlICM5RjBcblx0XHRcdFx0XHRcdFx0ciA9IHYuY2hhckF0KDEpO1xuXHRcdFx0XHRcdFx0XHRnID0gdi5jaGFyQXQoMik7XG5cdFx0XHRcdFx0XHRcdGIgPSB2LmNoYXJBdCgzKTtcblx0XHRcdFx0XHRcdFx0diA9IFwiI1wiICsgciArIHIgKyBnICsgZyArIGIgKyBiO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0diA9IHBhcnNlSW50KHYuc3Vic3RyKDEpLCAxNik7XG5cdFx0XHRcdFx0XHRhID0gW3YgPj4gMTYsICh2ID4+IDgpICYgMjU1LCB2ICYgMjU1XTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHYuc3Vic3RyKDAsIDMpID09PSBcImhzbFwiKSB7XG5cdFx0XHRcdFx0XHRhID0gd2FzSFNMID0gdi5tYXRjaChfbnVtRXhwKTtcblx0XHRcdFx0XHRcdGlmICghdG9IU0wpIHtcblx0XHRcdFx0XHRcdFx0aCA9IChOdW1iZXIoYVswXSkgJSAzNjApIC8gMzYwO1xuXHRcdFx0XHRcdFx0XHRzID0gTnVtYmVyKGFbMV0pIC8gMTAwO1xuXHRcdFx0XHRcdFx0XHRsID0gTnVtYmVyKGFbMl0pIC8gMTAwO1xuXHRcdFx0XHRcdFx0XHRnID0gKGwgPD0gMC41KSA/IGwgKiAocyArIDEpIDogbCArIHMgLSBsICogcztcblx0XHRcdFx0XHRcdFx0ciA9IGwgKiAyIC0gZztcblx0XHRcdFx0XHRcdFx0aWYgKGEubGVuZ3RoID4gMykge1xuXHRcdFx0XHRcdFx0XHRcdGFbM10gPSBOdW1iZXIodlszXSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0YVswXSA9IF9odWUoaCArIDEgLyAzLCByLCBnKTtcblx0XHRcdFx0XHRcdFx0YVsxXSA9IF9odWUoaCwgciwgZyk7XG5cdFx0XHRcdFx0XHRcdGFbMl0gPSBfaHVlKGggLSAxIC8gMywgciwgZyk7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKHYuaW5kZXhPZihcIj1cIikgIT09IC0xKSB7IC8vaWYgcmVsYXRpdmUgdmFsdWVzIGFyZSBmb3VuZCwganVzdCByZXR1cm4gdGhlIHJhdyBzdHJpbmdzIHdpdGggdGhlIHJlbGF0aXZlIHByZWZpeGVzIGluIHBsYWNlLlxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdi5tYXRjaChfcmVsTnVtRXhwKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0YSA9IHYubWF0Y2goX251bUV4cCkgfHwgX2NvbG9yTG9va3VwLnRyYW5zcGFyZW50O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRhWzBdID0gTnVtYmVyKGFbMF0pO1xuXHRcdFx0XHRcdGFbMV0gPSBOdW1iZXIoYVsxXSk7XG5cdFx0XHRcdFx0YVsyXSA9IE51bWJlcihhWzJdKTtcblx0XHRcdFx0XHRpZiAoYS5sZW5ndGggPiAzKSB7XG5cdFx0XHRcdFx0XHRhWzNdID0gTnVtYmVyKGFbM10pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodG9IU0wgJiYgIXdhc0hTTCkge1xuXHRcdFx0XHRcdHIgPSBhWzBdIC8gMjU1O1xuXHRcdFx0XHRcdGcgPSBhWzFdIC8gMjU1O1xuXHRcdFx0XHRcdGIgPSBhWzJdIC8gMjU1O1xuXHRcdFx0XHRcdG1heCA9IE1hdGgubWF4KHIsIGcsIGIpO1xuXHRcdFx0XHRcdG1pbiA9IE1hdGgubWluKHIsIGcsIGIpO1xuXHRcdFx0XHRcdGwgPSAobWF4ICsgbWluKSAvIDI7XG5cdFx0XHRcdFx0aWYgKG1heCA9PT0gbWluKSB7XG5cdFx0XHRcdFx0XHRoID0gcyA9IDA7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGQgPSBtYXggLSBtaW47XG5cdFx0XHRcdFx0XHRzID0gbCA+IDAuNSA/IGQgLyAoMiAtIG1heCAtIG1pbikgOiBkIC8gKG1heCArIG1pbik7XG5cdFx0XHRcdFx0XHRoID0gKG1heCA9PT0gcikgPyAoZyAtIGIpIC8gZCArIChnIDwgYiA/IDYgOiAwKSA6IChtYXggPT09IGcpID8gKGIgLSByKSAvIGQgKyAyIDogKHIgLSBnKSAvIGQgKyA0O1xuXHRcdFx0XHRcdFx0aCAqPSA2MDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YVswXSA9IChoICsgMC41KSB8IDA7XG5cdFx0XHRcdFx0YVsxXSA9IChzICogMTAwICsgMC41KSB8IDA7XG5cdFx0XHRcdFx0YVsyXSA9IChsICogMTAwICsgMC41KSB8IDA7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGE7XG5cdFx0XHR9LFxuXHRcdFx0X2Zvcm1hdENvbG9ycyA9IGZ1bmN0aW9uKHMsIHRvSFNMKSB7XG5cdFx0XHRcdHZhciBjb2xvcnMgPSBzLm1hdGNoKF9jb2xvckV4cCkgfHwgW10sXG5cdFx0XHRcdFx0Y2hhckluZGV4ID0gMCxcblx0XHRcdFx0XHRwYXJzZWQgPSBjb2xvcnMubGVuZ3RoID8gXCJcIiA6IHMsXG5cdFx0XHRcdFx0aSwgY29sb3IsIHRlbXA7XG5cdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBjb2xvcnMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHRjb2xvciA9IGNvbG9yc1tpXTtcblx0XHRcdFx0XHR0ZW1wID0gcy5zdWJzdHIoY2hhckluZGV4LCBzLmluZGV4T2YoY29sb3IsIGNoYXJJbmRleCktY2hhckluZGV4KTtcblx0XHRcdFx0XHRjaGFySW5kZXggKz0gdGVtcC5sZW5ndGggKyBjb2xvci5sZW5ndGg7XG5cdFx0XHRcdFx0Y29sb3IgPSBfcGFyc2VDb2xvcihjb2xvciwgdG9IU0wpO1xuXHRcdFx0XHRcdGlmIChjb2xvci5sZW5ndGggPT09IDMpIHtcblx0XHRcdFx0XHRcdGNvbG9yLnB1c2goMSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHBhcnNlZCArPSB0ZW1wICsgKHRvSFNMID8gXCJoc2xhKFwiICsgY29sb3JbMF0gKyBcIixcIiArIGNvbG9yWzFdICsgXCIlLFwiICsgY29sb3JbMl0gKyBcIiUsXCIgKyBjb2xvclszXSA6IFwicmdiYShcIiArIGNvbG9yLmpvaW4oXCIsXCIpKSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBwYXJzZWQgKyBzLnN1YnN0cihjaGFySW5kZXgpO1xuXHRcdFx0fSxcblx0XHRcdF9jb2xvckV4cCA9IFwiKD86XFxcXGIoPzooPzpyZ2J8cmdiYXxoc2x8aHNsYSlcXFxcKC4rP1xcXFwpKXxcXFxcQiMoPzpbMC05YS1mXXszfSl7MSwyfVxcXFxiXCI7IC8vd2UnbGwgZHluYW1pY2FsbHkgYnVpbGQgdGhpcyBSZWd1bGFyIEV4cHJlc3Npb24gdG8gY29uc2VydmUgZmlsZSBzaXplLiBBZnRlciBidWlsZGluZyBpdCwgaXQgd2lsbCBiZSBhYmxlIHRvIGZpbmQgcmdiKCksIHJnYmEoKSwgIyAoaGV4YWRlY2ltYWwpLCBhbmQgbmFtZWQgY29sb3IgdmFsdWVzIGxpa2UgcmVkLCBibHVlLCBwdXJwbGUsIGV0Yy5cblxuXHRcdGZvciAocCBpbiBfY29sb3JMb29rdXApIHtcblx0XHRcdF9jb2xvckV4cCArPSBcInxcIiArIHAgKyBcIlxcXFxiXCI7XG5cdFx0fVxuXHRcdF9jb2xvckV4cCA9IG5ldyBSZWdFeHAoX2NvbG9yRXhwK1wiKVwiLCBcImdpXCIpO1xuXG5cdFx0Q1NTUGx1Z2luLmNvbG9yU3RyaW5nRmlsdGVyID0gZnVuY3Rpb24oYSkge1xuXHRcdFx0dmFyIGNvbWJpbmVkID0gYVswXSArIGFbMV0sXG5cdFx0XHRcdHRvSFNMO1xuXHRcdFx0aWYgKF9jb2xvckV4cC50ZXN0KGNvbWJpbmVkKSkge1xuXHRcdFx0XHR0b0hTTCA9IChjb21iaW5lZC5pbmRleE9mKFwiaHNsKFwiKSAhPT0gLTEgfHwgY29tYmluZWQuaW5kZXhPZihcImhzbGEoXCIpICE9PSAtMSk7XG5cdFx0XHRcdGFbMF0gPSBfZm9ybWF0Q29sb3JzKGFbMF0sIHRvSFNMKTtcblx0XHRcdFx0YVsxXSA9IF9mb3JtYXRDb2xvcnMoYVsxXSwgdG9IU0wpO1xuXHRcdFx0fVxuXHRcdFx0X2NvbG9yRXhwLmxhc3RJbmRleCA9IDA7XG5cdFx0fTtcblxuXHRcdGlmICghVHdlZW5MaXRlLmRlZmF1bHRTdHJpbmdGaWx0ZXIpIHtcblx0XHRcdFR3ZWVuTGl0ZS5kZWZhdWx0U3RyaW5nRmlsdGVyID0gQ1NTUGx1Z2luLmNvbG9yU3RyaW5nRmlsdGVyO1xuXHRcdH1cblxuXHRcdC8qKlxuXHRcdCAqIEBwcml2YXRlIFJldHVybnMgYSBmb3JtYXR0ZXIgZnVuY3Rpb24gdGhhdCBoYW5kbGVzIHRha2luZyBhIHN0cmluZyAob3IgbnVtYmVyIGluIHNvbWUgY2FzZXMpIGFuZCByZXR1cm5pbmcgYSBjb25zaXN0ZW50bHkgZm9ybWF0dGVkIG9uZSBpbiB0ZXJtcyBvZiBkZWxpbWl0ZXJzLCBxdWFudGl0eSBvZiB2YWx1ZXMsIGV0Yy4gRm9yIGV4YW1wbGUsIHdlIG1heSBnZXQgYm94U2hhZG93IHZhbHVlcyBkZWZpbmVkIGFzIFwiMHB4IHJlZFwiIG9yIFwiMHB4IDBweCAxMHB4IHJnYigyNTUsMCwwKVwiIG9yIFwiMHB4IDBweCAyMHB4IDIwcHggI0YwMFwiIGFuZCB3ZSBuZWVkIHRvIGVuc3VyZSB0aGF0IHdoYXQgd2UgZ2V0IGJhY2sgaXMgZGVzY3JpYmVkIHdpdGggNCBudW1iZXJzIGFuZCBhIGNvbG9yLiBUaGlzIGFsbG93cyB1cyB0byBmZWVkIGl0IGludG8gdGhlIF9wYXJzZUNvbXBsZXgoKSBtZXRob2QgYW5kIHNwbGl0IHRoZSB2YWx1ZXMgdXAgYXBwcm9wcmlhdGVseS4gVGhlIG5lYXQgdGhpbmcgYWJvdXQgdGhpcyBfZ2V0Rm9ybWF0dGVyKCkgZnVuY3Rpb24gaXMgdGhhdCB0aGUgZGZsdCBkZWZpbmVzIGEgcGF0dGVybiBhcyB3ZWxsIGFzIGEgZGVmYXVsdCwgc28gZm9yIGV4YW1wbGUsIF9nZXRGb3JtYXR0ZXIoXCIwcHggMHB4IDBweCAwcHggIzc3N1wiLCB0cnVlKSBub3Qgb25seSBzZXRzIHRoZSBkZWZhdWx0IGFzIDBweCBmb3IgYWxsIGRpc3RhbmNlcyBhbmQgIzc3NyBmb3IgdGhlIGNvbG9yLCBidXQgYWxzbyBzZXRzIHRoZSBwYXR0ZXJuIHN1Y2ggdGhhdCA0IG51bWJlcnMgYW5kIGEgY29sb3Igd2lsbCBhbHdheXMgZ2V0IHJldHVybmVkLlxuXHRcdCAqIEBwYXJhbSB7IXN0cmluZ30gZGZsdCBUaGUgZGVmYXVsdCB2YWx1ZSBhbmQgcGF0dGVybiB0byBmb2xsb3cuIFNvIFwiMHB4IDBweCAwcHggMHB4ICM3NzdcIiB3aWxsIGVuc3VyZSB0aGF0IDQgbnVtYmVycyBhbmQgYSBjb2xvciB3aWxsIGFsd2F5cyBnZXQgcmV0dXJuZWQuXG5cdFx0ICogQHBhcmFtIHtib29sZWFuPX0gY2xyIElmIHRydWUsIHRoZSB2YWx1ZXMgc2hvdWxkIGJlIHNlYXJjaGVkIGZvciBjb2xvci1yZWxhdGVkIGRhdGEuIEZvciBleGFtcGxlLCBib3hTaGFkb3cgdmFsdWVzIHR5cGljYWxseSBjb250YWluIGEgY29sb3Igd2hlcmVhcyBib3JkZXJSYWRpdXMgZG9uJ3QuXG5cdFx0ICogQHBhcmFtIHtib29sZWFuPX0gY29sbGFwc2libGUgSWYgdHJ1ZSwgdGhlIHZhbHVlIGlzIGEgdG9wL2xlZnQvcmlnaHQvYm90dG9tIHN0eWxlIG9uZSB0aGF0IGFjdHMgbGlrZSBtYXJnaW4gb3IgcGFkZGluZywgd2hlcmUgaWYgb25seSBvbmUgdmFsdWUgaXMgcmVjZWl2ZWQsIGl0J3MgdXNlZCBmb3IgYWxsIDQ7IGlmIDIgYXJlIHJlY2VpdmVkLCB0aGUgZmlyc3QgaXMgZHVwbGljYXRlZCBmb3IgM3JkIChib3R0b20pIGFuZCB0aGUgMm5kIGlzIGR1cGxpY2F0ZWQgZm9yIHRoZSA0dGggc3BvdCAobGVmdCksIGV0Yy5cblx0XHQgKiBAcmV0dXJuIHtGdW5jdGlvbn0gZm9ybWF0dGVyIGZ1bmN0aW9uXG5cdFx0ICovXG5cdFx0dmFyIF9nZXRGb3JtYXR0ZXIgPSBmdW5jdGlvbihkZmx0LCBjbHIsIGNvbGxhcHNpYmxlLCBtdWx0aSkge1xuXHRcdFx0XHRpZiAoZGZsdCA9PSBudWxsKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHYpIHtyZXR1cm4gdjt9O1xuXHRcdFx0XHR9XG5cdFx0XHRcdHZhciBkQ29sb3IgPSBjbHIgPyAoZGZsdC5tYXRjaChfY29sb3JFeHApIHx8IFtcIlwiXSlbMF0gOiBcIlwiLFxuXHRcdFx0XHRcdGRWYWxzID0gZGZsdC5zcGxpdChkQ29sb3IpLmpvaW4oXCJcIikubWF0Y2goX3ZhbHVlc0V4cCkgfHwgW10sXG5cdFx0XHRcdFx0cGZ4ID0gZGZsdC5zdWJzdHIoMCwgZGZsdC5pbmRleE9mKGRWYWxzWzBdKSksXG5cdFx0XHRcdFx0c2Z4ID0gKGRmbHQuY2hhckF0KGRmbHQubGVuZ3RoIC0gMSkgPT09IFwiKVwiKSA/IFwiKVwiIDogXCJcIixcblx0XHRcdFx0XHRkZWxpbSA9IChkZmx0LmluZGV4T2YoXCIgXCIpICE9PSAtMSkgPyBcIiBcIiA6IFwiLFwiLFxuXHRcdFx0XHRcdG51bVZhbHMgPSBkVmFscy5sZW5ndGgsXG5cdFx0XHRcdFx0ZFNmeCA9IChudW1WYWxzID4gMCkgPyBkVmFsc1swXS5yZXBsYWNlKF9udW1FeHAsIFwiXCIpIDogXCJcIixcblx0XHRcdFx0XHRmb3JtYXR0ZXI7XG5cdFx0XHRcdGlmICghbnVtVmFscykge1xuXHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbih2KSB7cmV0dXJuIHY7fTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoY2xyKSB7XG5cdFx0XHRcdFx0Zm9ybWF0dGVyID0gZnVuY3Rpb24odikge1xuXHRcdFx0XHRcdFx0dmFyIGNvbG9yLCB2YWxzLCBpLCBhO1xuXHRcdFx0XHRcdFx0aWYgKHR5cGVvZih2KSA9PT0gXCJudW1iZXJcIikge1xuXHRcdFx0XHRcdFx0XHR2ICs9IGRTZng7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKG11bHRpICYmIF9jb21tYXNPdXRzaWRlUGFyZW5FeHAudGVzdCh2KSkge1xuXHRcdFx0XHRcdFx0XHRhID0gdi5yZXBsYWNlKF9jb21tYXNPdXRzaWRlUGFyZW5FeHAsIFwifFwiKS5zcGxpdChcInxcIik7XG5cdFx0XHRcdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0XHRcdFx0YVtpXSA9IGZvcm1hdHRlcihhW2ldKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gYS5qb2luKFwiLFwiKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGNvbG9yID0gKHYubWF0Y2goX2NvbG9yRXhwKSB8fCBbZENvbG9yXSlbMF07XG5cdFx0XHRcdFx0XHR2YWxzID0gdi5zcGxpdChjb2xvcikuam9pbihcIlwiKS5tYXRjaChfdmFsdWVzRXhwKSB8fCBbXTtcblx0XHRcdFx0XHRcdGkgPSB2YWxzLmxlbmd0aDtcblx0XHRcdFx0XHRcdGlmIChudW1WYWxzID4gaS0tKSB7XG5cdFx0XHRcdFx0XHRcdHdoaWxlICgrK2kgPCBudW1WYWxzKSB7XG5cdFx0XHRcdFx0XHRcdFx0dmFsc1tpXSA9IGNvbGxhcHNpYmxlID8gdmFsc1soKChpIC0gMSkgLyAyKSB8IDApXSA6IGRWYWxzW2ldO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRyZXR1cm4gcGZ4ICsgdmFscy5qb2luKGRlbGltKSArIGRlbGltICsgY29sb3IgKyBzZnggKyAodi5pbmRleE9mKFwiaW5zZXRcIikgIT09IC0xID8gXCIgaW5zZXRcIiA6IFwiXCIpO1xuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0cmV0dXJuIGZvcm1hdHRlcjtcblxuXHRcdFx0XHR9XG5cdFx0XHRcdGZvcm1hdHRlciA9IGZ1bmN0aW9uKHYpIHtcblx0XHRcdFx0XHR2YXIgdmFscywgYSwgaTtcblx0XHRcdFx0XHRpZiAodHlwZW9mKHYpID09PSBcIm51bWJlclwiKSB7XG5cdFx0XHRcdFx0XHR2ICs9IGRTZng7XG5cdFx0XHRcdFx0fSBlbHNlIGlmIChtdWx0aSAmJiBfY29tbWFzT3V0c2lkZVBhcmVuRXhwLnRlc3QodikpIHtcblx0XHRcdFx0XHRcdGEgPSB2LnJlcGxhY2UoX2NvbW1hc091dHNpZGVQYXJlbkV4cCwgXCJ8XCIpLnNwbGl0KFwifFwiKTtcblx0XHRcdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0XHRcdGFbaV0gPSBmb3JtYXR0ZXIoYVtpXSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRyZXR1cm4gYS5qb2luKFwiLFwiKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dmFscyA9IHYubWF0Y2goX3ZhbHVlc0V4cCkgfHwgW107XG5cdFx0XHRcdFx0aSA9IHZhbHMubGVuZ3RoO1xuXHRcdFx0XHRcdGlmIChudW1WYWxzID4gaS0tKSB7XG5cdFx0XHRcdFx0XHR3aGlsZSAoKytpIDwgbnVtVmFscykge1xuXHRcdFx0XHRcdFx0XHR2YWxzW2ldID0gY29sbGFwc2libGUgPyB2YWxzWygoKGkgLSAxKSAvIDIpIHwgMCldIDogZFZhbHNbaV07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiBwZnggKyB2YWxzLmpvaW4oZGVsaW0pICsgc2Z4O1xuXHRcdFx0XHR9O1xuXHRcdFx0XHRyZXR1cm4gZm9ybWF0dGVyO1xuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBAcHJpdmF0ZSByZXR1cm5zIGEgZm9ybWF0dGVyIGZ1bmN0aW9uIHRoYXQncyB1c2VkIGZvciBlZGdlLXJlbGF0ZWQgdmFsdWVzIGxpa2UgbWFyZ2luVG9wLCBtYXJnaW5MZWZ0LCBwYWRkaW5nQm90dG9tLCBwYWRkaW5nUmlnaHQsIGV0Yy4gSnVzdCBwYXNzIGEgY29tbWEtZGVsaW1pdGVkIGxpc3Qgb2YgcHJvcGVydHkgbmFtZXMgcmVsYXRlZCB0byB0aGUgZWRnZXMuXG5cdFx0XHQgKiBAcGFyYW0geyFzdHJpbmd9IHByb3BzIGEgY29tbWEtZGVsaW1pdGVkIGxpc3Qgb2YgcHJvcGVydHkgbmFtZXMgaW4gb3JkZXIgZnJvbSB0b3AgdG8gbGVmdCwgbGlrZSBcIm1hcmdpblRvcCxtYXJnaW5SaWdodCxtYXJnaW5Cb3R0b20sbWFyZ2luTGVmdFwiXG5cdFx0XHQgKiBAcmV0dXJuIHtGdW5jdGlvbn0gYSBmb3JtYXR0ZXIgZnVuY3Rpb25cblx0XHRcdCAqL1xuXHRcdFx0X2dldEVkZ2VQYXJzZXIgPSBmdW5jdGlvbihwcm9wcykge1xuXHRcdFx0XHRwcm9wcyA9IHByb3BzLnNwbGl0KFwiLFwiKTtcblx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHQsIGUsIHAsIGNzc3AsIHB0LCBwbHVnaW4sIHZhcnMpIHtcblx0XHRcdFx0XHR2YXIgYSA9IChlICsgXCJcIikuc3BsaXQoXCIgXCIpLFxuXHRcdFx0XHRcdFx0aTtcblx0XHRcdFx0XHR2YXJzID0ge307XG5cdFx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IDQ7IGkrKykge1xuXHRcdFx0XHRcdFx0dmFyc1twcm9wc1tpXV0gPSBhW2ldID0gYVtpXSB8fCBhWygoKGkgLSAxKSAvIDIpID4+IDApXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIGNzc3AucGFyc2UodCwgdmFycywgcHQsIHBsdWdpbik7XG5cdFx0XHRcdH07XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBAcHJpdmF0ZSB1c2VkIHdoZW4gb3RoZXIgcGx1Z2lucyBtdXN0IHR3ZWVuIHZhbHVlcyBmaXJzdCwgbGlrZSBCZXppZXJQbHVnaW4gb3IgVGhyb3dQcm9wc1BsdWdpbiwgZXRjLiBUaGF0IHBsdWdpbidzIHNldFJhdGlvKCkgZ2V0cyBjYWxsZWQgZmlyc3Qgc28gdGhhdCB0aGUgdmFsdWVzIGFyZSB1cGRhdGVkLCBhbmQgdGhlbiB3ZSBsb29wIHRocm91Z2ggdGhlIE1pbmlQcm9wVHdlZW5zIHdoaWNoIGhhbmRsZSBjb3B5aW5nIHRoZSB2YWx1ZXMgaW50byB0aGVpciBhcHByb3ByaWF0ZSBzbG90cyBzbyB0aGF0IHRoZXkgY2FuIHRoZW4gYmUgYXBwbGllZCBjb3JyZWN0bHkgaW4gdGhlIG1haW4gQ1NTUGx1Z2luIHNldFJhdGlvKCkgbWV0aG9kLiBSZW1lbWJlciwgd2UgdHlwaWNhbGx5IGNyZWF0ZSBhIHByb3h5IG9iamVjdCB0aGF0IGhhcyBhIGJ1bmNoIG9mIHVuaXF1ZWx5LW5hbWVkIHByb3BlcnRpZXMgdGhhdCB3ZSBmZWVkIHRvIHRoZSBzdWItcGx1Z2luIGFuZCBpdCBkb2VzIGl0cyBtYWdpYyBub3JtYWxseSwgYW5kIHRoZW4gd2UgbXVzdCBpbnRlcnByZXQgdGhvc2UgdmFsdWVzIGFuZCBhcHBseSB0aGVtIHRvIHRoZSBjc3MgYmVjYXVzZSBvZnRlbiBudW1iZXJzIG11c3QgZ2V0IGNvbWJpbmVkL2NvbmNhdGVuYXRlZCwgc3VmZml4ZXMgYWRkZWQsIGV0Yy4gdG8gd29yayB3aXRoIGNzcywgbGlrZSBib3hTaGFkb3cgY291bGQgaGF2ZSA0IHZhbHVlcyBwbHVzIGEgY29sb3IuXG5cdFx0XHRfc2V0UGx1Z2luUmF0aW8gPSBfaW50ZXJuYWxzLl9zZXRQbHVnaW5SYXRpbyA9IGZ1bmN0aW9uKHYpIHtcblx0XHRcdFx0dGhpcy5wbHVnaW4uc2V0UmF0aW8odik7XG5cdFx0XHRcdHZhciBkID0gdGhpcy5kYXRhLFxuXHRcdFx0XHRcdHByb3h5ID0gZC5wcm94eSxcblx0XHRcdFx0XHRtcHQgPSBkLmZpcnN0TVBULFxuXHRcdFx0XHRcdG1pbiA9IDAuMDAwMDAxLFxuXHRcdFx0XHRcdHZhbCwgcHQsIGksIHN0ciwgcDtcblx0XHRcdFx0d2hpbGUgKG1wdCkge1xuXHRcdFx0XHRcdHZhbCA9IHByb3h5W21wdC52XTtcblx0XHRcdFx0XHRpZiAobXB0LnIpIHtcblx0XHRcdFx0XHRcdHZhbCA9IE1hdGgucm91bmQodmFsKTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHZhbCA8IG1pbiAmJiB2YWwgPiAtbWluKSB7XG5cdFx0XHRcdFx0XHR2YWwgPSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRtcHQudFttcHQucF0gPSB2YWw7XG5cdFx0XHRcdFx0bXB0ID0gbXB0Ll9uZXh0O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChkLmF1dG9Sb3RhdGUpIHtcblx0XHRcdFx0XHRkLmF1dG9Sb3RhdGUucm90YXRpb24gPSBkLm1vZCA/IGQubW9kKHByb3h5LnJvdGF0aW9uLCB0aGlzLnQpIDogcHJveHkucm90YXRpb247IC8vc3BlY2lhbCBjYXNlIGZvciBNb2RpZnlQbHVnaW4gdG8gaG9vayBpbnRvIGFuIGF1dG8tcm90YXRpbmcgYmV6aWVyXG5cdFx0XHRcdH1cblx0XHRcdFx0Ly9hdCB0aGUgZW5kLCB3ZSBtdXN0IHNldCB0aGUgQ1NTUHJvcFR3ZWVuJ3MgXCJlXCIgKGVuZCkgdmFsdWUgZHluYW1pY2FsbHkgaGVyZSBiZWNhdXNlIHRoYXQncyB3aGF0IGlzIHVzZWQgaW4gdGhlIGZpbmFsIHNldFJhdGlvKCkgbWV0aG9kLiBTYW1lIGZvciBcImJcIiBhdCB0aGUgYmVnaW5uaW5nLlxuXHRcdFx0XHRpZiAodiA9PT0gMSB8fCB2ID09PSAwKSB7XG5cdFx0XHRcdFx0bXB0ID0gZC5maXJzdE1QVDtcblx0XHRcdFx0XHRwID0gKHYgPT09IDEpID8gXCJlXCIgOiBcImJcIjtcblx0XHRcdFx0XHR3aGlsZSAobXB0KSB7XG5cdFx0XHRcdFx0XHRwdCA9IG1wdC50O1xuXHRcdFx0XHRcdFx0aWYgKCFwdC50eXBlKSB7XG5cdFx0XHRcdFx0XHRcdHB0W3BdID0gcHQucyArIHB0LnhzMDtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAocHQudHlwZSA9PT0gMSkge1xuXHRcdFx0XHRcdFx0XHRzdHIgPSBwdC54czAgKyBwdC5zICsgcHQueHMxO1xuXHRcdFx0XHRcdFx0XHRmb3IgKGkgPSAxOyBpIDwgcHQubDsgaSsrKSB7XG5cdFx0XHRcdFx0XHRcdFx0c3RyICs9IHB0W1wieG5cIitpXSArIHB0W1wieHNcIisoaSsxKV07XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0cHRbcF0gPSBzdHI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRtcHQgPSBtcHQuX25leHQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIEBwcml2YXRlIEBjb25zdHJ1Y3RvciBVc2VkIGJ5IGEgZmV3IFNwZWNpYWxQcm9wcyB0byBob2xkIGltcG9ydGFudCB2YWx1ZXMgZm9yIHByb3hpZXMuIEZvciBleGFtcGxlLCBfcGFyc2VUb1Byb3h5KCkgY3JlYXRlcyBhIE1pbmlQcm9wVHdlZW4gaW5zdGFuY2UgZm9yIGVhY2ggcHJvcGVydHkgdGhhdCBtdXN0IGdldCB0d2VlbmVkIG9uIHRoZSBwcm94eSwgYW5kIHdlIHJlY29yZCB0aGUgb3JpZ2luYWwgcHJvcGVydHkgbmFtZSBhcyB3ZWxsIGFzIHRoZSB1bmlxdWUgb25lIHdlIGNyZWF0ZSBmb3IgdGhlIHByb3h5LCBwbHVzIHdoZXRoZXIgb3Igbm90IHRoZSB2YWx1ZSBuZWVkcyB0byBiZSByb3VuZGVkIHBsdXMgdGhlIG9yaWdpbmFsIHZhbHVlLlxuXHRcdFx0ICogQHBhcmFtIHshT2JqZWN0fSB0IHRhcmdldCBvYmplY3Qgd2hvc2UgcHJvcGVydHkgd2UncmUgdHdlZW5pbmcgKG9mdGVuIGEgQ1NTUHJvcFR3ZWVuKVxuXHRcdFx0ICogQHBhcmFtIHshc3RyaW5nfSBwIHByb3BlcnR5IG5hbWVcblx0XHRcdCAqIEBwYXJhbSB7KG51bWJlcnxzdHJpbmd8b2JqZWN0KX0gdiB2YWx1ZVxuXHRcdFx0ICogQHBhcmFtIHtNaW5pUHJvcFR3ZWVuPX0gbmV4dCBuZXh0IE1pbmlQcm9wVHdlZW4gaW4gdGhlIGxpbmtlZCBsaXN0XG5cdFx0XHQgKiBAcGFyYW0ge2Jvb2xlYW49fSByIGlmIHRydWUsIHRoZSB0d2VlbmVkIHZhbHVlIHNob3VsZCBiZSByb3VuZGVkIHRvIHRoZSBuZWFyZXN0IGludGVnZXJcblx0XHRcdCAqL1xuXHRcdFx0TWluaVByb3BUd2VlbiA9IGZ1bmN0aW9uKHQsIHAsIHYsIG5leHQsIHIpIHtcblx0XHRcdFx0dGhpcy50ID0gdDtcblx0XHRcdFx0dGhpcy5wID0gcDtcblx0XHRcdFx0dGhpcy52ID0gdjtcblx0XHRcdFx0dGhpcy5yID0gcjtcblx0XHRcdFx0aWYgKG5leHQpIHtcblx0XHRcdFx0XHRuZXh0Ll9wcmV2ID0gdGhpcztcblx0XHRcdFx0XHR0aGlzLl9uZXh0ID0gbmV4dDtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBAcHJpdmF0ZSBNb3N0IG90aGVyIHBsdWdpbnMgKGxpa2UgQmV6aWVyUGx1Z2luIGFuZCBUaHJvd1Byb3BzUGx1Z2luIGFuZCBvdGhlcnMpIGNhbiBvbmx5IHR3ZWVuIG51bWVyaWMgdmFsdWVzLCBidXQgQ1NTUGx1Z2luIG11c3QgYWNjb21tb2RhdGUgc3BlY2lhbCB2YWx1ZXMgdGhhdCBoYXZlIGEgYnVuY2ggb2YgZXh0cmEgZGF0YSAobGlrZSBhIHN1ZmZpeCBvciBzdHJpbmdzIGJldHdlZW4gbnVtZXJpYyB2YWx1ZXMsIGV0Yy4pLiBGb3IgZXhhbXBsZSwgYm94U2hhZG93IGhhcyB2YWx1ZXMgbGlrZSBcIjEwcHggMTBweCAyMHB4IDMwcHggcmdiKDI1NSwwLDApXCIgd2hpY2ggd291bGQgdXR0ZXJseSBjb25mdXNlIG90aGVyIHBsdWdpbnMuIFRoaXMgbWV0aG9kIGFsbG93cyB1cyB0byBzcGxpdCB0aGF0IGRhdGEgYXBhcnQgYW5kIGdyYWIgb25seSB0aGUgbnVtZXJpYyBkYXRhIGFuZCBhdHRhY2ggaXQgdG8gdW5pcXVlbHktbmFtZWQgcHJvcGVydGllcyBvZiBhIGdlbmVyaWMgcHJveHkgb2JqZWN0ICh7fSkgc28gdGhhdCB3ZSBjYW4gZmVlZCB0aGF0IHRvIHZpcnR1YWxseSBhbnkgcGx1Z2luIHRvIGhhdmUgdGhlIG51bWJlcnMgdHdlZW5lZC4gSG93ZXZlciwgd2UgbXVzdCBhbHNvIGtlZXAgdHJhY2sgb2Ygd2hpY2ggcHJvcGVydGllcyBmcm9tIHRoZSBwcm94eSBnbyB3aXRoIHdoaWNoIENTU1Byb3BUd2VlbiB2YWx1ZXMgYW5kIGluc3RhbmNlcy4gU28gd2UgY3JlYXRlIGEgbGlua2VkIGxpc3Qgb2YgTWluaVByb3BUd2VlbnMuIEVhY2ggb25lIHJlY29yZHMgYSB0YXJnZXQgKHRoZSBvcmlnaW5hbCBDU1NQcm9wVHdlZW4pLCBwcm9wZXJ0eSAobGlrZSBcInNcIiBvciBcInhuMVwiIG9yIFwieG4yXCIpIHRoYXQgd2UncmUgdHdlZW5pbmcgYW5kIHRoZSB1bmlxdWUgcHJvcGVydHkgbmFtZSB0aGF0IHdhcyB1c2VkIGZvciB0aGUgcHJveHkgKGxpa2UgXCJib3hTaGFkb3dfeG4xXCIgYW5kIFwiYm94U2hhZG93X3huMlwiKSBhbmQgd2hldGhlciBvciBub3QgdGhleSBuZWVkIHRvIGJlIHJvdW5kZWQuIFRoYXQgd2F5LCBpbiB0aGUgX3NldFBsdWdpblJhdGlvKCkgbWV0aG9kIHdlIGNhbiBzaW1wbHkgY29weSB0aGUgdmFsdWVzIG92ZXIgZnJvbSB0aGUgcHJveHkgdG8gdGhlIENTU1Byb3BUd2VlbiBpbnN0YW5jZShzKS4gVGhlbiwgd2hlbiB0aGUgbWFpbiBDU1NQbHVnaW4gc2V0UmF0aW8oKSBtZXRob2QgcnVucyBhbmQgYXBwbGllcyB0aGUgQ1NTUHJvcFR3ZWVuIHZhbHVlcyBhY2NvcmRpbmdseSwgdGhleSdyZSB1cGRhdGVkIG5pY2VseS4gU28gdGhlIGV4dGVybmFsIHBsdWdpbiB0d2VlbnMgdGhlIG51bWJlcnMsIF9zZXRQbHVnaW5SYXRpbygpIGNvcGllcyB0aGVtIG92ZXIsIGFuZCBzZXRSYXRpbygpIGFjdHMgbm9ybWFsbHksIGFwcGx5aW5nIGNzcy1zcGVjaWZpYyB2YWx1ZXMgdG8gdGhlIGVsZW1lbnQuXG5cdFx0XHQgKiBUaGlzIG1ldGhvZCByZXR1cm5zIGFuIG9iamVjdCB0aGF0IGhhcyB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG5cdFx0XHQgKiAgLSBwcm94eTogYSBnZW5lcmljIG9iamVjdCBjb250YWluaW5nIHRoZSBzdGFydGluZyB2YWx1ZXMgZm9yIGFsbCB0aGUgcHJvcGVydGllcyB0aGF0IHdpbGwgYmUgdHdlZW5lZCBieSB0aGUgZXh0ZXJuYWwgcGx1Z2luLiAgVGhpcyBpcyB3aGF0IHdlIGZlZWQgdG8gdGhlIGV4dGVybmFsIF9vbkluaXRUd2VlbigpIGFzIHRoZSB0YXJnZXRcblx0XHRcdCAqICAtIGVuZDogYSBnZW5lcmljIG9iamVjdCBjb250YWluaW5nIHRoZSBlbmRpbmcgdmFsdWVzIGZvciBhbGwgdGhlIHByb3BlcnRpZXMgdGhhdCB3aWxsIGJlIHR3ZWVuZWQgYnkgdGhlIGV4dGVybmFsIHBsdWdpbi4gVGhpcyBpcyB3aGF0IHdlIGZlZWQgdG8gdGhlIGV4dGVybmFsIHBsdWdpbidzIF9vbkluaXRUd2VlbigpIGFzIHRoZSBkZXN0aW5hdGlvbiB2YWx1ZXNcblx0XHRcdCAqICAtIGZpcnN0TVBUOiB0aGUgZmlyc3QgTWluaVByb3BUd2VlbiBpbiB0aGUgbGlua2VkIGxpc3Rcblx0XHRcdCAqICAtIHB0OiB0aGUgZmlyc3QgQ1NTUHJvcFR3ZWVuIGluIHRoZSBsaW5rZWQgbGlzdCB0aGF0IHdhcyBjcmVhdGVkIHdoZW4gcGFyc2luZy4gSWYgc2hhbGxvdyBpcyB0cnVlLCB0aGlzIGxpbmtlZCBsaXN0IHdpbGwgTk9UIGF0dGFjaCB0byB0aGUgb25lIHBhc3NlZCBpbnRvIHRoZSBfcGFyc2VUb1Byb3h5KCkgYXMgdGhlIFwicHRcIiAoNHRoKSBwYXJhbWV0ZXIuXG5cdFx0XHQgKiBAcGFyYW0geyFPYmplY3R9IHQgdGFyZ2V0IG9iamVjdCB0byBiZSB0d2VlbmVkXG5cdFx0XHQgKiBAcGFyYW0geyEoT2JqZWN0fHN0cmluZyl9IHZhcnMgdGhlIG9iamVjdCBjb250YWluaW5nIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdHdlZW5pbmcgdmFsdWVzICh0eXBpY2FsbHkgdGhlIGVuZC9kZXN0aW5hdGlvbiB2YWx1ZXMpIHRoYXQgc2hvdWxkIGJlIHBhcnNlZFxuXHRcdFx0ICogQHBhcmFtIHshQ1NTUGx1Z2lufSBjc3NwIFRoZSBDU1NQbHVnaW4gaW5zdGFuY2Vcblx0XHRcdCAqIEBwYXJhbSB7Q1NTUHJvcFR3ZWVuPX0gcHQgdGhlIG5leHQgQ1NTUHJvcFR3ZWVuIGluIHRoZSBsaW5rZWQgbGlzdFxuXHRcdFx0ICogQHBhcmFtIHtUd2VlblBsdWdpbj19IHBsdWdpbiB0aGUgZXh0ZXJuYWwgVHdlZW5QbHVnaW4gaW5zdGFuY2UgdGhhdCB3aWxsIGJlIGhhbmRsaW5nIHR3ZWVuaW5nIHRoZSBudW1lcmljIHZhbHVlc1xuXHRcdFx0ICogQHBhcmFtIHtib29sZWFuPX0gc2hhbGxvdyBpZiB0cnVlLCB0aGUgcmVzdWx0aW5nIGxpbmtlZCBsaXN0IGZyb20gdGhlIHBhcnNlIHdpbGwgTk9UIGJlIGF0dGFjaGVkIHRvIHRoZSBDU1NQcm9wVHdlZW4gdGhhdCB3YXMgcGFzc2VkIGluIGFzIHRoZSBcInB0XCIgKDR0aCkgcGFyYW1ldGVyLlxuXHRcdFx0ICogQHJldHVybiBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6IHByb3h5LCBlbmQsIGZpcnN0TVBULCBhbmQgcHQgKHNlZSBhYm92ZSBmb3IgZGVzY3JpcHRpb25zKVxuXHRcdFx0ICovXG5cdFx0XHRfcGFyc2VUb1Byb3h5ID0gX2ludGVybmFscy5fcGFyc2VUb1Byb3h5ID0gZnVuY3Rpb24odCwgdmFycywgY3NzcCwgcHQsIHBsdWdpbiwgc2hhbGxvdykge1xuXHRcdFx0XHR2YXIgYnB0ID0gcHQsXG5cdFx0XHRcdFx0c3RhcnQgPSB7fSxcblx0XHRcdFx0XHRlbmQgPSB7fSxcblx0XHRcdFx0XHR0cmFuc2Zvcm0gPSBjc3NwLl90cmFuc2Zvcm0sXG5cdFx0XHRcdFx0b2xkRm9yY2UgPSBfZm9yY2VQVCxcblx0XHRcdFx0XHRpLCBwLCB4cCwgbXB0LCBmaXJzdFBUO1xuXHRcdFx0XHRjc3NwLl90cmFuc2Zvcm0gPSBudWxsO1xuXHRcdFx0XHRfZm9yY2VQVCA9IHZhcnM7XG5cdFx0XHRcdHB0ID0gZmlyc3RQVCA9IGNzc3AucGFyc2UodCwgdmFycywgcHQsIHBsdWdpbik7XG5cdFx0XHRcdF9mb3JjZVBUID0gb2xkRm9yY2U7XG5cdFx0XHRcdC8vYnJlYWsgb2ZmIGZyb20gdGhlIGxpbmtlZCBsaXN0IHNvIHRoZSBuZXcgb25lcyBhcmUgaXNvbGF0ZWQuXG5cdFx0XHRcdGlmIChzaGFsbG93KSB7XG5cdFx0XHRcdFx0Y3NzcC5fdHJhbnNmb3JtID0gdHJhbnNmb3JtO1xuXHRcdFx0XHRcdGlmIChicHQpIHtcblx0XHRcdFx0XHRcdGJwdC5fcHJldiA9IG51bGw7XG5cdFx0XHRcdFx0XHRpZiAoYnB0Ll9wcmV2KSB7XG5cdFx0XHRcdFx0XHRcdGJwdC5fcHJldi5fbmV4dCA9IG51bGw7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHdoaWxlIChwdCAmJiBwdCAhPT0gYnB0KSB7XG5cdFx0XHRcdFx0aWYgKHB0LnR5cGUgPD0gMSkge1xuXHRcdFx0XHRcdFx0cCA9IHB0LnA7XG5cdFx0XHRcdFx0XHRlbmRbcF0gPSBwdC5zICsgcHQuYztcblx0XHRcdFx0XHRcdHN0YXJ0W3BdID0gcHQucztcblx0XHRcdFx0XHRcdGlmICghc2hhbGxvdykge1xuXHRcdFx0XHRcdFx0XHRtcHQgPSBuZXcgTWluaVByb3BUd2VlbihwdCwgXCJzXCIsIHAsIG1wdCwgcHQucik7XG5cdFx0XHRcdFx0XHRcdHB0LmMgPSAwO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKHB0LnR5cGUgPT09IDEpIHtcblx0XHRcdFx0XHRcdFx0aSA9IHB0Lmw7XG5cdFx0XHRcdFx0XHRcdHdoaWxlICgtLWkgPiAwKSB7XG5cdFx0XHRcdFx0XHRcdFx0eHAgPSBcInhuXCIgKyBpO1xuXHRcdFx0XHRcdFx0XHRcdHAgPSBwdC5wICsgXCJfXCIgKyB4cDtcblx0XHRcdFx0XHRcdFx0XHRlbmRbcF0gPSBwdC5kYXRhW3hwXTtcblx0XHRcdFx0XHRcdFx0XHRzdGFydFtwXSA9IHB0W3hwXTtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIXNoYWxsb3cpIHtcblx0XHRcdFx0XHRcdFx0XHRcdG1wdCA9IG5ldyBNaW5pUHJvcFR3ZWVuKHB0LCB4cCwgcCwgbXB0LCBwdC5yeHBbeHBdKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cHQgPSBwdC5fbmV4dDtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4ge3Byb3h5OnN0YXJ0LCBlbmQ6ZW5kLCBmaXJzdE1QVDptcHQsIHB0OmZpcnN0UFR9O1xuXHRcdFx0fSxcblxuXG5cblx0XHRcdC8qKlxuXHRcdFx0ICogQGNvbnN0cnVjdG9yIEVhY2ggcHJvcGVydHkgdGhhdCBpcyB0d2VlbmVkIGhhcyBhdCBsZWFzdCBvbmUgQ1NTUHJvcFR3ZWVuIGFzc29jaWF0ZWQgd2l0aCBpdC4gVGhlc2UgaW5zdGFuY2VzIHN0b3JlIGltcG9ydGFudCBpbmZvcm1hdGlvbiBsaWtlIHRoZSB0YXJnZXQsIHByb3BlcnR5LCBzdGFydGluZyB2YWx1ZSwgYW1vdW50IG9mIGNoYW5nZSwgZXRjLiBUaGV5IGNhbiBhbHNvIG9wdGlvbmFsbHkgaGF2ZSBhIG51bWJlciBvZiBcImV4dHJhXCIgc3RyaW5ncyBhbmQgbnVtZXJpYyB2YWx1ZXMgbmFtZWQgeHMxLCB4bjEsIHhzMiwgeG4yLCB4czMsIHhuMywgZXRjLiB3aGVyZSBcInNcIiBpbmRpY2F0ZXMgc3RyaW5nIGFuZCBcIm5cIiBpbmRpY2F0ZXMgbnVtYmVyLiBUaGVzZSBjYW4gYmUgcGllY2VkIHRvZ2V0aGVyIGluIGEgY29tcGxleC12YWx1ZSB0d2VlbiAodHlwZToxKSB0aGF0IGhhcyBhbHRlcm5hdGluZyB0eXBlcyBvZiBkYXRhIGxpa2UgYSBzdHJpbmcsIG51bWJlciwgc3RyaW5nLCBudW1iZXIsIGV0Yy4gRm9yIGV4YW1wbGUsIGJveFNoYWRvdyBjb3VsZCBiZSBcIjVweCA1cHggOHB4IHJnYigxMDIsIDEwMiwgNTEpXCIuIEluIHRoYXQgdmFsdWUsIHRoZXJlIGFyZSA2IG51bWJlcnMgdGhhdCBtYXkgbmVlZCB0byB0d2VlbiBhbmQgdGhlbiBwaWVjZWQgYmFjayB0b2dldGhlciBpbnRvIGEgc3RyaW5nIGFnYWluIHdpdGggc3BhY2VzLCBzdWZmaXhlcywgZXRjLiB4czAgaXMgc3BlY2lhbCBpbiB0aGF0IGl0IHN0b3JlcyB0aGUgc3VmZml4IGZvciBzdGFuZGFyZCAodHlwZTowKSB0d2VlbnMsIC1PUi0gdGhlIGZpcnN0IHN0cmluZyAocHJlZml4KSBpbiBhIGNvbXBsZXgtdmFsdWUgKHR5cGU6MSkgQ1NTUHJvcFR3ZWVuIC1PUi0gaXQgY2FuIGJlIHRoZSBub24tdHdlZW5pbmcgdmFsdWUgaW4gYSB0eXBlOi0xIENTU1Byb3BUd2Vlbi4gV2UgZG8gdGhpcyB0byBjb25zZXJ2ZSBtZW1vcnkuXG5cdFx0XHQgKiBDU1NQcm9wVHdlZW5zIGhhdmUgdGhlIGZvbGxvd2luZyBvcHRpb25hbCBwcm9wZXJ0aWVzIGFzIHdlbGwgKG5vdCBkZWZpbmVkIHRocm91Z2ggdGhlIGNvbnN0cnVjdG9yKTpcblx0XHRcdCAqICAtIGw6IExlbmd0aCBpbiB0ZXJtcyBvZiB0aGUgbnVtYmVyIG9mIGV4dHJhIHByb3BlcnRpZXMgdGhhdCB0aGUgQ1NTUHJvcFR3ZWVuIGhhcyAoZGVmYXVsdDogMCkuIEZvciBleGFtcGxlLCBmb3IgYSBib3hTaGFkb3cgd2UgbWF5IG5lZWQgdG8gdHdlZW4gNSBudW1iZXJzIGluIHdoaWNoIGNhc2UgbCB3b3VsZCBiZSA1OyBLZWVwIGluIG1pbmQgdGhhdCB0aGUgc3RhcnQvZW5kIHZhbHVlcyBmb3IgdGhlIGZpcnN0IG51bWJlciB0aGF0J3MgdHdlZW5lZCBhcmUgYWx3YXlzIHN0b3JlZCBpbiB0aGUgcyBhbmQgYyBwcm9wZXJ0aWVzIHRvIGNvbnNlcnZlIG1lbW9yeS4gQWxsIGFkZGl0aW9uYWwgdmFsdWVzIHRoZXJlYWZ0ZXIgYXJlIHN0b3JlZCBpbiB4bjEsIHhuMiwgZXRjLlxuXHRcdFx0ICogIC0geGZpcnN0OiBUaGUgZmlyc3QgaW5zdGFuY2Ugb2YgYW55IHN1Yi1DU1NQcm9wVHdlZW5zIHRoYXQgYXJlIHR3ZWVuaW5nIHByb3BlcnRpZXMgb2YgdGhpcyBpbnN0YW5jZS4gRm9yIGV4YW1wbGUsIHdlIG1heSBzcGxpdCB1cCBhIGJveFNoYWRvdyB0d2VlbiBzbyB0aGF0IHRoZXJlJ3MgYSBtYWluIENTU1Byb3BUd2VlbiBvZiB0eXBlOjEgdGhhdCBoYXMgdmFyaW91cyB4cyogYW5kIHhuKiB2YWx1ZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBoLXNoYWRvdywgdi1zaGFkb3csIGJsdXIsIGNvbG9yLCBldGMuIFRoZW4gd2Ugc3Bhd24gYSBDU1NQcm9wVHdlZW4gZm9yIGVhY2ggb2YgdGhvc2UgdGhhdCBoYXMgYSBoaWdoZXIgcHJpb3JpdHkgYW5kIHJ1bnMgQkVGT1JFIHRoZSBtYWluIENTU1Byb3BUd2VlbiBzbyB0aGF0IHRoZSB2YWx1ZXMgYXJlIGFsbCBzZXQgYnkgdGhlIHRpbWUgaXQgbmVlZHMgdG8gcmUtYXNzZW1ibGUgdGhlbS4gVGhlIHhmaXJzdCBnaXZlcyB1cyBhbiBlYXN5IHdheSB0byBpZGVudGlmeSB0aGUgZmlyc3Qgb25lIGluIHRoYXQgY2hhaW4gd2hpY2ggdHlwaWNhbGx5IGVuZHMgYXQgdGhlIG1haW4gb25lIChiZWNhdXNlIHRoZXkncmUgYWxsIHByZXBlbmRlIHRvIHRoZSBsaW5rZWQgbGlzdClcblx0XHRcdCAqICAtIHBsdWdpbjogVGhlIFR3ZWVuUGx1Z2luIGluc3RhbmNlIHRoYXQgd2lsbCBoYW5kbGUgdGhlIHR3ZWVuaW5nIG9mIGFueSBjb21wbGV4IHZhbHVlcy4gRm9yIGV4YW1wbGUsIHNvbWV0aW1lcyB3ZSBkb24ndCB3YW50IHRvIHVzZSBub3JtYWwgc3VidHdlZW5zIChsaWtlIHhmaXJzdCByZWZlcnMgdG8pIHRvIHR3ZWVuIHRoZSB2YWx1ZXMgLSB3ZSBtaWdodCB3YW50IFRocm93UHJvcHNQbHVnaW4gb3IgQmV6aWVyUGx1Z2luIHNvbWUgb3RoZXIgcGx1Z2luIHRvIGRvIHRoZSBhY3R1YWwgdHdlZW5pbmcsIHNvIHdlIGNyZWF0ZSBhIHBsdWdpbiBpbnN0YW5jZSBhbmQgc3RvcmUgYSByZWZlcmVuY2UgaGVyZS4gV2UgbmVlZCB0aGlzIHJlZmVyZW5jZSBzbyB0aGF0IGlmIHdlIGdldCBhIHJlcXVlc3QgdG8gcm91bmQgdmFsdWVzIG9yIGRpc2FibGUgYSB0d2Vlbiwgd2UgY2FuIHBhc3MgYWxvbmcgdGhhdCByZXF1ZXN0LlxuXHRcdFx0ICogIC0gZGF0YTogQXJiaXRyYXJ5IGRhdGEgdGhhdCBuZWVkcyB0byBiZSBzdG9yZWQgd2l0aCB0aGUgQ1NTUHJvcFR3ZWVuLiBUeXBpY2FsbHkgaWYgd2UncmUgZ29pbmcgdG8gaGF2ZSBhIHBsdWdpbiBoYW5kbGUgdGhlIHR3ZWVuaW5nIG9mIGEgY29tcGxleC12YWx1ZSB0d2Vlbiwgd2UgY3JlYXRlIGEgZ2VuZXJpYyBvYmplY3QgdGhhdCBzdG9yZXMgdGhlIEVORCB2YWx1ZXMgdGhhdCB3ZSdyZSB0d2VlbmluZyB0byBhbmQgdGhlIENTU1Byb3BUd2VlbidzIHhzMSwgeHMyLCBldGMuIGhhdmUgdGhlIHN0YXJ0aW5nIHZhbHVlcy4gV2Ugc3RvcmUgdGhhdCBvYmplY3QgYXMgZGF0YS4gVGhhdCB3YXksIHdlIGNhbiBzaW1wbHkgcGFzcyB0aGF0IG9iamVjdCB0byB0aGUgcGx1Z2luIGFuZCB1c2UgdGhlIENTU1Byb3BUd2VlbiBhcyB0aGUgdGFyZ2V0LlxuXHRcdFx0ICogIC0gc2V0UmF0aW86IE9ubHkgdXNlZCBmb3IgdHlwZToyIHR3ZWVucyB0aGF0IHJlcXVpcmUgY3VzdG9tIGZ1bmN0aW9uYWxpdHkuIEluIHRoaXMgY2FzZSwgd2UgY2FsbCB0aGUgQ1NTUHJvcFR3ZWVuJ3Mgc2V0UmF0aW8oKSBtZXRob2QgYW5kIHBhc3MgdGhlIHJhdGlvIGVhY2ggdGltZSB0aGUgdHdlZW4gdXBkYXRlcy4gVGhpcyBpc24ndCBxdWl0ZSBhcyBlZmZpY2llbnQgYXMgZG9pbmcgdGhpbmdzIGRpcmVjdGx5IGluIHRoZSBDU1NQbHVnaW4ncyBzZXRSYXRpbygpIG1ldGhvZCwgYnV0IGl0J3MgdmVyeSBjb252ZW5pZW50IGFuZCBmbGV4aWJsZS5cblx0XHRcdCAqIEBwYXJhbSB7IU9iamVjdH0gdCBUYXJnZXQgb2JqZWN0IHdob3NlIHByb3BlcnR5IHdpbGwgYmUgdHdlZW5lZC4gT2Z0ZW4gYSBET00gZWxlbWVudCwgYnV0IG5vdCBhbHdheXMuIEl0IGNvdWxkIGJlIGFueXRoaW5nLlxuXHRcdFx0ICogQHBhcmFtIHtzdHJpbmd9IHAgUHJvcGVydHkgdG8gdHdlZW4gKG5hbWUpLiBGb3IgZXhhbXBsZSwgdG8gdHdlZW4gZWxlbWVudC53aWR0aCwgcCB3b3VsZCBiZSBcIndpZHRoXCIuXG5cdFx0XHQgKiBAcGFyYW0ge251bWJlcn0gcyBTdGFydGluZyBudW1lcmljIHZhbHVlXG5cdFx0XHQgKiBAcGFyYW0ge251bWJlcn0gYyBDaGFuZ2UgaW4gbnVtZXJpYyB2YWx1ZSBvdmVyIHRoZSBjb3Vyc2Ugb2YgdGhlIGVudGlyZSB0d2Vlbi4gRm9yIGV4YW1wbGUsIGlmIGVsZW1lbnQud2lkdGggc3RhcnRzIGF0IDUgYW5kIHNob3VsZCBlbmQgYXQgMTAwLCBjIHdvdWxkIGJlIDk1LlxuXHRcdFx0ICogQHBhcmFtIHtDU1NQcm9wVHdlZW49fSBuZXh0IFRoZSBuZXh0IENTU1Byb3BUd2VlbiBpbiB0aGUgbGlua2VkIGxpc3QuIElmIG9uZSBpcyBkZWZpbmVkLCB3ZSB3aWxsIGRlZmluZSBpdHMgX3ByZXYgYXMgdGhlIG5ldyBpbnN0YW5jZSwgYW5kIHRoZSBuZXcgaW5zdGFuY2UncyBfbmV4dCB3aWxsIGJlIHBvaW50ZWQgYXQgaXQuXG5cdFx0XHQgKiBAcGFyYW0ge251bWJlcj19IHR5cGUgVGhlIHR5cGUgb2YgQ1NTUHJvcFR3ZWVuIHdoZXJlIC0xID0gYSBub24tdHdlZW5pbmcgdmFsdWUsIDAgPSBhIHN0YW5kYXJkIHNpbXBsZSB0d2VlbiwgMSA9IGEgY29tcGxleCB2YWx1ZSAobGlrZSBvbmUgdGhhdCBoYXMgbXVsdGlwbGUgbnVtYmVycyBpbiBhIGNvbW1hLSBvciBzcGFjZS1kZWxpbWl0ZWQgc3RyaW5nIGxpa2UgYm9yZGVyOlwiMXB4IHNvbGlkIHJlZFwiKSwgYW5kIDIgPSBvbmUgdGhhdCB1c2VzIGEgY3VzdG9tIHNldFJhdGlvIGZ1bmN0aW9uIHRoYXQgZG9lcyBhbGwgb2YgdGhlIHdvcmsgb2YgYXBwbHlpbmcgdGhlIHZhbHVlcyBvbiBlYWNoIHVwZGF0ZS5cblx0XHRcdCAqIEBwYXJhbSB7c3RyaW5nPX0gbiBOYW1lIG9mIHRoZSBwcm9wZXJ0eSB0aGF0IHNob3VsZCBiZSB1c2VkIGZvciBvdmVyd3JpdGluZyBwdXJwb3NlcyB3aGljaCBpcyB0eXBpY2FsbHkgdGhlIHNhbWUgYXMgcCBidXQgbm90IGFsd2F5cy4gRm9yIGV4YW1wbGUsIHdlIG1heSBuZWVkIHRvIGNyZWF0ZSBhIHN1YnR3ZWVuIGZvciB0aGUgMm5kIHBhcnQgb2YgYSBcImNsaXA6cmVjdCguLi4pXCIgdHdlZW4gaW4gd2hpY2ggY2FzZSBcInBcIiBtaWdodCBiZSB4czEgYnV0IFwiblwiIGlzIHN0aWxsIFwiY2xpcFwiXG5cdFx0XHQgKiBAcGFyYW0ge2Jvb2xlYW49fSByIElmIHRydWUsIHRoZSB2YWx1ZShzKSBzaG91bGQgYmUgcm91bmRlZFxuXHRcdFx0ICogQHBhcmFtIHtudW1iZXI9fSBwciBQcmlvcml0eSBpbiB0aGUgbGlua2VkIGxpc3Qgb3JkZXIuIEhpZ2hlciBwcmlvcml0eSBDU1NQcm9wVHdlZW5zIHdpbGwgYmUgdXBkYXRlZCBiZWZvcmUgbG93ZXIgcHJpb3JpdHkgb25lcy4gVGhlIGRlZmF1bHQgcHJpb3JpdHkgaXMgMC5cblx0XHRcdCAqIEBwYXJhbSB7c3RyaW5nPX0gYiBCZWdpbm5pbmcgdmFsdWUuIFdlIHN0b3JlIHRoaXMgdG8gZW5zdXJlIHRoYXQgaXQgaXMgRVhBQ1RMWSB3aGF0IGl0IHdhcyB3aGVuIHRoZSB0d2VlbiBiZWdhbiB3aXRob3V0IGFueSByaXNrIG9mIGludGVycHJldGF0aW9uIGlzc3Vlcy5cblx0XHRcdCAqIEBwYXJhbSB7c3RyaW5nPX0gZSBFbmRpbmcgdmFsdWUuIFdlIHN0b3JlIHRoaXMgdG8gZW5zdXJlIHRoYXQgaXQgaXMgRVhBQ1RMWSB3aGF0IHRoZSB1c2VyIGRlZmluZWQgYXQgdGhlIGVuZCBvZiB0aGUgdHdlZW4gd2l0aG91dCBhbnkgcmlzayBvZiBpbnRlcnByZXRhdGlvbiBpc3N1ZXMuXG5cdFx0XHQgKi9cblx0XHRcdENTU1Byb3BUd2VlbiA9IF9pbnRlcm5hbHMuQ1NTUHJvcFR3ZWVuID0gZnVuY3Rpb24odCwgcCwgcywgYywgbmV4dCwgdHlwZSwgbiwgciwgcHIsIGIsIGUpIHtcblx0XHRcdFx0dGhpcy50ID0gdDsgLy90YXJnZXRcblx0XHRcdFx0dGhpcy5wID0gcDsgLy9wcm9wZXJ0eVxuXHRcdFx0XHR0aGlzLnMgPSBzOyAvL3N0YXJ0aW5nIHZhbHVlXG5cdFx0XHRcdHRoaXMuYyA9IGM7IC8vY2hhbmdlIHZhbHVlXG5cdFx0XHRcdHRoaXMubiA9IG4gfHwgcDsgLy9uYW1lIHRoYXQgdGhpcyBDU1NQcm9wVHdlZW4gc2hvdWxkIGJlIGFzc29jaWF0ZWQgdG8gKHVzdWFsbHkgdGhlIHNhbWUgYXMgcCwgYnV0IG5vdCBhbHdheXMgLSBuIGlzIHdoYXQgb3ZlcndyaXRpbmcgbG9va3MgYXQpXG5cdFx0XHRcdGlmICghKHQgaW5zdGFuY2VvZiBDU1NQcm9wVHdlZW4pKSB7XG5cdFx0XHRcdFx0X292ZXJ3cml0ZVByb3BzLnB1c2godGhpcy5uKTtcblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLnIgPSByOyAvL3JvdW5kIChib29sZWFuKVxuXHRcdFx0XHR0aGlzLnR5cGUgPSB0eXBlIHx8IDA7IC8vMCA9IG5vcm1hbCB0d2VlbiwgLTEgPSBub24tdHdlZW5pbmcgKGluIHdoaWNoIGNhc2UgeHMwIHdpbGwgYmUgYXBwbGllZCB0byB0aGUgdGFyZ2V0J3MgcHJvcGVydHksIGxpa2UgdHAudFt0cC5wXSA9IHRwLnhzMCksIDEgPSBjb21wbGV4LXZhbHVlIFNwZWNpYWxQcm9wLCAyID0gY3VzdG9tIHNldFJhdGlvKCkgdGhhdCBkb2VzIGFsbCB0aGUgd29ya1xuXHRcdFx0XHRpZiAocHIpIHtcblx0XHRcdFx0XHR0aGlzLnByID0gcHI7XG5cdFx0XHRcdFx0X2hhc1ByaW9yaXR5ID0gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLmIgPSAoYiA9PT0gdW5kZWZpbmVkKSA/IHMgOiBiO1xuXHRcdFx0XHR0aGlzLmUgPSAoZSA9PT0gdW5kZWZpbmVkKSA/IHMgKyBjIDogZTtcblx0XHRcdFx0aWYgKG5leHQpIHtcblx0XHRcdFx0XHR0aGlzLl9uZXh0ID0gbmV4dDtcblx0XHRcdFx0XHRuZXh0Ll9wcmV2ID0gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0X2FkZE5vblR3ZWVuaW5nTnVtZXJpY1BUID0gZnVuY3Rpb24odGFyZ2V0LCBwcm9wLCBzdGFydCwgZW5kLCBuZXh0LCBvdmVyd3JpdGVQcm9wKSB7IC8vY2xlYW5zIHVwIHNvbWUgY29kZSByZWR1bmRhbmNpZXMgYW5kIGhlbHBzIG1pbmlmaWNhdGlvbi4gSnVzdCBhIGZhc3Qgd2F5IHRvIGFkZCBhIE5VTUVSSUMgbm9uLXR3ZWVuaW5nIENTU1Byb3BUd2VlblxuXHRcdFx0XHR2YXIgcHQgPSBuZXcgQ1NTUHJvcFR3ZWVuKHRhcmdldCwgcHJvcCwgc3RhcnQsIGVuZCAtIHN0YXJ0LCBuZXh0LCAtMSwgb3ZlcndyaXRlUHJvcCk7XG5cdFx0XHRcdHB0LmIgPSBzdGFydDtcblx0XHRcdFx0cHQuZSA9IHB0LnhzMCA9IGVuZDtcblx0XHRcdFx0cmV0dXJuIHB0O1xuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBUYWtlcyBhIHRhcmdldCwgdGhlIGJlZ2lubmluZyB2YWx1ZSBhbmQgZW5kaW5nIHZhbHVlIChhcyBzdHJpbmdzKSBhbmQgcGFyc2VzIHRoZW0gaW50byBhIENTU1Byb3BUd2VlbiAocG9zc2libHkgd2l0aCBjaGlsZCBDU1NQcm9wVHdlZW5zKSB0aGF0IGFjY29tbW9kYXRlcyBtdWx0aXBsZSBudW1iZXJzLCBjb2xvcnMsIGNvbW1hLWRlbGltaXRlZCB2YWx1ZXMsIGV0Yy4gRm9yIGV4YW1wbGU6XG5cdFx0XHQgKiBzcC5wYXJzZUNvbXBsZXgoZWxlbWVudCwgXCJib3hTaGFkb3dcIiwgXCI1cHggMTBweCAyMHB4IHJnYigyNTUsMTAyLDUxKVwiLCBcIjBweCAwcHggMHB4IHJlZFwiLCB0cnVlLCBcIjBweCAwcHggMHB4IHJnYigwLDAsMCwwKVwiLCBwdCk7XG5cdFx0XHQgKiBJdCB3aWxsIHdhbGsgdGhyb3VnaCB0aGUgYmVnaW5uaW5nIGFuZCBlbmRpbmcgdmFsdWVzICh3aGljaCBzaG91bGQgYmUgaW4gdGhlIHNhbWUgZm9ybWF0IHdpdGggdGhlIHNhbWUgbnVtYmVyIGFuZCB0eXBlIG9mIHZhbHVlcykgYW5kIGZpZ3VyZSBvdXQgd2hpY2ggcGFydHMgYXJlIG51bWJlcnMsIHdoYXQgc3RyaW5ncyBzZXBhcmF0ZSB0aGUgbnVtZXJpYy90d2VlbmFibGUgdmFsdWVzLCBhbmQgdGhlbiBjcmVhdGUgdGhlIENTU1Byb3BUd2VlbnMgYWNjb3JkaW5nbHkuIElmIGEgcGx1Z2luIGlzIGRlZmluZWQsIG5vIGNoaWxkIENTU1Byb3BUd2VlbnMgd2lsbCBiZSBjcmVhdGVkLiBJbnN0ZWFkLCB0aGUgZW5kaW5nIHZhbHVlcyB3aWxsIGJlIHN0b3JlZCBpbiB0aGUgXCJkYXRhXCIgcHJvcGVydHkgb2YgdGhlIHJldHVybmVkIENTU1Byb3BUd2VlbiBsaWtlOiB7czotNSwgeG4xOi0xMCwgeG4yOi0yMCwgeG4zOjI1NSwgeG40OjAsIHhuNTowfSBzbyB0aGF0IGl0IGNhbiBiZSBmZWQgdG8gYW55IG90aGVyIHBsdWdpbiBhbmQgaXQnbGwgYmUgcGxhaW4gbnVtZXJpYyB0d2VlbnMgYnV0IHRoZSByZWNvbXBvc2l0aW9uIG9mIHRoZSBjb21wbGV4IHZhbHVlIHdpbGwgYmUgaGFuZGxlZCBpbnNpZGUgQ1NTUGx1Z2luJ3Mgc2V0UmF0aW8oKS5cblx0XHRcdCAqIElmIGEgc2V0UmF0aW8gaXMgZGVmaW5lZCwgdGhlIHR5cGUgb2YgdGhlIENTU1Byb3BUd2VlbiB3aWxsIGJlIHNldCB0byAyIGFuZCByZWNvbXBvc2l0aW9uIG9mIHRoZSB2YWx1ZXMgd2lsbCBiZSB0aGUgcmVzcG9uc2liaWxpdHkgb2YgdGhhdCBtZXRob2QuXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHshT2JqZWN0fSB0IFRhcmdldCB3aG9zZSBwcm9wZXJ0eSB3aWxsIGJlIHR3ZWVuZWRcblx0XHRcdCAqIEBwYXJhbSB7IXN0cmluZ30gcCBQcm9wZXJ0eSB0aGF0IHdpbGwgYmUgdHdlZW5lZCAoaXRzIG5hbWUsIGxpa2UgXCJsZWZ0XCIgb3IgXCJiYWNrZ3JvdW5kQ29sb3JcIiBvciBcImJveFNoYWRvd1wiKVxuXHRcdFx0ICogQHBhcmFtIHtzdHJpbmd9IGIgQmVnaW5uaW5nIHZhbHVlXG5cdFx0XHQgKiBAcGFyYW0ge3N0cmluZ30gZSBFbmRpbmcgdmFsdWVcblx0XHRcdCAqIEBwYXJhbSB7Ym9vbGVhbn0gY2xycyBJZiB0cnVlLCB0aGUgdmFsdWUgY291bGQgY29udGFpbiBhIGNvbG9yIHZhbHVlIGxpa2UgXCJyZ2IoMjU1LDAsMClcIiBvciBcIiNGMDBcIiBvciBcInJlZFwiLiBUaGUgZGVmYXVsdCBpcyBmYWxzZSwgc28gbm8gY29sb3JzIHdpbGwgYmUgcmVjb2duaXplZCAoYSBwZXJmb3JtYW5jZSBvcHRpbWl6YXRpb24pXG5cdFx0XHQgKiBAcGFyYW0geyhzdHJpbmd8bnVtYmVyfE9iamVjdCl9IGRmbHQgVGhlIGRlZmF1bHQgYmVnaW5uaW5nIHZhbHVlIHRoYXQgc2hvdWxkIGJlIHVzZWQgaWYgbm8gdmFsaWQgYmVnaW5uaW5nIHZhbHVlIGlzIGRlZmluZWQgb3IgaWYgdGhlIG51bWJlciBvZiB2YWx1ZXMgaW5zaWRlIHRoZSBjb21wbGV4IGJlZ2lubmluZyBhbmQgZW5kaW5nIHZhbHVlcyBkb24ndCBtYXRjaFxuXHRcdFx0ICogQHBhcmFtIHs/Q1NTUHJvcFR3ZWVufSBwdCBDU1NQcm9wVHdlZW4gaW5zdGFuY2UgdGhhdCBpcyB0aGUgY3VycmVudCBoZWFkIG9mIHRoZSBsaW5rZWQgbGlzdCAod2UnbGwgcHJlcGVuZCB0byB0aGlzKS5cblx0XHRcdCAqIEBwYXJhbSB7bnVtYmVyPX0gcHIgUHJpb3JpdHkgaW4gdGhlIGxpbmtlZCBsaXN0IG9yZGVyLiBIaWdoZXIgcHJpb3JpdHkgcHJvcGVydGllcyB3aWxsIGJlIHVwZGF0ZWQgYmVmb3JlIGxvd2VyIHByaW9yaXR5IG9uZXMuIFRoZSBkZWZhdWx0IHByaW9yaXR5IGlzIDAuXG5cdFx0XHQgKiBAcGFyYW0ge1R3ZWVuUGx1Z2luPX0gcGx1Z2luIElmIGEgcGx1Z2luIHNob3VsZCBoYW5kbGUgdGhlIHR3ZWVuaW5nIG9mIGV4dHJhIHByb3BlcnRpZXMsIHBhc3MgdGhlIHBsdWdpbiBpbnN0YW5jZSBoZXJlLiBJZiBvbmUgaXMgZGVmaW5lZCwgdGhlbiBOTyBzdWJ0d2VlbnMgd2lsbCBiZSBjcmVhdGVkIGZvciBhbnkgZXh0cmEgcHJvcGVydGllcyAodGhlIHByb3BlcnRpZXMgd2lsbCBiZSBjcmVhdGVkIC0ganVzdCBub3QgYWRkaXRpb25hbCBDU1NQcm9wVHdlZW4gaW5zdGFuY2VzIHRvIHR3ZWVuIHRoZW0pIGJlY2F1c2UgdGhlIHBsdWdpbiBpcyBleHBlY3RlZCB0byBkbyBzby4gSG93ZXZlciwgdGhlIGVuZCB2YWx1ZXMgV0lMTCBiZSBwb3B1bGF0ZWQgaW4gdGhlIFwiZGF0YVwiIHByb3BlcnR5LCBsaWtlIHtzOjEwMCwgeG4xOjUwLCB4bjI6MzAwfVxuXHRcdFx0ICogQHBhcmFtIHtmdW5jdGlvbihudW1iZXIpPX0gc2V0UmF0aW8gSWYgdmFsdWVzIHNob3VsZCBiZSBzZXQgaW4gYSBjdXN0b20gZnVuY3Rpb24gaW5zdGVhZCBvZiBiZWluZyBwaWVjZWQgdG9nZXRoZXIgaW4gYSB0eXBlOjEgKGNvbXBsZXgtdmFsdWUpIENTU1Byb3BUd2VlbiwgZGVmaW5lIHRoYXQgY3VzdG9tIGZ1bmN0aW9uIGhlcmUuXG5cdFx0XHQgKiBAcmV0dXJuIHtDU1NQcm9wVHdlZW59IFRoZSBmaXJzdCBDU1NQcm9wVHdlZW4gaW4gdGhlIGxpbmtlZCBsaXN0IHdoaWNoIGluY2x1ZGVzIHRoZSBuZXcgb25lKHMpIGFkZGVkIGJ5IHRoZSBwYXJzZUNvbXBsZXgoKSBjYWxsLlxuXHRcdFx0ICovXG5cdFx0XHRfcGFyc2VDb21wbGV4ID0gQ1NTUGx1Z2luLnBhcnNlQ29tcGxleCA9IGZ1bmN0aW9uKHQsIHAsIGIsIGUsIGNscnMsIGRmbHQsIHB0LCBwciwgcGx1Z2luLCBzZXRSYXRpbykge1xuXHRcdFx0XHQvL0RFQlVHOiBfbG9nKFwicGFyc2VDb21wbGV4OiBcIitwK1wiLCBiOiBcIitiK1wiLCBlOiBcIitlKTtcblx0XHRcdFx0YiA9IGIgfHwgZGZsdCB8fCBcIlwiO1xuXHRcdFx0XHRpZiAodHlwZW9mKGUpID09PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdFx0XHRlID0gZShfaW5kZXgsIF90YXJnZXQpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHB0ID0gbmV3IENTU1Byb3BUd2Vlbih0LCBwLCAwLCAwLCBwdCwgKHNldFJhdGlvID8gMiA6IDEpLCBudWxsLCBmYWxzZSwgcHIsIGIsIGUpO1xuXHRcdFx0XHRlICs9IFwiXCI7IC8vZW5zdXJlcyBpdCdzIGEgc3RyaW5nXG5cdFx0XHRcdGlmIChjbHJzICYmIF9jb2xvckV4cC50ZXN0KGUgKyBiKSkgeyAvL2lmIGNvbG9ycyBhcmUgZm91bmQsIG5vcm1hbGl6ZSB0aGUgZm9ybWF0dGluZyB0byByZ2JhKCkgb3IgaHNsYSgpLlxuXHRcdFx0XHRcdGUgPSBbYiwgZV07XG5cdFx0XHRcdFx0Q1NTUGx1Z2luLmNvbG9yU3RyaW5nRmlsdGVyKGUpO1xuXHRcdFx0XHRcdGIgPSBlWzBdO1xuXHRcdFx0XHRcdGUgPSBlWzFdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHZhciBiYSA9IGIuc3BsaXQoXCIsIFwiKS5qb2luKFwiLFwiKS5zcGxpdChcIiBcIiksIC8vYmVnaW5uaW5nIGFycmF5XG5cdFx0XHRcdFx0ZWEgPSBlLnNwbGl0KFwiLCBcIikuam9pbihcIixcIikuc3BsaXQoXCIgXCIpLCAvL2VuZGluZyBhcnJheVxuXHRcdFx0XHRcdGwgPSBiYS5sZW5ndGgsXG5cdFx0XHRcdFx0YXV0b1JvdW5kID0gKF9hdXRvUm91bmQgIT09IGZhbHNlKSxcblx0XHRcdFx0XHRpLCB4aSwgbmksIGJ2LCBldiwgYm51bXMsIGVudW1zLCBibiwgaGFzQWxwaGEsIHRlbXAsIGN2LCBzdHIsIHVzZUhTTDtcblx0XHRcdFx0aWYgKGUuaW5kZXhPZihcIixcIikgIT09IC0xIHx8IGIuaW5kZXhPZihcIixcIikgIT09IC0xKSB7XG5cdFx0XHRcdFx0YmEgPSBiYS5qb2luKFwiIFwiKS5yZXBsYWNlKF9jb21tYXNPdXRzaWRlUGFyZW5FeHAsIFwiLCBcIikuc3BsaXQoXCIgXCIpO1xuXHRcdFx0XHRcdGVhID0gZWEuam9pbihcIiBcIikucmVwbGFjZShfY29tbWFzT3V0c2lkZVBhcmVuRXhwLCBcIiwgXCIpLnNwbGl0KFwiIFwiKTtcblx0XHRcdFx0XHRsID0gYmEubGVuZ3RoO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChsICE9PSBlYS5sZW5ndGgpIHtcblx0XHRcdFx0XHQvL0RFQlVHOiBfbG9nKFwibWlzbWF0Y2hlZCBmb3JtYXR0aW5nIGRldGVjdGVkIG9uIFwiICsgcCArIFwiIChcIiArIGIgKyBcIiB2cyBcIiArIGUgKyBcIilcIik7XG5cdFx0XHRcdFx0YmEgPSAoZGZsdCB8fCBcIlwiKS5zcGxpdChcIiBcIik7XG5cdFx0XHRcdFx0bCA9IGJhLmxlbmd0aDtcblx0XHRcdFx0fVxuXHRcdFx0XHRwdC5wbHVnaW4gPSBwbHVnaW47XG5cdFx0XHRcdHB0LnNldFJhdGlvID0gc2V0UmF0aW87XG5cdFx0XHRcdF9jb2xvckV4cC5sYXN0SW5kZXggPSAwO1xuXHRcdFx0XHRmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRcdFx0YnYgPSBiYVtpXTtcblx0XHRcdFx0XHRldiA9IGVhW2ldO1xuXHRcdFx0XHRcdGJuID0gcGFyc2VGbG9hdChidik7XG5cdFx0XHRcdFx0Ly9pZiB0aGUgdmFsdWUgYmVnaW5zIHdpdGggYSBudW1iZXIgKG1vc3QgY29tbW9uKS4gSXQncyBmaW5lIGlmIGl0IGhhcyBhIHN1ZmZpeCBsaWtlIHB4XG5cdFx0XHRcdFx0aWYgKGJuIHx8IGJuID09PSAwKSB7XG5cdFx0XHRcdFx0XHRwdC5hcHBlbmRYdHJhKFwiXCIsIGJuLCBfcGFyc2VDaGFuZ2UoZXYsIGJuKSwgZXYucmVwbGFjZShfcmVsTnVtRXhwLCBcIlwiKSwgKGF1dG9Sb3VuZCAmJiBldi5pbmRleE9mKFwicHhcIikgIT09IC0xKSwgdHJ1ZSk7XG5cblx0XHRcdFx0XHQvL2lmIHRoZSB2YWx1ZSBpcyBhIGNvbG9yXG5cdFx0XHRcdFx0fSBlbHNlIGlmIChjbHJzICYmIF9jb2xvckV4cC50ZXN0KGJ2KSkge1xuXHRcdFx0XHRcdFx0c3RyID0gZXYuaW5kZXhPZihcIilcIikgKyAxO1xuXHRcdFx0XHRcdFx0c3RyID0gXCIpXCIgKyAoc3RyID8gZXYuc3Vic3RyKHN0cikgOiBcIlwiKTsgLy9pZiB0aGVyZSdzIGEgY29tbWEgb3IgKSBhdCB0aGUgZW5kLCByZXRhaW4gaXQuXG5cdFx0XHRcdFx0XHR1c2VIU0wgPSAoZXYuaW5kZXhPZihcImhzbFwiKSAhPT0gLTEgJiYgX3N1cHBvcnRzT3BhY2l0eSk7XG5cdFx0XHRcdFx0XHRidiA9IF9wYXJzZUNvbG9yKGJ2LCB1c2VIU0wpO1xuXHRcdFx0XHRcdFx0ZXYgPSBfcGFyc2VDb2xvcihldiwgdXNlSFNMKTtcblx0XHRcdFx0XHRcdGhhc0FscGhhID0gKGJ2Lmxlbmd0aCArIGV2Lmxlbmd0aCA+IDYpO1xuXHRcdFx0XHRcdFx0aWYgKGhhc0FscGhhICYmICFfc3VwcG9ydHNPcGFjaXR5ICYmIGV2WzNdID09PSAwKSB7IC8vb2xkZXIgdmVyc2lvbnMgb2YgSUUgZG9uJ3Qgc3VwcG9ydCByZ2JhKCksIHNvIGlmIHRoZSBkZXN0aW5hdGlvbiBhbHBoYSBpcyAwLCBqdXN0IHVzZSBcInRyYW5zcGFyZW50XCIgZm9yIHRoZSBlbmQgY29sb3Jcblx0XHRcdFx0XHRcdFx0cHRbXCJ4c1wiICsgcHQubF0gKz0gcHQubCA/IFwiIHRyYW5zcGFyZW50XCIgOiBcInRyYW5zcGFyZW50XCI7XG5cdFx0XHRcdFx0XHRcdHB0LmUgPSBwdC5lLnNwbGl0KGVhW2ldKS5qb2luKFwidHJhbnNwYXJlbnRcIik7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRpZiAoIV9zdXBwb3J0c09wYWNpdHkpIHsgLy9vbGQgdmVyc2lvbnMgb2YgSUUgZG9uJ3Qgc3VwcG9ydCByZ2JhKCkuXG5cdFx0XHRcdFx0XHRcdFx0aGFzQWxwaGEgPSBmYWxzZTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRpZiAodXNlSFNMKSB7XG5cdFx0XHRcdFx0XHRcdFx0cHQuYXBwZW5kWHRyYSgoaGFzQWxwaGEgPyBcImhzbGEoXCIgOiBcImhzbChcIiksIGJ2WzBdLCBfcGFyc2VDaGFuZ2UoZXZbMF0sIGJ2WzBdKSwgXCIsXCIsIGZhbHNlLCB0cnVlKVxuXHRcdFx0XHRcdFx0XHRcdFx0LmFwcGVuZFh0cmEoXCJcIiwgYnZbMV0sIF9wYXJzZUNoYW5nZShldlsxXSwgYnZbMV0pLCBcIiUsXCIsIGZhbHNlKVxuXHRcdFx0XHRcdFx0XHRcdFx0LmFwcGVuZFh0cmEoXCJcIiwgYnZbMl0sIF9wYXJzZUNoYW5nZShldlsyXSwgYnZbMl0pLCAoaGFzQWxwaGEgPyBcIiUsXCIgOiBcIiVcIiArIHN0ciksIGZhbHNlKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRwdC5hcHBlbmRYdHJhKChoYXNBbHBoYSA/IFwicmdiYShcIiA6IFwicmdiKFwiKSwgYnZbMF0sIGV2WzBdIC0gYnZbMF0sIFwiLFwiLCB0cnVlLCB0cnVlKVxuXHRcdFx0XHRcdFx0XHRcdFx0LmFwcGVuZFh0cmEoXCJcIiwgYnZbMV0sIGV2WzFdIC0gYnZbMV0sIFwiLFwiLCB0cnVlKVxuXHRcdFx0XHRcdFx0XHRcdFx0LmFwcGVuZFh0cmEoXCJcIiwgYnZbMl0sIGV2WzJdIC0gYnZbMl0sIChoYXNBbHBoYSA/IFwiLFwiIDogc3RyKSwgdHJ1ZSk7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRpZiAoaGFzQWxwaGEpIHtcblx0XHRcdFx0XHRcdFx0XHRidiA9IChidi5sZW5ndGggPCA0KSA/IDEgOiBidlszXTtcblx0XHRcdFx0XHRcdFx0XHRwdC5hcHBlbmRYdHJhKFwiXCIsIGJ2LCAoKGV2Lmxlbmd0aCA8IDQpID8gMSA6IGV2WzNdKSAtIGJ2LCBzdHIsIGZhbHNlKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0X2NvbG9yRXhwLmxhc3RJbmRleCA9IDA7IC8vb3RoZXJ3aXNlIHRoZSB0ZXN0KCkgb24gdGhlIFJlZ0V4cCBjb3VsZCBtb3ZlIHRoZSBsYXN0SW5kZXggYW5kIHRhaW50IGZ1dHVyZSByZXN1bHRzLlxuXG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGJudW1zID0gYnYubWF0Y2goX251bUV4cCk7IC8vZ2V0cyBlYWNoIGdyb3VwIG9mIG51bWJlcnMgaW4gdGhlIGJlZ2lubmluZyB2YWx1ZSBzdHJpbmcgYW5kIGRyb3BzIHRoZW0gaW50byBhbiBhcnJheVxuXG5cdFx0XHRcdFx0XHQvL2lmIG5vIG51bWJlciBpcyBmb3VuZCwgdHJlYXQgaXQgYXMgYSBub24tdHdlZW5pbmcgdmFsdWUgYW5kIGp1c3QgYXBwZW5kIHRoZSBzdHJpbmcgdG8gdGhlIGN1cnJlbnQgeHMuXG5cdFx0XHRcdFx0XHRpZiAoIWJudW1zKSB7XG5cdFx0XHRcdFx0XHRcdHB0W1wieHNcIiArIHB0LmxdICs9IChwdC5sIHx8IHB0W1wieHNcIiArIHB0LmxdKSA/IFwiIFwiICsgZXYgOiBldjtcblxuXHRcdFx0XHRcdFx0Ly9sb29wIHRocm91Z2ggYWxsIHRoZSBudW1iZXJzIHRoYXQgYXJlIGZvdW5kIGFuZCBjb25zdHJ1Y3QgdGhlIGV4dHJhIHZhbHVlcyBvbiB0aGUgcHQuXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRlbnVtcyA9IGV2Lm1hdGNoKF9yZWxOdW1FeHApOyAvL2dldCBlYWNoIGdyb3VwIG9mIG51bWJlcnMgaW4gdGhlIGVuZCB2YWx1ZSBzdHJpbmcgYW5kIGRyb3AgdGhlbSBpbnRvIGFuIGFycmF5LiBXZSBhbGxvdyByZWxhdGl2ZSB2YWx1ZXMgdG9vLCBsaWtlICs9NTAgb3IgLT0uNVxuXHRcdFx0XHRcdFx0XHRpZiAoIWVudW1zIHx8IGVudW1zLmxlbmd0aCAhPT0gYm51bXMubGVuZ3RoKSB7XG5cdFx0XHRcdFx0XHRcdFx0Ly9ERUJVRzogX2xvZyhcIm1pc21hdGNoZWQgZm9ybWF0dGluZyBkZXRlY3RlZCBvbiBcIiArIHAgKyBcIiAoXCIgKyBiICsgXCIgdnMgXCIgKyBlICsgXCIpXCIpO1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiBwdDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRuaSA9IDA7XG5cdFx0XHRcdFx0XHRcdGZvciAoeGkgPSAwOyB4aSA8IGJudW1zLmxlbmd0aDsgeGkrKykge1xuXHRcdFx0XHRcdFx0XHRcdGN2ID0gYm51bXNbeGldO1xuXHRcdFx0XHRcdFx0XHRcdHRlbXAgPSBidi5pbmRleE9mKGN2LCBuaSk7XG5cdFx0XHRcdFx0XHRcdFx0cHQuYXBwZW5kWHRyYShidi5zdWJzdHIobmksIHRlbXAgLSBuaSksIE51bWJlcihjdiksIF9wYXJzZUNoYW5nZShlbnVtc1t4aV0sIGN2KSwgXCJcIiwgKGF1dG9Sb3VuZCAmJiBidi5zdWJzdHIodGVtcCArIGN2Lmxlbmd0aCwgMikgPT09IFwicHhcIiksICh4aSA9PT0gMCkpO1xuXHRcdFx0XHRcdFx0XHRcdG5pID0gdGVtcCArIGN2Lmxlbmd0aDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRwdFtcInhzXCIgKyBwdC5sXSArPSBidi5zdWJzdHIobmkpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHQvL2lmIHRoZXJlIGFyZSByZWxhdGl2ZSB2YWx1ZXMgKFwiKz1cIiBvciBcIi09XCIgcHJlZml4KSwgd2UgbmVlZCB0byBhZGp1c3QgdGhlIGVuZGluZyB2YWx1ZSB0byBlbGltaW5hdGUgdGhlIHByZWZpeGVzIGFuZCBjb21iaW5lIHRoZSB2YWx1ZXMgcHJvcGVybHkuXG5cdFx0XHRcdGlmIChlLmluZGV4T2YoXCI9XCIpICE9PSAtMSkgaWYgKHB0LmRhdGEpIHtcblx0XHRcdFx0XHRzdHIgPSBwdC54czAgKyBwdC5kYXRhLnM7XG5cdFx0XHRcdFx0Zm9yIChpID0gMTsgaSA8IHB0Lmw7IGkrKykge1xuXHRcdFx0XHRcdFx0c3RyICs9IHB0W1wieHNcIiArIGldICsgcHQuZGF0YVtcInhuXCIgKyBpXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cHQuZSA9IHN0ciArIHB0W1wieHNcIiArIGldO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICghcHQubCkge1xuXHRcdFx0XHRcdHB0LnR5cGUgPSAtMTtcblx0XHRcdFx0XHRwdC54czAgPSBwdC5lO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBwdC54Zmlyc3QgfHwgcHQ7XG5cdFx0XHR9LFxuXHRcdFx0aSA9IDk7XG5cblxuXHRcdHAgPSBDU1NQcm9wVHdlZW4ucHJvdG90eXBlO1xuXHRcdHAubCA9IHAucHIgPSAwOyAvL2xlbmd0aCAobnVtYmVyIG9mIGV4dHJhIHByb3BlcnRpZXMgbGlrZSB4bjEsIHhuMiwgeG4zLCBldGMuXG5cdFx0d2hpbGUgKC0taSA+IDApIHtcblx0XHRcdHBbXCJ4blwiICsgaV0gPSAwO1xuXHRcdFx0cFtcInhzXCIgKyBpXSA9IFwiXCI7XG5cdFx0fVxuXHRcdHAueHMwID0gXCJcIjtcblx0XHRwLl9uZXh0ID0gcC5fcHJldiA9IHAueGZpcnN0ID0gcC5kYXRhID0gcC5wbHVnaW4gPSBwLnNldFJhdGlvID0gcC5yeHAgPSBudWxsO1xuXG5cblx0XHQvKipcblx0XHQgKiBBcHBlbmRzIGFuZCBleHRyYSB0d2VlbmluZyB2YWx1ZSB0byBhIENTU1Byb3BUd2VlbiBhbmQgYXV0b21hdGljYWxseSBtYW5hZ2VzIGFueSBwcmVmaXggYW5kIHN1ZmZpeCBzdHJpbmdzLiBUaGUgZmlyc3QgZXh0cmEgdmFsdWUgaXMgc3RvcmVkIGluIHRoZSBzIGFuZCBjIG9mIHRoZSBtYWluIENTU1Byb3BUd2VlbiBpbnN0YW5jZSwgYnV0IHRoZXJlYWZ0ZXIgYW55IGV4dHJhcyBhcmUgc3RvcmVkIGluIHRoZSB4bjEsIHhuMiwgeG4zLCBldGMuIFRoZSBwcmVmaXhlcyBhbmQgc3VmZml4ZXMgYXJlIHN0b3JlZCBpbiB0aGUgeHMwLCB4czEsIHhzMiwgZXRjLiBwcm9wZXJ0aWVzLiBGb3IgZXhhbXBsZSwgaWYgSSB3YWxrIHRocm91Z2ggYSBjbGlwIHZhbHVlIGxpa2UgXCJyZWN0KDEwcHgsIDVweCwgMHB4LCAyMHB4KVwiLCB0aGUgdmFsdWVzIHdvdWxkIGJlIHN0b3JlZCBsaWtlIHRoaXM6XG5cdFx0ICogeHMwOlwicmVjdChcIiwgczoxMCwgeHMxOlwicHgsIFwiLCB4bjE6NSwgeHMyOlwicHgsIFwiLCB4bjI6MCwgeHMzOlwicHgsIFwiLCB4bjM6MjAsIHhuNDpcInB4KVwiXG5cdFx0ICogQW5kIHRoZXknZCBhbGwgZ2V0IGpvaW5lZCB0b2dldGhlciB3aGVuIHRoZSBDU1NQbHVnaW4gcmVuZGVycyAoaW4gdGhlIHNldFJhdGlvKCkgbWV0aG9kKS5cblx0XHQgKiBAcGFyYW0ge3N0cmluZz19IHBmeCBQcmVmaXggKGlmIGFueSlcblx0XHQgKiBAcGFyYW0geyFudW1iZXJ9IHMgU3RhcnRpbmcgdmFsdWVcblx0XHQgKiBAcGFyYW0geyFudW1iZXJ9IGMgQ2hhbmdlIGluIG51bWVyaWMgdmFsdWUgb3ZlciB0aGUgY291cnNlIG9mIHRoZSBlbnRpcmUgdHdlZW4uIEZvciBleGFtcGxlLCBpZiB0aGUgc3RhcnQgaXMgNSBhbmQgdGhlIGVuZCBpcyAxMDAsIHRoZSBjaGFuZ2Ugd291bGQgYmUgOTUuXG5cdFx0ICogQHBhcmFtIHtzdHJpbmc9fSBzZnggU3VmZml4IChpZiBhbnkpXG5cdFx0ICogQHBhcmFtIHtib29sZWFuPX0gciBSb3VuZCAoaWYgdHJ1ZSkuXG5cdFx0ICogQHBhcmFtIHtib29sZWFuPX0gcGFkIElmIHRydWUsIHRoaXMgZXh0cmEgdmFsdWUgc2hvdWxkIGJlIHNlcGFyYXRlZCBieSB0aGUgcHJldmlvdXMgb25lIGJ5IGEgc3BhY2UuIElmIHRoZXJlIGlzIG5vIHByZXZpb3VzIGV4dHJhIGFuZCBwYWQgaXMgdHJ1ZSwgaXQgd2lsbCBhdXRvbWF0aWNhbGx5IGRyb3AgdGhlIHNwYWNlLlxuXHRcdCAqIEByZXR1cm4ge0NTU1Byb3BUd2Vlbn0gcmV0dXJucyBpdHNlbGYgc28gdGhhdCBtdWx0aXBsZSBtZXRob2RzIGNhbiBiZSBjaGFpbmVkIHRvZ2V0aGVyLlxuXHRcdCAqL1xuXHRcdHAuYXBwZW5kWHRyYSA9IGZ1bmN0aW9uKHBmeCwgcywgYywgc2Z4LCByLCBwYWQpIHtcblx0XHRcdHZhciBwdCA9IHRoaXMsXG5cdFx0XHRcdGwgPSBwdC5sO1xuXHRcdFx0cHRbXCJ4c1wiICsgbF0gKz0gKHBhZCAmJiAobCB8fCBwdFtcInhzXCIgKyBsXSkpID8gXCIgXCIgKyBwZnggOiBwZnggfHwgXCJcIjtcblx0XHRcdGlmICghYykgaWYgKGwgIT09IDAgJiYgIXB0LnBsdWdpbikgeyAvL3R5cGljYWxseSB3ZSdsbCBjb21iaW5lIG5vbi1jaGFuZ2luZyB2YWx1ZXMgcmlnaHQgaW50byB0aGUgeHMgdG8gb3B0aW1pemUgcGVyZm9ybWFuY2UsIGJ1dCB3ZSBkb24ndCBjb21iaW5lIHRoZW0gd2hlbiB0aGVyZSdzIGEgcGx1Z2luIHRoYXQgd2lsbCBiZSB0d2VlbmluZyB0aGUgdmFsdWVzIGJlY2F1c2UgaXQgbWF5IGRlcGVuZCBvbiB0aGUgdmFsdWVzIGJlaW5nIHNwbGl0IGFwYXJ0LCBsaWtlIGZvciBhIGJlemllciwgaWYgYSB2YWx1ZSBkb2Vzbid0IGNoYW5nZSBiZXR3ZWVuIHRoZSBmaXJzdCBhbmQgc2Vjb25kIGl0ZXJhdGlvbiBidXQgdGhlbiBpdCBkb2VzIG9uIHRoZSAzcmQsIHdlJ2xsIHJ1biBpbnRvIHRyb3VibGUgYmVjYXVzZSB0aGVyZSdzIG5vIHhuIHNsb3QgZm9yIHRoYXQgdmFsdWUhXG5cdFx0XHRcdHB0W1wieHNcIiArIGxdICs9IHMgKyAoc2Z4IHx8IFwiXCIpO1xuXHRcdFx0XHRyZXR1cm4gcHQ7XG5cdFx0XHR9XG5cdFx0XHRwdC5sKys7XG5cdFx0XHRwdC50eXBlID0gcHQuc2V0UmF0aW8gPyAyIDogMTtcblx0XHRcdHB0W1wieHNcIiArIHB0LmxdID0gc2Z4IHx8IFwiXCI7XG5cdFx0XHRpZiAobCA+IDApIHtcblx0XHRcdFx0cHQuZGF0YVtcInhuXCIgKyBsXSA9IHMgKyBjO1xuXHRcdFx0XHRwdC5yeHBbXCJ4blwiICsgbF0gPSByOyAvL3JvdW5kIGV4dHJhIHByb3BlcnR5ICh3ZSBuZWVkIHRvIHRhcCBpbnRvIHRoaXMgaW4gdGhlIF9wYXJzZVRvUHJveHkoKSBtZXRob2QpXG5cdFx0XHRcdHB0W1wieG5cIiArIGxdID0gcztcblx0XHRcdFx0aWYgKCFwdC5wbHVnaW4pIHtcblx0XHRcdFx0XHRwdC54Zmlyc3QgPSBuZXcgQ1NTUHJvcFR3ZWVuKHB0LCBcInhuXCIgKyBsLCBzLCBjLCBwdC54Zmlyc3QgfHwgcHQsIDAsIHB0Lm4sIHIsIHB0LnByKTtcblx0XHRcdFx0XHRwdC54Zmlyc3QueHMwID0gMDsgLy9qdXN0IHRvIGVuc3VyZSB0aGF0IHRoZSBwcm9wZXJ0eSBzdGF5cyBudW1lcmljIHdoaWNoIGhlbHBzIG1vZGVybiBicm93c2VycyBzcGVlZCB1cCBwcm9jZXNzaW5nLiBSZW1lbWJlciwgaW4gdGhlIHNldFJhdGlvKCkgbWV0aG9kLCB3ZSBkbyBwdC50W3B0LnBdID0gdmFsICsgcHQueHMwIHNvIGlmIHB0LnhzMCBpcyBcIlwiICh0aGUgZGVmYXVsdCksIGl0J2xsIGNhc3QgdGhlIGVuZCB2YWx1ZSBhcyBhIHN0cmluZy4gV2hlbiBhIHByb3BlcnR5IGlzIGEgbnVtYmVyIHNvbWV0aW1lcyBhbmQgYSBzdHJpbmcgc29tZXRpbWVzLCBpdCBwcmV2ZW50cyB0aGUgY29tcGlsZXIgZnJvbSBsb2NraW5nIGluIHRoZSBkYXRhIHR5cGUsIHNsb3dpbmcgdGhpbmdzIGRvd24gc2xpZ2h0bHkuXG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHB0O1xuXHRcdFx0fVxuXHRcdFx0cHQuZGF0YSA9IHtzOnMgKyBjfTtcblx0XHRcdHB0LnJ4cCA9IHt9O1xuXHRcdFx0cHQucyA9IHM7XG5cdFx0XHRwdC5jID0gYztcblx0XHRcdHB0LnIgPSByO1xuXHRcdFx0cmV0dXJuIHB0O1xuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBAY29uc3RydWN0b3IgQSBTcGVjaWFsUHJvcCBpcyBiYXNpY2FsbHkgYSBjc3MgcHJvcGVydHkgdGhhdCBuZWVkcyB0byBiZSB0cmVhdGVkIGluIGEgbm9uLXN0YW5kYXJkIHdheSwgbGlrZSBpZiBpdCBtYXkgY29udGFpbiBhIGNvbXBsZXggdmFsdWUgbGlrZSBib3hTaGFkb3c6XCI1cHggMTBweCAxNXB4IHJnYigyNTUsIDEwMiwgNTEpXCIgb3IgaWYgaXQgaXMgYXNzb2NpYXRlZCB3aXRoIGFub3RoZXIgcGx1Z2luIGxpa2UgVGhyb3dQcm9wc1BsdWdpbiBvciBCZXppZXJQbHVnaW4uIEV2ZXJ5IFNwZWNpYWxQcm9wIGlzIGFzc29jaWF0ZWQgd2l0aCBhIHBhcnRpY3VsYXIgcHJvcGVydHkgbmFtZSBsaWtlIFwiYm94U2hhZG93XCIgb3IgXCJ0aHJvd1Byb3BzXCIgb3IgXCJiZXppZXJcIiBhbmQgaXQgd2lsbCBpbnRlcmNlcHQgdGhvc2UgdmFsdWVzIGluIHRoZSB2YXJzIG9iamVjdCB0aGF0J3MgcGFzc2VkIHRvIHRoZSBDU1NQbHVnaW4gYW5kIGhhbmRsZSB0aGVtIGFjY29yZGluZ2x5LlxuXHRcdCAqIEBwYXJhbSB7IXN0cmluZ30gcCBQcm9wZXJ0eSBuYW1lIChsaWtlIFwiYm94U2hhZG93XCIgb3IgXCJ0aHJvd1Byb3BzXCIpXG5cdFx0ICogQHBhcmFtIHtPYmplY3Q9fSBvcHRpb25zIEFuIG9iamVjdCBjb250YWluaW5nIGFueSBvZiB0aGUgZm9sbG93aW5nIGNvbmZpZ3VyYXRpb24gb3B0aW9uczpcblx0XHQgKiAgICAgICAgICAgICAgICAgICAgICAtIGRlZmF1bHRWYWx1ZTogdGhlIGRlZmF1bHQgdmFsdWVcblx0XHQgKiAgICAgICAgICAgICAgICAgICAgICAtIHBhcnNlcjogQSBmdW5jdGlvbiB0aGF0IHNob3VsZCBiZSBjYWxsZWQgd2hlbiB0aGUgYXNzb2NpYXRlZCBwcm9wZXJ0eSBuYW1lIGlzIGZvdW5kIGluIHRoZSB2YXJzLiBUaGlzIGZ1bmN0aW9uIHNob3VsZCByZXR1cm4gYSBDU1NQcm9wVHdlZW4gaW5zdGFuY2UgYW5kIGl0IHNob3VsZCBlbnN1cmUgdGhhdCBpdCBpcyBwcm9wZXJseSBpbnNlcnRlZCBpbnRvIHRoZSBsaW5rZWQgbGlzdC4gSXQgd2lsbCByZWNlaXZlIDQgcGFyYW10ZXJzOiAxKSBUaGUgdGFyZ2V0LCAyKSBUaGUgdmFsdWUgZGVmaW5lZCBpbiB0aGUgdmFycywgMykgVGhlIENTU1BsdWdpbiBpbnN0YW5jZSAod2hvc2UgX2ZpcnN0UFQgc2hvdWxkIGJlIHVzZWQgZm9yIHRoZSBsaW5rZWQgbGlzdCksIGFuZCA0KSBBIGNvbXB1dGVkIHN0eWxlIG9iamVjdCBpZiBvbmUgd2FzIGNhbGN1bGF0ZWQgKHRoaXMgaXMgYSBzcGVlZCBvcHRpbWl6YXRpb24gdGhhdCBhbGxvd3MgcmV0cmlldmFsIG9mIHN0YXJ0aW5nIHZhbHVlcyBxdWlja2VyKVxuXHRcdCAqICAgICAgICAgICAgICAgICAgICAgIC0gZm9ybWF0dGVyOiBhIGZ1bmN0aW9uIHRoYXQgZm9ybWF0cyBhbnkgdmFsdWUgcmVjZWl2ZWQgZm9yIHRoaXMgc3BlY2lhbCBwcm9wZXJ0eSAoZm9yIGV4YW1wbGUsIGJveFNoYWRvdyBjb3VsZCB0YWtlIFwiNXB4IDVweCByZWRcIiBhbmQgZm9ybWF0IGl0IHRvIFwiNXB4IDVweCAwcHggMHB4IHJlZFwiIHNvIHRoYXQgYm90aCB0aGUgYmVnaW5uaW5nIGFuZCBlbmRpbmcgdmFsdWVzIGhhdmUgYSBjb21tb24gb3JkZXIgYW5kIHF1YW50aXR5IG9mIHZhbHVlcy4pXG5cdFx0ICogICAgICAgICAgICAgICAgICAgICAgLSBwcmVmaXg6IGlmIHRydWUsIHdlJ2xsIGRldGVybWluZSB3aGV0aGVyIG9yIG5vdCB0aGlzIHByb3BlcnR5IHJlcXVpcmVzIGEgdmVuZG9yIHByZWZpeCAobGlrZSBXZWJraXQgb3IgTW96IG9yIG1zIG9yIE8pXG5cdFx0ICogICAgICAgICAgICAgICAgICAgICAgLSBjb2xvcjogc2V0IHRoaXMgdG8gdHJ1ZSBpZiB0aGUgdmFsdWUgZm9yIHRoaXMgU3BlY2lhbFByb3AgbWF5IGNvbnRhaW4gY29sb3ItcmVsYXRlZCB2YWx1ZXMgbGlrZSByZ2IoKSwgcmdiYSgpLCBldGMuXG5cdFx0ICogICAgICAgICAgICAgICAgICAgICAgLSBwcmlvcml0eTogcHJpb3JpdHkgaW4gdGhlIGxpbmtlZCBsaXN0IG9yZGVyLiBIaWdoZXIgcHJpb3JpdHkgU3BlY2lhbFByb3BzIHdpbGwgYmUgdXBkYXRlZCBiZWZvcmUgbG93ZXIgcHJpb3JpdHkgb25lcy4gVGhlIGRlZmF1bHQgcHJpb3JpdHkgaXMgMC5cblx0XHQgKiAgICAgICAgICAgICAgICAgICAgICAtIG11bHRpOiBpZiB0cnVlLCB0aGUgZm9ybWF0dGVyIHNob3VsZCBhY2NvbW1vZGF0ZSBhIGNvbW1hLWRlbGltaXRlZCBsaXN0IG9mIHZhbHVlcywgbGlrZSBib3hTaGFkb3cgY291bGQgaGF2ZSBtdWx0aXBsZSBib3hTaGFkb3dzIGxpc3RlZCBvdXQuXG5cdFx0ICogICAgICAgICAgICAgICAgICAgICAgLSBjb2xsYXBzaWJsZTogaWYgdHJ1ZSwgdGhlIGZvcm1hdHRlciBzaG91bGQgdHJlYXQgdGhlIHZhbHVlIGxpa2UgaXQncyBhIHRvcC9yaWdodC9ib3R0b20vbGVmdCB2YWx1ZSB0aGF0IGNvdWxkIGJlIGNvbGxhcHNlZCwgbGlrZSBcIjVweFwiIHdvdWxkIGFwcGx5IHRvIGFsbCwgXCI1cHgsIDEwcHhcIiB3b3VsZCB1c2UgNXB4IGZvciB0b3AvYm90dG9tIGFuZCAxMHB4IGZvciByaWdodC9sZWZ0LCBldGMuXG5cdFx0ICogICAgICAgICAgICAgICAgICAgICAgLSBrZXl3b3JkOiBhIHNwZWNpYWwga2V5d29yZCB0aGF0IGNhbiBbb3B0aW9uYWxseV0gYmUgZm91bmQgaW5zaWRlIHRoZSB2YWx1ZSAobGlrZSBcImluc2V0XCIgZm9yIGJveFNoYWRvdykuIFRoaXMgYWxsb3dzIHVzIHRvIHZhbGlkYXRlIGJlZ2lubmluZy9lbmRpbmcgdmFsdWVzIHRvIG1ha2Ugc3VyZSB0aGV5IG1hdGNoIChpZiB0aGUga2V5d29yZCBpcyBmb3VuZCBpbiBvbmUsIGl0J2xsIGJlIGFkZGVkIHRvIHRoZSBvdGhlciBmb3IgY29uc2lzdGVuY3kgYnkgZGVmYXVsdCkuXG5cdFx0ICovXG5cdFx0dmFyIFNwZWNpYWxQcm9wID0gZnVuY3Rpb24ocCwgb3B0aW9ucykge1xuXHRcdFx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblx0XHRcdFx0dGhpcy5wID0gb3B0aW9ucy5wcmVmaXggPyBfY2hlY2tQcm9wUHJlZml4KHApIHx8IHAgOiBwO1xuXHRcdFx0XHRfc3BlY2lhbFByb3BzW3BdID0gX3NwZWNpYWxQcm9wc1t0aGlzLnBdID0gdGhpcztcblx0XHRcdFx0dGhpcy5mb3JtYXQgPSBvcHRpb25zLmZvcm1hdHRlciB8fCBfZ2V0Rm9ybWF0dGVyKG9wdGlvbnMuZGVmYXVsdFZhbHVlLCBvcHRpb25zLmNvbG9yLCBvcHRpb25zLmNvbGxhcHNpYmxlLCBvcHRpb25zLm11bHRpKTtcblx0XHRcdFx0aWYgKG9wdGlvbnMucGFyc2VyKSB7XG5cdFx0XHRcdFx0dGhpcy5wYXJzZSA9IG9wdGlvbnMucGFyc2VyO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuY2xycyA9IG9wdGlvbnMuY29sb3I7XG5cdFx0XHRcdHRoaXMubXVsdGkgPSBvcHRpb25zLm11bHRpO1xuXHRcdFx0XHR0aGlzLmtleXdvcmQgPSBvcHRpb25zLmtleXdvcmQ7XG5cdFx0XHRcdHRoaXMuZGZsdCA9IG9wdGlvbnMuZGVmYXVsdFZhbHVlO1xuXHRcdFx0XHR0aGlzLnByID0gb3B0aW9ucy5wcmlvcml0eSB8fCAwO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly9zaG9ydGN1dCBmb3IgY3JlYXRpbmcgYSBuZXcgU3BlY2lhbFByb3AgdGhhdCBjYW4gYWNjZXB0IG11bHRpcGxlIHByb3BlcnRpZXMgYXMgYSBjb21tYS1kZWxpbWl0ZWQgbGlzdCAoaGVscHMgbWluaWZpY2F0aW9uKS4gZGZsdCBjYW4gYmUgYW4gYXJyYXkgZm9yIG11bHRpcGxlIHZhbHVlcyAod2UgZG9uJ3QgZG8gYSBjb21tYS1kZWxpbWl0ZWQgbGlzdCBiZWNhdXNlIHRoZSBkZWZhdWx0IHZhbHVlIG1heSBjb250YWluIGNvbW1hcywgbGlrZSByZWN0KDBweCwwcHgsMHB4LDBweCkpLiBXZSBhdHRhY2ggdGhpcyBtZXRob2QgdG8gdGhlIFNwZWNpYWxQcm9wIGNsYXNzL29iamVjdCBpbnN0ZWFkIG9mIHVzaW5nIGEgcHJpdmF0ZSBfY3JlYXRlU3BlY2lhbFByb3AoKSBtZXRob2Qgc28gdGhhdCB3ZSBjYW4gdGFwIGludG8gaXQgZXh0ZXJuYWxseSBpZiBuZWNlc3NhcnksIGxpa2UgZnJvbSBhbm90aGVyIHBsdWdpbi5cblx0XHRcdF9yZWdpc3RlckNvbXBsZXhTcGVjaWFsUHJvcCA9IF9pbnRlcm5hbHMuX3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wID0gZnVuY3Rpb24ocCwgb3B0aW9ucywgZGVmYXVsdHMpIHtcblx0XHRcdFx0aWYgKHR5cGVvZihvcHRpb25zKSAhPT0gXCJvYmplY3RcIikge1xuXHRcdFx0XHRcdG9wdGlvbnMgPSB7cGFyc2VyOmRlZmF1bHRzfTsgLy90byBtYWtlIGJhY2t3YXJkcyBjb21wYXRpYmxlIHdpdGggb2xkZXIgdmVyc2lvbnMgb2YgQmV6aWVyUGx1Z2luIGFuZCBUaHJvd1Byb3BzUGx1Z2luXG5cdFx0XHRcdH1cblx0XHRcdFx0dmFyIGEgPSBwLnNwbGl0KFwiLFwiKSxcblx0XHRcdFx0XHRkID0gb3B0aW9ucy5kZWZhdWx0VmFsdWUsXG5cdFx0XHRcdFx0aSwgdGVtcDtcblx0XHRcdFx0ZGVmYXVsdHMgPSBkZWZhdWx0cyB8fCBbZF07XG5cdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0b3B0aW9ucy5wcmVmaXggPSAoaSA9PT0gMCAmJiBvcHRpb25zLnByZWZpeCk7XG5cdFx0XHRcdFx0b3B0aW9ucy5kZWZhdWx0VmFsdWUgPSBkZWZhdWx0c1tpXSB8fCBkO1xuXHRcdFx0XHRcdHRlbXAgPSBuZXcgU3BlY2lhbFByb3AoYVtpXSwgb3B0aW9ucyk7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cblx0XHRcdC8vY3JlYXRlcyBhIHBsYWNlaG9sZGVyIHNwZWNpYWwgcHJvcCBmb3IgYSBwbHVnaW4gc28gdGhhdCB0aGUgcHJvcGVydHkgZ2V0cyBjYXVnaHQgdGhlIGZpcnN0IHRpbWUgYSB0d2VlbiBvZiBpdCBpcyBhdHRlbXB0ZWQsIGFuZCBhdCB0aGF0IHRpbWUgaXQgbWFrZXMgdGhlIHBsdWdpbiByZWdpc3RlciBpdHNlbGYsIHRodXMgdGFraW5nIG92ZXIgZm9yIGFsbCBmdXR1cmUgdHdlZW5zIG9mIHRoYXQgcHJvcGVydHkuIFRoaXMgYWxsb3dzIHVzIHRvIG5vdCBtYW5kYXRlIHRoYXQgdGhpbmdzIGxvYWQgaW4gYSBwYXJ0aWN1bGFyIG9yZGVyIGFuZCBpdCBhbHNvIGFsbG93cyB1cyB0byBsb2coKSBhbiBlcnJvciB0aGF0IGluZm9ybXMgdGhlIHVzZXIgd2hlbiB0aGV5IGF0dGVtcHQgdG8gdHdlZW4gYW4gZXh0ZXJuYWwgcGx1Z2luLXJlbGF0ZWQgcHJvcGVydHkgd2l0aG91dCBsb2FkaW5nIGl0cyAuanMgZmlsZS5cblx0XHRcdF9yZWdpc3RlclBsdWdpblByb3AgPSBfaW50ZXJuYWxzLl9yZWdpc3RlclBsdWdpblByb3AgPSBmdW5jdGlvbihwKSB7XG5cdFx0XHRcdGlmICghX3NwZWNpYWxQcm9wc1twXSkge1xuXHRcdFx0XHRcdHZhciBwbHVnaW5OYW1lID0gcC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHAuc3Vic3RyKDEpICsgXCJQbHVnaW5cIjtcblx0XHRcdFx0XHRfcmVnaXN0ZXJDb21wbGV4U3BlY2lhbFByb3AocCwge3BhcnNlcjpmdW5jdGlvbih0LCBlLCBwLCBjc3NwLCBwdCwgcGx1Z2luLCB2YXJzKSB7XG5cdFx0XHRcdFx0XHR2YXIgcGx1Z2luQ2xhc3MgPSBfZ2xvYmFscy5jb20uZ3JlZW5zb2NrLnBsdWdpbnNbcGx1Z2luTmFtZV07XG5cdFx0XHRcdFx0XHRpZiAoIXBsdWdpbkNsYXNzKSB7XG5cdFx0XHRcdFx0XHRcdF9sb2coXCJFcnJvcjogXCIgKyBwbHVnaW5OYW1lICsgXCIganMgZmlsZSBub3QgbG9hZGVkLlwiKTtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHB0O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0cGx1Z2luQ2xhc3MuX2Nzc1JlZ2lzdGVyKCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gX3NwZWNpYWxQcm9wc1twXS5wYXJzZSh0LCBlLCBwLCBjc3NwLCBwdCwgcGx1Z2luLCB2YXJzKTtcblx0XHRcdFx0XHR9fSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblxuXHRcdHAgPSBTcGVjaWFsUHJvcC5wcm90b3R5cGU7XG5cblx0XHQvKipcblx0XHQgKiBBbGlhcyBmb3IgX3BhcnNlQ29tcGxleCgpIHRoYXQgYXV0b21hdGljYWxseSBwbHVncyBpbiBjZXJ0YWluIHZhbHVlcyBmb3IgdGhpcyBTcGVjaWFsUHJvcCwgbGlrZSBpdHMgcHJvcGVydHkgbmFtZSwgd2hldGhlciBvciBub3QgY29sb3JzIHNob3VsZCBiZSBzZW5zZWQsIHRoZSBkZWZhdWx0IHZhbHVlLCBhbmQgcHJpb3JpdHkuIEl0IGFsc28gbG9va3MgZm9yIGFueSBrZXl3b3JkIHRoYXQgdGhlIFNwZWNpYWxQcm9wIGRlZmluZXMgKGxpa2UgXCJpbnNldFwiIGZvciBib3hTaGFkb3cpIGFuZCBlbnN1cmVzIHRoYXQgdGhlIGJlZ2lubmluZyBhbmQgZW5kaW5nIHZhbHVlcyBoYXZlIHRoZSBzYW1lIG51bWJlciBvZiB2YWx1ZXMgZm9yIFNwZWNpYWxQcm9wcyB3aGVyZSBtdWx0aSBpcyB0cnVlIChsaWtlIGJveFNoYWRvdyBhbmQgdGV4dFNoYWRvdyBjYW4gaGF2ZSBhIGNvbW1hLWRlbGltaXRlZCBsaXN0KVxuXHRcdCAqIEBwYXJhbSB7IU9iamVjdH0gdCB0YXJnZXQgZWxlbWVudFxuXHRcdCAqIEBwYXJhbSB7KHN0cmluZ3xudW1iZXJ8b2JqZWN0KX0gYiBiZWdpbm5pbmcgdmFsdWVcblx0XHQgKiBAcGFyYW0geyhzdHJpbmd8bnVtYmVyfG9iamVjdCl9IGUgZW5kaW5nIChkZXN0aW5hdGlvbikgdmFsdWVcblx0XHQgKiBAcGFyYW0ge0NTU1Byb3BUd2Vlbj19IHB0IG5leHQgQ1NTUHJvcFR3ZWVuIGluIHRoZSBsaW5rZWQgbGlzdFxuXHRcdCAqIEBwYXJhbSB7VHdlZW5QbHVnaW49fSBwbHVnaW4gSWYgYW5vdGhlciBwbHVnaW4gd2lsbCBiZSB0d2VlbmluZyB0aGUgY29tcGxleCB2YWx1ZSwgdGhhdCBUd2VlblBsdWdpbiBpbnN0YW5jZSBnb2VzIGhlcmUuXG5cdFx0ICogQHBhcmFtIHtmdW5jdGlvbj19IHNldFJhdGlvIElmIGEgY3VzdG9tIHNldFJhdGlvKCkgbWV0aG9kIHNob3VsZCBiZSB1c2VkIHRvIGhhbmRsZSB0aGlzIGNvbXBsZXggdmFsdWUsIHRoYXQgZ29lcyBoZXJlLlxuXHRcdCAqIEByZXR1cm4ge0NTU1Byb3BUd2Vlbj19IEZpcnN0IENTU1Byb3BUd2VlbiBpbiB0aGUgbGlua2VkIGxpc3Rcblx0XHQgKi9cblx0XHRwLnBhcnNlQ29tcGxleCA9IGZ1bmN0aW9uKHQsIGIsIGUsIHB0LCBwbHVnaW4sIHNldFJhdGlvKSB7XG5cdFx0XHR2YXIga3dkID0gdGhpcy5rZXl3b3JkLFxuXHRcdFx0XHRpLCBiYSwgZWEsIGwsIGJpLCBlaTtcblx0XHRcdC8vaWYgdGhpcyBTcGVjaWFsUHJvcCdzIHZhbHVlIGNhbiBjb250YWluIGEgY29tbWEtZGVsaW1pdGVkIGxpc3Qgb2YgdmFsdWVzIChsaWtlIGJveFNoYWRvdyBvciB0ZXh0U2hhZG93KSwgd2UgbXVzdCBwYXJzZSB0aGVtIGluIGEgc3BlY2lhbCB3YXksIGFuZCBsb29rIGZvciBhIGtleXdvcmQgKGxpa2UgXCJpbnNldFwiIGZvciBib3hTaGFkb3cpIGFuZCBlbnN1cmUgdGhhdCB0aGUgYmVnaW5uaW5nIGFuZCBlbmRpbmcgQk9USCBoYXZlIGl0IGlmIHRoZSBlbmQgZGVmaW5lcyBpdCBhcyBzdWNoLiBXZSBhbHNvIG11c3QgZW5zdXJlIHRoYXQgdGhlcmUgYXJlIGFuIGVxdWFsIG51bWJlciBvZiB2YWx1ZXMgc3BlY2lmaWVkICh3ZSBjYW4ndCB0d2VlbiAxIGJveFNoYWRvdyB0byAzIGZvciBleGFtcGxlKVxuXHRcdFx0aWYgKHRoaXMubXVsdGkpIGlmIChfY29tbWFzT3V0c2lkZVBhcmVuRXhwLnRlc3QoZSkgfHwgX2NvbW1hc091dHNpZGVQYXJlbkV4cC50ZXN0KGIpKSB7XG5cdFx0XHRcdGJhID0gYi5yZXBsYWNlKF9jb21tYXNPdXRzaWRlUGFyZW5FeHAsIFwifFwiKS5zcGxpdChcInxcIik7XG5cdFx0XHRcdGVhID0gZS5yZXBsYWNlKF9jb21tYXNPdXRzaWRlUGFyZW5FeHAsIFwifFwiKS5zcGxpdChcInxcIik7XG5cdFx0XHR9IGVsc2UgaWYgKGt3ZCkge1xuXHRcdFx0XHRiYSA9IFtiXTtcblx0XHRcdFx0ZWEgPSBbZV07XG5cdFx0XHR9XG5cdFx0XHRpZiAoZWEpIHtcblx0XHRcdFx0bCA9IChlYS5sZW5ndGggPiBiYS5sZW5ndGgpID8gZWEubGVuZ3RoIDogYmEubGVuZ3RoO1xuXHRcdFx0XHRmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRcdFx0YiA9IGJhW2ldID0gYmFbaV0gfHwgdGhpcy5kZmx0O1xuXHRcdFx0XHRcdGUgPSBlYVtpXSA9IGVhW2ldIHx8IHRoaXMuZGZsdDtcblx0XHRcdFx0XHRpZiAoa3dkKSB7XG5cdFx0XHRcdFx0XHRiaSA9IGIuaW5kZXhPZihrd2QpO1xuXHRcdFx0XHRcdFx0ZWkgPSBlLmluZGV4T2Yoa3dkKTtcblx0XHRcdFx0XHRcdGlmIChiaSAhPT0gZWkpIHtcblx0XHRcdFx0XHRcdFx0aWYgKGVpID09PSAtMSkgeyAvL2lmIHRoZSBrZXl3b3JkIGlzbid0IGluIHRoZSBlbmQgdmFsdWUsIHJlbW92ZSBpdCBmcm9tIHRoZSBiZWdpbm5pbmcgb25lLlxuXHRcdFx0XHRcdFx0XHRcdGJhW2ldID0gYmFbaV0uc3BsaXQoa3dkKS5qb2luKFwiXCIpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKGJpID09PSAtMSkgeyAvL2lmIHRoZSBrZXl3b3JkIGlzbid0IGluIHRoZSBiZWdpbm5pbmcsIGFkZCBpdC5cblx0XHRcdFx0XHRcdFx0XHRiYVtpXSArPSBcIiBcIiArIGt3ZDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRiID0gYmEuam9pbihcIiwgXCIpO1xuXHRcdFx0XHRlID0gZWEuam9pbihcIiwgXCIpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIF9wYXJzZUNvbXBsZXgodCwgdGhpcy5wLCBiLCBlLCB0aGlzLmNscnMsIHRoaXMuZGZsdCwgcHQsIHRoaXMucHIsIHBsdWdpbiwgc2V0UmF0aW8pO1xuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBBY2NlcHRzIGEgdGFyZ2V0IGFuZCBlbmQgdmFsdWUgYW5kIHNwaXRzIGJhY2sgYSBDU1NQcm9wVHdlZW4gdGhhdCBoYXMgYmVlbiBpbnNlcnRlZCBpbnRvIHRoZSBDU1NQbHVnaW4ncyBsaW5rZWQgbGlzdCBhbmQgY29uZm9ybXMgd2l0aCBhbGwgdGhlIGNvbnZlbnRpb25zIHdlIHVzZSBpbnRlcm5hbGx5LCBsaWtlIHR5cGU6LTEsIDAsIDEsIG9yIDIsIHNldHRpbmcgdXAgYW55IGV4dHJhIHByb3BlcnR5IHR3ZWVucywgcHJpb3JpdHksIGV0Yy4gRm9yIGV4YW1wbGUsIGlmIHdlIGhhdmUgYSBib3hTaGFkb3cgU3BlY2lhbFByb3AgYW5kIGNhbGw6XG5cdFx0ICogdGhpcy5fZmlyc3RQVCA9IHNwLnBhcnNlKGVsZW1lbnQsIFwiNXB4IDEwcHggMjBweCByZ2IoMjU1MCwxMDIsNTEpXCIsIFwiYm94U2hhZG93XCIsIHRoaXMpO1xuXHRcdCAqIEl0IHNob3VsZCBmaWd1cmUgb3V0IHRoZSBzdGFydGluZyB2YWx1ZSBvZiB0aGUgZWxlbWVudCdzIGJveFNoYWRvdywgY29tcGFyZSBpdCB0byB0aGUgcHJvdmlkZWQgZW5kIHZhbHVlIGFuZCBjcmVhdGUgYWxsIHRoZSBuZWNlc3NhcnkgQ1NTUHJvcFR3ZWVucyBvZiB0aGUgYXBwcm9wcmlhdGUgdHlwZXMgdG8gdHdlZW4gdGhlIGJveFNoYWRvdy4gVGhlIENTU1Byb3BUd2VlbiB0aGF0IGdldHMgc3BpdCBiYWNrIHNob3VsZCBhbHJlYWR5IGJlIGluc2VydGVkIGludG8gdGhlIGxpbmtlZCBsaXN0ICh0aGUgNHRoIHBhcmFtZXRlciBpcyB0aGUgY3VycmVudCBoZWFkLCBzbyBwcmVwZW5kIHRvIHRoYXQpLlxuXHRcdCAqIEBwYXJhbSB7IU9iamVjdH0gdCBUYXJnZXQgb2JqZWN0IHdob3NlIHByb3BlcnR5IGlzIGJlaW5nIHR3ZWVuZWRcblx0XHQgKiBAcGFyYW0ge09iamVjdH0gZSBFbmQgdmFsdWUgYXMgcHJvdmlkZWQgaW4gdGhlIHZhcnMgb2JqZWN0ICh0eXBpY2FsbHkgYSBzdHJpbmcsIGJ1dCBub3QgYWx3YXlzIC0gbGlrZSBhIHRocm93UHJvcHMgd291bGQgYmUgYW4gb2JqZWN0KS5cblx0XHQgKiBAcGFyYW0geyFzdHJpbmd9IHAgUHJvcGVydHkgbmFtZVxuXHRcdCAqIEBwYXJhbSB7IUNTU1BsdWdpbn0gY3NzcCBUaGUgQ1NTUGx1Z2luIGluc3RhbmNlIHRoYXQgc2hvdWxkIGJlIGFzc29jaWF0ZWQgd2l0aCB0aGlzIHR3ZWVuLlxuXHRcdCAqIEBwYXJhbSB7P0NTU1Byb3BUd2Vlbn0gcHQgVGhlIENTU1Byb3BUd2VlbiB0aGF0IGlzIHRoZSBjdXJyZW50IGhlYWQgb2YgdGhlIGxpbmtlZCBsaXN0ICh3ZSdsbCBwcmVwZW5kIHRvIGl0KVxuXHRcdCAqIEBwYXJhbSB7VHdlZW5QbHVnaW49fSBwbHVnaW4gSWYgYSBwbHVnaW4gd2lsbCBiZSB1c2VkIHRvIHR3ZWVuIHRoZSBwYXJzZWQgdmFsdWUsIHRoaXMgaXMgdGhlIHBsdWdpbiBpbnN0YW5jZS5cblx0XHQgKiBAcGFyYW0ge09iamVjdD19IHZhcnMgT3JpZ2luYWwgdmFycyBvYmplY3QgdGhhdCBjb250YWlucyB0aGUgZGF0YSBmb3IgcGFyc2luZy5cblx0XHQgKiBAcmV0dXJuIHtDU1NQcm9wVHdlZW59IFRoZSBmaXJzdCBDU1NQcm9wVHdlZW4gaW4gdGhlIGxpbmtlZCBsaXN0IHdoaWNoIGluY2x1ZGVzIHRoZSBuZXcgb25lKHMpIGFkZGVkIGJ5IHRoZSBwYXJzZSgpIGNhbGwuXG5cdFx0ICovXG5cdFx0cC5wYXJzZSA9IGZ1bmN0aW9uKHQsIGUsIHAsIGNzc3AsIHB0LCBwbHVnaW4sIHZhcnMpIHtcblx0XHRcdHJldHVybiB0aGlzLnBhcnNlQ29tcGxleCh0LnN0eWxlLCB0aGlzLmZvcm1hdChfZ2V0U3R5bGUodCwgdGhpcy5wLCBfY3MsIGZhbHNlLCB0aGlzLmRmbHQpKSwgdGhpcy5mb3JtYXQoZSksIHB0LCBwbHVnaW4pO1xuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBSZWdpc3RlcnMgYSBzcGVjaWFsIHByb3BlcnR5IHRoYXQgc2hvdWxkIGJlIGludGVyY2VwdGVkIGZyb20gYW55IFwiY3NzXCIgb2JqZWN0cyBkZWZpbmVkIGluIHR3ZWVucy4gVGhpcyBhbGxvd3MgeW91IHRvIGhhbmRsZSB0aGVtIGhvd2V2ZXIgeW91IHdhbnQgd2l0aG91dCBDU1NQbHVnaW4gZG9pbmcgaXQgZm9yIHlvdS4gVGhlIDJuZCBwYXJhbWV0ZXIgc2hvdWxkIGJlIGEgZnVuY3Rpb24gdGhhdCBhY2NlcHRzIDMgcGFyYW1ldGVyczpcblx0XHQgKiAgMSkgVGFyZ2V0IG9iamVjdCB3aG9zZSBwcm9wZXJ0eSBzaG91bGQgYmUgdHdlZW5lZCAodHlwaWNhbGx5IGEgRE9NIGVsZW1lbnQpXG5cdFx0ICogIDIpIFRoZSBlbmQvZGVzdGluYXRpb24gdmFsdWUgKGNvdWxkIGJlIGEgc3RyaW5nLCBudW1iZXIsIG9iamVjdCwgb3Igd2hhdGV2ZXIgeW91IHdhbnQpXG5cdFx0ICogIDMpIFRoZSB0d2VlbiBpbnN0YW5jZSAoeW91IHByb2JhYmx5IGRvbid0IG5lZWQgdG8gd29ycnkgYWJvdXQgdGhpcywgYnV0IGl0IGNhbiBiZSB1c2VmdWwgZm9yIGxvb2tpbmcgdXAgaW5mb3JtYXRpb24gbGlrZSB0aGUgZHVyYXRpb24pXG5cdFx0ICpcblx0XHQgKiBUaGVuLCB5b3VyIGZ1bmN0aW9uIHNob3VsZCByZXR1cm4gYSBmdW5jdGlvbiB3aGljaCB3aWxsIGJlIGNhbGxlZCBlYWNoIHRpbWUgdGhlIHR3ZWVuIGdldHMgcmVuZGVyZWQsIHBhc3NpbmcgYSBudW1lcmljIFwicmF0aW9cIiBwYXJhbWV0ZXIgdG8geW91ciBmdW5jdGlvbiB0aGF0IGluZGljYXRlcyB0aGUgY2hhbmdlIGZhY3RvciAodXN1YWxseSBiZXR3ZWVuIDAgYW5kIDEpLiBGb3IgZXhhbXBsZTpcblx0XHQgKlxuXHRcdCAqIENTU1BsdWdpbi5yZWdpc3RlclNwZWNpYWxQcm9wKFwibXlDdXN0b21Qcm9wXCIsIGZ1bmN0aW9uKHRhcmdldCwgdmFsdWUsIHR3ZWVuKSB7XG5cdFx0ICogICAgICB2YXIgc3RhcnQgPSB0YXJnZXQuc3R5bGUud2lkdGg7XG5cdFx0ICogICAgICByZXR1cm4gZnVuY3Rpb24ocmF0aW8pIHtcblx0XHQgKiAgICAgICAgICAgICAgdGFyZ2V0LnN0eWxlLndpZHRoID0gKHN0YXJ0ICsgdmFsdWUgKiByYXRpbykgKyBcInB4XCI7XG5cdFx0ICogICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic2V0IHdpZHRoIHRvIFwiICsgdGFyZ2V0LnN0eWxlLndpZHRoKTtcblx0XHQgKiAgICAgICAgICB9XG5cdFx0ICogfSwgMCk7XG5cdFx0ICpcblx0XHQgKiBUaGVuLCB3aGVuIEkgZG8gdGhpcyB0d2VlbiwgaXQgd2lsbCB0cmlnZ2VyIG15IHNwZWNpYWwgcHJvcGVydHk6XG5cdFx0ICpcblx0XHQgKiBUd2VlbkxpdGUudG8oZWxlbWVudCwgMSwge2Nzczp7bXlDdXN0b21Qcm9wOjEwMH19KTtcblx0XHQgKlxuXHRcdCAqIEluIHRoZSBleGFtcGxlLCBvZiBjb3Vyc2UsIHdlJ3JlIGp1c3QgY2hhbmdpbmcgdGhlIHdpZHRoLCBidXQgeW91IGNhbiBkbyBhbnl0aGluZyB5b3Ugd2FudC5cblx0XHQgKlxuXHRcdCAqIEBwYXJhbSB7IXN0cmluZ30gbmFtZSBQcm9wZXJ0eSBuYW1lIChvciBjb21tYS1kZWxpbWl0ZWQgbGlzdCBvZiBwcm9wZXJ0eSBuYW1lcykgdGhhdCBzaG91bGQgYmUgaW50ZXJjZXB0ZWQgYW5kIGhhbmRsZWQgYnkgeW91ciBmdW5jdGlvbi4gRm9yIGV4YW1wbGUsIGlmIEkgZGVmaW5lIFwibXlDdXN0b21Qcm9wXCIsIHRoZW4gaXQgd291bGQgaGFuZGxlIHRoYXQgcG9ydGlvbiBvZiB0aGUgZm9sbG93aW5nIHR3ZWVuOiBUd2VlbkxpdGUudG8oZWxlbWVudCwgMSwge2Nzczp7bXlDdXN0b21Qcm9wOjEwMH19KVxuXHRcdCAqIEBwYXJhbSB7IWZ1bmN0aW9uKE9iamVjdCwgT2JqZWN0LCBPYmplY3QsIHN0cmluZyk6ZnVuY3Rpb24obnVtYmVyKX0gb25Jbml0VHdlZW4gVGhlIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBjYWxsZWQgd2hlbiBhIHR3ZWVuIG9mIHRoaXMgc3BlY2lhbCBwcm9wZXJ0eSBpcyBwZXJmb3JtZWQuIFRoZSBmdW5jdGlvbiB3aWxsIHJlY2VpdmUgNCBwYXJhbWV0ZXJzOiAxKSBUYXJnZXQgb2JqZWN0IHRoYXQgc2hvdWxkIGJlIHR3ZWVuZWQsIDIpIFZhbHVlIHRoYXQgd2FzIHBhc3NlZCB0byB0aGUgdHdlZW4sIDMpIFRoZSB0d2VlbiBpbnN0YW5jZSBpdHNlbGYgKHJhcmVseSB1c2VkKSwgYW5kIDQpIFRoZSBwcm9wZXJ0eSBuYW1lIHRoYXQncyBiZWluZyB0d2VlbmVkLiBZb3VyIGZ1bmN0aW9uIHNob3VsZCByZXR1cm4gYSBmdW5jdGlvbiB0aGF0IHNob3VsZCBiZSBjYWxsZWQgb24gZXZlcnkgdXBkYXRlIG9mIHRoZSB0d2Vlbi4gVGhhdCBmdW5jdGlvbiB3aWxsIHJlY2VpdmUgYSBzaW5nbGUgcGFyYW1ldGVyIHRoYXQgaXMgYSBcImNoYW5nZSBmYWN0b3JcIiB2YWx1ZSAodHlwaWNhbGx5IGJldHdlZW4gMCBhbmQgMSkgaW5kaWNhdGluZyB0aGUgYW1vdW50IG9mIGNoYW5nZSBhcyBhIHJhdGlvLiBZb3UgY2FuIHVzZSB0aGlzIHRvIGRldGVybWluZSBob3cgdG8gc2V0IHRoZSB2YWx1ZXMgYXBwcm9wcmlhdGVseSBpbiB5b3VyIGZ1bmN0aW9uLlxuXHRcdCAqIEBwYXJhbSB7bnVtYmVyPX0gcHJpb3JpdHkgUHJpb3JpdHkgdGhhdCBoZWxwcyB0aGUgZW5naW5lIGRldGVybWluZSB0aGUgb3JkZXIgaW4gd2hpY2ggdG8gc2V0IHRoZSBwcm9wZXJ0aWVzIChkZWZhdWx0OiAwKS4gSGlnaGVyIHByaW9yaXR5IHByb3BlcnRpZXMgd2lsbCBiZSB1cGRhdGVkIGJlZm9yZSBsb3dlciBwcmlvcml0eSBvbmVzLlxuXHRcdCAqL1xuXHRcdENTU1BsdWdpbi5yZWdpc3RlclNwZWNpYWxQcm9wID0gZnVuY3Rpb24obmFtZSwgb25Jbml0VHdlZW4sIHByaW9yaXR5KSB7XG5cdFx0XHRfcmVnaXN0ZXJDb21wbGV4U3BlY2lhbFByb3AobmFtZSwge3BhcnNlcjpmdW5jdGlvbih0LCBlLCBwLCBjc3NwLCBwdCwgcGx1Z2luLCB2YXJzKSB7XG5cdFx0XHRcdHZhciBydiA9IG5ldyBDU1NQcm9wVHdlZW4odCwgcCwgMCwgMCwgcHQsIDIsIHAsIGZhbHNlLCBwcmlvcml0eSk7XG5cdFx0XHRcdHJ2LnBsdWdpbiA9IHBsdWdpbjtcblx0XHRcdFx0cnYuc2V0UmF0aW8gPSBvbkluaXRUd2Vlbih0LCBlLCBjc3NwLl90d2VlbiwgcCk7XG5cdFx0XHRcdHJldHVybiBydjtcblx0XHRcdH0sIHByaW9yaXR5OnByaW9yaXR5fSk7XG5cdFx0fTtcblxuXG5cblxuXG5cblx0XHQvL3RyYW5zZm9ybS1yZWxhdGVkIG1ldGhvZHMgYW5kIHByb3BlcnRpZXNcblx0XHRDU1NQbHVnaW4udXNlU1ZHVHJhbnNmb3JtQXR0ciA9IF9pc1NhZmFyaSB8fCBfaXNGaXJlZm94OyAvL1NhZmFyaSBhbmQgRmlyZWZveCBib3RoIGhhdmUgc29tZSByZW5kZXJpbmcgYnVncyB3aGVuIGFwcGx5aW5nIENTUyB0cmFuc2Zvcm1zIHRvIFNWRyBlbGVtZW50cywgc28gZGVmYXVsdCB0byB1c2luZyB0aGUgXCJ0cmFuc2Zvcm1cIiBhdHRyaWJ1dGUgaW5zdGVhZCAodXNlcnMgY2FuIG92ZXJyaWRlIHRoaXMpLlxuXHRcdHZhciBfdHJhbnNmb3JtUHJvcHMgPSAoXCJzY2FsZVgsc2NhbGVZLHNjYWxlWix4LHkseixza2V3WCxza2V3WSxyb3RhdGlvbixyb3RhdGlvblgscm90YXRpb25ZLHBlcnNwZWN0aXZlLHhQZXJjZW50LHlQZXJjZW50XCIpLnNwbGl0KFwiLFwiKSxcblx0XHRcdF90cmFuc2Zvcm1Qcm9wID0gX2NoZWNrUHJvcFByZWZpeChcInRyYW5zZm9ybVwiKSwgLy90aGUgSmF2YXNjcmlwdCAoY2FtZWxDYXNlKSB0cmFuc2Zvcm0gcHJvcGVydHksIGxpa2UgbXNUcmFuc2Zvcm0sIFdlYmtpdFRyYW5zZm9ybSwgTW96VHJhbnNmb3JtLCBvciBPVHJhbnNmb3JtLlxuXHRcdFx0X3RyYW5zZm9ybVByb3BDU1MgPSBfcHJlZml4Q1NTICsgXCJ0cmFuc2Zvcm1cIixcblx0XHRcdF90cmFuc2Zvcm1PcmlnaW5Qcm9wID0gX2NoZWNrUHJvcFByZWZpeChcInRyYW5zZm9ybU9yaWdpblwiKSxcblx0XHRcdF9zdXBwb3J0czNEID0gKF9jaGVja1Byb3BQcmVmaXgoXCJwZXJzcGVjdGl2ZVwiKSAhPT0gbnVsbCksXG5cdFx0XHRUcmFuc2Zvcm0gPSBfaW50ZXJuYWxzLlRyYW5zZm9ybSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR0aGlzLnBlcnNwZWN0aXZlID0gcGFyc2VGbG9hdChDU1NQbHVnaW4uZGVmYXVsdFRyYW5zZm9ybVBlcnNwZWN0aXZlKSB8fCAwO1xuXHRcdFx0XHR0aGlzLmZvcmNlM0QgPSAoQ1NTUGx1Z2luLmRlZmF1bHRGb3JjZTNEID09PSBmYWxzZSB8fCAhX3N1cHBvcnRzM0QpID8gZmFsc2UgOiBDU1NQbHVnaW4uZGVmYXVsdEZvcmNlM0QgfHwgXCJhdXRvXCI7XG5cdFx0XHR9LFxuXHRcdFx0X1NWR0VsZW1lbnQgPSB3aW5kb3cuU1ZHRWxlbWVudCxcblx0XHRcdF91c2VTVkdUcmFuc2Zvcm1BdHRyLFxuXHRcdFx0Ly9Tb21lIGJyb3dzZXJzIChsaWtlIEZpcmVmb3ggYW5kIElFKSBkb24ndCBob25vciB0cmFuc2Zvcm0tb3JpZ2luIHByb3Blcmx5IGluIFNWRyBlbGVtZW50cywgc28gd2UgbmVlZCB0byBtYW51YWxseSBhZGp1c3QgdGhlIG1hdHJpeCBhY2NvcmRpbmdseS4gV2UgZmVhdHVyZSBkZXRlY3QgaGVyZSByYXRoZXIgdGhhbiBhbHdheXMgZG9pbmcgdGhlIGNvbnZlcnNpb24gZm9yIGNlcnRhaW4gYnJvd3NlcnMgYmVjYXVzZSB0aGV5IG1heSBmaXggdGhlIHByb2JsZW0gYXQgc29tZSBwb2ludCBpbiB0aGUgZnV0dXJlLlxuXG5cdFx0XHRfY3JlYXRlU1ZHID0gZnVuY3Rpb24odHlwZSwgY29udGFpbmVyLCBhdHRyaWJ1dGVzKSB7XG5cdFx0XHRcdHZhciBlbGVtZW50ID0gX2RvYy5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCB0eXBlKSxcblx0XHRcdFx0XHRyZWcgPSAvKFthLXpdKShbQS1aXSkvZyxcblx0XHRcdFx0XHRwO1xuXHRcdFx0XHRmb3IgKHAgaW4gYXR0cmlidXRlcykge1xuXHRcdFx0XHRcdGVsZW1lbnQuc2V0QXR0cmlidXRlTlMobnVsbCwgcC5yZXBsYWNlKHJlZywgXCIkMS0kMlwiKS50b0xvd2VyQ2FzZSgpLCBhdHRyaWJ1dGVzW3BdKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb250YWluZXIuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG5cdFx0XHRcdHJldHVybiBlbGVtZW50O1xuXHRcdFx0fSxcblx0XHRcdF9kb2NFbGVtZW50ID0gX2RvYy5kb2N1bWVudEVsZW1lbnQsXG5cdFx0XHRfZm9yY2VTVkdUcmFuc2Zvcm1BdHRyID0gKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHQvL0lFIGFuZCBBbmRyb2lkIHN0b2NrIGRvbid0IHN1cHBvcnQgQ1NTIHRyYW5zZm9ybXMgb24gU1ZHIGVsZW1lbnRzLCBzbyB3ZSBtdXN0IHdyaXRlIHRoZW0gdG8gdGhlIFwidHJhbnNmb3JtXCIgYXR0cmlidXRlLiBXZSBwb3B1bGF0ZSB0aGlzIHZhcmlhYmxlIGluIHRoZSBfcGFyc2VUcmFuc2Zvcm0oKSBtZXRob2QsIGFuZCBvbmx5IGlmL3doZW4gd2UgY29tZSBhY3Jvc3MgYW4gU1ZHIGVsZW1lbnRcblx0XHRcdFx0dmFyIGZvcmNlID0gX2llVmVycyB8fCAoL0FuZHJvaWQvaS50ZXN0KF9hZ2VudCkgJiYgIXdpbmRvdy5jaHJvbWUpLFxuXHRcdFx0XHRcdHN2ZywgcmVjdCwgd2lkdGg7XG5cdFx0XHRcdGlmIChfZG9jLmNyZWF0ZUVsZW1lbnROUyAmJiAhZm9yY2UpIHsgLy9JRTggYW5kIGVhcmxpZXIgZG9lc24ndCBzdXBwb3J0IFNWRyBhbnl3YXlcblx0XHRcdFx0XHRzdmcgPSBfY3JlYXRlU1ZHKFwic3ZnXCIsIF9kb2NFbGVtZW50KTtcblx0XHRcdFx0XHRyZWN0ID0gX2NyZWF0ZVNWRyhcInJlY3RcIiwgc3ZnLCB7d2lkdGg6MTAwLCBoZWlnaHQ6NTAsIHg6MTAwfSk7XG5cdFx0XHRcdFx0d2lkdGggPSByZWN0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO1xuXHRcdFx0XHRcdHJlY3Quc3R5bGVbX3RyYW5zZm9ybU9yaWdpblByb3BdID0gXCI1MCUgNTAlXCI7XG5cdFx0XHRcdFx0cmVjdC5zdHlsZVtfdHJhbnNmb3JtUHJvcF0gPSBcInNjYWxlWCgwLjUpXCI7XG5cdFx0XHRcdFx0Zm9yY2UgPSAod2lkdGggPT09IHJlY3QuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggJiYgIShfaXNGaXJlZm94ICYmIF9zdXBwb3J0czNEKSk7IC8vbm90ZTogRmlyZWZveCBmYWlscyB0aGUgdGVzdCBldmVuIHRob3VnaCBpdCBkb2VzIHN1cHBvcnQgQ1NTIHRyYW5zZm9ybXMgaW4gM0QuIFNpbmNlIHdlIGNhbid0IHB1c2ggM0Qgc3R1ZmYgaW50byB0aGUgdHJhbnNmb3JtIGF0dHJpYnV0ZSwgd2UgZm9yY2UgRmlyZWZveCB0byBwYXNzIHRoZSB0ZXN0IGhlcmUgKGFzIGxvbmcgYXMgaXQgZG9lcyB0cnVseSBzdXBwb3J0IDNEKS5cblx0XHRcdFx0XHRfZG9jRWxlbWVudC5yZW1vdmVDaGlsZChzdmcpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBmb3JjZTtcblx0XHRcdH0pKCksXG5cdFx0XHRfcGFyc2VTVkdPcmlnaW4gPSBmdW5jdGlvbihlLCBsb2NhbCwgZGVjb3JhdGVlLCBhYnNvbHV0ZSwgc21vb3RoT3JpZ2luLCBza2lwUmVjb3JkKSB7XG5cdFx0XHRcdHZhciB0bSA9IGUuX2dzVHJhbnNmb3JtLFxuXHRcdFx0XHRcdG0gPSBfZ2V0TWF0cml4KGUsIHRydWUpLFxuXHRcdFx0XHRcdHYsIHgsIHksIHhPcmlnaW4sIHlPcmlnaW4sIGEsIGIsIGMsIGQsIHR4LCB0eSwgZGV0ZXJtaW5hbnQsIHhPcmlnaW5PbGQsIHlPcmlnaW5PbGQ7XG5cdFx0XHRcdGlmICh0bSkge1xuXHRcdFx0XHRcdHhPcmlnaW5PbGQgPSB0bS54T3JpZ2luOyAvL3JlY29yZCB0aGUgb3JpZ2luYWwgdmFsdWVzIGJlZm9yZSB3ZSBhbHRlciB0aGVtLlxuXHRcdFx0XHRcdHlPcmlnaW5PbGQgPSB0bS55T3JpZ2luO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICghYWJzb2x1dGUgfHwgKHYgPSBhYnNvbHV0ZS5zcGxpdChcIiBcIikpLmxlbmd0aCA8IDIpIHtcblx0XHRcdFx0XHRiID0gZS5nZXRCQm94KCk7XG5cdFx0XHRcdFx0bG9jYWwgPSBfcGFyc2VQb3NpdGlvbihsb2NhbCkuc3BsaXQoXCIgXCIpO1xuXHRcdFx0XHRcdHYgPSBbKGxvY2FsWzBdLmluZGV4T2YoXCIlXCIpICE9PSAtMSA/IHBhcnNlRmxvYXQobG9jYWxbMF0pIC8gMTAwICogYi53aWR0aCA6IHBhcnNlRmxvYXQobG9jYWxbMF0pKSArIGIueCxcblx0XHRcdFx0XHRcdCAobG9jYWxbMV0uaW5kZXhPZihcIiVcIikgIT09IC0xID8gcGFyc2VGbG9hdChsb2NhbFsxXSkgLyAxMDAgKiBiLmhlaWdodCA6IHBhcnNlRmxvYXQobG9jYWxbMV0pKSArIGIueV07XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGVjb3JhdGVlLnhPcmlnaW4gPSB4T3JpZ2luID0gcGFyc2VGbG9hdCh2WzBdKTtcblx0XHRcdFx0ZGVjb3JhdGVlLnlPcmlnaW4gPSB5T3JpZ2luID0gcGFyc2VGbG9hdCh2WzFdKTtcblx0XHRcdFx0aWYgKGFic29sdXRlICYmIG0gIT09IF9pZGVudGl0eTJETWF0cml4KSB7IC8vaWYgc3ZnT3JpZ2luIGlzIGJlaW5nIHNldCwgd2UgbXVzdCBpbnZlcnQgdGhlIG1hdHJpeCBhbmQgZGV0ZXJtaW5lIHdoZXJlIHRoZSBhYnNvbHV0ZSBwb2ludCBpcywgZmFjdG9yaW5nIGluIHRoZSBjdXJyZW50IHRyYW5zZm9ybXMuIE90aGVyd2lzZSwgdGhlIHN2Z09yaWdpbiB3b3VsZCBiZSBiYXNlZCBvbiB0aGUgZWxlbWVudCdzIG5vbi10cmFuc2Zvcm1lZCBwb3NpdGlvbiBvbiB0aGUgY2FudmFzLlxuXHRcdFx0XHRcdGEgPSBtWzBdO1xuXHRcdFx0XHRcdGIgPSBtWzFdO1xuXHRcdFx0XHRcdGMgPSBtWzJdO1xuXHRcdFx0XHRcdGQgPSBtWzNdO1xuXHRcdFx0XHRcdHR4ID0gbVs0XTtcblx0XHRcdFx0XHR0eSA9IG1bNV07XG5cdFx0XHRcdFx0ZGV0ZXJtaW5hbnQgPSAoYSAqIGQgLSBiICogYyk7XG5cdFx0XHRcdFx0eCA9IHhPcmlnaW4gKiAoZCAvIGRldGVybWluYW50KSArIHlPcmlnaW4gKiAoLWMgLyBkZXRlcm1pbmFudCkgKyAoKGMgKiB0eSAtIGQgKiB0eCkgLyBkZXRlcm1pbmFudCk7XG5cdFx0XHRcdFx0eSA9IHhPcmlnaW4gKiAoLWIgLyBkZXRlcm1pbmFudCkgKyB5T3JpZ2luICogKGEgLyBkZXRlcm1pbmFudCkgLSAoKGEgKiB0eSAtIGIgKiB0eCkgLyBkZXRlcm1pbmFudCk7XG5cdFx0XHRcdFx0eE9yaWdpbiA9IGRlY29yYXRlZS54T3JpZ2luID0gdlswXSA9IHg7XG5cdFx0XHRcdFx0eU9yaWdpbiA9IGRlY29yYXRlZS55T3JpZ2luID0gdlsxXSA9IHk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHRtKSB7IC8vYXZvaWQganVtcCB3aGVuIHRyYW5zZm9ybU9yaWdpbiBpcyBjaGFuZ2VkIC0gYWRqdXN0IHRoZSB4L3kgdmFsdWVzIGFjY29yZGluZ2x5XG5cdFx0XHRcdFx0aWYgKHNraXBSZWNvcmQpIHtcblx0XHRcdFx0XHRcdGRlY29yYXRlZS54T2Zmc2V0ID0gdG0ueE9mZnNldDtcblx0XHRcdFx0XHRcdGRlY29yYXRlZS55T2Zmc2V0ID0gdG0ueU9mZnNldDtcblx0XHRcdFx0XHRcdHRtID0gZGVjb3JhdGVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoc21vb3RoT3JpZ2luIHx8IChzbW9vdGhPcmlnaW4gIT09IGZhbHNlICYmIENTU1BsdWdpbi5kZWZhdWx0U21vb3RoT3JpZ2luICE9PSBmYWxzZSkpIHtcblx0XHRcdFx0XHRcdHggPSB4T3JpZ2luIC0geE9yaWdpbk9sZDtcblx0XHRcdFx0XHRcdHkgPSB5T3JpZ2luIC0geU9yaWdpbk9sZDtcblx0XHRcdFx0XHRcdC8vb3JpZ2luYWxseSwgd2Ugc2ltcGx5IGFkanVzdGVkIHRoZSB4IGFuZCB5IHZhbHVlcywgYnV0IHRoYXQgd291bGQgY2F1c2UgcHJvYmxlbXMgaWYsIGZvciBleGFtcGxlLCB5b3UgY3JlYXRlZCBhIHJvdGF0aW9uYWwgdHdlZW4gcGFydC13YXkgdGhyb3VnaCBhbiB4L3kgdHdlZW4uIE1hbmFnaW5nIHRoZSBvZmZzZXQgaW4gYSBzZXBhcmF0ZSB2YXJpYWJsZSBnaXZlcyB1cyB1bHRpbWF0ZSBmbGV4aWJpbGl0eS5cblx0XHRcdFx0XHRcdC8vdG0ueCAtPSB4IC0gKHggKiBtWzBdICsgeSAqIG1bMl0pO1xuXHRcdFx0XHRcdFx0Ly90bS55IC09IHkgLSAoeCAqIG1bMV0gKyB5ICogbVszXSk7XG5cdFx0XHRcdFx0XHR0bS54T2Zmc2V0ICs9ICh4ICogbVswXSArIHkgKiBtWzJdKSAtIHg7XG5cdFx0XHRcdFx0XHR0bS55T2Zmc2V0ICs9ICh4ICogbVsxXSArIHkgKiBtWzNdKSAtIHk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRtLnhPZmZzZXQgPSB0bS55T2Zmc2V0ID0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFza2lwUmVjb3JkKSB7XG5cdFx0XHRcdFx0ZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXN2Zy1vcmlnaW5cIiwgdi5qb2luKFwiIFwiKSk7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRfY2FuR2V0QkJveCA9IGZ1bmN0aW9uKGUpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRyZXR1cm4gZS5nZXRCQm94KCk7IC8vRmlyZWZveCB0aHJvd3MgZXJyb3JzIGlmIHlvdSB0cnkgY2FsbGluZyBnZXRCQm94KCkgb24gYW4gU1ZHIGVsZW1lbnQgdGhhdCdzIG5vdCByZW5kZXJlZCAobGlrZSBpbiBhIDxzeW1ib2w+IG9yIDxkZWZzPikuIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTYxMjExOFxuXHRcdFx0XHR9IGNhdGNoIChlKSB7fVxuXHRcdFx0fSxcblx0XHRcdF9pc1NWRyA9IGZ1bmN0aW9uKGUpIHsgLy9yZXBvcnRzIGlmIHRoZSBlbGVtZW50IGlzIGFuIFNWRyBvbiB3aGljaCBnZXRCQm94KCkgYWN0dWFsbHkgd29ya3Ncblx0XHRcdFx0cmV0dXJuICEhKF9TVkdFbGVtZW50ICYmIGUuZ2V0QkJveCAmJiBlLmdldENUTSAmJiBfY2FuR2V0QkJveChlKSAmJiAoIWUucGFyZW50Tm9kZSB8fCAoZS5wYXJlbnROb2RlLmdldEJCb3ggJiYgZS5wYXJlbnROb2RlLmdldENUTSkpKTtcblx0XHRcdH0sXG5cdFx0XHRfaWRlbnRpdHkyRE1hdHJpeCA9IFsxLDAsMCwxLDAsMF0sXG5cdFx0XHRfZ2V0TWF0cml4ID0gZnVuY3Rpb24oZSwgZm9yY2UyRCkge1xuXHRcdFx0XHR2YXIgdG0gPSBlLl9nc1RyYW5zZm9ybSB8fCBuZXcgVHJhbnNmb3JtKCksXG5cdFx0XHRcdFx0cm5kID0gMTAwMDAwLFxuXHRcdFx0XHRcdHN0eWxlID0gZS5zdHlsZSxcblx0XHRcdFx0XHRpc0RlZmF1bHQsIHMsIG0sIG4sIGRlYywgbm9uZTtcblx0XHRcdFx0aWYgKF90cmFuc2Zvcm1Qcm9wKSB7XG5cdFx0XHRcdFx0cyA9IF9nZXRTdHlsZShlLCBfdHJhbnNmb3JtUHJvcENTUywgbnVsbCwgdHJ1ZSk7XG5cdFx0XHRcdH0gZWxzZSBpZiAoZS5jdXJyZW50U3R5bGUpIHtcblx0XHRcdFx0XHQvL2ZvciBvbGRlciB2ZXJzaW9ucyBvZiBJRSwgd2UgbmVlZCB0byBpbnRlcnByZXQgdGhlIGZpbHRlciBwb3J0aW9uIHRoYXQgaXMgaW4gdGhlIGZvcm1hdDogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0Lk1hdHJpeChNMTE9Ni4xMjMyMzM5OTU3MzY3NjZlLTE3LCBNMTI9LTEsIE0yMT0xLCBNMjI9Ni4xMjMyMzM5OTU3MzY3NjZlLTE3LCBzaXppbmdNZXRob2Q9J2F1dG8gZXhwYW5kJykgTm90aWNlIHRoYXQgd2UgbmVlZCB0byBzd2FwIGIgYW5kIGMgY29tcGFyZWQgdG8gYSBub3JtYWwgbWF0cml4LlxuXHRcdFx0XHRcdHMgPSBlLmN1cnJlbnRTdHlsZS5maWx0ZXIubWF0Y2goX2llR2V0TWF0cml4RXhwKTtcblx0XHRcdFx0XHRzID0gKHMgJiYgcy5sZW5ndGggPT09IDQpID8gW3NbMF0uc3Vic3RyKDQpLCBOdW1iZXIoc1syXS5zdWJzdHIoNCkpLCBOdW1iZXIoc1sxXS5zdWJzdHIoNCkpLCBzWzNdLnN1YnN0cig0KSwgKHRtLnggfHwgMCksICh0bS55IHx8IDApXS5qb2luKFwiLFwiKSA6IFwiXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0aXNEZWZhdWx0ID0gKCFzIHx8IHMgPT09IFwibm9uZVwiIHx8IHMgPT09IFwibWF0cml4KDEsIDAsIDAsIDEsIDAsIDApXCIpO1xuXHRcdFx0XHRpZiAoaXNEZWZhdWx0ICYmIF90cmFuc2Zvcm1Qcm9wICYmICgobm9uZSA9IChfZ2V0Q29tcHV0ZWRTdHlsZShlKS5kaXNwbGF5ID09PSBcIm5vbmVcIikpIHx8ICFlLnBhcmVudE5vZGUpKSB7XG5cdFx0XHRcdFx0aWYgKG5vbmUpIHsgLy9icm93c2VycyBkb24ndCByZXBvcnQgdHJhbnNmb3JtcyBhY2N1cmF0ZWx5IHVubGVzcyB0aGUgZWxlbWVudCBpcyBpbiB0aGUgRE9NIGFuZCBoYXMgYSBkaXNwbGF5IHZhbHVlIHRoYXQncyBub3QgXCJub25lXCIuXG5cdFx0XHRcdFx0XHRuID0gc3R5bGUuZGlzcGxheTtcblx0XHRcdFx0XHRcdHN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICghZS5wYXJlbnROb2RlKSB7XG5cdFx0XHRcdFx0XHRkZWMgPSAxOyAvL2ZsYWdcblx0XHRcdFx0XHRcdF9kb2NFbGVtZW50LmFwcGVuZENoaWxkKGUpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRzID0gX2dldFN0eWxlKGUsIF90cmFuc2Zvcm1Qcm9wQ1NTLCBudWxsLCB0cnVlKTtcblx0XHRcdFx0XHRpc0RlZmF1bHQgPSAoIXMgfHwgcyA9PT0gXCJub25lXCIgfHwgcyA9PT0gXCJtYXRyaXgoMSwgMCwgMCwgMSwgMCwgMClcIik7XG5cdFx0XHRcdFx0aWYgKG4pIHtcblx0XHRcdFx0XHRcdHN0eWxlLmRpc3BsYXkgPSBuO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAobm9uZSkge1xuXHRcdFx0XHRcdFx0X3JlbW92ZVByb3Aoc3R5bGUsIFwiZGlzcGxheVwiKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGRlYykge1xuXHRcdFx0XHRcdFx0X2RvY0VsZW1lbnQucmVtb3ZlQ2hpbGQoZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0bS5zdmcgfHwgKGUuZ2V0QkJveCAmJiBfaXNTVkcoZSkpKSB7XG5cdFx0XHRcdFx0aWYgKGlzRGVmYXVsdCAmJiAoc3R5bGVbX3RyYW5zZm9ybVByb3BdICsgXCJcIikuaW5kZXhPZihcIm1hdHJpeFwiKSAhPT0gLTEpIHsgLy9zb21lIGJyb3dzZXJzIChsaWtlIENocm9tZSA0MCkgZG9uJ3QgY29ycmVjdGx5IHJlcG9ydCB0cmFuc2Zvcm1zIHRoYXQgYXJlIGFwcGxpZWQgaW5saW5lIG9uIGFuIFNWRyBlbGVtZW50ICh0aGV5IGRvbid0IGdldCBpbmNsdWRlZCBpbiB0aGUgY29tcHV0ZWQgc3R5bGUpLCBzbyB3ZSBkb3VibGUtY2hlY2sgaGVyZSBhbmQgYWNjZXB0IG1hdHJpeCB2YWx1ZXNcblx0XHRcdFx0XHRcdHMgPSBzdHlsZVtfdHJhbnNmb3JtUHJvcF07XG5cdFx0XHRcdFx0XHRpc0RlZmF1bHQgPSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRtID0gZS5nZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIik7XG5cdFx0XHRcdFx0aWYgKGlzRGVmYXVsdCAmJiBtKSB7XG5cdFx0XHRcdFx0XHRpZiAobS5pbmRleE9mKFwibWF0cml4XCIpICE9PSAtMSkgeyAvL2p1c3QgaW4gY2FzZSB0aGVyZSdzIGEgXCJ0cmFuc2Zvcm1cIiB2YWx1ZSBzcGVjaWZpZWQgYXMgYW4gYXR0cmlidXRlIGluc3RlYWQgb2YgQ1NTIHN0eWxlLiBBY2NlcHQgZWl0aGVyIGEgbWF0cml4KCkgb3Igc2ltcGxlIHRyYW5zbGF0ZSgpIHZhbHVlIHRob3VnaC5cblx0XHRcdFx0XHRcdFx0cyA9IG07XG5cdFx0XHRcdFx0XHRcdGlzRGVmYXVsdCA9IDA7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKG0uaW5kZXhPZihcInRyYW5zbGF0ZVwiKSAhPT0gLTEpIHtcblx0XHRcdFx0XHRcdFx0cyA9IFwibWF0cml4KDEsMCwwLDEsXCIgKyBtLm1hdGNoKC8oPzpcXC18XFxiKVtcXGRcXC1cXC5lXStcXGIvZ2kpLmpvaW4oXCIsXCIpICsgXCIpXCI7XG5cdFx0XHRcdFx0XHRcdGlzRGVmYXVsdCA9IDA7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChpc0RlZmF1bHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gX2lkZW50aXR5MkRNYXRyaXg7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly9zcGxpdCB0aGUgbWF0cml4IHZhbHVlcyBvdXQgaW50byBhbiBhcnJheSAobSBmb3IgbWF0cml4KVxuXHRcdFx0XHRtID0gKHMgfHwgXCJcIikubWF0Y2goX251bUV4cCkgfHwgW107XG5cdFx0XHRcdGkgPSBtLmxlbmd0aDtcblx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0biA9IE51bWJlcihtW2ldKTtcblx0XHRcdFx0XHRtW2ldID0gKGRlYyA9IG4gLSAobiB8PSAwKSkgPyAoKGRlYyAqIHJuZCArIChkZWMgPCAwID8gLTAuNSA6IDAuNSkpIHwgMCkgLyBybmQgKyBuIDogbjsgLy9jb252ZXJ0IHN0cmluZ3MgdG8gTnVtYmVycyBhbmQgcm91bmQgdG8gNSBkZWNpbWFsIHBsYWNlcyB0byBhdm9pZCBpc3N1ZXMgd2l0aCB0aW55IG51bWJlcnMuIFJvdWdobHkgMjB4IGZhc3RlciB0aGFuIE51bWJlci50b0ZpeGVkKCkuIFdlIGFsc28gbXVzdCBtYWtlIHN1cmUgdG8gcm91bmQgYmVmb3JlIGRpdmlkaW5nIHNvIHRoYXQgdmFsdWVzIGxpa2UgMC45OTk5OTk5OTk5IGJlY29tZSAxIHRvIGF2b2lkIGdsaXRjaGVzIGluIGJyb3dzZXIgcmVuZGVyaW5nIGFuZCBpbnRlcnByZXRhdGlvbiBvZiBmbGlwcGVkL3JvdGF0ZWQgM0QgbWF0cmljZXMuIEFuZCBkb24ndCBqdXN0IG11bHRpcGx5IHRoZSBudW1iZXIgYnkgcm5kLCBmbG9vciBpdCwgYW5kIHRoZW4gZGl2aWRlIGJ5IHJuZCBiZWNhdXNlIHRoZSBiaXR3aXNlIG9wZXJhdGlvbnMgbWF4IG91dCBhdCBhIDMyLWJpdCBzaWduZWQgaW50ZWdlciwgdGh1cyBpdCBjb3VsZCBnZXQgY2xpcHBlZCBhdCBhIHJlbGF0aXZlbHkgbG93IHZhbHVlIChsaWtlIDIyLDAwMC4wMDAwMCBmb3IgZXhhbXBsZSkuXG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIChmb3JjZTJEICYmIG0ubGVuZ3RoID4gNikgPyBbbVswXSwgbVsxXSwgbVs0XSwgbVs1XSwgbVsxMl0sIG1bMTNdXSA6IG07XG5cdFx0XHR9LFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIFBhcnNlcyB0aGUgdHJhbnNmb3JtIHZhbHVlcyBmb3IgYW4gZWxlbWVudCwgcmV0dXJuaW5nIGFuIG9iamVjdCB3aXRoIHgsIHksIHosIHNjYWxlWCwgc2NhbGVZLCBzY2FsZVosIHJvdGF0aW9uLCByb3RhdGlvblgsIHJvdGF0aW9uWSwgc2tld1gsIGFuZCBza2V3WSBwcm9wZXJ0aWVzLiBOb3RlOiBieSBkZWZhdWx0IChmb3IgcGVyZm9ybWFuY2UgcmVhc29ucyksIGFsbCBza2V3aW5nIGlzIGNvbWJpbmVkIGludG8gc2tld1ggYW5kIHJvdGF0aW9uIGJ1dCBza2V3WSBzdGlsbCBoYXMgYSBwbGFjZSBpbiB0aGUgdHJhbnNmb3JtIG9iamVjdCBzbyB0aGF0IHdlIGNhbiByZWNvcmQgaG93IG11Y2ggb2YgdGhlIHNrZXcgaXMgYXR0cmlidXRlZCB0byBza2V3WCB2cyBza2V3WS4gUmVtZW1iZXIsIGEgc2tld1kgb2YgMTAgbG9va3MgdGhlIHNhbWUgYXMgYSByb3RhdGlvbiBvZiAxMCBhbmQgc2tld1ggb2YgLTEwLlxuXHRcdFx0ICogQHBhcmFtIHshT2JqZWN0fSB0IHRhcmdldCBlbGVtZW50XG5cdFx0XHQgKiBAcGFyYW0ge09iamVjdD19IGNzIGNvbXB1dGVkIHN0eWxlIG9iamVjdCAob3B0aW9uYWwpXG5cdFx0XHQgKiBAcGFyYW0ge2Jvb2xlYW49fSByZWMgaWYgdHJ1ZSwgdGhlIHRyYW5zZm9ybSB2YWx1ZXMgd2lsbCBiZSByZWNvcmRlZCB0byB0aGUgdGFyZ2V0IGVsZW1lbnQncyBfZ3NUcmFuc2Zvcm0gb2JqZWN0LCBsaWtlIHRhcmdldC5fZ3NUcmFuc2Zvcm0gPSB7eDowLCB5OjAsIHo6MCwgc2NhbGVYOjEuLi59XG5cdFx0XHQgKiBAcGFyYW0ge2Jvb2xlYW49fSBwYXJzZSBpZiB0cnVlLCB3ZSdsbCBpZ25vcmUgYW55IF9nc1RyYW5zZm9ybSB2YWx1ZXMgdGhhdCBhbHJlYWR5IGV4aXN0IG9uIHRoZSBlbGVtZW50LCBhbmQgZm9yY2UgYSByZXBhcnNpbmcgb2YgdGhlIGNzcyAoY2FsY3VsYXRlZCBzdHlsZSlcblx0XHRcdCAqIEByZXR1cm4ge29iamVjdH0gb2JqZWN0IGNvbnRhaW5pbmcgYWxsIG9mIHRoZSB0cmFuc2Zvcm0gcHJvcGVydGllcy92YWx1ZXMgbGlrZSB7eDowLCB5OjAsIHo6MCwgc2NhbGVYOjEuLi59XG5cdFx0XHQgKi9cblx0XHRcdF9nZXRUcmFuc2Zvcm0gPSBfaW50ZXJuYWxzLmdldFRyYW5zZm9ybSA9IGZ1bmN0aW9uKHQsIGNzLCByZWMsIHBhcnNlKSB7XG5cdFx0XHRcdGlmICh0Ll9nc1RyYW5zZm9ybSAmJiByZWMgJiYgIXBhcnNlKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHQuX2dzVHJhbnNmb3JtOyAvL2lmIHRoZSBlbGVtZW50IGFscmVhZHkgaGFzIGEgX2dzVHJhbnNmb3JtLCB1c2UgdGhhdC4gTm90ZTogc29tZSBicm93c2VycyBkb24ndCBhY2N1cmF0ZWx5IHJldHVybiB0aGUgY2FsY3VsYXRlZCBzdHlsZSBmb3IgdGhlIHRyYW5zZm9ybSAocGFydGljdWxhcmx5IGZvciBTVkcpLCBzbyBpdCdzIGFsbW9zdCBhbHdheXMgc2FmZXN0IHRvIGp1c3QgdXNlIHRoZSB2YWx1ZXMgd2UndmUgYWxyZWFkeSBhcHBsaWVkIHJhdGhlciB0aGFuIHJlLXBhcnNpbmcgdGhpbmdzLlxuXHRcdFx0XHR9XG5cdFx0XHRcdHZhciB0bSA9IHJlYyA/IHQuX2dzVHJhbnNmb3JtIHx8IG5ldyBUcmFuc2Zvcm0oKSA6IG5ldyBUcmFuc2Zvcm0oKSxcblx0XHRcdFx0XHRpbnZYID0gKHRtLnNjYWxlWCA8IDApLCAvL2luIG9yZGVyIHRvIGludGVycHJldCB0aGluZ3MgcHJvcGVybHksIHdlIG5lZWQgdG8ga25vdyBpZiB0aGUgdXNlciBhcHBsaWVkIGEgbmVnYXRpdmUgc2NhbGVYIHByZXZpb3VzbHkgc28gdGhhdCB3ZSBjYW4gYWRqdXN0IHRoZSByb3RhdGlvbiBhbmQgc2tld1ggYWNjb3JkaW5nbHkuIE90aGVyd2lzZSwgaWYgd2UgYWx3YXlzIGludGVycHJldCBhIGZsaXBwZWQgbWF0cml4IGFzIGFmZmVjdGluZyBzY2FsZVkgYW5kIHRoZSB1c2VyIG9ubHkgd2FudHMgdG8gdHdlZW4gdGhlIHNjYWxlWCBvbiBtdWx0aXBsZSBzZXF1ZW50aWFsIHR3ZWVucywgaXQgd291bGQga2VlcCB0aGUgbmVnYXRpdmUgc2NhbGVZIHdpdGhvdXQgdGhhdCBiZWluZyB0aGUgdXNlcidzIGludGVudC5cblx0XHRcdFx0XHRtaW4gPSAwLjAwMDAyLFxuXHRcdFx0XHRcdHJuZCA9IDEwMDAwMCxcblx0XHRcdFx0XHR6T3JpZ2luID0gX3N1cHBvcnRzM0QgPyBwYXJzZUZsb2F0KF9nZXRTdHlsZSh0LCBfdHJhbnNmb3JtT3JpZ2luUHJvcCwgY3MsIGZhbHNlLCBcIjAgMCAwXCIpLnNwbGl0KFwiIFwiKVsyXSkgfHwgdG0uek9yaWdpbiAgfHwgMCA6IDAsXG5cdFx0XHRcdFx0ZGVmYXVsdFRyYW5zZm9ybVBlcnNwZWN0aXZlID0gcGFyc2VGbG9hdChDU1NQbHVnaW4uZGVmYXVsdFRyYW5zZm9ybVBlcnNwZWN0aXZlKSB8fCAwLFxuXHRcdFx0XHRcdG0sIGksIHNjYWxlWCwgc2NhbGVZLCByb3RhdGlvbiwgc2tld1g7XG5cblx0XHRcdFx0dG0uc3ZnID0gISEodC5nZXRCQm94ICYmIF9pc1NWRyh0KSk7XG5cdFx0XHRcdGlmICh0bS5zdmcpIHtcblx0XHRcdFx0XHRfcGFyc2VTVkdPcmlnaW4odCwgX2dldFN0eWxlKHQsIF90cmFuc2Zvcm1PcmlnaW5Qcm9wLCBjcywgZmFsc2UsIFwiNTAlIDUwJVwiKSArIFwiXCIsIHRtLCB0LmdldEF0dHJpYnV0ZShcImRhdGEtc3ZnLW9yaWdpblwiKSk7XG5cdFx0XHRcdFx0X3VzZVNWR1RyYW5zZm9ybUF0dHIgPSBDU1NQbHVnaW4udXNlU1ZHVHJhbnNmb3JtQXR0ciB8fCBfZm9yY2VTVkdUcmFuc2Zvcm1BdHRyO1xuXHRcdFx0XHR9XG5cdFx0XHRcdG0gPSBfZ2V0TWF0cml4KHQpO1xuXHRcdFx0XHRpZiAobSAhPT0gX2lkZW50aXR5MkRNYXRyaXgpIHtcblxuXHRcdFx0XHRcdGlmIChtLmxlbmd0aCA9PT0gMTYpIHtcblx0XHRcdFx0XHRcdC8vd2UnbGwgb25seSBsb29rIGF0IHRoZXNlIHBvc2l0aW9uLXJlbGF0ZWQgNiB2YXJpYWJsZXMgZmlyc3QgYmVjYXVzZSBpZiB4L3kveiBhbGwgbWF0Y2gsIGl0J3MgcmVsYXRpdmVseSBzYWZlIHRvIGFzc3VtZSB3ZSBkb24ndCBuZWVkIHRvIHJlLXBhcnNlIGV2ZXJ5dGhpbmcgd2hpY2ggcmlza3MgbG9zaW5nIGltcG9ydGFudCByb3RhdGlvbmFsIGluZm9ybWF0aW9uIChsaWtlIHJvdGF0aW9uWDoxODAgcGx1cyByb3RhdGlvblk6MTgwIHdvdWxkIGxvb2sgdGhlIHNhbWUgYXMgcm90YXRpb246MTgwIC0gdGhlcmUncyBubyB3YXkgdG8ga25vdyBmb3Igc3VyZSB3aGljaCBkaXJlY3Rpb24gd2FzIHRha2VuIGJhc2VkIHNvbGVseSBvbiB0aGUgbWF0cml4M2QoKSB2YWx1ZXMpXG5cdFx0XHRcdFx0XHR2YXIgYTExID0gbVswXSwgYTIxID0gbVsxXSwgYTMxID0gbVsyXSwgYTQxID0gbVszXSxcblx0XHRcdFx0XHRcdFx0YTEyID0gbVs0XSwgYTIyID0gbVs1XSwgYTMyID0gbVs2XSwgYTQyID0gbVs3XSxcblx0XHRcdFx0XHRcdFx0YTEzID0gbVs4XSwgYTIzID0gbVs5XSwgYTMzID0gbVsxMF0sXG5cdFx0XHRcdFx0XHRcdGExNCA9IG1bMTJdLCBhMjQgPSBtWzEzXSwgYTM0ID0gbVsxNF0sXG5cdFx0XHRcdFx0XHRcdGE0MyA9IG1bMTFdLFxuXHRcdFx0XHRcdFx0XHRhbmdsZSA9IE1hdGguYXRhbjIoYTMyLCBhMzMpLFxuXHRcdFx0XHRcdFx0XHR0MSwgdDIsIHQzLCB0NCwgY29zLCBzaW47XG5cblx0XHRcdFx0XHRcdC8vd2UgbWFudWFsbHkgY29tcGVuc2F0ZSBmb3Igbm9uLXplcm8geiBjb21wb25lbnQgb2YgdHJhbnNmb3JtT3JpZ2luIHRvIHdvcmsgYXJvdW5kIGJ1Z3MgaW4gU2FmYXJpXG5cdFx0XHRcdFx0XHRpZiAodG0uek9yaWdpbikge1xuXHRcdFx0XHRcdFx0XHRhMzQgPSAtdG0uek9yaWdpbjtcblx0XHRcdFx0XHRcdFx0YTE0ID0gYTEzKmEzNC1tWzEyXTtcblx0XHRcdFx0XHRcdFx0YTI0ID0gYTIzKmEzNC1tWzEzXTtcblx0XHRcdFx0XHRcdFx0YTM0ID0gYTMzKmEzNCt0bS56T3JpZ2luLW1bMTRdO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0dG0ucm90YXRpb25YID0gYW5nbGUgKiBfUkFEMkRFRztcblx0XHRcdFx0XHRcdC8vcm90YXRpb25YXG5cdFx0XHRcdFx0XHRpZiAoYW5nbGUpIHtcblx0XHRcdFx0XHRcdFx0Y29zID0gTWF0aC5jb3MoLWFuZ2xlKTtcblx0XHRcdFx0XHRcdFx0c2luID0gTWF0aC5zaW4oLWFuZ2xlKTtcblx0XHRcdFx0XHRcdFx0dDEgPSBhMTIqY29zK2ExMypzaW47XG5cdFx0XHRcdFx0XHRcdHQyID0gYTIyKmNvcythMjMqc2luO1xuXHRcdFx0XHRcdFx0XHR0MyA9IGEzMipjb3MrYTMzKnNpbjtcblx0XHRcdFx0XHRcdFx0YTEzID0gYTEyKi1zaW4rYTEzKmNvcztcblx0XHRcdFx0XHRcdFx0YTIzID0gYTIyKi1zaW4rYTIzKmNvcztcblx0XHRcdFx0XHRcdFx0YTMzID0gYTMyKi1zaW4rYTMzKmNvcztcblx0XHRcdFx0XHRcdFx0YTQzID0gYTQyKi1zaW4rYTQzKmNvcztcblx0XHRcdFx0XHRcdFx0YTEyID0gdDE7XG5cdFx0XHRcdFx0XHRcdGEyMiA9IHQyO1xuXHRcdFx0XHRcdFx0XHRhMzIgPSB0Mztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdC8vcm90YXRpb25ZXG5cdFx0XHRcdFx0XHRhbmdsZSA9IE1hdGguYXRhbjIoLWEzMSwgYTMzKTtcblx0XHRcdFx0XHRcdHRtLnJvdGF0aW9uWSA9IGFuZ2xlICogX1JBRDJERUc7XG5cdFx0XHRcdFx0XHRpZiAoYW5nbGUpIHtcblx0XHRcdFx0XHRcdFx0Y29zID0gTWF0aC5jb3MoLWFuZ2xlKTtcblx0XHRcdFx0XHRcdFx0c2luID0gTWF0aC5zaW4oLWFuZ2xlKTtcblx0XHRcdFx0XHRcdFx0dDEgPSBhMTEqY29zLWExMypzaW47XG5cdFx0XHRcdFx0XHRcdHQyID0gYTIxKmNvcy1hMjMqc2luO1xuXHRcdFx0XHRcdFx0XHR0MyA9IGEzMSpjb3MtYTMzKnNpbjtcblx0XHRcdFx0XHRcdFx0YTIzID0gYTIxKnNpbithMjMqY29zO1xuXHRcdFx0XHRcdFx0XHRhMzMgPSBhMzEqc2luK2EzMypjb3M7XG5cdFx0XHRcdFx0XHRcdGE0MyA9IGE0MSpzaW4rYTQzKmNvcztcblx0XHRcdFx0XHRcdFx0YTExID0gdDE7XG5cdFx0XHRcdFx0XHRcdGEyMSA9IHQyO1xuXHRcdFx0XHRcdFx0XHRhMzEgPSB0Mztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdC8vcm90YXRpb25aXG5cdFx0XHRcdFx0XHRhbmdsZSA9IE1hdGguYXRhbjIoYTIxLCBhMTEpO1xuXHRcdFx0XHRcdFx0dG0ucm90YXRpb24gPSBhbmdsZSAqIF9SQUQyREVHO1xuXHRcdFx0XHRcdFx0aWYgKGFuZ2xlKSB7XG5cdFx0XHRcdFx0XHRcdGNvcyA9IE1hdGguY29zKC1hbmdsZSk7XG5cdFx0XHRcdFx0XHRcdHNpbiA9IE1hdGguc2luKC1hbmdsZSk7XG5cdFx0XHRcdFx0XHRcdGExMSA9IGExMSpjb3MrYTEyKnNpbjtcblx0XHRcdFx0XHRcdFx0dDIgPSBhMjEqY29zK2EyMipzaW47XG5cdFx0XHRcdFx0XHRcdGEyMiA9IGEyMSotc2luK2EyMipjb3M7XG5cdFx0XHRcdFx0XHRcdGEzMiA9IGEzMSotc2luK2EzMipjb3M7XG5cdFx0XHRcdFx0XHRcdGEyMSA9IHQyO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRpZiAodG0ucm90YXRpb25YICYmIE1hdGguYWJzKHRtLnJvdGF0aW9uWCkgKyBNYXRoLmFicyh0bS5yb3RhdGlvbikgPiAzNTkuOSkgeyAvL3doZW4gcm90YXRpb25ZIGlzIHNldCwgaXQgd2lsbCBvZnRlbiBiZSBwYXJzZWQgYXMgMTgwIGRlZ3JlZXMgZGlmZmVyZW50IHRoYW4gaXQgc2hvdWxkIGJlLCBhbmQgcm90YXRpb25YIGFuZCByb3RhdGlvbiBib3RoIGJlaW5nIDE4MCAoaXQgbG9va3MgdGhlIHNhbWUpLCBzbyB3ZSBhZGp1c3QgZm9yIHRoYXQgaGVyZS5cblx0XHRcdFx0XHRcdFx0dG0ucm90YXRpb25YID0gdG0ucm90YXRpb24gPSAwO1xuXHRcdFx0XHRcdFx0XHR0bS5yb3RhdGlvblkgPSAxODAgLSB0bS5yb3RhdGlvblk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdHRtLnNjYWxlWCA9ICgoTWF0aC5zcXJ0KGExMSAqIGExMSArIGEyMSAqIGEyMSkgKiBybmQgKyAwLjUpIHwgMCkgLyBybmQ7XG5cdFx0XHRcdFx0XHR0bS5zY2FsZVkgPSAoKE1hdGguc3FydChhMjIgKiBhMjIgKyBhMjMgKiBhMjMpICogcm5kICsgMC41KSB8IDApIC8gcm5kO1xuXHRcdFx0XHRcdFx0dG0uc2NhbGVaID0gKChNYXRoLnNxcnQoYTMyICogYTMyICsgYTMzICogYTMzKSAqIHJuZCArIDAuNSkgfCAwKSAvIHJuZDtcblx0XHRcdFx0XHRcdGlmICh0bS5yb3RhdGlvblggfHwgdG0ucm90YXRpb25ZKSB7XG5cdFx0XHRcdFx0XHRcdHRtLnNrZXdYID0gMDtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHRtLnNrZXdYID0gKGExMiB8fCBhMjIpID8gTWF0aC5hdGFuMihhMTIsIGEyMikgKiBfUkFEMkRFRyArIHRtLnJvdGF0aW9uIDogdG0uc2tld1ggfHwgMDtcblx0XHRcdFx0XHRcdFx0aWYgKE1hdGguYWJzKHRtLnNrZXdYKSA+IDkwICYmIE1hdGguYWJzKHRtLnNrZXdYKSA8IDI3MCkge1xuXHRcdFx0XHRcdFx0XHRcdGlmIChpbnZYKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR0bS5zY2FsZVggKj0gLTE7XG5cdFx0XHRcdFx0XHRcdFx0XHR0bS5za2V3WCArPSAodG0ucm90YXRpb24gPD0gMCkgPyAxODAgOiAtMTgwO1xuXHRcdFx0XHRcdFx0XHRcdFx0dG0ucm90YXRpb24gKz0gKHRtLnJvdGF0aW9uIDw9IDApID8gMTgwIDogLTE4MDtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0dG0uc2NhbGVZICo9IC0xO1xuXHRcdFx0XHRcdFx0XHRcdFx0dG0uc2tld1ggKz0gKHRtLnNrZXdYIDw9IDApID8gMTgwIDogLTE4MDtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHRtLnBlcnNwZWN0aXZlID0gYTQzID8gMSAvICgoYTQzIDwgMCkgPyAtYTQzIDogYTQzKSA6IDA7XG5cdFx0XHRcdFx0XHR0bS54ID0gYTE0O1xuXHRcdFx0XHRcdFx0dG0ueSA9IGEyNDtcblx0XHRcdFx0XHRcdHRtLnogPSBhMzQ7XG5cdFx0XHRcdFx0XHRpZiAodG0uc3ZnKSB7XG5cdFx0XHRcdFx0XHRcdHRtLnggLT0gdG0ueE9yaWdpbiAtICh0bS54T3JpZ2luICogYTExIC0gdG0ueU9yaWdpbiAqIGExMik7XG5cdFx0XHRcdFx0XHRcdHRtLnkgLT0gdG0ueU9yaWdpbiAtICh0bS55T3JpZ2luICogYTIxIC0gdG0ueE9yaWdpbiAqIGEyMik7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR9IGVsc2UgaWYgKCghX3N1cHBvcnRzM0QgfHwgcGFyc2UgfHwgIW0ubGVuZ3RoIHx8IHRtLnggIT09IG1bNF0gfHwgdG0ueSAhPT0gbVs1XSB8fCAoIXRtLnJvdGF0aW9uWCAmJiAhdG0ucm90YXRpb25ZKSkpIHsgLy9zb21ldGltZXMgYSA2LWVsZW1lbnQgbWF0cml4IGlzIHJldHVybmVkIGV2ZW4gd2hlbiB3ZSBwZXJmb3JtZWQgM0QgdHJhbnNmb3JtcywgbGlrZSBpZiByb3RhdGlvblggYW5kIHJvdGF0aW9uWSBhcmUgMTgwLiBJbiBjYXNlcyBsaWtlIHRoaXMsIHdlIHN0aWxsIG5lZWQgdG8gaG9ub3IgdGhlIDNEIHRyYW5zZm9ybXMuIElmIHdlIGp1c3QgcmVseSBvbiB0aGUgMkQgaW5mbywgaXQgY291bGQgYWZmZWN0IGhvdyB0aGUgZGF0YSBpcyBpbnRlcnByZXRlZCwgbGlrZSBzY2FsZVkgbWlnaHQgZ2V0IHNldCB0byAtMSBvciByb3RhdGlvbiBjb3VsZCBnZXQgb2Zmc2V0IGJ5IDE4MCBkZWdyZWVzLiBGb3IgZXhhbXBsZSwgZG8gYSBUd2VlbkxpdGUudG8oZWxlbWVudCwgMSwge2Nzczp7cm90YXRpb25YOjE4MCwgcm90YXRpb25ZOjE4MH19KSBhbmQgdGhlbiBsYXRlciwgVHdlZW5MaXRlLnRvKGVsZW1lbnQsIDEsIHtjc3M6e3JvdGF0aW9uWDowfX0pIGFuZCB3aXRob3V0IHRoaXMgY29uZGl0aW9uYWwgbG9naWMgaW4gcGxhY2UsIGl0J2QganVtcCB0byBhIHN0YXRlIG9mIGJlaW5nIHVucm90YXRlZCB3aGVuIHRoZSAybmQgdHdlZW4gc3RhcnRzLiBUaGVuIGFnYWluLCB3ZSBuZWVkIHRvIGhvbm9yIHRoZSBmYWN0IHRoYXQgdGhlIHVzZXIgQ09VTEQgYWx0ZXIgdGhlIHRyYW5zZm9ybXMgb3V0c2lkZSBvZiBDU1NQbHVnaW4sIGxpa2UgYnkgbWFudWFsbHkgYXBwbHlpbmcgbmV3IGNzcywgc28gd2UgdHJ5IHRvIHNlbnNlIHRoYXQgYnkgbG9va2luZyBhdCB4IGFuZCB5IGJlY2F1c2UgaWYgdGhvc2UgY2hhbmdlZCwgd2Uga25vdyB0aGUgY2hhbmdlcyB3ZXJlIG1hZGUgb3V0c2lkZSBDU1NQbHVnaW4gYW5kIHdlIGZvcmNlIGEgcmVpbnRlcnByZXRhdGlvbiBvZiB0aGUgbWF0cml4IHZhbHVlcy4gQWxzbywgaW4gV2Via2l0IGJyb3dzZXJzLCBpZiB0aGUgZWxlbWVudCdzIFwiZGlzcGxheVwiIGlzIFwibm9uZVwiLCBpdHMgY2FsY3VsYXRlZCBzdHlsZSB2YWx1ZSB3aWxsIGFsd2F5cyByZXR1cm4gZW1wdHksIHNvIGlmIHdlJ3ZlIGFscmVhZHkgcmVjb3JkZWQgdGhlIHZhbHVlcyBpbiB0aGUgX2dzVHJhbnNmb3JtIG9iamVjdCwgd2UnbGwganVzdCByZWx5IG9uIHRob3NlLlxuXHRcdFx0XHRcdFx0dmFyIGsgPSAobS5sZW5ndGggPj0gNiksXG5cdFx0XHRcdFx0XHRcdGEgPSBrID8gbVswXSA6IDEsXG5cdFx0XHRcdFx0XHRcdGIgPSBtWzFdIHx8IDAsXG5cdFx0XHRcdFx0XHRcdGMgPSBtWzJdIHx8IDAsXG5cdFx0XHRcdFx0XHRcdGQgPSBrID8gbVszXSA6IDE7XG5cdFx0XHRcdFx0XHR0bS54ID0gbVs0XSB8fCAwO1xuXHRcdFx0XHRcdFx0dG0ueSA9IG1bNV0gfHwgMDtcblx0XHRcdFx0XHRcdHNjYWxlWCA9IE1hdGguc3FydChhICogYSArIGIgKiBiKTtcblx0XHRcdFx0XHRcdHNjYWxlWSA9IE1hdGguc3FydChkICogZCArIGMgKiBjKTtcblx0XHRcdFx0XHRcdHJvdGF0aW9uID0gKGEgfHwgYikgPyBNYXRoLmF0YW4yKGIsIGEpICogX1JBRDJERUcgOiB0bS5yb3RhdGlvbiB8fCAwOyAvL25vdGU6IGlmIHNjYWxlWCBpcyAwLCB3ZSBjYW5ub3QgYWNjdXJhdGVseSBtZWFzdXJlIHJvdGF0aW9uLiBTYW1lIGZvciBza2V3WCB3aXRoIGEgc2NhbGVZIG9mIDAuIFRoZXJlZm9yZSwgd2UgZGVmYXVsdCB0byB0aGUgcHJldmlvdXNseSByZWNvcmRlZCB2YWx1ZSAob3IgemVybyBpZiB0aGF0IGRvZXNuJ3QgZXhpc3QpLlxuXHRcdFx0XHRcdFx0c2tld1ggPSAoYyB8fCBkKSA/IE1hdGguYXRhbjIoYywgZCkgKiBfUkFEMkRFRyArIHJvdGF0aW9uIDogdG0uc2tld1ggfHwgMDtcblx0XHRcdFx0XHRcdGlmIChNYXRoLmFicyhza2V3WCkgPiA5MCAmJiBNYXRoLmFicyhza2V3WCkgPCAyNzApIHtcblx0XHRcdFx0XHRcdFx0aWYgKGludlgpIHtcblx0XHRcdFx0XHRcdFx0XHRzY2FsZVggKj0gLTE7XG5cdFx0XHRcdFx0XHRcdFx0c2tld1ggKz0gKHJvdGF0aW9uIDw9IDApID8gMTgwIDogLTE4MDtcblx0XHRcdFx0XHRcdFx0XHRyb3RhdGlvbiArPSAocm90YXRpb24gPD0gMCkgPyAxODAgOiAtMTgwO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdHNjYWxlWSAqPSAtMTtcblx0XHRcdFx0XHRcdFx0XHRza2V3WCArPSAoc2tld1ggPD0gMCkgPyAxODAgOiAtMTgwO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR0bS5zY2FsZVggPSBzY2FsZVg7XG5cdFx0XHRcdFx0XHR0bS5zY2FsZVkgPSBzY2FsZVk7XG5cdFx0XHRcdFx0XHR0bS5yb3RhdGlvbiA9IHJvdGF0aW9uO1xuXHRcdFx0XHRcdFx0dG0uc2tld1ggPSBza2V3WDtcblx0XHRcdFx0XHRcdGlmIChfc3VwcG9ydHMzRCkge1xuXHRcdFx0XHRcdFx0XHR0bS5yb3RhdGlvblggPSB0bS5yb3RhdGlvblkgPSB0bS56ID0gMDtcblx0XHRcdFx0XHRcdFx0dG0ucGVyc3BlY3RpdmUgPSBkZWZhdWx0VHJhbnNmb3JtUGVyc3BlY3RpdmU7XG5cdFx0XHRcdFx0XHRcdHRtLnNjYWxlWiA9IDE7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAodG0uc3ZnKSB7XG5cdFx0XHRcdFx0XHRcdHRtLnggLT0gdG0ueE9yaWdpbiAtICh0bS54T3JpZ2luICogYSArIHRtLnlPcmlnaW4gKiBjKTtcblx0XHRcdFx0XHRcdFx0dG0ueSAtPSB0bS55T3JpZ2luIC0gKHRtLnhPcmlnaW4gKiBiICsgdG0ueU9yaWdpbiAqIGQpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0bS56T3JpZ2luID0gek9yaWdpbjtcblx0XHRcdFx0XHQvL3NvbWUgYnJvd3NlcnMgaGF2ZSBhIGhhcmQgdGltZSB3aXRoIHZlcnkgc21hbGwgdmFsdWVzIGxpa2UgMi40NDkyOTM1OTgyOTQ3MDY0ZS0xNiAobm90aWNlIHRoZSBcImUtXCIgdG93YXJkcyB0aGUgZW5kKSBhbmQgd291bGQgcmVuZGVyIHRoZSBvYmplY3Qgc2xpZ2h0bHkgb2ZmLiBTbyB3ZSByb3VuZCB0byAwIGluIHRoZXNlIGNhc2VzLiBUaGUgY29uZGl0aW9uYWwgbG9naWMgaGVyZSBpcyBmYXN0ZXIgdGhhbiBjYWxsaW5nIE1hdGguYWJzKCkuIEFsc28sIGJyb3dzZXJzIHRlbmQgdG8gcmVuZGVyIGEgU0xJR0hUTFkgcm90YXRlZCBvYmplY3QgaW4gYSBmdXp6eSB3YXksIHNvIHdlIG5lZWQgdG8gc25hcCB0byBleGFjdGx5IDAgd2hlbiBhcHByb3ByaWF0ZS5cblx0XHRcdFx0XHRmb3IgKGkgaW4gdG0pIHtcblx0XHRcdFx0XHRcdGlmICh0bVtpXSA8IG1pbikgaWYgKHRtW2ldID4gLW1pbikge1xuXHRcdFx0XHRcdFx0XHR0bVtpXSA9IDA7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdC8vREVCVUc6IF9sb2coXCJwYXJzZWQgcm90YXRpb24gb2YgXCIgKyB0LmdldEF0dHJpYnV0ZShcImlkXCIpK1wiOiBcIisodG0ucm90YXRpb25YKStcIiwgXCIrKHRtLnJvdGF0aW9uWSkrXCIsIFwiKyh0bS5yb3RhdGlvbikrXCIsIHNjYWxlOiBcIit0bS5zY2FsZVgrXCIsIFwiK3RtLnNjYWxlWStcIiwgXCIrdG0uc2NhbGVaK1wiLCBwb3NpdGlvbjogXCIrdG0ueCtcIiwgXCIrdG0ueStcIiwgXCIrdG0ueitcIiwgcGVyc3BlY3RpdmU6IFwiK3RtLnBlcnNwZWN0aXZlKyBcIiwgb3JpZ2luOiBcIisgdG0ueE9yaWdpbisgXCIsXCIrIHRtLnlPcmlnaW4pO1xuXHRcdFx0XHRpZiAocmVjKSB7XG5cdFx0XHRcdFx0dC5fZ3NUcmFuc2Zvcm0gPSB0bTsgLy9yZWNvcmQgdG8gdGhlIG9iamVjdCdzIF9nc1RyYW5zZm9ybSB3aGljaCB3ZSB1c2Ugc28gdGhhdCB0d2VlbnMgY2FuIGNvbnRyb2wgaW5kaXZpZHVhbCBwcm9wZXJ0aWVzIGluZGVwZW5kZW50bHkgKHdlIG5lZWQgYWxsIHRoZSBwcm9wZXJ0aWVzIHRvIGFjY3VyYXRlbHkgcmVjb21wb3NlIHRoZSBtYXRyaXggaW4gdGhlIHNldFJhdGlvKCkgbWV0aG9kKVxuXHRcdFx0XHRcdGlmICh0bS5zdmcpIHsgLy9pZiB3ZSdyZSBzdXBwb3NlZCB0byBhcHBseSB0cmFuc2Zvcm1zIHRvIHRoZSBTVkcgZWxlbWVudCdzIFwidHJhbnNmb3JtXCIgYXR0cmlidXRlLCBtYWtlIHN1cmUgdGhlcmUgYXJlbid0IGFueSBDU1MgdHJhbnNmb3JtcyBhcHBsaWVkIG9yIHRoZXknbGwgb3ZlcnJpZGUgdGhlIGF0dHJpYnV0ZSBvbmVzLiBBbHNvIGNsZWFyIHRoZSB0cmFuc2Zvcm0gYXR0cmlidXRlIGlmIHdlJ3JlIHVzaW5nIENTUywganVzdCB0byBiZSBjbGVhbi5cblx0XHRcdFx0XHRcdGlmIChfdXNlU1ZHVHJhbnNmb3JtQXR0ciAmJiB0LnN0eWxlW190cmFuc2Zvcm1Qcm9wXSkge1xuXHRcdFx0XHRcdFx0XHRUd2VlbkxpdGUuZGVsYXllZENhbGwoMC4wMDEsIGZ1bmN0aW9uKCl7IC8vaWYgd2UgYXBwbHkgdGhpcyByaWdodCBhd2F5IChiZWZvcmUgYW55dGhpbmcgaGFzIHJlbmRlcmVkKSwgd2UgcmlzayB0aGVyZSBiZWluZyBubyB0cmFuc2Zvcm1zIGZvciBhIGJyaWVmIG1vbWVudCBhbmQgaXQgYWxzbyBpbnRlcmZlcmVzIHdpdGggYWRqdXN0aW5nIHRoZSB0cmFuc2Zvcm1PcmlnaW4gaW4gYSB0d2VlbiB3aXRoIGltbWVkaWF0ZVJlbmRlcjp0cnVlIChpdCdkIHRyeSByZWFkaW5nIHRoZSBtYXRyaXggYW5kIGl0IHdvdWxkbid0IGhhdmUgdGhlIGFwcHJvcHJpYXRlIGRhdGEgaW4gcGxhY2UgYmVjYXVzZSB3ZSBqdXN0IHJlbW92ZWQgaXQpLlxuXHRcdFx0XHRcdFx0XHRcdF9yZW1vdmVQcm9wKHQuc3R5bGUsIF90cmFuc2Zvcm1Qcm9wKTtcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCFfdXNlU1ZHVHJhbnNmb3JtQXR0ciAmJiB0LmdldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiKSkge1xuXHRcdFx0XHRcdFx0XHRUd2VlbkxpdGUuZGVsYXllZENhbGwoMC4wMDEsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0dC5yZW1vdmVBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIik7XG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdG07XG5cdFx0XHR9LFxuXG5cdFx0XHQvL2ZvciBzZXR0aW5nIDJEIHRyYW5zZm9ybXMgaW4gSUU2LCBJRTcsIGFuZCBJRTggKG11c3QgdXNlIGEgXCJmaWx0ZXJcIiB0byBlbXVsYXRlIHRoZSBiZWhhdmlvciBvZiBtb2Rlcm4gZGF5IGJyb3dzZXIgdHJhbnNmb3Jtcylcblx0XHRcdF9zZXRJRVRyYW5zZm9ybVJhdGlvID0gZnVuY3Rpb24odikge1xuXHRcdFx0XHR2YXIgdCA9IHRoaXMuZGF0YSwgLy9yZWZlcnMgdG8gdGhlIGVsZW1lbnQncyBfZ3NUcmFuc2Zvcm0gb2JqZWN0XG5cdFx0XHRcdFx0YW5nID0gLXQucm90YXRpb24gKiBfREVHMlJBRCxcblx0XHRcdFx0XHRza2V3ID0gYW5nICsgdC5za2V3WCAqIF9ERUcyUkFELFxuXHRcdFx0XHRcdHJuZCA9IDEwMDAwMCxcblx0XHRcdFx0XHRhID0gKChNYXRoLmNvcyhhbmcpICogdC5zY2FsZVggKiBybmQpIHwgMCkgLyBybmQsXG5cdFx0XHRcdFx0YiA9ICgoTWF0aC5zaW4oYW5nKSAqIHQuc2NhbGVYICogcm5kKSB8IDApIC8gcm5kLFxuXHRcdFx0XHRcdGMgPSAoKE1hdGguc2luKHNrZXcpICogLXQuc2NhbGVZICogcm5kKSB8IDApIC8gcm5kLFxuXHRcdFx0XHRcdGQgPSAoKE1hdGguY29zKHNrZXcpICogdC5zY2FsZVkgKiBybmQpIHwgMCkgLyBybmQsXG5cdFx0XHRcdFx0c3R5bGUgPSB0aGlzLnQuc3R5bGUsXG5cdFx0XHRcdFx0Y3MgPSB0aGlzLnQuY3VycmVudFN0eWxlLFxuXHRcdFx0XHRcdGZpbHRlcnMsIHZhbDtcblx0XHRcdFx0aWYgKCFjcykge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHR2YWwgPSBiOyAvL2p1c3QgZm9yIHN3YXBwaW5nIHRoZSB2YXJpYWJsZXMgYW4gaW52ZXJ0aW5nIHRoZW0gKHJldXNlZCBcInZhbFwiIHRvIGF2b2lkIGNyZWF0aW5nIGFub3RoZXIgdmFyaWFibGUgaW4gbWVtb3J5KS4gSUUncyBmaWx0ZXIgbWF0cml4IHVzZXMgYSBub24tc3RhbmRhcmQgbWF0cml4IGNvbmZpZ3VyYXRpb24gKGFuZ2xlIGdvZXMgdGhlIG9wcG9zaXRlIHdheSwgYW5kIGIgYW5kIGMgYXJlIHJldmVyc2VkIGFuZCBpbnZlcnRlZClcblx0XHRcdFx0YiA9IC1jO1xuXHRcdFx0XHRjID0gLXZhbDtcblx0XHRcdFx0ZmlsdGVycyA9IGNzLmZpbHRlcjtcblx0XHRcdFx0c3R5bGUuZmlsdGVyID0gXCJcIjsgLy9yZW1vdmUgZmlsdGVycyBzbyB0aGF0IHdlIGNhbiBhY2N1cmF0ZWx5IG1lYXN1cmUgb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0XG5cdFx0XHRcdHZhciB3ID0gdGhpcy50Lm9mZnNldFdpZHRoLFxuXHRcdFx0XHRcdGggPSB0aGlzLnQub2Zmc2V0SGVpZ2h0LFxuXHRcdFx0XHRcdGNsaXAgPSAoY3MucG9zaXRpb24gIT09IFwiYWJzb2x1dGVcIiksXG5cdFx0XHRcdFx0bSA9IFwicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0Lk1hdHJpeChNMTE9XCIgKyBhICsgXCIsIE0xMj1cIiArIGIgKyBcIiwgTTIxPVwiICsgYyArIFwiLCBNMjI9XCIgKyBkLFxuXHRcdFx0XHRcdG94ID0gdC54ICsgKHcgKiB0LnhQZXJjZW50IC8gMTAwKSxcblx0XHRcdFx0XHRveSA9IHQueSArIChoICogdC55UGVyY2VudCAvIDEwMCksXG5cdFx0XHRcdFx0ZHgsIGR5O1xuXG5cdFx0XHRcdC8vaWYgdHJhbnNmb3JtT3JpZ2luIGlzIGJlaW5nIHVzZWQsIGFkanVzdCB0aGUgb2Zmc2V0IHggYW5kIHlcblx0XHRcdFx0aWYgKHQub3ggIT0gbnVsbCkge1xuXHRcdFx0XHRcdGR4ID0gKCh0Lm94cCkgPyB3ICogdC5veCAqIDAuMDEgOiB0Lm94KSAtIHcgLyAyO1xuXHRcdFx0XHRcdGR5ID0gKCh0Lm95cCkgPyBoICogdC5veSAqIDAuMDEgOiB0Lm95KSAtIGggLyAyO1xuXHRcdFx0XHRcdG94ICs9IGR4IC0gKGR4ICogYSArIGR5ICogYik7XG5cdFx0XHRcdFx0b3kgKz0gZHkgLSAoZHggKiBjICsgZHkgKiBkKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICghY2xpcCkge1xuXHRcdFx0XHRcdG0gKz0gXCIsIHNpemluZ01ldGhvZD0nYXV0byBleHBhbmQnKVwiO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGR4ID0gKHcgLyAyKTtcblx0XHRcdFx0XHRkeSA9IChoIC8gMik7XG5cdFx0XHRcdFx0Ly90cmFuc2xhdGUgdG8gZW5zdXJlIHRoYXQgdHJhbnNmb3JtYXRpb25zIG9jY3VyIGFyb3VuZCB0aGUgY29ycmVjdCBvcmlnaW4gKGRlZmF1bHQgaXMgY2VudGVyKS5cblx0XHRcdFx0XHRtICs9IFwiLCBEeD1cIiArIChkeCAtIChkeCAqIGEgKyBkeSAqIGIpICsgb3gpICsgXCIsIER5PVwiICsgKGR5IC0gKGR4ICogYyArIGR5ICogZCkgKyBveSkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoZmlsdGVycy5pbmRleE9mKFwiRFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuTWF0cml4KFwiKSAhPT0gLTEpIHtcblx0XHRcdFx0XHRzdHlsZS5maWx0ZXIgPSBmaWx0ZXJzLnJlcGxhY2UoX2llU2V0TWF0cml4RXhwLCBtKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdHlsZS5maWx0ZXIgPSBtICsgXCIgXCIgKyBmaWx0ZXJzOyAvL3dlIG11c3QgYWx3YXlzIHB1dCB0aGUgdHJhbnNmb3JtL21hdHJpeCBGSVJTVCAoYmVmb3JlIGFscGhhKG9wYWNpdHk9eHgpKSB0byBhdm9pZCBhbiBJRSBidWcgdGhhdCBzbGljZXMgcGFydCBvZiB0aGUgb2JqZWN0IHdoZW4gcm90YXRpb24gaXMgYXBwbGllZCB3aXRoIGFscGhhLlxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly9hdCB0aGUgZW5kIG9yIGJlZ2lubmluZyBvZiB0aGUgdHdlZW4sIGlmIHRoZSBtYXRyaXggaXMgbm9ybWFsICgxLCAwLCAwLCAxKSBhbmQgb3BhY2l0eSBpcyAxMDAgKG9yIGRvZXNuJ3QgZXhpc3QpLCByZW1vdmUgdGhlIGZpbHRlciB0byBpbXByb3ZlIGJyb3dzZXIgcGVyZm9ybWFuY2UuXG5cdFx0XHRcdGlmICh2ID09PSAwIHx8IHYgPT09IDEpIGlmIChhID09PSAxKSBpZiAoYiA9PT0gMCkgaWYgKGMgPT09IDApIGlmIChkID09PSAxKSBpZiAoIWNsaXAgfHwgbS5pbmRleE9mKFwiRHg9MCwgRHk9MFwiKSAhPT0gLTEpIGlmICghX29wYWNpdHlFeHAudGVzdChmaWx0ZXJzKSB8fCBwYXJzZUZsb2F0KFJlZ0V4cC4kMSkgPT09IDEwMCkgaWYgKGZpbHRlcnMuaW5kZXhPZihcImdyYWRpZW50KFwiICYmIGZpbHRlcnMuaW5kZXhPZihcIkFscGhhXCIpKSA9PT0gLTEpIHtcblx0XHRcdFx0XHRzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoXCJmaWx0ZXJcIik7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvL3dlIG11c3Qgc2V0IHRoZSBtYXJnaW5zIEFGVEVSIGFwcGx5aW5nIHRoZSBmaWx0ZXIgaW4gb3JkZXIgdG8gYXZvaWQgc29tZSBidWdzIGluIElFOCB0aGF0IGNvdWxkIChpbiByYXJlIHNjZW5hcmlvcykgY2F1c2UgdGhlbSB0byBiZSBpZ25vcmVkIGludGVybWl0dGVudGx5ICh2aWJyYXRpb24pLlxuXHRcdFx0XHRpZiAoIWNsaXApIHtcblx0XHRcdFx0XHR2YXIgbXVsdCA9IChfaWVWZXJzIDwgOCkgPyAxIDogLTEsIC8vaW4gSW50ZXJuZXQgRXhwbG9yZXIgNyBhbmQgYmVmb3JlLCB0aGUgYm94IG1vZGVsIGlzIGJyb2tlbiwgY2F1c2luZyB0aGUgYnJvd3NlciB0byB0cmVhdCB0aGUgd2lkdGgvaGVpZ2h0IG9mIHRoZSBhY3R1YWwgcm90YXRlZCBmaWx0ZXJlZCBpbWFnZSBhcyB0aGUgd2lkdGgvaGVpZ2h0IG9mIHRoZSBib3ggaXRzZWxmLCBidXQgTWljcm9zb2Z0IGNvcnJlY3RlZCB0aGF0IGluIElFOC4gV2UgbXVzdCB1c2UgYSBuZWdhdGl2ZSBvZmZzZXQgaW4gSUU4IG9uIHRoZSByaWdodC9ib3R0b21cblx0XHRcdFx0XHRcdG1hcmcsIHByb3AsIGRpZjtcblx0XHRcdFx0XHRkeCA9IHQuaWVPZmZzZXRYIHx8IDA7XG5cdFx0XHRcdFx0ZHkgPSB0LmllT2Zmc2V0WSB8fCAwO1xuXHRcdFx0XHRcdHQuaWVPZmZzZXRYID0gTWF0aC5yb3VuZCgodyAtICgoYSA8IDAgPyAtYSA6IGEpICogdyArIChiIDwgMCA/IC1iIDogYikgKiBoKSkgLyAyICsgb3gpO1xuXHRcdFx0XHRcdHQuaWVPZmZzZXRZID0gTWF0aC5yb3VuZCgoaCAtICgoZCA8IDAgPyAtZCA6IGQpICogaCArIChjIDwgMCA/IC1jIDogYykgKiB3KSkgLyAyICsgb3kpO1xuXHRcdFx0XHRcdGZvciAoaSA9IDA7IGkgPCA0OyBpKyspIHtcblx0XHRcdFx0XHRcdHByb3AgPSBfbWFyZ2luc1tpXTtcblx0XHRcdFx0XHRcdG1hcmcgPSBjc1twcm9wXTtcblx0XHRcdFx0XHRcdC8vd2UgbmVlZCB0byBnZXQgdGhlIGN1cnJlbnQgbWFyZ2luIGluIGNhc2UgaXQgaXMgYmVpbmcgdHdlZW5lZCBzZXBhcmF0ZWx5ICh3ZSB3YW50IHRvIHJlc3BlY3QgdGhhdCB0d2VlbidzIGNoYW5nZXMpXG5cdFx0XHRcdFx0XHR2YWwgPSAobWFyZy5pbmRleE9mKFwicHhcIikgIT09IC0xKSA/IHBhcnNlRmxvYXQobWFyZykgOiBfY29udmVydFRvUGl4ZWxzKHRoaXMudCwgcHJvcCwgcGFyc2VGbG9hdChtYXJnKSwgbWFyZy5yZXBsYWNlKF9zdWZmaXhFeHAsIFwiXCIpKSB8fCAwO1xuXHRcdFx0XHRcdFx0aWYgKHZhbCAhPT0gdFtwcm9wXSkge1xuXHRcdFx0XHRcdFx0XHRkaWYgPSAoaSA8IDIpID8gLXQuaWVPZmZzZXRYIDogLXQuaWVPZmZzZXRZOyAvL2lmIGFub3RoZXIgdHdlZW4gaXMgY29udHJvbGxpbmcgYSBtYXJnaW4sIHdlIGNhbm5vdCBvbmx5IGFwcGx5IHRoZSBkaWZmZXJlbmNlIGluIHRoZSBpZU9mZnNldHMsIHNvIHdlIGVzc2VudGlhbGx5IHplcm8tb3V0IHRoZSBkeCBhbmQgZHkgaGVyZSBpbiB0aGF0IGNhc2UuIFdlIHJlY29yZCB0aGUgbWFyZ2luKHMpIGxhdGVyIHNvIHRoYXQgd2UgY2FuIGtlZXAgY29tcGFyaW5nIHRoZW0sIG1ha2luZyB0aGlzIGNvZGUgdmVyeSBmbGV4aWJsZS5cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGRpZiA9IChpIDwgMikgPyBkeCAtIHQuaWVPZmZzZXRYIDogZHkgLSB0LmllT2Zmc2V0WTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHN0eWxlW3Byb3BdID0gKHRbcHJvcF0gPSBNYXRoLnJvdW5kKCB2YWwgLSBkaWYgKiAoKGkgPT09IDAgfHwgaSA9PT0gMikgPyAxIDogbXVsdCkgKSkgKyBcInB4XCI7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXG5cdFx0XHQvKiB0cmFuc2xhdGVzIGEgc3VwZXIgc21hbGwgZGVjaW1hbCB0byBhIHN0cmluZyBXSVRIT1VUIHNjaWVudGlmaWMgbm90YXRpb25cblx0XHRcdF9zYWZlRGVjaW1hbCA9IGZ1bmN0aW9uKG4pIHtcblx0XHRcdFx0dmFyIHMgPSAobiA8IDAgPyAtbiA6IG4pICsgXCJcIixcblx0XHRcdFx0XHRhID0gcy5zcGxpdChcImUtXCIpO1xuXHRcdFx0XHRyZXR1cm4gKG4gPCAwID8gXCItMC5cIiA6IFwiMC5cIikgKyBuZXcgQXJyYXkocGFyc2VJbnQoYVsxXSwgMTApIHx8IDApLmpvaW4oXCIwXCIpICsgYVswXS5zcGxpdChcIi5cIikuam9pbihcIlwiKTtcblx0XHRcdH0sXG5cdFx0XHQqL1xuXG5cdFx0XHRfc2V0VHJhbnNmb3JtUmF0aW8gPSBfaW50ZXJuYWxzLnNldDNEVHJhbnNmb3JtUmF0aW8gPSBfaW50ZXJuYWxzLnNldFRyYW5zZm9ybVJhdGlvID0gZnVuY3Rpb24odikge1xuXHRcdFx0XHR2YXIgdCA9IHRoaXMuZGF0YSwgLy9yZWZlcnMgdG8gdGhlIGVsZW1lbnQncyBfZ3NUcmFuc2Zvcm0gb2JqZWN0XG5cdFx0XHRcdFx0c3R5bGUgPSB0aGlzLnQuc3R5bGUsXG5cdFx0XHRcdFx0YW5nbGUgPSB0LnJvdGF0aW9uLFxuXHRcdFx0XHRcdHJvdGF0aW9uWCA9IHQucm90YXRpb25YLFxuXHRcdFx0XHRcdHJvdGF0aW9uWSA9IHQucm90YXRpb25ZLFxuXHRcdFx0XHRcdHN4ID0gdC5zY2FsZVgsXG5cdFx0XHRcdFx0c3kgPSB0LnNjYWxlWSxcblx0XHRcdFx0XHRzeiA9IHQuc2NhbGVaLFxuXHRcdFx0XHRcdHggPSB0LngsXG5cdFx0XHRcdFx0eSA9IHQueSxcblx0XHRcdFx0XHR6ID0gdC56LFxuXHRcdFx0XHRcdGlzU1ZHID0gdC5zdmcsXG5cdFx0XHRcdFx0cGVyc3BlY3RpdmUgPSB0LnBlcnNwZWN0aXZlLFxuXHRcdFx0XHRcdGZvcmNlM0QgPSB0LmZvcmNlM0QsXG5cdFx0XHRcdFx0YTExLCBhMTIsIGExMywgYTIxLCBhMjIsIGEyMywgYTMxLCBhMzIsIGEzMywgYTQxLCBhNDIsIGE0Myxcblx0XHRcdFx0XHR6T3JpZ2luLCBtaW4sIGNvcywgc2luLCB0MSwgdDIsIHRyYW5zZm9ybSwgY29tbWEsIHplcm8sIHNrZXcsIHJuZDtcblx0XHRcdFx0Ly9jaGVjayB0byBzZWUgaWYgd2Ugc2hvdWxkIHJlbmRlciBhcyAyRCAoYW5kIFNWR3MgbXVzdCB1c2UgMkQgd2hlbiBfdXNlU1ZHVHJhbnNmb3JtQXR0ciBpcyB0cnVlKVxuXHRcdFx0XHRpZiAoKCgoKHYgPT09IDEgfHwgdiA9PT0gMCkgJiYgZm9yY2UzRCA9PT0gXCJhdXRvXCIgJiYgKHRoaXMudHdlZW4uX3RvdGFsVGltZSA9PT0gdGhpcy50d2Vlbi5fdG90YWxEdXJhdGlvbiB8fCAhdGhpcy50d2Vlbi5fdG90YWxUaW1lKSkgfHwgIWZvcmNlM0QpICYmICF6ICYmICFwZXJzcGVjdGl2ZSAmJiAhcm90YXRpb25ZICYmICFyb3RhdGlvblggJiYgc3ogPT09IDEpIHx8IChfdXNlU1ZHVHJhbnNmb3JtQXR0ciAmJiBpc1NWRykgfHwgIV9zdXBwb3J0czNEKSB7IC8vb24gdGhlIGZpbmFsIHJlbmRlciAod2hpY2ggY291bGQgYmUgMCBmb3IgYSBmcm9tIHR3ZWVuKSwgaWYgdGhlcmUgYXJlIG5vIDNEIGFzcGVjdHMsIHJlbmRlciBpbiAyRCB0byBmcmVlIHVwIG1lbW9yeSBhbmQgaW1wcm92ZSBwZXJmb3JtYW5jZSBlc3BlY2lhbGx5IG9uIG1vYmlsZSBkZXZpY2VzLiBDaGVjayB0aGUgdHdlZW4ncyB0b3RhbFRpbWUvdG90YWxEdXJhdGlvbiB0b28gaW4gb3JkZXIgdG8gbWFrZSBzdXJlIGl0IGRvZXNuJ3QgaGFwcGVuIGJldHdlZW4gcmVwZWF0cyBpZiBpdCdzIGEgcmVwZWF0aW5nIHR3ZWVuLlxuXG5cdFx0XHRcdFx0Ly8yRFxuXHRcdFx0XHRcdGlmIChhbmdsZSB8fCB0LnNrZXdYIHx8IGlzU1ZHKSB7XG5cdFx0XHRcdFx0XHRhbmdsZSAqPSBfREVHMlJBRDtcblx0XHRcdFx0XHRcdHNrZXcgPSB0LnNrZXdYICogX0RFRzJSQUQ7XG5cdFx0XHRcdFx0XHRybmQgPSAxMDAwMDA7XG5cdFx0XHRcdFx0XHRhMTEgPSBNYXRoLmNvcyhhbmdsZSkgKiBzeDtcblx0XHRcdFx0XHRcdGEyMSA9IE1hdGguc2luKGFuZ2xlKSAqIHN4O1xuXHRcdFx0XHRcdFx0YTEyID0gTWF0aC5zaW4oYW5nbGUgLSBza2V3KSAqIC1zeTtcblx0XHRcdFx0XHRcdGEyMiA9IE1hdGguY29zKGFuZ2xlIC0gc2tldykgKiBzeTtcblx0XHRcdFx0XHRcdGlmIChza2V3ICYmIHQuc2tld1R5cGUgPT09IFwic2ltcGxlXCIpIHsgLy9ieSBkZWZhdWx0LCB3ZSBjb21wZW5zYXRlIHNrZXdpbmcgb24gdGhlIG90aGVyIGF4aXMgdG8gbWFrZSBpdCBsb29rIG1vcmUgbmF0dXJhbCwgYnV0IHlvdSBjYW4gc2V0IHRoZSBza2V3VHlwZSB0byBcInNpbXBsZVwiIHRvIHVzZSB0aGUgdW5jb21wZW5zYXRlZCBza2V3aW5nIHRoYXQgQ1NTIGRvZXNcblx0XHRcdFx0XHRcdFx0dDEgPSBNYXRoLnRhbihza2V3IC0gdC5za2V3WSAqIF9ERUcyUkFEKTtcblx0XHRcdFx0XHRcdFx0dDEgPSBNYXRoLnNxcnQoMSArIHQxICogdDEpO1xuXHRcdFx0XHRcdFx0XHRhMTIgKj0gdDE7XG5cdFx0XHRcdFx0XHRcdGEyMiAqPSB0MTtcblx0XHRcdFx0XHRcdFx0aWYgKHQuc2tld1kpIHtcblx0XHRcdFx0XHRcdFx0XHR0MSA9IE1hdGgudGFuKHQuc2tld1kgKiBfREVHMlJBRCk7XG5cdFx0XHRcdFx0XHRcdFx0dDEgPSBNYXRoLnNxcnQoMSArIHQxICogdDEpO1xuXHRcdFx0XHRcdFx0XHRcdGExMSAqPSB0MTtcblx0XHRcdFx0XHRcdFx0XHRhMjEgKj0gdDE7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmIChpc1NWRykge1xuXHRcdFx0XHRcdFx0XHR4ICs9IHQueE9yaWdpbiAtICh0LnhPcmlnaW4gKiBhMTEgKyB0LnlPcmlnaW4gKiBhMTIpICsgdC54T2Zmc2V0O1xuXHRcdFx0XHRcdFx0XHR5ICs9IHQueU9yaWdpbiAtICh0LnhPcmlnaW4gKiBhMjEgKyB0LnlPcmlnaW4gKiBhMjIpICsgdC55T2Zmc2V0O1xuXHRcdFx0XHRcdFx0XHRpZiAoX3VzZVNWR1RyYW5zZm9ybUF0dHIgJiYgKHQueFBlcmNlbnQgfHwgdC55UGVyY2VudCkpIHsgLy9UaGUgU1ZHIHNwZWMgZG9lc24ndCBzdXBwb3J0IHBlcmNlbnRhZ2UtYmFzZWQgdHJhbnNsYXRpb24gaW4gdGhlIFwidHJhbnNmb3JtXCIgYXR0cmlidXRlLCBzbyB3ZSBtZXJnZSBpdCBpbnRvIHRoZSBtYXRyaXggdG8gc2ltdWxhdGUgaXQuXG5cdFx0XHRcdFx0XHRcdFx0bWluID0gdGhpcy50LmdldEJCb3goKTtcblx0XHRcdFx0XHRcdFx0XHR4ICs9IHQueFBlcmNlbnQgKiAwLjAxICogbWluLndpZHRoO1xuXHRcdFx0XHRcdFx0XHRcdHkgKz0gdC55UGVyY2VudCAqIDAuMDEgKiBtaW4uaGVpZ2h0O1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdG1pbiA9IDAuMDAwMDAxO1xuXHRcdFx0XHRcdFx0XHRpZiAoeCA8IG1pbikgaWYgKHggPiAtbWluKSB7XG5cdFx0XHRcdFx0XHRcdFx0eCA9IDA7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0aWYgKHkgPCBtaW4pIGlmICh5ID4gLW1pbikge1xuXHRcdFx0XHRcdFx0XHRcdHkgPSAwO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR0cmFuc2Zvcm0gPSAoKChhMTEgKiBybmQpIHwgMCkgLyBybmQpICsgXCIsXCIgKyAoKChhMjEgKiBybmQpIHwgMCkgLyBybmQpICsgXCIsXCIgKyAoKChhMTIgKiBybmQpIHwgMCkgLyBybmQpICsgXCIsXCIgKyAoKChhMjIgKiBybmQpIHwgMCkgLyBybmQpICsgXCIsXCIgKyB4ICsgXCIsXCIgKyB5ICsgXCIpXCI7XG5cdFx0XHRcdFx0XHRpZiAoaXNTVkcgJiYgX3VzZVNWR1RyYW5zZm9ybUF0dHIpIHtcblx0XHRcdFx0XHRcdFx0dGhpcy50LnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCBcIm1hdHJpeChcIiArIHRyYW5zZm9ybSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvL3NvbWUgYnJvd3NlcnMgaGF2ZSBhIGhhcmQgdGltZSB3aXRoIHZlcnkgc21hbGwgdmFsdWVzIGxpa2UgMi40NDkyOTM1OTgyOTQ3MDY0ZS0xNiAobm90aWNlIHRoZSBcImUtXCIgdG93YXJkcyB0aGUgZW5kKSBhbmQgd291bGQgcmVuZGVyIHRoZSBvYmplY3Qgc2xpZ2h0bHkgb2ZmLiBTbyB3ZSByb3VuZCB0byA1IGRlY2ltYWwgcGxhY2VzLlxuXHRcdFx0XHRcdFx0XHRzdHlsZVtfdHJhbnNmb3JtUHJvcF0gPSAoKHQueFBlcmNlbnQgfHwgdC55UGVyY2VudCkgPyBcInRyYW5zbGF0ZShcIiArIHQueFBlcmNlbnQgKyBcIiUsXCIgKyB0LnlQZXJjZW50ICsgXCIlKSBtYXRyaXgoXCIgOiBcIm1hdHJpeChcIikgKyB0cmFuc2Zvcm07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHN0eWxlW190cmFuc2Zvcm1Qcm9wXSA9ICgodC54UGVyY2VudCB8fCB0LnlQZXJjZW50KSA/IFwidHJhbnNsYXRlKFwiICsgdC54UGVyY2VudCArIFwiJSxcIiArIHQueVBlcmNlbnQgKyBcIiUpIG1hdHJpeChcIiA6IFwibWF0cml4KFwiKSArIHN4ICsgXCIsMCwwLFwiICsgc3kgKyBcIixcIiArIHggKyBcIixcIiArIHkgKyBcIilcIjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuO1xuXG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKF9pc0ZpcmVmb3gpIHsgLy9GaXJlZm94IGhhcyBhIGJ1ZyAoYXQgbGVhc3QgaW4gdjI1KSB0aGF0IGNhdXNlcyBpdCB0byByZW5kZXIgdGhlIHRyYW5zcGFyZW50IHBhcnQgb2YgMzItYml0IFBORyBpbWFnZXMgYXMgYmxhY2sgd2hlbiBkaXNwbGF5ZWQgaW5zaWRlIGFuIGlmcmFtZSBhbmQgdGhlIDNEIHNjYWxlIGlzIHZlcnkgc21hbGwgYW5kIGRvZXNuJ3QgY2hhbmdlIHN1ZmZpY2llbnRseSBlbm91Z2ggYmV0d2VlbiByZW5kZXJzIChsaWtlIGlmIHlvdSB1c2UgYSBQb3dlcjQuZWFzZUluT3V0IHRvIHNjYWxlIGZyb20gMCB0byAxIHdoZXJlIHRoZSBiZWdpbm5pbmcgdmFsdWVzIG9ubHkgY2hhbmdlIGEgdGlueSBhbW91bnQgdG8gYmVnaW4gdGhlIHR3ZWVuIGJlZm9yZSBhY2NlbGVyYXRpbmcpLiBJbiB0aGlzIGNhc2UsIHdlIGZvcmNlIHRoZSBzY2FsZSB0byBiZSAwLjAwMDAyIGluc3RlYWQgd2hpY2ggaXMgdmlzdWFsbHkgdGhlIHNhbWUgYnV0IHdvcmtzIGFyb3VuZCB0aGUgRmlyZWZveCBpc3N1ZS5cblx0XHRcdFx0XHRtaW4gPSAwLjAwMDE7XG5cdFx0XHRcdFx0aWYgKHN4IDwgbWluICYmIHN4ID4gLW1pbikge1xuXHRcdFx0XHRcdFx0c3ggPSBzeiA9IDAuMDAwMDI7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChzeSA8IG1pbiAmJiBzeSA+IC1taW4pIHtcblx0XHRcdFx0XHRcdHN5ID0gc3ogPSAwLjAwMDAyO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAocGVyc3BlY3RpdmUgJiYgIXQueiAmJiAhdC5yb3RhdGlvblggJiYgIXQucm90YXRpb25ZKSB7IC8vRmlyZWZveCBoYXMgYSBidWcgdGhhdCBjYXVzZXMgZWxlbWVudHMgdG8gaGF2ZSBhbiBvZGQgc3VwZXItdGhpbiwgYnJva2VuL2RvdHRlZCBibGFjayBib3JkZXIgb24gZWxlbWVudHMgdGhhdCBoYXZlIGEgcGVyc3BlY3RpdmUgc2V0IGJ1dCBhcmVuJ3QgdXRpbGl6aW5nIDNEIHNwYWNlIChubyByb3RhdGlvblgsIHJvdGF0aW9uWSwgb3IgeikuXG5cdFx0XHRcdFx0XHRwZXJzcGVjdGl2ZSA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChhbmdsZSB8fCB0LnNrZXdYKSB7XG5cdFx0XHRcdFx0YW5nbGUgKj0gX0RFRzJSQUQ7XG5cdFx0XHRcdFx0Y29zID0gYTExID0gTWF0aC5jb3MoYW5nbGUpO1xuXHRcdFx0XHRcdHNpbiA9IGEyMSA9IE1hdGguc2luKGFuZ2xlKTtcblx0XHRcdFx0XHRpZiAodC5za2V3WCkge1xuXHRcdFx0XHRcdFx0YW5nbGUgLT0gdC5za2V3WCAqIF9ERUcyUkFEO1xuXHRcdFx0XHRcdFx0Y29zID0gTWF0aC5jb3MoYW5nbGUpO1xuXHRcdFx0XHRcdFx0c2luID0gTWF0aC5zaW4oYW5nbGUpO1xuXHRcdFx0XHRcdFx0aWYgKHQuc2tld1R5cGUgPT09IFwic2ltcGxlXCIpIHsgLy9ieSBkZWZhdWx0LCB3ZSBjb21wZW5zYXRlIHNrZXdpbmcgb24gdGhlIG90aGVyIGF4aXMgdG8gbWFrZSBpdCBsb29rIG1vcmUgbmF0dXJhbCwgYnV0IHlvdSBjYW4gc2V0IHRoZSBza2V3VHlwZSB0byBcInNpbXBsZVwiIHRvIHVzZSB0aGUgdW5jb21wZW5zYXRlZCBza2V3aW5nIHRoYXQgQ1NTIGRvZXNcblx0XHRcdFx0XHRcdFx0dDEgPSBNYXRoLnRhbigodC5za2V3WCAtIHQuc2tld1kpICogX0RFRzJSQUQpO1xuXHRcdFx0XHRcdFx0XHR0MSA9IE1hdGguc3FydCgxICsgdDEgKiB0MSk7XG5cdFx0XHRcdFx0XHRcdGNvcyAqPSB0MTtcblx0XHRcdFx0XHRcdFx0c2luICo9IHQxO1xuXHRcdFx0XHRcdFx0XHRpZiAodC5za2V3WSkge1xuXHRcdFx0XHRcdFx0XHRcdHQxID0gTWF0aC50YW4odC5za2V3WSAqIF9ERUcyUkFEKTtcblx0XHRcdFx0XHRcdFx0XHR0MSA9IE1hdGguc3FydCgxICsgdDEgKiB0MSk7XG5cdFx0XHRcdFx0XHRcdFx0YTExICo9IHQxO1xuXHRcdFx0XHRcdFx0XHRcdGEyMSAqPSB0MTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRhMTIgPSAtc2luO1xuXHRcdFx0XHRcdGEyMiA9IGNvcztcblxuXHRcdFx0XHR9IGVsc2UgaWYgKCFyb3RhdGlvblkgJiYgIXJvdGF0aW9uWCAmJiBzeiA9PT0gMSAmJiAhcGVyc3BlY3RpdmUgJiYgIWlzU1ZHKSB7IC8vaWYgd2UncmUgb25seSB0cmFuc2xhdGluZyBhbmQvb3IgMkQgc2NhbGluZywgdGhpcyBpcyBmYXN0ZXIuLi5cblx0XHRcdFx0XHRzdHlsZVtfdHJhbnNmb3JtUHJvcF0gPSAoKHQueFBlcmNlbnQgfHwgdC55UGVyY2VudCkgPyBcInRyYW5zbGF0ZShcIiArIHQueFBlcmNlbnQgKyBcIiUsXCIgKyB0LnlQZXJjZW50ICsgXCIlKSB0cmFuc2xhdGUzZChcIiA6IFwidHJhbnNsYXRlM2QoXCIpICsgeCArIFwicHgsXCIgKyB5ICsgXCJweCxcIiArIHogK1wicHgpXCIgKyAoKHN4ICE9PSAxIHx8IHN5ICE9PSAxKSA/IFwiIHNjYWxlKFwiICsgc3ggKyBcIixcIiArIHN5ICsgXCIpXCIgOiBcIlwiKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YTExID0gYTIyID0gMTtcblx0XHRcdFx0XHRhMTIgPSBhMjEgPSAwO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vIEtFWSAgSU5ERVggICBBRkZFQ1RTXG5cdFx0XHRcdC8vIGExMSAgMCAgICAgICByb3RhdGlvbiwgcm90YXRpb25ZLCBzY2FsZVhcblx0XHRcdFx0Ly8gYTIxICAxICAgICAgIHJvdGF0aW9uLCByb3RhdGlvblksIHNjYWxlWFxuXHRcdFx0XHQvLyBhMzEgIDIgICAgICAgcm90YXRpb25ZLCBzY2FsZVhcblx0XHRcdFx0Ly8gYTQxICAzICAgICAgIHJvdGF0aW9uWSwgc2NhbGVYXG5cdFx0XHRcdC8vIGExMiAgNCAgICAgICByb3RhdGlvbiwgc2tld1gsIHJvdGF0aW9uWCwgc2NhbGVZXG5cdFx0XHRcdC8vIGEyMiAgNSAgICAgICByb3RhdGlvbiwgc2tld1gsIHJvdGF0aW9uWCwgc2NhbGVZXG5cdFx0XHRcdC8vIGEzMiAgNiAgICAgICByb3RhdGlvblgsIHNjYWxlWVxuXHRcdFx0XHQvLyBhNDIgIDcgICAgICAgcm90YXRpb25YLCBzY2FsZVlcblx0XHRcdFx0Ly8gYTEzICA4ICAgICAgIHJvdGF0aW9uWSwgcm90YXRpb25YLCBzY2FsZVpcblx0XHRcdFx0Ly8gYTIzICA5ICAgICAgIHJvdGF0aW9uWSwgcm90YXRpb25YLCBzY2FsZVpcblx0XHRcdFx0Ly8gYTMzICAxMCAgICAgIHJvdGF0aW9uWSwgcm90YXRpb25YLCBzY2FsZVpcblx0XHRcdFx0Ly8gYTQzICAxMSAgICAgIHJvdGF0aW9uWSwgcm90YXRpb25YLCBwZXJzcGVjdGl2ZSwgc2NhbGVaXG5cdFx0XHRcdC8vIGExNCAgMTIgICAgICB4LCB6T3JpZ2luLCBzdmdPcmlnaW5cblx0XHRcdFx0Ly8gYTI0ICAxMyAgICAgIHksIHpPcmlnaW4sIHN2Z09yaWdpblxuXHRcdFx0XHQvLyBhMzQgIDE0ICAgICAgeiwgek9yaWdpblxuXHRcdFx0XHQvLyBhNDQgIDE1XG5cdFx0XHRcdC8vIHJvdGF0aW9uOiBNYXRoLmF0YW4yKGEyMSwgYTExKVxuXHRcdFx0XHQvLyByb3RhdGlvblk6IE1hdGguYXRhbjIoYTEzLCBhMzMpIChvciBNYXRoLmF0YW4yKGExMywgYTExKSlcblx0XHRcdFx0Ly8gcm90YXRpb25YOiBNYXRoLmF0YW4yKGEzMiwgYTMzKVxuXHRcdFx0XHRhMzMgPSAxO1xuXHRcdFx0XHRhMTMgPSBhMjMgPSBhMzEgPSBhMzIgPSBhNDEgPSBhNDIgPSAwO1xuXHRcdFx0XHRhNDMgPSAocGVyc3BlY3RpdmUpID8gLTEgLyBwZXJzcGVjdGl2ZSA6IDA7XG5cdFx0XHRcdHpPcmlnaW4gPSB0LnpPcmlnaW47XG5cdFx0XHRcdG1pbiA9IDAuMDAwMDAxOyAvL3RocmVzaG9sZCBiZWxvdyB3aGljaCBicm93c2VycyB1c2Ugc2NpZW50aWZpYyBub3RhdGlvbiB3aGljaCB3b24ndCB3b3JrLlxuXHRcdFx0XHRjb21tYSA9IFwiLFwiO1xuXHRcdFx0XHR6ZXJvID0gXCIwXCI7XG5cdFx0XHRcdGFuZ2xlID0gcm90YXRpb25ZICogX0RFRzJSQUQ7XG5cdFx0XHRcdGlmIChhbmdsZSkge1xuXHRcdFx0XHRcdGNvcyA9IE1hdGguY29zKGFuZ2xlKTtcblx0XHRcdFx0XHRzaW4gPSBNYXRoLnNpbihhbmdsZSk7XG5cdFx0XHRcdFx0YTMxID0gLXNpbjtcblx0XHRcdFx0XHRhNDEgPSBhNDMqLXNpbjtcblx0XHRcdFx0XHRhMTMgPSBhMTEqc2luO1xuXHRcdFx0XHRcdGEyMyA9IGEyMSpzaW47XG5cdFx0XHRcdFx0YTMzID0gY29zO1xuXHRcdFx0XHRcdGE0MyAqPSBjb3M7XG5cdFx0XHRcdFx0YTExICo9IGNvcztcblx0XHRcdFx0XHRhMjEgKj0gY29zO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGFuZ2xlID0gcm90YXRpb25YICogX0RFRzJSQUQ7XG5cdFx0XHRcdGlmIChhbmdsZSkge1xuXHRcdFx0XHRcdGNvcyA9IE1hdGguY29zKGFuZ2xlKTtcblx0XHRcdFx0XHRzaW4gPSBNYXRoLnNpbihhbmdsZSk7XG5cdFx0XHRcdFx0dDEgPSBhMTIqY29zK2ExMypzaW47XG5cdFx0XHRcdFx0dDIgPSBhMjIqY29zK2EyMypzaW47XG5cdFx0XHRcdFx0YTMyID0gYTMzKnNpbjtcblx0XHRcdFx0XHRhNDIgPSBhNDMqc2luO1xuXHRcdFx0XHRcdGExMyA9IGExMiotc2luK2ExMypjb3M7XG5cdFx0XHRcdFx0YTIzID0gYTIyKi1zaW4rYTIzKmNvcztcblx0XHRcdFx0XHRhMzMgPSBhMzMqY29zO1xuXHRcdFx0XHRcdGE0MyA9IGE0Mypjb3M7XG5cdFx0XHRcdFx0YTEyID0gdDE7XG5cdFx0XHRcdFx0YTIyID0gdDI7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHN6ICE9PSAxKSB7XG5cdFx0XHRcdFx0YTEzKj1zejtcblx0XHRcdFx0XHRhMjMqPXN6O1xuXHRcdFx0XHRcdGEzMyo9c3o7XG5cdFx0XHRcdFx0YTQzKj1zejtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoc3kgIT09IDEpIHtcblx0XHRcdFx0XHRhMTIqPXN5O1xuXHRcdFx0XHRcdGEyMio9c3k7XG5cdFx0XHRcdFx0YTMyKj1zeTtcblx0XHRcdFx0XHRhNDIqPXN5O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChzeCAhPT0gMSkge1xuXHRcdFx0XHRcdGExMSo9c3g7XG5cdFx0XHRcdFx0YTIxKj1zeDtcblx0XHRcdFx0XHRhMzEqPXN4O1xuXHRcdFx0XHRcdGE0MSo9c3g7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoek9yaWdpbiB8fCBpc1NWRykge1xuXHRcdFx0XHRcdGlmICh6T3JpZ2luKSB7XG5cdFx0XHRcdFx0XHR4ICs9IGExMyotek9yaWdpbjtcblx0XHRcdFx0XHRcdHkgKz0gYTIzKi16T3JpZ2luO1xuXHRcdFx0XHRcdFx0eiArPSBhMzMqLXpPcmlnaW4rek9yaWdpbjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGlzU1ZHKSB7IC8vZHVlIHRvIGJ1Z3MgaW4gc29tZSBicm93c2Vycywgd2UgbmVlZCB0byBtYW5hZ2UgdGhlIHRyYW5zZm9ybS1vcmlnaW4gb2YgU1ZHIG1hbnVhbGx5XG5cdFx0XHRcdFx0XHR4ICs9IHQueE9yaWdpbiAtICh0LnhPcmlnaW4gKiBhMTEgKyB0LnlPcmlnaW4gKiBhMTIpICsgdC54T2Zmc2V0O1xuXHRcdFx0XHRcdFx0eSArPSB0LnlPcmlnaW4gLSAodC54T3JpZ2luICogYTIxICsgdC55T3JpZ2luICogYTIyKSArIHQueU9mZnNldDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHggPCBtaW4gJiYgeCA+IC1taW4pIHtcblx0XHRcdFx0XHRcdHggPSB6ZXJvO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoeSA8IG1pbiAmJiB5ID4gLW1pbikge1xuXHRcdFx0XHRcdFx0eSA9IHplcm87XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICh6IDwgbWluICYmIHogPiAtbWluKSB7XG5cdFx0XHRcdFx0XHR6ID0gMDsgLy9kb24ndCB1c2Ugc3RyaW5nIGJlY2F1c2Ugd2UgY2FsY3VsYXRlIHBlcnNwZWN0aXZlIGxhdGVyIGFuZCBuZWVkIHRoZSBudW1iZXIuXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly9vcHRpbWl6ZWQgd2F5IG9mIGNvbmNhdGVuYXRpbmcgYWxsIHRoZSB2YWx1ZXMgaW50byBhIHN0cmluZy4gSWYgd2UgZG8gaXQgYWxsIGluIG9uZSBzaG90LCBpdCdzIHNsb3dlciBiZWNhdXNlIG9mIHRoZSB3YXkgYnJvd3NlcnMgaGF2ZSB0byBjcmVhdGUgdGVtcCBzdHJpbmdzIGFuZCB0aGUgd2F5IGl0IGFmZmVjdHMgbWVtb3J5LiBJZiB3ZSBkbyBpdCBwaWVjZS1ieS1waWVjZSB3aXRoICs9LCBpdCdzIGEgYml0IHNsb3dlciB0b28uIFdlIGZvdW5kIHRoYXQgZG9pbmcgaXQgaW4gdGhlc2Ugc2l6ZWQgY2h1bmtzIHdvcmtzIGJlc3Qgb3ZlcmFsbDpcblx0XHRcdFx0dHJhbnNmb3JtID0gKCh0LnhQZXJjZW50IHx8IHQueVBlcmNlbnQpID8gXCJ0cmFuc2xhdGUoXCIgKyB0LnhQZXJjZW50ICsgXCIlLFwiICsgdC55UGVyY2VudCArIFwiJSkgbWF0cml4M2QoXCIgOiBcIm1hdHJpeDNkKFwiKTtcblx0XHRcdFx0dHJhbnNmb3JtICs9ICgoYTExIDwgbWluICYmIGExMSA+IC1taW4pID8gemVybyA6IGExMSkgKyBjb21tYSArICgoYTIxIDwgbWluICYmIGEyMSA+IC1taW4pID8gemVybyA6IGEyMSkgKyBjb21tYSArICgoYTMxIDwgbWluICYmIGEzMSA+IC1taW4pID8gemVybyA6IGEzMSk7XG5cdFx0XHRcdHRyYW5zZm9ybSArPSBjb21tYSArICgoYTQxIDwgbWluICYmIGE0MSA+IC1taW4pID8gemVybyA6IGE0MSkgKyBjb21tYSArICgoYTEyIDwgbWluICYmIGExMiA+IC1taW4pID8gemVybyA6IGExMikgKyBjb21tYSArICgoYTIyIDwgbWluICYmIGEyMiA+IC1taW4pID8gemVybyA6IGEyMik7XG5cdFx0XHRcdGlmIChyb3RhdGlvblggfHwgcm90YXRpb25ZIHx8IHN6ICE9PSAxKSB7IC8vcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9uIChvZnRlbiB0aGVyZSdzIG5vIHJvdGF0aW9uWCBvciByb3RhdGlvblksIHNvIHdlIGNhbiBza2lwIHRoZXNlIGNhbGN1bGF0aW9ucylcblx0XHRcdFx0XHR0cmFuc2Zvcm0gKz0gY29tbWEgKyAoKGEzMiA8IG1pbiAmJiBhMzIgPiAtbWluKSA/IHplcm8gOiBhMzIpICsgY29tbWEgKyAoKGE0MiA8IG1pbiAmJiBhNDIgPiAtbWluKSA/IHplcm8gOiBhNDIpICsgY29tbWEgKyAoKGExMyA8IG1pbiAmJiBhMTMgPiAtbWluKSA/IHplcm8gOiBhMTMpO1xuXHRcdFx0XHRcdHRyYW5zZm9ybSArPSBjb21tYSArICgoYTIzIDwgbWluICYmIGEyMyA+IC1taW4pID8gemVybyA6IGEyMykgKyBjb21tYSArICgoYTMzIDwgbWluICYmIGEzMyA+IC1taW4pID8gemVybyA6IGEzMykgKyBjb21tYSArICgoYTQzIDwgbWluICYmIGE0MyA+IC1taW4pID8gemVybyA6IGE0MykgKyBjb21tYTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0cmFuc2Zvcm0gKz0gXCIsMCwwLDAsMCwxLDAsXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0dHJhbnNmb3JtICs9IHggKyBjb21tYSArIHkgKyBjb21tYSArIHogKyBjb21tYSArIChwZXJzcGVjdGl2ZSA/ICgxICsgKC16IC8gcGVyc3BlY3RpdmUpKSA6IDEpICsgXCIpXCI7XG5cblx0XHRcdFx0c3R5bGVbX3RyYW5zZm9ybVByb3BdID0gdHJhbnNmb3JtO1xuXHRcdFx0fTtcblxuXHRcdHAgPSBUcmFuc2Zvcm0ucHJvdG90eXBlO1xuXHRcdHAueCA9IHAueSA9IHAueiA9IHAuc2tld1ggPSBwLnNrZXdZID0gcC5yb3RhdGlvbiA9IHAucm90YXRpb25YID0gcC5yb3RhdGlvblkgPSBwLnpPcmlnaW4gPSBwLnhQZXJjZW50ID0gcC55UGVyY2VudCA9IHAueE9mZnNldCA9IHAueU9mZnNldCA9IDA7XG5cdFx0cC5zY2FsZVggPSBwLnNjYWxlWSA9IHAuc2NhbGVaID0gMTtcblxuXHRcdF9yZWdpc3RlckNvbXBsZXhTcGVjaWFsUHJvcChcInRyYW5zZm9ybSxzY2FsZSxzY2FsZVgsc2NhbGVZLHNjYWxlWix4LHkseixyb3RhdGlvbixyb3RhdGlvblgscm90YXRpb25ZLHJvdGF0aW9uWixza2V3WCxza2V3WSxzaG9ydFJvdGF0aW9uLHNob3J0Um90YXRpb25YLHNob3J0Um90YXRpb25ZLHNob3J0Um90YXRpb25aLHRyYW5zZm9ybU9yaWdpbixzdmdPcmlnaW4sdHJhbnNmb3JtUGVyc3BlY3RpdmUsZGlyZWN0aW9uYWxSb3RhdGlvbixwYXJzZVRyYW5zZm9ybSxmb3JjZTNELHNrZXdUeXBlLHhQZXJjZW50LHlQZXJjZW50LHNtb290aE9yaWdpblwiLCB7cGFyc2VyOmZ1bmN0aW9uKHQsIGUsIHBhcnNpbmdQcm9wLCBjc3NwLCBwdCwgcGx1Z2luLCB2YXJzKSB7XG5cdFx0XHRpZiAoY3NzcC5fbGFzdFBhcnNlZFRyYW5zZm9ybSA9PT0gdmFycykgeyByZXR1cm4gcHQ7IH0gLy9vbmx5IG5lZWQgdG8gcGFyc2UgdGhlIHRyYW5zZm9ybSBvbmNlLCBhbmQgb25seSBpZiB0aGUgYnJvd3NlciBzdXBwb3J0cyBpdC5cblx0XHRcdGNzc3AuX2xhc3RQYXJzZWRUcmFuc2Zvcm0gPSB2YXJzO1xuXHRcdFx0dmFyIHN3YXBGdW5jO1xuXHRcdFx0aWYgKHR5cGVvZih2YXJzW3BhcnNpbmdQcm9wXSkgPT09IFwiZnVuY3Rpb25cIikgeyAvL3doYXRldmVyIHByb3BlcnR5IHRyaWdnZXJzIHRoZSBpbml0aWFsIHBhcnNpbmcgbWlnaHQgYmUgYSBmdW5jdGlvbi1iYXNlZCB2YWx1ZSBpbiB3aGljaCBjYXNlIGl0IGFscmVhZHkgZ290IGNhbGxlZCBpbiBwYXJzZSgpLCB0aHVzIHdlIGRvbid0IHdhbnQgdG8gY2FsbCBpdCBhZ2FpbiBpbiBoZXJlLiBUaGUgbW9zdCBlZmZpY2llbnQgd2F5IHRvIGF2b2lkIHRoaXMgaXMgdG8gdGVtcG9yYXJpbHkgc3dhcCB0aGUgdmFsdWUgZGlyZWN0bHkgaW50byB0aGUgdmFycyBvYmplY3QsIGFuZCB0aGVuIGFmdGVyIHdlIGRvIGFsbCBvdXIgcGFyc2luZyBpbiB0aGlzIGZ1bmN0aW9uLCB3ZSdsbCBzd2FwIGl0IGJhY2sgYWdhaW4uXG5cdFx0XHRcdHN3YXBGdW5jID0gdmFyc1twYXJzaW5nUHJvcF07XG5cdFx0XHRcdHZhcnNbcGFyc2luZ1Byb3BdID0gZTtcblx0XHRcdH1cblx0XHRcdHZhciBvcmlnaW5hbEdTVHJhbnNmb3JtID0gdC5fZ3NUcmFuc2Zvcm0sXG5cdFx0XHRcdHN0eWxlID0gdC5zdHlsZSxcblx0XHRcdFx0bWluID0gMC4wMDAwMDEsXG5cdFx0XHRcdGkgPSBfdHJhbnNmb3JtUHJvcHMubGVuZ3RoLFxuXHRcdFx0XHR2ID0gdmFycyxcblx0XHRcdFx0ZW5kUm90YXRpb25zID0ge30sXG5cdFx0XHRcdHRyYW5zZm9ybU9yaWdpblN0cmluZyA9IFwidHJhbnNmb3JtT3JpZ2luXCIsXG5cdFx0XHRcdG0xID0gX2dldFRyYW5zZm9ybSh0LCBfY3MsIHRydWUsIHYucGFyc2VUcmFuc2Zvcm0pLFxuXHRcdFx0XHRvcmlnID0gdi50cmFuc2Zvcm0gJiYgKCh0eXBlb2Yodi50cmFuc2Zvcm0pID09PSBcImZ1bmN0aW9uXCIpID8gdi50cmFuc2Zvcm0oX2luZGV4LCBfdGFyZ2V0KSA6IHYudHJhbnNmb3JtKSxcblx0XHRcdFx0bTIsIGNvcHksIGhhczNELCBoYXNDaGFuZ2UsIGRyLCB4LCB5LCBtYXRyaXgsIHA7XG5cdFx0XHRjc3NwLl90cmFuc2Zvcm0gPSBtMTtcblx0XHRcdGlmIChvcmlnICYmIHR5cGVvZihvcmlnKSA9PT0gXCJzdHJpbmdcIiAmJiBfdHJhbnNmb3JtUHJvcCkgeyAvL2ZvciB2YWx1ZXMgbGlrZSB0cmFuc2Zvcm06XCJyb3RhdGUoNjBkZWcpIHNjYWxlKDAuNSwgMC44KVwiXG5cdFx0XHRcdGNvcHkgPSBfdGVtcERpdi5zdHlsZTsgLy9kb24ndCB1c2UgdGhlIG9yaWdpbmFsIHRhcmdldCBiZWNhdXNlIGl0IG1pZ2h0IGJlIFNWRyBpbiB3aGljaCBjYXNlIHNvbWUgYnJvd3NlcnMgZG9uJ3QgcmVwb3J0IGNvbXB1dGVkIHN0eWxlIGNvcnJlY3RseS5cblx0XHRcdFx0Y29weVtfdHJhbnNmb3JtUHJvcF0gPSBvcmlnO1xuXHRcdFx0XHRjb3B5LmRpc3BsYXkgPSBcImJsb2NrXCI7IC8vaWYgZGlzcGxheSBpcyBcIm5vbmVcIiwgdGhlIGJyb3dzZXIgb2Z0ZW4gcmVmdXNlcyB0byByZXBvcnQgdGhlIHRyYW5zZm9ybSBwcm9wZXJ0aWVzIGNvcnJlY3RseS5cblx0XHRcdFx0Y29weS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcblx0XHRcdFx0X2RvYy5ib2R5LmFwcGVuZENoaWxkKF90ZW1wRGl2KTtcblx0XHRcdFx0bTIgPSBfZ2V0VHJhbnNmb3JtKF90ZW1wRGl2LCBudWxsLCBmYWxzZSk7XG5cdFx0XHRcdGlmIChtMS5zdmcpIHsgLy9pZiBpdCdzIGFuIFNWRyBlbGVtZW50LCB4L3kgcGFydCBvZiB0aGUgbWF0cml4IHdpbGwgYmUgYWZmZWN0ZWQgYnkgd2hhdGV2ZXIgd2UgdXNlIGFzIHRoZSBvcmlnaW4gYW5kIHRoZSBvZmZzZXRzLCBzbyBjb21wZW5zYXRlIGhlcmUuLi5cblx0XHRcdFx0XHR4ID0gbTEueE9yaWdpbjtcblx0XHRcdFx0XHR5ID0gbTEueU9yaWdpbjtcblx0XHRcdFx0XHRtMi54IC09IG0xLnhPZmZzZXQ7XG5cdFx0XHRcdFx0bTIueSAtPSBtMS55T2Zmc2V0O1xuXHRcdFx0XHRcdGlmICh2LnRyYW5zZm9ybU9yaWdpbiB8fCB2LnN2Z09yaWdpbikgeyAvL2lmIHRoaXMgdHdlZW4gaXMgYWx0ZXJpbmcgdGhlIG9yaWdpbiwgd2UgbXVzdCBmYWN0b3IgdGhhdCBpbiBoZXJlLiBUaGUgYWN0dWFsIHdvcmsgb2YgcmVjb3JkaW5nIHRoZSB0cmFuc2Zvcm1PcmlnaW4gdmFsdWVzIGFuZCBzZXR0aW5nIHVwIHRoZSBQcm9wVHdlZW4gaXMgZG9uZSBsYXRlciAoc3RpbGwgaW5zaWRlIHRoaXMgZnVuY3Rpb24pIHNvIHdlIGNhbm5vdCBsZWF2ZSB0aGUgY2hhbmdlcyBpbnRhY3QgaGVyZSAtIHdlIG9ubHkgd2FudCB0byB1cGRhdGUgdGhlIHgveSBhY2NvcmRpbmdseS5cblx0XHRcdFx0XHRcdG9yaWcgPSB7fTtcblx0XHRcdFx0XHRcdF9wYXJzZVNWR09yaWdpbih0LCBfcGFyc2VQb3NpdGlvbih2LnRyYW5zZm9ybU9yaWdpbiksIG9yaWcsIHYuc3ZnT3JpZ2luLCB2LnNtb290aE9yaWdpbiwgdHJ1ZSk7XG5cdFx0XHRcdFx0XHR4ID0gb3JpZy54T3JpZ2luO1xuXHRcdFx0XHRcdFx0eSA9IG9yaWcueU9yaWdpbjtcblx0XHRcdFx0XHRcdG0yLnggLT0gb3JpZy54T2Zmc2V0IC0gbTEueE9mZnNldDtcblx0XHRcdFx0XHRcdG0yLnkgLT0gb3JpZy55T2Zmc2V0IC0gbTEueU9mZnNldDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHggfHwgeSkge1xuXHRcdFx0XHRcdFx0bWF0cml4ID0gX2dldE1hdHJpeChfdGVtcERpdiwgdHJ1ZSk7XG5cdFx0XHRcdFx0XHRtMi54IC09IHggLSAoeCAqIG1hdHJpeFswXSArIHkgKiBtYXRyaXhbMl0pO1xuXHRcdFx0XHRcdFx0bTIueSAtPSB5IC0gKHggKiBtYXRyaXhbMV0gKyB5ICogbWF0cml4WzNdKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0X2RvYy5ib2R5LnJlbW92ZUNoaWxkKF90ZW1wRGl2KTtcblx0XHRcdFx0aWYgKCFtMi5wZXJzcGVjdGl2ZSkge1xuXHRcdFx0XHRcdG0yLnBlcnNwZWN0aXZlID0gbTEucGVyc3BlY3RpdmU7IC8vdHdlZW5pbmcgdG8gbm8gcGVyc3BlY3RpdmUgZ2l2ZXMgdmVyeSB1bmludHVpdGl2ZSByZXN1bHRzIC0ganVzdCBrZWVwIHRoZSBzYW1lIHBlcnNwZWN0aXZlIGluIHRoYXQgY2FzZS5cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodi54UGVyY2VudCAhPSBudWxsKSB7XG5cdFx0XHRcdFx0bTIueFBlcmNlbnQgPSBfcGFyc2VWYWwodi54UGVyY2VudCwgbTEueFBlcmNlbnQpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh2LnlQZXJjZW50ICE9IG51bGwpIHtcblx0XHRcdFx0XHRtMi55UGVyY2VudCA9IF9wYXJzZVZhbCh2LnlQZXJjZW50LCBtMS55UGVyY2VudCk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAodHlwZW9mKHYpID09PSBcIm9iamVjdFwiKSB7IC8vZm9yIHZhbHVlcyBsaWtlIHNjYWxlWCwgc2NhbGVZLCByb3RhdGlvbiwgeCwgeSwgc2tld1gsIGFuZCBza2V3WSBvciB0cmFuc2Zvcm06ey4uLn0gKG9iamVjdClcblx0XHRcdFx0bTIgPSB7c2NhbGVYOl9wYXJzZVZhbCgodi5zY2FsZVggIT0gbnVsbCkgPyB2LnNjYWxlWCA6IHYuc2NhbGUsIG0xLnNjYWxlWCksXG5cdFx0XHRcdFx0c2NhbGVZOl9wYXJzZVZhbCgodi5zY2FsZVkgIT0gbnVsbCkgPyB2LnNjYWxlWSA6IHYuc2NhbGUsIG0xLnNjYWxlWSksXG5cdFx0XHRcdFx0c2NhbGVaOl9wYXJzZVZhbCh2LnNjYWxlWiwgbTEuc2NhbGVaKSxcblx0XHRcdFx0XHR4Ol9wYXJzZVZhbCh2LngsIG0xLngpLFxuXHRcdFx0XHRcdHk6X3BhcnNlVmFsKHYueSwgbTEueSksXG5cdFx0XHRcdFx0ejpfcGFyc2VWYWwodi56LCBtMS56KSxcblx0XHRcdFx0XHR4UGVyY2VudDpfcGFyc2VWYWwodi54UGVyY2VudCwgbTEueFBlcmNlbnQpLFxuXHRcdFx0XHRcdHlQZXJjZW50Ol9wYXJzZVZhbCh2LnlQZXJjZW50LCBtMS55UGVyY2VudCksXG5cdFx0XHRcdFx0cGVyc3BlY3RpdmU6X3BhcnNlVmFsKHYudHJhbnNmb3JtUGVyc3BlY3RpdmUsIG0xLnBlcnNwZWN0aXZlKX07XG5cdFx0XHRcdGRyID0gdi5kaXJlY3Rpb25hbFJvdGF0aW9uO1xuXHRcdFx0XHRpZiAoZHIgIT0gbnVsbCkge1xuXHRcdFx0XHRcdGlmICh0eXBlb2YoZHIpID09PSBcIm9iamVjdFwiKSB7XG5cdFx0XHRcdFx0XHRmb3IgKGNvcHkgaW4gZHIpIHtcblx0XHRcdFx0XHRcdFx0dltjb3B5XSA9IGRyW2NvcHldO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR2LnJvdGF0aW9uID0gZHI7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0eXBlb2Yodi54KSA9PT0gXCJzdHJpbmdcIiAmJiB2LnguaW5kZXhPZihcIiVcIikgIT09IC0xKSB7XG5cdFx0XHRcdFx0bTIueCA9IDA7XG5cdFx0XHRcdFx0bTIueFBlcmNlbnQgPSBfcGFyc2VWYWwodi54LCBtMS54UGVyY2VudCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHR5cGVvZih2LnkpID09PSBcInN0cmluZ1wiICYmIHYueS5pbmRleE9mKFwiJVwiKSAhPT0gLTEpIHtcblx0XHRcdFx0XHRtMi55ID0gMDtcblx0XHRcdFx0XHRtMi55UGVyY2VudCA9IF9wYXJzZVZhbCh2LnksIG0xLnlQZXJjZW50KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdG0yLnJvdGF0aW9uID0gX3BhcnNlQW5nbGUoKFwicm90YXRpb25cIiBpbiB2KSA/IHYucm90YXRpb24gOiAoXCJzaG9ydFJvdGF0aW9uXCIgaW4gdikgPyB2LnNob3J0Um90YXRpb24gKyBcIl9zaG9ydFwiIDogKFwicm90YXRpb25aXCIgaW4gdikgPyB2LnJvdGF0aW9uWiA6IG0xLnJvdGF0aW9uIC0gbTEuc2tld1ksIG0xLnJvdGF0aW9uIC0gbTEuc2tld1ksIFwicm90YXRpb25cIiwgZW5kUm90YXRpb25zKTsgLy9zZWUgbm90ZXMgYmVsb3cgYWJvdXQgc2tld1kgZm9yIHdoeSB3ZSBzdWJ0cmFjdCBpdCBmcm9tIHJvdGF0aW9uIGhlcmVcblx0XHRcdFx0aWYgKF9zdXBwb3J0czNEKSB7XG5cdFx0XHRcdFx0bTIucm90YXRpb25YID0gX3BhcnNlQW5nbGUoKFwicm90YXRpb25YXCIgaW4gdikgPyB2LnJvdGF0aW9uWCA6IChcInNob3J0Um90YXRpb25YXCIgaW4gdikgPyB2LnNob3J0Um90YXRpb25YICsgXCJfc2hvcnRcIiA6IG0xLnJvdGF0aW9uWCB8fCAwLCBtMS5yb3RhdGlvblgsIFwicm90YXRpb25YXCIsIGVuZFJvdGF0aW9ucyk7XG5cdFx0XHRcdFx0bTIucm90YXRpb25ZID0gX3BhcnNlQW5nbGUoKFwicm90YXRpb25ZXCIgaW4gdikgPyB2LnJvdGF0aW9uWSA6IChcInNob3J0Um90YXRpb25ZXCIgaW4gdikgPyB2LnNob3J0Um90YXRpb25ZICsgXCJfc2hvcnRcIiA6IG0xLnJvdGF0aW9uWSB8fCAwLCBtMS5yb3RhdGlvblksIFwicm90YXRpb25ZXCIsIGVuZFJvdGF0aW9ucyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0bTIuc2tld1ggPSBfcGFyc2VBbmdsZSh2LnNrZXdYLCBtMS5za2V3WCAtIG0xLnNrZXdZKTsgLy9zZWUgbm90ZXMgYmVsb3cgYWJvdXQgc2tld1kgYW5kIHdoeSB3ZSBzdWJ0cmFjdCBpdCBmcm9tIHNrZXdYIGhlcmVcblxuXHRcdFx0XHQvL25vdGU6IGZvciBwZXJmb3JtYW5jZSByZWFzb25zLCB3ZSBjb21iaW5lIGFsbCBza2V3aW5nIGludG8gdGhlIHNrZXdYIGFuZCByb3RhdGlvbiB2YWx1ZXMsIGlnbm9yaW5nIHNrZXdZIGJ1dCB3ZSBtdXN0IHN0aWxsIHJlY29yZCBpdCBzbyB0aGF0IHdlIGNhbiBkaXNjZXJuIGhvdyBtdWNoIG9mIHRoZSBvdmVyYWxsIHNrZXcgaXMgYXR0cmlidXRlZCB0byBza2V3WCB2cy4gc2tld1kuIE90aGVyd2lzZSwgaWYgdGhlIHNrZXdZIHdvdWxkIGFsd2F5cyBhY3QgcmVsYXRpdmUgKHR3ZWVuIHNrZXdZIHRvIDEwZGVnLCBmb3IgZXhhbXBsZSwgbXVsdGlwbGUgdGltZXMgYW5kIGlmIHdlIGFsd2F5cyBjb21iaW5lIHRoaW5ncyBpbnRvIHNrZXdYLCB3ZSBjYW4ndCByZW1lbWJlciB0aGF0IHNrZXdZIHdhcyAxMCBmcm9tIGxhc3QgdGltZSkuIFJlbWVtYmVyLCBhIHNrZXdZIG9mIDEwIGRlZ3JlZXMgbG9va3MgdGhlIHNhbWUgYXMgYSByb3RhdGlvbiBvZiAxMCBkZWdyZWVzIHBsdXMgYSBza2V3WCBvZiAtMTAgZGVncmVlcy5cblx0XHRcdFx0aWYgKChtMi5za2V3WSA9IF9wYXJzZUFuZ2xlKHYuc2tld1ksIG0xLnNrZXdZKSkpIHtcblx0XHRcdFx0XHRtMi5za2V3WCArPSBtMi5za2V3WTtcblx0XHRcdFx0XHRtMi5yb3RhdGlvbiArPSBtMi5za2V3WTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKF9zdXBwb3J0czNEICYmIHYuZm9yY2UzRCAhPSBudWxsKSB7XG5cdFx0XHRcdG0xLmZvcmNlM0QgPSB2LmZvcmNlM0Q7XG5cdFx0XHRcdGhhc0NoYW5nZSA9IHRydWU7XG5cdFx0XHR9XG5cblx0XHRcdG0xLnNrZXdUeXBlID0gdi5za2V3VHlwZSB8fCBtMS5za2V3VHlwZSB8fCBDU1NQbHVnaW4uZGVmYXVsdFNrZXdUeXBlO1xuXG5cdFx0XHRoYXMzRCA9IChtMS5mb3JjZTNEIHx8IG0xLnogfHwgbTEucm90YXRpb25YIHx8IG0xLnJvdGF0aW9uWSB8fCBtMi56IHx8IG0yLnJvdGF0aW9uWCB8fCBtMi5yb3RhdGlvblkgfHwgbTIucGVyc3BlY3RpdmUpO1xuXHRcdFx0aWYgKCFoYXMzRCAmJiB2LnNjYWxlICE9IG51bGwpIHtcblx0XHRcdFx0bTIuc2NhbGVaID0gMTsgLy9ubyBuZWVkIHRvIHR3ZWVuIHNjYWxlWi5cblx0XHRcdH1cblxuXHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdHAgPSBfdHJhbnNmb3JtUHJvcHNbaV07XG5cdFx0XHRcdG9yaWcgPSBtMltwXSAtIG0xW3BdO1xuXHRcdFx0XHRpZiAob3JpZyA+IG1pbiB8fCBvcmlnIDwgLW1pbiB8fCB2W3BdICE9IG51bGwgfHwgX2ZvcmNlUFRbcF0gIT0gbnVsbCkge1xuXHRcdFx0XHRcdGhhc0NoYW5nZSA9IHRydWU7XG5cdFx0XHRcdFx0cHQgPSBuZXcgQ1NTUHJvcFR3ZWVuKG0xLCBwLCBtMVtwXSwgb3JpZywgcHQpO1xuXHRcdFx0XHRcdGlmIChwIGluIGVuZFJvdGF0aW9ucykge1xuXHRcdFx0XHRcdFx0cHQuZSA9IGVuZFJvdGF0aW9uc1twXTsgLy9kaXJlY3Rpb25hbCByb3RhdGlvbnMgdHlwaWNhbGx5IGhhdmUgY29tcGVuc2F0ZWQgdmFsdWVzIGR1cmluZyB0aGUgdHdlZW4sIGJ1dCB3ZSBuZWVkIHRvIG1ha2Ugc3VyZSB0aGV5IGVuZCBhdCBleGFjdGx5IHdoYXQgdGhlIHVzZXIgcmVxdWVzdGVkXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHB0LnhzMCA9IDA7IC8vZW5zdXJlcyB0aGUgdmFsdWUgc3RheXMgbnVtZXJpYyBpbiBzZXRSYXRpbygpXG5cdFx0XHRcdFx0cHQucGx1Z2luID0gcGx1Z2luO1xuXHRcdFx0XHRcdGNzc3AuX292ZXJ3cml0ZVByb3BzLnB1c2gocHQubik7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0b3JpZyA9IHYudHJhbnNmb3JtT3JpZ2luO1xuXHRcdFx0aWYgKG0xLnN2ZyAmJiAob3JpZyB8fCB2LnN2Z09yaWdpbikpIHtcblx0XHRcdFx0eCA9IG0xLnhPZmZzZXQ7IC8vd2hlbiB3ZSBjaGFuZ2UgdGhlIG9yaWdpbiwgaW4gb3JkZXIgdG8gcHJldmVudCB0aGluZ3MgZnJvbSBqdW1waW5nIHdlIGFkanVzdCB0aGUgeC95IHNvIHdlIG11c3QgcmVjb3JkIHRob3NlIGhlcmUgc28gdGhhdCB3ZSBjYW4gY3JlYXRlIFByb3BUd2VlbnMgZm9yIHRoZW0gYW5kIGZsaXAgdGhlbSBhdCB0aGUgc2FtZSB0aW1lIGFzIHRoZSBvcmlnaW5cblx0XHRcdFx0eSA9IG0xLnlPZmZzZXQ7XG5cdFx0XHRcdF9wYXJzZVNWR09yaWdpbih0LCBfcGFyc2VQb3NpdGlvbihvcmlnKSwgbTIsIHYuc3ZnT3JpZ2luLCB2LnNtb290aE9yaWdpbik7XG5cdFx0XHRcdHB0ID0gX2FkZE5vblR3ZWVuaW5nTnVtZXJpY1BUKG0xLCBcInhPcmlnaW5cIiwgKG9yaWdpbmFsR1NUcmFuc2Zvcm0gPyBtMSA6IG0yKS54T3JpZ2luLCBtMi54T3JpZ2luLCBwdCwgdHJhbnNmb3JtT3JpZ2luU3RyaW5nKTsgLy9ub3RlOiBpZiB0aGVyZSB3YXNuJ3QgYSB0cmFuc2Zvcm1PcmlnaW4gZGVmaW5lZCB5ZXQsIGp1c3Qgc3RhcnQgd2l0aCB0aGUgZGVzdGluYXRpb24gb25lOyBpdCdzIHdhc3RlZnVsIG90aGVyd2lzZSwgYW5kIGl0IGNhdXNlcyBwcm9ibGVtcyB3aXRoIGZyb21UbygpIHR3ZWVucy4gRm9yIGV4YW1wbGUsIFR3ZWVuTGl0ZS50byhcIiN3aGVlbFwiLCAzLCB7cm90YXRpb246MTgwLCB0cmFuc2Zvcm1PcmlnaW46XCI1MCUgNTAlXCIsIGRlbGF5OjF9KTsgVHdlZW5MaXRlLmZyb21UbyhcIiN3aGVlbFwiLCAzLCB7c2NhbGU6MC41LCB0cmFuc2Zvcm1PcmlnaW46XCI1MCUgNTAlXCJ9LCB7c2NhbGU6MSwgZGVsYXk6Mn0pOyB3b3VsZCBjYXVzZSBhIGp1bXAgd2hlbiB0aGUgZnJvbSB2YWx1ZXMgcmV2ZXJ0IGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIDJuZCB0d2Vlbi5cblx0XHRcdFx0cHQgPSBfYWRkTm9uVHdlZW5pbmdOdW1lcmljUFQobTEsIFwieU9yaWdpblwiLCAob3JpZ2luYWxHU1RyYW5zZm9ybSA/IG0xIDogbTIpLnlPcmlnaW4sIG0yLnlPcmlnaW4sIHB0LCB0cmFuc2Zvcm1PcmlnaW5TdHJpbmcpO1xuXHRcdFx0XHRpZiAoeCAhPT0gbTEueE9mZnNldCB8fCB5ICE9PSBtMS55T2Zmc2V0KSB7XG5cdFx0XHRcdFx0cHQgPSBfYWRkTm9uVHdlZW5pbmdOdW1lcmljUFQobTEsIFwieE9mZnNldFwiLCAob3JpZ2luYWxHU1RyYW5zZm9ybSA/IHggOiBtMS54T2Zmc2V0KSwgbTEueE9mZnNldCwgcHQsIHRyYW5zZm9ybU9yaWdpblN0cmluZyk7XG5cdFx0XHRcdFx0cHQgPSBfYWRkTm9uVHdlZW5pbmdOdW1lcmljUFQobTEsIFwieU9mZnNldFwiLCAob3JpZ2luYWxHU1RyYW5zZm9ybSA/IHkgOiBtMS55T2Zmc2V0KSwgbTEueU9mZnNldCwgcHQsIHRyYW5zZm9ybU9yaWdpblN0cmluZyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0b3JpZyA9IF91c2VTVkdUcmFuc2Zvcm1BdHRyID8gbnVsbCA6IFwiMHB4IDBweFwiOyAvL2NlcnRhaW4gYnJvd3NlcnMgKGxpa2UgZmlyZWZveCkgY29tcGxldGVseSBib3RjaCB0cmFuc2Zvcm0tb3JpZ2luLCBzbyB3ZSBtdXN0IHJlbW92ZSBpdCB0byBwcmV2ZW50IGl0IGZyb20gY29udGFtaW5hdGluZyB0cmFuc2Zvcm1zLiBXZSBtYW5hZ2UgaXQgb3Vyc2VsdmVzIHdpdGggeE9yaWdpbiBhbmQgeU9yaWdpblxuXHRcdFx0fVxuXHRcdFx0aWYgKG9yaWcgfHwgKF9zdXBwb3J0czNEICYmIGhhczNEICYmIG0xLnpPcmlnaW4pKSB7IC8vaWYgYW55dGhpbmcgM0QgaXMgaGFwcGVuaW5nIGFuZCB0aGVyZSdzIGEgdHJhbnNmb3JtT3JpZ2luIHdpdGggYSB6IGNvbXBvbmVudCB0aGF0J3Mgbm9uLXplcm8sIHdlIG11c3QgZW5zdXJlIHRoYXQgdGhlIHRyYW5zZm9ybU9yaWdpbidzIHotY29tcG9uZW50IGlzIHNldCB0byAwIHNvIHRoYXQgd2UgY2FuIG1hbnVhbGx5IGRvIHRob3NlIGNhbGN1bGF0aW9ucyB0byBnZXQgYXJvdW5kIFNhZmFyaSBidWdzLiBFdmVuIGlmIHRoZSB1c2VyIGRpZG4ndCBzcGVjaWZpY2FsbHkgZGVmaW5lIGEgXCJ0cmFuc2Zvcm1PcmlnaW5cIiBpbiB0aGlzIHBhcnRpY3VsYXIgdHdlZW4gKG1heWJlIHRoZXkgZGlkIGl0IHZpYSBjc3MgZGlyZWN0bHkpLlxuXHRcdFx0XHRpZiAoX3RyYW5zZm9ybVByb3ApIHtcblx0XHRcdFx0XHRoYXNDaGFuZ2UgPSB0cnVlO1xuXHRcdFx0XHRcdHAgPSBfdHJhbnNmb3JtT3JpZ2luUHJvcDtcblx0XHRcdFx0XHRvcmlnID0gKG9yaWcgfHwgX2dldFN0eWxlKHQsIHAsIF9jcywgZmFsc2UsIFwiNTAlIDUwJVwiKSkgKyBcIlwiOyAvL2Nhc3QgYXMgc3RyaW5nIHRvIGF2b2lkIGVycm9yc1xuXHRcdFx0XHRcdHB0ID0gbmV3IENTU1Byb3BUd2VlbihzdHlsZSwgcCwgMCwgMCwgcHQsIC0xLCB0cmFuc2Zvcm1PcmlnaW5TdHJpbmcpO1xuXHRcdFx0XHRcdHB0LmIgPSBzdHlsZVtwXTtcblx0XHRcdFx0XHRwdC5wbHVnaW4gPSBwbHVnaW47XG5cdFx0XHRcdFx0aWYgKF9zdXBwb3J0czNEKSB7XG5cdFx0XHRcdFx0XHRjb3B5ID0gbTEuek9yaWdpbjtcblx0XHRcdFx0XHRcdG9yaWcgPSBvcmlnLnNwbGl0KFwiIFwiKTtcblx0XHRcdFx0XHRcdG0xLnpPcmlnaW4gPSAoKG9yaWcubGVuZ3RoID4gMiAmJiAhKGNvcHkgIT09IDAgJiYgb3JpZ1syXSA9PT0gXCIwcHhcIikpID8gcGFyc2VGbG9hdChvcmlnWzJdKSA6IGNvcHkpIHx8IDA7IC8vU2FmYXJpIGRvZXNuJ3QgaGFuZGxlIHRoZSB6IHBhcnQgb2YgdHJhbnNmb3JtT3JpZ2luIGNvcnJlY3RseSwgc28gd2UnbGwgbWFudWFsbHkgaGFuZGxlIGl0IGluIHRoZSBfc2V0M0RUcmFuc2Zvcm1SYXRpbygpIG1ldGhvZC5cblx0XHRcdFx0XHRcdHB0LnhzMCA9IHB0LmUgPSBvcmlnWzBdICsgXCIgXCIgKyAob3JpZ1sxXSB8fCBcIjUwJVwiKSArIFwiIDBweFwiOyAvL3dlIG11c3QgZGVmaW5lIGEgeiB2YWx1ZSBvZiAwcHggc3BlY2lmaWNhbGx5IG90aGVyd2lzZSBpT1MgNSBTYWZhcmkgd2lsbCBzdGljayB3aXRoIHRoZSBvbGQgb25lIChpZiBvbmUgd2FzIGRlZmluZWQpIVxuXHRcdFx0XHRcdFx0cHQgPSBuZXcgQ1NTUHJvcFR3ZWVuKG0xLCBcInpPcmlnaW5cIiwgMCwgMCwgcHQsIC0xLCBwdC5uKTsgLy93ZSBtdXN0IGNyZWF0ZSBhIENTU1Byb3BUd2VlbiBmb3IgdGhlIF9nc1RyYW5zZm9ybS56T3JpZ2luIHNvIHRoYXQgaXQgZ2V0cyByZXNldCBwcm9wZXJseSBhdCB0aGUgYmVnaW5uaW5nIGlmIHRoZSB0d2VlbiBydW5zIGJhY2t3YXJkIChhcyBvcHBvc2VkIHRvIGp1c3Qgc2V0dGluZyBtMS56T3JpZ2luIGhlcmUpXG5cdFx0XHRcdFx0XHRwdC5iID0gY29weTtcblx0XHRcdFx0XHRcdHB0LnhzMCA9IHB0LmUgPSBtMS56T3JpZ2luO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRwdC54czAgPSBwdC5lID0gb3JpZztcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvL2ZvciBvbGRlciB2ZXJzaW9ucyBvZiBJRSAoNi04KSwgd2UgbmVlZCB0byBtYW51YWxseSBjYWxjdWxhdGUgdGhpbmdzIGluc2lkZSB0aGUgc2V0UmF0aW8oKSBmdW5jdGlvbi4gV2UgcmVjb3JkIG9yaWdpbiB4IGFuZCB5IChveCBhbmQgb3kpIGFuZCB3aGV0aGVyIG9yIG5vdCB0aGUgdmFsdWVzIGFyZSBwZXJjZW50YWdlcyAob3hwIGFuZCBveXApLlxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdF9wYXJzZVBvc2l0aW9uKG9yaWcgKyBcIlwiLCBtMSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmIChoYXNDaGFuZ2UpIHtcblx0XHRcdFx0Y3NzcC5fdHJhbnNmb3JtVHlwZSA9ICghKG0xLnN2ZyAmJiBfdXNlU1ZHVHJhbnNmb3JtQXR0cikgJiYgKGhhczNEIHx8IHRoaXMuX3RyYW5zZm9ybVR5cGUgPT09IDMpKSA/IDMgOiAyOyAvL3F1aWNrZXIgdGhhbiBjYWxsaW5nIGNzc3AuX2VuYWJsZVRyYW5zZm9ybXMoKTtcblx0XHRcdH1cblx0XHRcdGlmIChzd2FwRnVuYykge1xuXHRcdFx0XHR2YXJzW3BhcnNpbmdQcm9wXSA9IHN3YXBGdW5jO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHB0O1xuXHRcdH0sIHByZWZpeDp0cnVlfSk7XG5cblx0XHRfcmVnaXN0ZXJDb21wbGV4U3BlY2lhbFByb3AoXCJib3hTaGFkb3dcIiwge2RlZmF1bHRWYWx1ZTpcIjBweCAwcHggMHB4IDBweCAjOTk5XCIsIHByZWZpeDp0cnVlLCBjb2xvcjp0cnVlLCBtdWx0aTp0cnVlLCBrZXl3b3JkOlwiaW5zZXRcIn0pO1xuXG5cdFx0X3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wKFwiYm9yZGVyUmFkaXVzXCIsIHtkZWZhdWx0VmFsdWU6XCIwcHhcIiwgcGFyc2VyOmZ1bmN0aW9uKHQsIGUsIHAsIGNzc3AsIHB0LCBwbHVnaW4pIHtcblx0XHRcdGUgPSB0aGlzLmZvcm1hdChlKTtcblx0XHRcdHZhciBwcm9wcyA9IFtcImJvcmRlclRvcExlZnRSYWRpdXNcIixcImJvcmRlclRvcFJpZ2h0UmFkaXVzXCIsXCJib3JkZXJCb3R0b21SaWdodFJhZGl1c1wiLFwiYm9yZGVyQm90dG9tTGVmdFJhZGl1c1wiXSxcblx0XHRcdFx0c3R5bGUgPSB0LnN0eWxlLFxuXHRcdFx0XHRlYTEsIGksIGVzMiwgYnMyLCBicywgZXMsIGJuLCBlbiwgdywgaCwgZXNmeCwgYnNmeCwgcmVsLCBobiwgdm4sIGVtO1xuXHRcdFx0dyA9IHBhcnNlRmxvYXQodC5vZmZzZXRXaWR0aCk7XG5cdFx0XHRoID0gcGFyc2VGbG9hdCh0Lm9mZnNldEhlaWdodCk7XG5cdFx0XHRlYTEgPSBlLnNwbGl0KFwiIFwiKTtcblx0XHRcdGZvciAoaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyAvL2lmIHdlJ3JlIGRlYWxpbmcgd2l0aCBwZXJjZW50YWdlcywgd2UgbXVzdCBjb252ZXJ0IHRoaW5ncyBzZXBhcmF0ZWx5IGZvciB0aGUgaG9yaXpvbnRhbCBhbmQgdmVydGljYWwgYXhpcyFcblx0XHRcdFx0aWYgKHRoaXMucC5pbmRleE9mKFwiYm9yZGVyXCIpKSB7IC8vb2xkZXIgYnJvd3NlcnMgdXNlZCBhIHByZWZpeFxuXHRcdFx0XHRcdHByb3BzW2ldID0gX2NoZWNrUHJvcFByZWZpeChwcm9wc1tpXSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0YnMgPSBiczIgPSBfZ2V0U3R5bGUodCwgcHJvcHNbaV0sIF9jcywgZmFsc2UsIFwiMHB4XCIpO1xuXHRcdFx0XHRpZiAoYnMuaW5kZXhPZihcIiBcIikgIT09IC0xKSB7XG5cdFx0XHRcdFx0YnMyID0gYnMuc3BsaXQoXCIgXCIpO1xuXHRcdFx0XHRcdGJzID0gYnMyWzBdO1xuXHRcdFx0XHRcdGJzMiA9IGJzMlsxXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlcyA9IGVzMiA9IGVhMVtpXTtcblx0XHRcdFx0Ym4gPSBwYXJzZUZsb2F0KGJzKTtcblx0XHRcdFx0YnNmeCA9IGJzLnN1YnN0cigoYm4gKyBcIlwiKS5sZW5ndGgpO1xuXHRcdFx0XHRyZWwgPSAoZXMuY2hhckF0KDEpID09PSBcIj1cIik7XG5cdFx0XHRcdGlmIChyZWwpIHtcblx0XHRcdFx0XHRlbiA9IHBhcnNlSW50KGVzLmNoYXJBdCgwKStcIjFcIiwgMTApO1xuXHRcdFx0XHRcdGVzID0gZXMuc3Vic3RyKDIpO1xuXHRcdFx0XHRcdGVuICo9IHBhcnNlRmxvYXQoZXMpO1xuXHRcdFx0XHRcdGVzZnggPSBlcy5zdWJzdHIoKGVuICsgXCJcIikubGVuZ3RoIC0gKGVuIDwgMCA/IDEgOiAwKSkgfHwgXCJcIjtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRlbiA9IHBhcnNlRmxvYXQoZXMpO1xuXHRcdFx0XHRcdGVzZnggPSBlcy5zdWJzdHIoKGVuICsgXCJcIikubGVuZ3RoKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoZXNmeCA9PT0gXCJcIikge1xuXHRcdFx0XHRcdGVzZnggPSBfc3VmZml4TWFwW3BdIHx8IGJzZng7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGVzZnggIT09IGJzZngpIHtcblx0XHRcdFx0XHRobiA9IF9jb252ZXJ0VG9QaXhlbHModCwgXCJib3JkZXJMZWZ0XCIsIGJuLCBic2Z4KTsgLy9ob3Jpem9udGFsIG51bWJlciAod2UgdXNlIGEgYm9ndXMgXCJib3JkZXJMZWZ0XCIgcHJvcGVydHkganVzdCBiZWNhdXNlIHRoZSBfY29udmVydFRvUGl4ZWxzKCkgbWV0aG9kIHNlYXJjaGVzIGZvciB0aGUga2V5d29yZHMgXCJMZWZ0XCIsIFwiUmlnaHRcIiwgXCJUb3BcIiwgYW5kIFwiQm90dG9tXCIgdG8gZGV0ZXJtaW5lIG9mIGl0J3MgYSBob3Jpem9udGFsIG9yIHZlcnRpY2FsIHByb3BlcnR5LCBhbmQgd2UgbmVlZCBcImJvcmRlclwiIGluIHRoZSBuYW1lIHNvIHRoYXQgaXQga25vd3MgaXQgc2hvdWxkIG1lYXN1cmUgcmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQgaXRzZWxmLCBub3QgaXRzIHBhcmVudC5cblx0XHRcdFx0XHR2biA9IF9jb252ZXJ0VG9QaXhlbHModCwgXCJib3JkZXJUb3BcIiwgYm4sIGJzZngpOyAvL3ZlcnRpY2FsIG51bWJlclxuXHRcdFx0XHRcdGlmIChlc2Z4ID09PSBcIiVcIikge1xuXHRcdFx0XHRcdFx0YnMgPSAoaG4gLyB3ICogMTAwKSArIFwiJVwiO1xuXHRcdFx0XHRcdFx0YnMyID0gKHZuIC8gaCAqIDEwMCkgKyBcIiVcIjtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKGVzZnggPT09IFwiZW1cIikge1xuXHRcdFx0XHRcdFx0ZW0gPSBfY29udmVydFRvUGl4ZWxzKHQsIFwiYm9yZGVyTGVmdFwiLCAxLCBcImVtXCIpO1xuXHRcdFx0XHRcdFx0YnMgPSAoaG4gLyBlbSkgKyBcImVtXCI7XG5cdFx0XHRcdFx0XHRiczIgPSAodm4gLyBlbSkgKyBcImVtXCI7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGJzID0gaG4gKyBcInB4XCI7XG5cdFx0XHRcdFx0XHRiczIgPSB2biArIFwicHhcIjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHJlbCkge1xuXHRcdFx0XHRcdFx0ZXMgPSAocGFyc2VGbG9hdChicykgKyBlbikgKyBlc2Z4O1xuXHRcdFx0XHRcdFx0ZXMyID0gKHBhcnNlRmxvYXQoYnMyKSArIGVuKSArIGVzZng7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHB0ID0gX3BhcnNlQ29tcGxleChzdHlsZSwgcHJvcHNbaV0sIGJzICsgXCIgXCIgKyBiczIsIGVzICsgXCIgXCIgKyBlczIsIGZhbHNlLCBcIjBweFwiLCBwdCk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcHQ7XG5cdFx0fSwgcHJlZml4OnRydWUsIGZvcm1hdHRlcjpfZ2V0Rm9ybWF0dGVyKFwiMHB4IDBweCAwcHggMHB4XCIsIGZhbHNlLCB0cnVlKX0pO1xuXHRcdF9yZWdpc3RlckNvbXBsZXhTcGVjaWFsUHJvcChcImJvcmRlckJvdHRvbUxlZnRSYWRpdXMsYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMsYm9yZGVyVG9wTGVmdFJhZGl1cyxib3JkZXJUb3BSaWdodFJhZGl1c1wiLCB7ZGVmYXVsdFZhbHVlOlwiMHB4XCIsIHBhcnNlcjpmdW5jdGlvbih0LCBlLCBwLCBjc3NwLCBwdCwgcGx1Z2luKSB7XG5cdFx0XHRyZXR1cm4gX3BhcnNlQ29tcGxleCh0LnN0eWxlLCBwLCB0aGlzLmZvcm1hdChfZ2V0U3R5bGUodCwgcCwgX2NzLCBmYWxzZSwgXCIwcHggMHB4XCIpKSwgdGhpcy5mb3JtYXQoZSksIGZhbHNlLCBcIjBweFwiLCBwdCk7XG5cdFx0fSwgcHJlZml4OnRydWUsIGZvcm1hdHRlcjpfZ2V0Rm9ybWF0dGVyKFwiMHB4IDBweFwiLCBmYWxzZSwgdHJ1ZSl9KTtcblx0XHRfcmVnaXN0ZXJDb21wbGV4U3BlY2lhbFByb3AoXCJiYWNrZ3JvdW5kUG9zaXRpb25cIiwge2RlZmF1bHRWYWx1ZTpcIjAgMFwiLCBwYXJzZXI6ZnVuY3Rpb24odCwgZSwgcCwgY3NzcCwgcHQsIHBsdWdpbikge1xuXHRcdFx0dmFyIGJwID0gXCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCIsXG5cdFx0XHRcdGNzID0gKF9jcyB8fCBfZ2V0Q29tcHV0ZWRTdHlsZSh0LCBudWxsKSksXG5cdFx0XHRcdGJzID0gdGhpcy5mb3JtYXQoICgoY3MpID8gX2llVmVycyA/IGNzLmdldFByb3BlcnR5VmFsdWUoYnAgKyBcIi14XCIpICsgXCIgXCIgKyBjcy5nZXRQcm9wZXJ0eVZhbHVlKGJwICsgXCIteVwiKSA6IGNzLmdldFByb3BlcnR5VmFsdWUoYnApIDogdC5jdXJyZW50U3R5bGUuYmFja2dyb3VuZFBvc2l0aW9uWCArIFwiIFwiICsgdC5jdXJyZW50U3R5bGUuYmFja2dyb3VuZFBvc2l0aW9uWSkgfHwgXCIwIDBcIiksIC8vSW50ZXJuZXQgRXhwbG9yZXIgZG9lc24ndCByZXBvcnQgYmFja2dyb3VuZC1wb3NpdGlvbiBjb3JyZWN0bHkgLSB3ZSBtdXN0IHF1ZXJ5IGJhY2tncm91bmQtcG9zaXRpb24teCBhbmQgYmFja2dyb3VuZC1wb3NpdGlvbi15IGFuZCBjb21iaW5lIHRoZW0gKGV2ZW4gaW4gSUUxMCkuIEJlZm9yZSBJRTksIHdlIG11c3QgZG8gdGhlIHNhbWUgd2l0aCB0aGUgY3VycmVudFN0eWxlIG9iamVjdCBhbmQgdXNlIGNhbWVsQ2FzZVxuXHRcdFx0XHRlcyA9IHRoaXMuZm9ybWF0KGUpLFxuXHRcdFx0XHRiYSwgZWEsIGksIHBjdCwgb3ZlcmxhcCwgc3JjO1xuXHRcdFx0aWYgKChicy5pbmRleE9mKFwiJVwiKSAhPT0gLTEpICE9PSAoZXMuaW5kZXhPZihcIiVcIikgIT09IC0xKSAmJiBlcy5zcGxpdChcIixcIikubGVuZ3RoIDwgMikge1xuXHRcdFx0XHRzcmMgPSBfZ2V0U3R5bGUodCwgXCJiYWNrZ3JvdW5kSW1hZ2VcIikucmVwbGFjZShfdXJsRXhwLCBcIlwiKTtcblx0XHRcdFx0aWYgKHNyYyAmJiBzcmMgIT09IFwibm9uZVwiKSB7XG5cdFx0XHRcdFx0YmEgPSBicy5zcGxpdChcIiBcIik7XG5cdFx0XHRcdFx0ZWEgPSBlcy5zcGxpdChcIiBcIik7XG5cdFx0XHRcdFx0X3RlbXBJbWcuc2V0QXR0cmlidXRlKFwic3JjXCIsIHNyYyk7IC8vc2V0IHRoZSB0ZW1wIElNRydzIHNyYyB0byB0aGUgYmFja2dyb3VuZC1pbWFnZSBzbyB0aGF0IHdlIGNhbiBtZWFzdXJlIGl0cyB3aWR0aC9oZWlnaHRcblx0XHRcdFx0XHRpID0gMjtcblx0XHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRcdGJzID0gYmFbaV07XG5cdFx0XHRcdFx0XHRwY3QgPSAoYnMuaW5kZXhPZihcIiVcIikgIT09IC0xKTtcblx0XHRcdFx0XHRcdGlmIChwY3QgIT09IChlYVtpXS5pbmRleE9mKFwiJVwiKSAhPT0gLTEpKSB7XG5cdFx0XHRcdFx0XHRcdG92ZXJsYXAgPSAoaSA9PT0gMCkgPyB0Lm9mZnNldFdpZHRoIC0gX3RlbXBJbWcud2lkdGggOiB0Lm9mZnNldEhlaWdodCAtIF90ZW1wSW1nLmhlaWdodDtcblx0XHRcdFx0XHRcdFx0YmFbaV0gPSBwY3QgPyAocGFyc2VGbG9hdChicykgLyAxMDAgKiBvdmVybGFwKSArIFwicHhcIiA6IChwYXJzZUZsb2F0KGJzKSAvIG92ZXJsYXAgKiAxMDApICsgXCIlXCI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJzID0gYmEuam9pbihcIiBcIik7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzLnBhcnNlQ29tcGxleCh0LnN0eWxlLCBicywgZXMsIHB0LCBwbHVnaW4pO1xuXHRcdH0sIGZvcm1hdHRlcjpfcGFyc2VQb3NpdGlvbn0pO1xuXHRcdF9yZWdpc3RlckNvbXBsZXhTcGVjaWFsUHJvcChcImJhY2tncm91bmRTaXplXCIsIHtkZWZhdWx0VmFsdWU6XCIwIDBcIiwgZm9ybWF0dGVyOmZ1bmN0aW9uKHYpIHtcblx0XHRcdHYgKz0gXCJcIjsgLy9lbnN1cmUgaXQncyBhIHN0cmluZ1xuXHRcdFx0cmV0dXJuIF9wYXJzZVBvc2l0aW9uKHYuaW5kZXhPZihcIiBcIikgPT09IC0xID8gdiArIFwiIFwiICsgdiA6IHYpOyAvL2lmIHNldCB0byBzb21ldGhpbmcgbGlrZSBcIjEwMCUgMTAwJVwiLCBTYWZhcmkgdHlwaWNhbGx5IHJlcG9ydHMgdGhlIGNvbXB1dGVkIHN0eWxlIGFzIGp1c3QgXCIxMDAlXCIgKG5vIDJuZCB2YWx1ZSksIGJ1dCB3ZSBzaG91bGQgZW5zdXJlIHRoYXQgdGhlcmUgYXJlIHR3byB2YWx1ZXMsIHNvIGNvcHkgdGhlIGZpcnN0IG9uZS4gT3RoZXJ3aXNlLCBpdCdkIGJlIGludGVycHJldGVkIGFzIFwiMTAwJSAwXCIgKHdyb25nKS5cblx0XHR9fSk7XG5cdFx0X3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wKFwicGVyc3BlY3RpdmVcIiwge2RlZmF1bHRWYWx1ZTpcIjBweFwiLCBwcmVmaXg6dHJ1ZX0pO1xuXHRcdF9yZWdpc3RlckNvbXBsZXhTcGVjaWFsUHJvcChcInBlcnNwZWN0aXZlT3JpZ2luXCIsIHtkZWZhdWx0VmFsdWU6XCI1MCUgNTAlXCIsIHByZWZpeDp0cnVlfSk7XG5cdFx0X3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wKFwidHJhbnNmb3JtU3R5bGVcIiwge3ByZWZpeDp0cnVlfSk7XG5cdFx0X3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wKFwiYmFja2ZhY2VWaXNpYmlsaXR5XCIsIHtwcmVmaXg6dHJ1ZX0pO1xuXHRcdF9yZWdpc3RlckNvbXBsZXhTcGVjaWFsUHJvcChcInVzZXJTZWxlY3RcIiwge3ByZWZpeDp0cnVlfSk7XG5cdFx0X3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wKFwibWFyZ2luXCIsIHtwYXJzZXI6X2dldEVkZ2VQYXJzZXIoXCJtYXJnaW5Ub3AsbWFyZ2luUmlnaHQsbWFyZ2luQm90dG9tLG1hcmdpbkxlZnRcIil9KTtcblx0XHRfcmVnaXN0ZXJDb21wbGV4U3BlY2lhbFByb3AoXCJwYWRkaW5nXCIsIHtwYXJzZXI6X2dldEVkZ2VQYXJzZXIoXCJwYWRkaW5nVG9wLHBhZGRpbmdSaWdodCxwYWRkaW5nQm90dG9tLHBhZGRpbmdMZWZ0XCIpfSk7XG5cdFx0X3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wKFwiY2xpcFwiLCB7ZGVmYXVsdFZhbHVlOlwicmVjdCgwcHgsMHB4LDBweCwwcHgpXCIsIHBhcnNlcjpmdW5jdGlvbih0LCBlLCBwLCBjc3NwLCBwdCwgcGx1Z2luKXtcblx0XHRcdHZhciBiLCBjcywgZGVsaW07XG5cdFx0XHRpZiAoX2llVmVycyA8IDkpIHsgLy9JRTggYW5kIGVhcmxpZXIgZG9uJ3QgcmVwb3J0IGEgXCJjbGlwXCIgdmFsdWUgaW4gdGhlIGN1cnJlbnRTdHlsZSAtIGluc3RlYWQsIHRoZSB2YWx1ZXMgYXJlIHNwbGl0IGFwYXJ0IGludG8gY2xpcFRvcCwgY2xpcFJpZ2h0LCBjbGlwQm90dG9tLCBhbmQgY2xpcExlZnQuIEFsc28sIGluIElFNyBhbmQgZWFybGllciwgdGhlIHZhbHVlcyBpbnNpZGUgcmVjdCgpIGFyZSBzcGFjZS1kZWxpbWl0ZWQsIG5vdCBjb21tYS1kZWxpbWl0ZWQuXG5cdFx0XHRcdGNzID0gdC5jdXJyZW50U3R5bGU7XG5cdFx0XHRcdGRlbGltID0gX2llVmVycyA8IDggPyBcIiBcIiA6IFwiLFwiO1xuXHRcdFx0XHRiID0gXCJyZWN0KFwiICsgY3MuY2xpcFRvcCArIGRlbGltICsgY3MuY2xpcFJpZ2h0ICsgZGVsaW0gKyBjcy5jbGlwQm90dG9tICsgZGVsaW0gKyBjcy5jbGlwTGVmdCArIFwiKVwiO1xuXHRcdFx0XHRlID0gdGhpcy5mb3JtYXQoZSkuc3BsaXQoXCIsXCIpLmpvaW4oZGVsaW0pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YiA9IHRoaXMuZm9ybWF0KF9nZXRTdHlsZSh0LCB0aGlzLnAsIF9jcywgZmFsc2UsIHRoaXMuZGZsdCkpO1xuXHRcdFx0XHRlID0gdGhpcy5mb3JtYXQoZSk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy5wYXJzZUNvbXBsZXgodC5zdHlsZSwgYiwgZSwgcHQsIHBsdWdpbik7XG5cdFx0fX0pO1xuXHRcdF9yZWdpc3RlckNvbXBsZXhTcGVjaWFsUHJvcChcInRleHRTaGFkb3dcIiwge2RlZmF1bHRWYWx1ZTpcIjBweCAwcHggMHB4ICM5OTlcIiwgY29sb3I6dHJ1ZSwgbXVsdGk6dHJ1ZX0pO1xuXHRcdF9yZWdpc3RlckNvbXBsZXhTcGVjaWFsUHJvcChcImF1dG9Sb3VuZCxzdHJpY3RVbml0c1wiLCB7cGFyc2VyOmZ1bmN0aW9uKHQsIGUsIHAsIGNzc3AsIHB0KSB7cmV0dXJuIHB0O319KTsgLy9qdXN0IHNvIHRoYXQgd2UgY2FuIGlnbm9yZSB0aGVzZSBwcm9wZXJ0aWVzIChub3QgdHdlZW4gdGhlbSlcblx0XHRfcmVnaXN0ZXJDb21wbGV4U3BlY2lhbFByb3AoXCJib3JkZXJcIiwge2RlZmF1bHRWYWx1ZTpcIjBweCBzb2xpZCAjMDAwXCIsIHBhcnNlcjpmdW5jdGlvbih0LCBlLCBwLCBjc3NwLCBwdCwgcGx1Z2luKSB7XG5cdFx0XHR2YXIgYncgPSBfZ2V0U3R5bGUodCwgXCJib3JkZXJUb3BXaWR0aFwiLCBfY3MsIGZhbHNlLCBcIjBweFwiKSxcblx0XHRcdFx0ZW5kID0gdGhpcy5mb3JtYXQoZSkuc3BsaXQoXCIgXCIpLFxuXHRcdFx0XHRlc2Z4ID0gZW5kWzBdLnJlcGxhY2UoX3N1ZmZpeEV4cCwgXCJcIik7XG5cdFx0XHRpZiAoZXNmeCAhPT0gXCJweFwiKSB7IC8vaWYgd2UncmUgYW5pbWF0aW5nIHRvIGEgbm9uLXB4IHZhbHVlLCB3ZSBuZWVkIHRvIGNvbnZlcnQgdGhlIGJlZ2lubmluZyB3aWR0aCB0byB0aGF0IHVuaXQuXG5cdFx0XHRcdGJ3ID0gKHBhcnNlRmxvYXQoYncpIC8gX2NvbnZlcnRUb1BpeGVscyh0LCBcImJvcmRlclRvcFdpZHRoXCIsIDEsIGVzZngpKSArIGVzZng7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy5wYXJzZUNvbXBsZXgodC5zdHlsZSwgdGhpcy5mb3JtYXQoYncgKyBcIiBcIiArIF9nZXRTdHlsZSh0LCBcImJvcmRlclRvcFN0eWxlXCIsIF9jcywgZmFsc2UsIFwic29saWRcIikgKyBcIiBcIiArIF9nZXRTdHlsZSh0LCBcImJvcmRlclRvcENvbG9yXCIsIF9jcywgZmFsc2UsIFwiIzAwMFwiKSksIGVuZC5qb2luKFwiIFwiKSwgcHQsIHBsdWdpbik7XG5cdFx0XHR9LCBjb2xvcjp0cnVlLCBmb3JtYXR0ZXI6ZnVuY3Rpb24odikge1xuXHRcdFx0XHR2YXIgYSA9IHYuc3BsaXQoXCIgXCIpO1xuXHRcdFx0XHRyZXR1cm4gYVswXSArIFwiIFwiICsgKGFbMV0gfHwgXCJzb2xpZFwiKSArIFwiIFwiICsgKHYubWF0Y2goX2NvbG9yRXhwKSB8fCBbXCIjMDAwXCJdKVswXTtcblx0XHRcdH19KTtcblx0XHRfcmVnaXN0ZXJDb21wbGV4U3BlY2lhbFByb3AoXCJib3JkZXJXaWR0aFwiLCB7cGFyc2VyOl9nZXRFZGdlUGFyc2VyKFwiYm9yZGVyVG9wV2lkdGgsYm9yZGVyUmlnaHRXaWR0aCxib3JkZXJCb3R0b21XaWR0aCxib3JkZXJMZWZ0V2lkdGhcIil9KTsgLy9GaXJlZm94IGRvZXNuJ3QgcGljayB1cCBvbiBib3JkZXJXaWR0aCBzZXQgaW4gc3R5bGUgc2hlZXRzIChvbmx5IGlubGluZSkuXG5cdFx0X3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wKFwiZmxvYXQsY3NzRmxvYXQsc3R5bGVGbG9hdFwiLCB7cGFyc2VyOmZ1bmN0aW9uKHQsIGUsIHAsIGNzc3AsIHB0LCBwbHVnaW4pIHtcblx0XHRcdHZhciBzID0gdC5zdHlsZSxcblx0XHRcdFx0cHJvcCA9IChcImNzc0Zsb2F0XCIgaW4gcykgPyBcImNzc0Zsb2F0XCIgOiBcInN0eWxlRmxvYXRcIjtcblx0XHRcdHJldHVybiBuZXcgQ1NTUHJvcFR3ZWVuKHMsIHByb3AsIDAsIDAsIHB0LCAtMSwgcCwgZmFsc2UsIDAsIHNbcHJvcF0sIGUpO1xuXHRcdH19KTtcblxuXHRcdC8vb3BhY2l0eS1yZWxhdGVkXG5cdFx0dmFyIF9zZXRJRU9wYWNpdHlSYXRpbyA9IGZ1bmN0aW9uKHYpIHtcblx0XHRcdFx0dmFyIHQgPSB0aGlzLnQsIC8vcmVmZXJzIHRvIHRoZSBlbGVtZW50J3Mgc3R5bGUgcHJvcGVydHlcblx0XHRcdFx0XHRmaWx0ZXJzID0gdC5maWx0ZXIgfHwgX2dldFN0eWxlKHRoaXMuZGF0YSwgXCJmaWx0ZXJcIikgfHwgXCJcIixcblx0XHRcdFx0XHR2YWwgPSAodGhpcy5zICsgdGhpcy5jICogdikgfCAwLFxuXHRcdFx0XHRcdHNraXA7XG5cdFx0XHRcdGlmICh2YWwgPT09IDEwMCkgeyAvL2ZvciBvbGRlciB2ZXJzaW9ucyBvZiBJRSB0aGF0IG5lZWQgdG8gdXNlIGEgZmlsdGVyIHRvIGFwcGx5IG9wYWNpdHksIHdlIHNob3VsZCByZW1vdmUgdGhlIGZpbHRlciBpZiBvcGFjaXR5IGhpdHMgMSBpbiBvcmRlciB0byBpbXByb3ZlIHBlcmZvcm1hbmNlLCBidXQgbWFrZSBzdXJlIHRoZXJlIGlzbid0IGEgdHJhbnNmb3JtIChtYXRyaXgpIG9yIGdyYWRpZW50IGluIHRoZSBmaWx0ZXJzLlxuXHRcdFx0XHRcdGlmIChmaWx0ZXJzLmluZGV4T2YoXCJhdHJpeChcIikgPT09IC0xICYmIGZpbHRlcnMuaW5kZXhPZihcInJhZGllbnQoXCIpID09PSAtMSAmJiBmaWx0ZXJzLmluZGV4T2YoXCJvYWRlcihcIikgPT09IC0xKSB7XG5cdFx0XHRcdFx0XHR0LnJlbW92ZUF0dHJpYnV0ZShcImZpbHRlclwiKTtcblx0XHRcdFx0XHRcdHNraXAgPSAoIV9nZXRTdHlsZSh0aGlzLmRhdGEsIFwiZmlsdGVyXCIpKTsgLy9pZiBhIGNsYXNzIGlzIGFwcGxpZWQgdGhhdCBoYXMgYW4gYWxwaGEgZmlsdGVyLCBpdCB3aWxsIHRha2UgZWZmZWN0ICh3ZSBkb24ndCB3YW50IHRoYXQpLCBzbyByZS1hcHBseSBvdXIgYWxwaGEgZmlsdGVyIGluIHRoYXQgY2FzZS4gV2UgbXVzdCBmaXJzdCByZW1vdmUgaXQgYW5kIHRoZW4gY2hlY2suXG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHQuZmlsdGVyID0gZmlsdGVycy5yZXBsYWNlKF9hbHBoYUZpbHRlckV4cCwgXCJcIik7XG5cdFx0XHRcdFx0XHRza2lwID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFza2lwKSB7XG5cdFx0XHRcdFx0aWYgKHRoaXMueG4xKSB7XG5cdFx0XHRcdFx0XHR0LmZpbHRlciA9IGZpbHRlcnMgPSBmaWx0ZXJzIHx8IChcImFscGhhKG9wYWNpdHk9XCIgKyB2YWwgKyBcIilcIik7IC8vd29ya3MgYXJvdW5kIGJ1ZyBpbiBJRTcvOCB0aGF0IHByZXZlbnRzIGNoYW5nZXMgdG8gXCJ2aXNpYmlsaXR5XCIgZnJvbSBiZWluZyBhcHBsaWVkIHByb3Blcmx5IGlmIHRoZSBmaWx0ZXIgaXMgY2hhbmdlZCB0byBhIGRpZmZlcmVudCBhbHBoYSBvbiB0aGUgc2FtZSBmcmFtZS5cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGZpbHRlcnMuaW5kZXhPZihcInBhY2l0eVwiKSA9PT0gLTEpIHsgLy9vbmx5IHVzZWQgaWYgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgdGhlIHN0YW5kYXJkIG9wYWNpdHkgc3R5bGUgcHJvcGVydHkgKElFIDcgYW5kIDgpLiBXZSBvbWl0IHRoZSBcIk9cIiB0byBhdm9pZCBjYXNlLXNlbnNpdGl2aXR5IGlzc3Vlc1xuXHRcdFx0XHRcdFx0aWYgKHZhbCAhPT0gMCB8fCAhdGhpcy54bjEpIHsgLy9idWdzIGluIElFNy84IHdvbid0IHJlbmRlciB0aGUgZmlsdGVyIHByb3Blcmx5IGlmIG9wYWNpdHkgaXMgQURERUQgb24gdGhlIHNhbWUgZnJhbWUvcmVuZGVyIGFzIFwidmlzaWJpbGl0eVwiIGNoYW5nZXMgKHRoaXMueG4xIGlzIDEgaWYgdGhpcyB0d2VlbiBpcyBhbiBcImF1dG9BbHBoYVwiIHR3ZWVuKVxuXHRcdFx0XHRcdFx0XHR0LmZpbHRlciA9IGZpbHRlcnMgKyBcIiBhbHBoYShvcGFjaXR5PVwiICsgdmFsICsgXCIpXCI7IC8vd2Ugcm91bmQgdGhlIHZhbHVlIGJlY2F1c2Ugb3RoZXJ3aXNlLCBidWdzIGluIElFNy84IGNhbiBwcmV2ZW50IFwidmlzaWJpbGl0eVwiIGNoYW5nZXMgZnJvbSBiZWluZyBhcHBsaWVkIHByb3Blcmx5LlxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR0LmZpbHRlciA9IGZpbHRlcnMucmVwbGFjZShfb3BhY2l0eUV4cCwgXCJvcGFjaXR5PVwiICsgdmFsKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0X3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wKFwib3BhY2l0eSxhbHBoYSxhdXRvQWxwaGFcIiwge2RlZmF1bHRWYWx1ZTpcIjFcIiwgcGFyc2VyOmZ1bmN0aW9uKHQsIGUsIHAsIGNzc3AsIHB0LCBwbHVnaW4pIHtcblx0XHRcdHZhciBiID0gcGFyc2VGbG9hdChfZ2V0U3R5bGUodCwgXCJvcGFjaXR5XCIsIF9jcywgZmFsc2UsIFwiMVwiKSksXG5cdFx0XHRcdHN0eWxlID0gdC5zdHlsZSxcblx0XHRcdFx0aXNBdXRvQWxwaGEgPSAocCA9PT0gXCJhdXRvQWxwaGFcIik7XG5cdFx0XHRpZiAodHlwZW9mKGUpID09PSBcInN0cmluZ1wiICYmIGUuY2hhckF0KDEpID09PSBcIj1cIikge1xuXHRcdFx0XHRlID0gKChlLmNoYXJBdCgwKSA9PT0gXCItXCIpID8gLTEgOiAxKSAqIHBhcnNlRmxvYXQoZS5zdWJzdHIoMikpICsgYjtcblx0XHRcdH1cblx0XHRcdGlmIChpc0F1dG9BbHBoYSAmJiBiID09PSAxICYmIF9nZXRTdHlsZSh0LCBcInZpc2liaWxpdHlcIiwgX2NzKSA9PT0gXCJoaWRkZW5cIiAmJiBlICE9PSAwKSB7IC8vaWYgdmlzaWJpbGl0eSBpcyBpbml0aWFsbHkgc2V0IHRvIFwiaGlkZGVuXCIsIHdlIHNob3VsZCBpbnRlcnByZXQgdGhhdCBhcyBpbnRlbnQgdG8gbWFrZSBvcGFjaXR5IDAgKGEgY29udmVuaWVuY2UpXG5cdFx0XHRcdGIgPSAwO1xuXHRcdFx0fVxuXHRcdFx0aWYgKF9zdXBwb3J0c09wYWNpdHkpIHtcblx0XHRcdFx0cHQgPSBuZXcgQ1NTUHJvcFR3ZWVuKHN0eWxlLCBcIm9wYWNpdHlcIiwgYiwgZSAtIGIsIHB0KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHB0ID0gbmV3IENTU1Byb3BUd2VlbihzdHlsZSwgXCJvcGFjaXR5XCIsIGIgKiAxMDAsIChlIC0gYikgKiAxMDAsIHB0KTtcblx0XHRcdFx0cHQueG4xID0gaXNBdXRvQWxwaGEgPyAxIDogMDsgLy93ZSBuZWVkIHRvIHJlY29yZCB3aGV0aGVyIG9yIG5vdCB0aGlzIGlzIGFuIGF1dG9BbHBoYSBzbyB0aGF0IGluIHRoZSBzZXRSYXRpbygpLCB3ZSBrbm93IHRvIGR1cGxpY2F0ZSB0aGUgc2V0dGluZyBvZiB0aGUgYWxwaGEgaW4gb3JkZXIgdG8gd29yayBhcm91bmQgYSBidWcgaW4gSUU3IGFuZCBJRTggdGhhdCBwcmV2ZW50cyBjaGFuZ2VzIHRvIFwidmlzaWJpbGl0eVwiIGZyb20gdGFraW5nIGVmZmVjdCBpZiB0aGUgZmlsdGVyIGlzIGNoYW5nZWQgdG8gYSBkaWZmZXJlbnQgYWxwaGEob3BhY2l0eSkgYXQgdGhlIHNhbWUgdGltZS4gU2V0dGluZyBpdCB0byB0aGUgU0FNRSB2YWx1ZSBmaXJzdCwgdGhlbiB0aGUgbmV3IHZhbHVlIHdvcmtzIGFyb3VuZCB0aGUgSUU3LzggYnVnLlxuXHRcdFx0XHRzdHlsZS56b29tID0gMTsgLy9oZWxwcyBjb3JyZWN0IGFuIElFIGlzc3VlLlxuXHRcdFx0XHRwdC50eXBlID0gMjtcblx0XHRcdFx0cHQuYiA9IFwiYWxwaGEob3BhY2l0eT1cIiArIHB0LnMgKyBcIilcIjtcblx0XHRcdFx0cHQuZSA9IFwiYWxwaGEob3BhY2l0eT1cIiArIChwdC5zICsgcHQuYykgKyBcIilcIjtcblx0XHRcdFx0cHQuZGF0YSA9IHQ7XG5cdFx0XHRcdHB0LnBsdWdpbiA9IHBsdWdpbjtcblx0XHRcdFx0cHQuc2V0UmF0aW8gPSBfc2V0SUVPcGFjaXR5UmF0aW87XG5cdFx0XHR9XG5cdFx0XHRpZiAoaXNBdXRvQWxwaGEpIHsgLy93ZSBoYXZlIHRvIGNyZWF0ZSB0aGUgXCJ2aXNpYmlsaXR5XCIgUHJvcFR3ZWVuIGFmdGVyIHRoZSBvcGFjaXR5IG9uZSBpbiB0aGUgbGlua2VkIGxpc3Qgc28gdGhhdCB0aGV5IHJ1biBpbiB0aGUgb3JkZXIgdGhhdCB3b3JrcyBwcm9wZXJseSBpbiBJRTggYW5kIGVhcmxpZXJcblx0XHRcdFx0cHQgPSBuZXcgQ1NTUHJvcFR3ZWVuKHN0eWxlLCBcInZpc2liaWxpdHlcIiwgMCwgMCwgcHQsIC0xLCBudWxsLCBmYWxzZSwgMCwgKChiICE9PSAwKSA/IFwiaW5oZXJpdFwiIDogXCJoaWRkZW5cIiksICgoZSA9PT0gMCkgPyBcImhpZGRlblwiIDogXCJpbmhlcml0XCIpKTtcblx0XHRcdFx0cHQueHMwID0gXCJpbmhlcml0XCI7XG5cdFx0XHRcdGNzc3AuX292ZXJ3cml0ZVByb3BzLnB1c2gocHQubik7XG5cdFx0XHRcdGNzc3AuX292ZXJ3cml0ZVByb3BzLnB1c2gocCk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcHQ7XG5cdFx0fX0pO1xuXG5cblx0XHR2YXIgX3JlbW92ZVByb3AgPSBmdW5jdGlvbihzLCBwKSB7XG5cdFx0XHRcdGlmIChwKSB7XG5cdFx0XHRcdFx0aWYgKHMucmVtb3ZlUHJvcGVydHkpIHtcblx0XHRcdFx0XHRcdGlmIChwLnN1YnN0cigwLDIpID09PSBcIm1zXCIgfHwgcC5zdWJzdHIoMCw2KSA9PT0gXCJ3ZWJraXRcIikgeyAvL01pY3Jvc29mdCBhbmQgc29tZSBXZWJraXQgYnJvd3NlcnMgZG9uJ3QgY29uZm9ybSB0byB0aGUgc3RhbmRhcmQgb2YgY2FwaXRhbGl6aW5nIHRoZSBmaXJzdCBwcmVmaXggY2hhcmFjdGVyLCBzbyB3ZSBhZGp1c3Qgc28gdGhhdCB3aGVuIHdlIHByZWZpeCB0aGUgY2FwcyB3aXRoIGEgZGFzaCwgaXQncyBjb3JyZWN0IChvdGhlcndpc2UgaXQnZCBiZSBcIm1zLXRyYW5zZm9ybVwiIGluc3RlYWQgb2YgXCItbXMtdHJhbnNmb3JtXCIgZm9yIElFOSwgZm9yIGV4YW1wbGUpXG5cdFx0XHRcdFx0XHRcdHAgPSBcIi1cIiArIHA7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRzLnJlbW92ZVByb3BlcnR5KHAucmVwbGFjZShfY2Fwc0V4cCwgXCItJDFcIikudG9Mb3dlckNhc2UoKSk7XG5cdFx0XHRcdFx0fSBlbHNlIHsgLy9ub3RlOiBvbGQgdmVyc2lvbnMgb2YgSUUgdXNlIFwicmVtb3ZlQXR0cmlidXRlKClcIiBpbnN0ZWFkIG9mIFwicmVtb3ZlUHJvcGVydHkoKVwiXG5cdFx0XHRcdFx0XHRzLnJlbW92ZUF0dHJpYnV0ZShwKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRfc2V0Q2xhc3NOYW1lUmF0aW8gPSBmdW5jdGlvbih2KSB7XG5cdFx0XHRcdHRoaXMudC5fZ3NDbGFzc1BUID0gdGhpcztcblx0XHRcdFx0aWYgKHYgPT09IDEgfHwgdiA9PT0gMCkge1xuXHRcdFx0XHRcdHRoaXMudC5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCAodiA9PT0gMCkgPyB0aGlzLmIgOiB0aGlzLmUpO1xuXHRcdFx0XHRcdHZhciBtcHQgPSB0aGlzLmRhdGEsIC8vZmlyc3QgTWluaVByb3BUd2VlblxuXHRcdFx0XHRcdFx0cyA9IHRoaXMudC5zdHlsZTtcblx0XHRcdFx0XHR3aGlsZSAobXB0KSB7XG5cdFx0XHRcdFx0XHRpZiAoIW1wdC52KSB7XG5cdFx0XHRcdFx0XHRcdF9yZW1vdmVQcm9wKHMsIG1wdC5wKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHNbbXB0LnBdID0gbXB0LnY7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRtcHQgPSBtcHQuX25leHQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICh2ID09PSAxICYmIHRoaXMudC5fZ3NDbGFzc1BUID09PSB0aGlzKSB7XG5cdFx0XHRcdFx0XHR0aGlzLnQuX2dzQ2xhc3NQVCA9IG51bGw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2UgaWYgKHRoaXMudC5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSAhPT0gdGhpcy5lKSB7XG5cdFx0XHRcdFx0dGhpcy50LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIHRoaXMuZSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0X3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wKFwiY2xhc3NOYW1lXCIsIHtwYXJzZXI6ZnVuY3Rpb24odCwgZSwgcCwgY3NzcCwgcHQsIHBsdWdpbiwgdmFycykge1xuXHRcdFx0dmFyIGIgPSB0LmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIHx8IFwiXCIsIC8vZG9uJ3QgdXNlIHQuY2xhc3NOYW1lIGJlY2F1c2UgaXQgZG9lc24ndCB3b3JrIGNvbnNpc3RlbnRseSBvbiBTVkcgZWxlbWVudHM7IGdldEF0dHJpYnV0ZShcImNsYXNzXCIpIGFuZCBzZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCB2YWx1ZVwiKSBpcyBtb3JlIHJlbGlhYmxlLlxuXHRcdFx0XHRjc3NUZXh0ID0gdC5zdHlsZS5jc3NUZXh0LFxuXHRcdFx0XHRkaWZEYXRhLCBicywgY25wdCwgY25wdExvb2t1cCwgbXB0O1xuXHRcdFx0cHQgPSBjc3NwLl9jbGFzc05hbWVQVCA9IG5ldyBDU1NQcm9wVHdlZW4odCwgcCwgMCwgMCwgcHQsIDIpO1xuXHRcdFx0cHQuc2V0UmF0aW8gPSBfc2V0Q2xhc3NOYW1lUmF0aW87XG5cdFx0XHRwdC5wciA9IC0xMTtcblx0XHRcdF9oYXNQcmlvcml0eSA9IHRydWU7XG5cdFx0XHRwdC5iID0gYjtcblx0XHRcdGJzID0gX2dldEFsbFN0eWxlcyh0LCBfY3MpO1xuXHRcdFx0Ly9pZiB0aGVyZSdzIGEgY2xhc3NOYW1lIHR3ZWVuIGFscmVhZHkgb3BlcmF0aW5nIG9uIHRoZSB0YXJnZXQsIGZvcmNlIGl0IHRvIGl0cyBlbmQgc28gdGhhdCB0aGUgbmVjZXNzYXJ5IGlubGluZSBzdHlsZXMgYXJlIHJlbW92ZWQgYW5kIHRoZSBjbGFzcyBuYW1lIGlzIGFwcGxpZWQgYmVmb3JlIHdlIGRldGVybWluZSB0aGUgZW5kIHN0YXRlICh3ZSBkb24ndCB3YW50IGlubGluZSBzdHlsZXMgaW50ZXJmZXJpbmcgdGhhdCB3ZXJlIHRoZXJlIGp1c3QgZm9yIGNsYXNzLXNwZWNpZmljIHZhbHVlcylcblx0XHRcdGNucHQgPSB0Ll9nc0NsYXNzUFQ7XG5cdFx0XHRpZiAoY25wdCkge1xuXHRcdFx0XHRjbnB0TG9va3VwID0ge307XG5cdFx0XHRcdG1wdCA9IGNucHQuZGF0YTsgLy9maXJzdCBNaW5pUHJvcFR3ZWVuIHdoaWNoIHN0b3JlcyB0aGUgaW5saW5lIHN0eWxlcyAtIHdlIG5lZWQgdG8gZm9yY2UgdGhlc2Ugc28gdGhhdCB0aGUgaW5saW5lIHN0eWxlcyBkb24ndCBjb250YW1pbmF0ZSB0aGluZ3MuIE90aGVyd2lzZSwgdGhlcmUncyBhIHNtYWxsIGNoYW5jZSB0aGF0IGEgdHdlZW4gY291bGQgc3RhcnQgYW5kIHRoZSBpbmxpbmUgdmFsdWVzIG1hdGNoIHRoZSBkZXN0aW5hdGlvbiB2YWx1ZXMgYW5kIHRoZXkgbmV2ZXIgZ2V0IGNsZWFuZWQuXG5cdFx0XHRcdHdoaWxlIChtcHQpIHtcblx0XHRcdFx0XHRjbnB0TG9va3VwW21wdC5wXSA9IDE7XG5cdFx0XHRcdFx0bXB0ID0gbXB0Ll9uZXh0O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNucHQuc2V0UmF0aW8oMSk7XG5cdFx0XHR9XG5cdFx0XHR0Ll9nc0NsYXNzUFQgPSBwdDtcblx0XHRcdHB0LmUgPSAoZS5jaGFyQXQoMSkgIT09IFwiPVwiKSA/IGUgOiBiLnJlcGxhY2UobmV3IFJlZ0V4cChcIig/OlxcXFxzfF4pXCIgKyBlLnN1YnN0cigyKSArIFwiKD8hW1xcXFx3LV0pXCIpLCBcIlwiKSArICgoZS5jaGFyQXQoMCkgPT09IFwiK1wiKSA/IFwiIFwiICsgZS5zdWJzdHIoMikgOiBcIlwiKTtcblx0XHRcdHQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgcHQuZSk7XG5cdFx0XHRkaWZEYXRhID0gX2Nzc0RpZih0LCBicywgX2dldEFsbFN0eWxlcyh0KSwgdmFycywgY25wdExvb2t1cCk7XG5cdFx0XHR0LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIGIpO1xuXHRcdFx0cHQuZGF0YSA9IGRpZkRhdGEuZmlyc3RNUFQ7XG5cdFx0XHR0LnN0eWxlLmNzc1RleHQgPSBjc3NUZXh0OyAvL3dlIHJlY29yZGVkIGNzc1RleHQgYmVmb3JlIHdlIHN3YXBwZWQgY2xhc3NlcyBhbmQgcmFuIF9nZXRBbGxTdHlsZXMoKSBiZWNhdXNlIGluIGNhc2VzIHdoZW4gYSBjbGFzc05hbWUgdHdlZW4gaXMgb3ZlcndyaXR0ZW4sIHdlIHJlbW92ZSBhbGwgdGhlIHJlbGF0ZWQgdHdlZW5pbmcgcHJvcGVydGllcyBmcm9tIHRoYXQgY2xhc3MgY2hhbmdlIChvdGhlcndpc2UgY2xhc3Mtc3BlY2lmaWMgc3R1ZmYgY2FuJ3Qgb3ZlcnJpZGUgcHJvcGVydGllcyB3ZSd2ZSBkaXJlY3RseSBzZXQgb24gdGhlIHRhcmdldCdzIHN0eWxlIG9iamVjdCBkdWUgdG8gc3BlY2lmaWNpdHkpLlxuXHRcdFx0cHQgPSBwdC54Zmlyc3QgPSBjc3NwLnBhcnNlKHQsIGRpZkRhdGEuZGlmcywgcHQsIHBsdWdpbik7IC8vd2UgcmVjb3JkIHRoZSBDU1NQcm9wVHdlZW4gYXMgdGhlIHhmaXJzdCBzbyB0aGF0IHdlIGNhbiBoYW5kbGUgb3ZlcndyaXRpbmcgcHJvcGVydGx5IChpZiBcImNsYXNzTmFtZVwiIGdldHMgb3ZlcndyaXR0ZW4sIHdlIG11c3Qga2lsbCBhbGwgdGhlIHByb3BlcnRpZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBjbGFzc05hbWUgcGFydCBvZiB0aGUgdHdlZW4sIHNvIHdlIGNhbiBsb29wIHRocm91Z2ggZnJvbSB4Zmlyc3QgdG8gdGhlIHB0IGl0c2VsZilcblx0XHRcdHJldHVybiBwdDtcblx0XHR9fSk7XG5cblxuXHRcdHZhciBfc2V0Q2xlYXJQcm9wc1JhdGlvID0gZnVuY3Rpb24odikge1xuXHRcdFx0aWYgKHYgPT09IDEgfHwgdiA9PT0gMCkgaWYgKHRoaXMuZGF0YS5fdG90YWxUaW1lID09PSB0aGlzLmRhdGEuX3RvdGFsRHVyYXRpb24gJiYgdGhpcy5kYXRhLmRhdGEgIT09IFwiaXNGcm9tU3RhcnRcIikgeyAvL3RoaXMuZGF0YSByZWZlcnMgdG8gdGhlIHR3ZWVuLiBPbmx5IGNsZWFyIGF0IHRoZSBFTkQgb2YgdGhlIHR3ZWVuIChyZW1lbWJlciwgZnJvbSgpIHR3ZWVucyBtYWtlIHRoZSByYXRpbyBnbyBmcm9tIDEgdG8gMCwgc28gd2UgY2FuJ3QganVzdCBjaGVjayB0aGF0IGFuZCBpZiB0aGUgdHdlZW4gaXMgdGhlIHplcm8tZHVyYXRpb24gb25lIHRoYXQncyBjcmVhdGVkIGludGVybmFsbHkgdG8gcmVuZGVyIHRoZSBzdGFydGluZyB2YWx1ZXMgaW4gYSBmcm9tKCkgdHdlZW4sIGlnbm9yZSB0aGF0IGJlY2F1c2Ugb3RoZXJ3aXNlLCBmb3IgZXhhbXBsZSwgZnJvbSguLi57aGVpZ2h0OjEwMCwgY2xlYXJQcm9wczpcImhlaWdodFwiLCBkZWxheToxfSkgd291bGQgd2lwZSB0aGUgaGVpZ2h0IGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHR3ZWVuIGFuZCBhZnRlciAxIHNlY29uZCwgaXQnZCBraWNrIGJhY2sgaW4pLlxuXHRcdFx0XHR2YXIgcyA9IHRoaXMudC5zdHlsZSxcblx0XHRcdFx0XHR0cmFuc2Zvcm1QYXJzZSA9IF9zcGVjaWFsUHJvcHMudHJhbnNmb3JtLnBhcnNlLFxuXHRcdFx0XHRcdGEsIHAsIGksIGNsZWFyVHJhbnNmb3JtLCB0cmFuc2Zvcm07XG5cdFx0XHRcdGlmICh0aGlzLmUgPT09IFwiYWxsXCIpIHtcblx0XHRcdFx0XHRzLmNzc1RleHQgPSBcIlwiO1xuXHRcdFx0XHRcdGNsZWFyVHJhbnNmb3JtID0gdHJ1ZTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRhID0gdGhpcy5lLnNwbGl0KFwiIFwiKS5qb2luKFwiXCIpLnNwbGl0KFwiLFwiKTtcblx0XHRcdFx0XHRpID0gYS5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0XHRwID0gYVtpXTtcblx0XHRcdFx0XHRcdGlmIChfc3BlY2lhbFByb3BzW3BdKSB7XG5cdFx0XHRcdFx0XHRcdGlmIChfc3BlY2lhbFByb3BzW3BdLnBhcnNlID09PSB0cmFuc2Zvcm1QYXJzZSkge1xuXHRcdFx0XHRcdFx0XHRcdGNsZWFyVHJhbnNmb3JtID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRwID0gKHAgPT09IFwidHJhbnNmb3JtT3JpZ2luXCIpID8gX3RyYW5zZm9ybU9yaWdpblByb3AgOiBfc3BlY2lhbFByb3BzW3BdLnA7IC8vZW5zdXJlcyB0aGF0IHNwZWNpYWwgcHJvcGVydGllcyB1c2UgdGhlIHByb3BlciBicm93c2VyLXNwZWNpZmljIHByb3BlcnR5IG5hbWUsIGxpa2UgXCJzY2FsZVhcIiBtaWdodCBiZSBcIi13ZWJraXQtdHJhbnNmb3JtXCIgb3IgXCJib3hTaGFkb3dcIiBtaWdodCBiZSBcIi1tb3otYm94LXNoYWRvd1wiXG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdF9yZW1vdmVQcm9wKHMsIHApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoY2xlYXJUcmFuc2Zvcm0pIHtcblx0XHRcdFx0XHRfcmVtb3ZlUHJvcChzLCBfdHJhbnNmb3JtUHJvcCk7XG5cdFx0XHRcdFx0dHJhbnNmb3JtID0gdGhpcy50Ll9nc1RyYW5zZm9ybTtcblx0XHRcdFx0XHRpZiAodHJhbnNmb3JtKSB7XG5cdFx0XHRcdFx0XHRpZiAodHJhbnNmb3JtLnN2Zykge1xuXHRcdFx0XHRcdFx0XHR0aGlzLnQucmVtb3ZlQXR0cmlidXRlKFwiZGF0YS1zdmctb3JpZ2luXCIpO1xuXHRcdFx0XHRcdFx0XHR0aGlzLnQucmVtb3ZlQXR0cmlidXRlKFwidHJhbnNmb3JtXCIpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0ZGVsZXRlIHRoaXMudC5fZ3NUcmFuc2Zvcm07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdH1cblx0XHR9O1xuXHRcdF9yZWdpc3RlckNvbXBsZXhTcGVjaWFsUHJvcChcImNsZWFyUHJvcHNcIiwge3BhcnNlcjpmdW5jdGlvbih0LCBlLCBwLCBjc3NwLCBwdCkge1xuXHRcdFx0cHQgPSBuZXcgQ1NTUHJvcFR3ZWVuKHQsIHAsIDAsIDAsIHB0LCAyKTtcblx0XHRcdHB0LnNldFJhdGlvID0gX3NldENsZWFyUHJvcHNSYXRpbztcblx0XHRcdHB0LmUgPSBlO1xuXHRcdFx0cHQucHIgPSAtMTA7XG5cdFx0XHRwdC5kYXRhID0gY3NzcC5fdHdlZW47XG5cdFx0XHRfaGFzUHJpb3JpdHkgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIHB0O1xuXHRcdH19KTtcblxuXHRcdHAgPSBcImJlemllcix0aHJvd1Byb3BzLHBoeXNpY3NQcm9wcyxwaHlzaWNzMkRcIi5zcGxpdChcIixcIik7XG5cdFx0aSA9IHAubGVuZ3RoO1xuXHRcdHdoaWxlIChpLS0pIHtcblx0XHRcdF9yZWdpc3RlclBsdWdpblByb3AocFtpXSk7XG5cdFx0fVxuXG5cblxuXG5cblxuXG5cblx0XHRwID0gQ1NTUGx1Z2luLnByb3RvdHlwZTtcblx0XHRwLl9maXJzdFBUID0gcC5fbGFzdFBhcnNlZFRyYW5zZm9ybSA9IHAuX3RyYW5zZm9ybSA9IG51bGw7XG5cblx0XHQvL2dldHMgY2FsbGVkIHdoZW4gdGhlIHR3ZWVuIHJlbmRlcnMgZm9yIHRoZSBmaXJzdCB0aW1lLiBUaGlzIGtpY2tzIGV2ZXJ5dGhpbmcgb2ZmLCByZWNvcmRpbmcgc3RhcnQvZW5kIHZhbHVlcywgZXRjLlxuXHRcdHAuX29uSW5pdFR3ZWVuID0gZnVuY3Rpb24odGFyZ2V0LCB2YXJzLCB0d2VlbiwgaW5kZXgpIHtcblx0XHRcdGlmICghdGFyZ2V0Lm5vZGVUeXBlKSB7IC8vY3NzIGlzIG9ubHkgZm9yIGRvbSBlbGVtZW50c1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLl90YXJnZXQgPSBfdGFyZ2V0ID0gdGFyZ2V0O1xuXHRcdFx0dGhpcy5fdHdlZW4gPSB0d2Vlbjtcblx0XHRcdHRoaXMuX3ZhcnMgPSB2YXJzO1xuXHRcdFx0X2luZGV4ID0gaW5kZXg7XG5cdFx0XHRfYXV0b1JvdW5kID0gdmFycy5hdXRvUm91bmQ7XG5cdFx0XHRfaGFzUHJpb3JpdHkgPSBmYWxzZTtcblx0XHRcdF9zdWZmaXhNYXAgPSB2YXJzLnN1ZmZpeE1hcCB8fCBDU1NQbHVnaW4uc3VmZml4TWFwO1xuXHRcdFx0X2NzID0gX2dldENvbXB1dGVkU3R5bGUodGFyZ2V0LCBcIlwiKTtcblx0XHRcdF9vdmVyd3JpdGVQcm9wcyA9IHRoaXMuX292ZXJ3cml0ZVByb3BzO1xuXHRcdFx0dmFyIHN0eWxlID0gdGFyZ2V0LnN0eWxlLFxuXHRcdFx0XHR2LCBwdCwgcHQyLCBmaXJzdCwgbGFzdCwgbmV4dCwgekluZGV4LCB0cHQsIHRocmVlRDtcblx0XHRcdGlmIChfcmVxU2FmYXJpRml4KSBpZiAoc3R5bGUuekluZGV4ID09PSBcIlwiKSB7XG5cdFx0XHRcdHYgPSBfZ2V0U3R5bGUodGFyZ2V0LCBcInpJbmRleFwiLCBfY3MpO1xuXHRcdFx0XHRpZiAodiA9PT0gXCJhdXRvXCIgfHwgdiA9PT0gXCJcIikge1xuXHRcdFx0XHRcdC8vY29ycmVjdHMgYSBidWcgaW4gW25vbi1BbmRyb2lkXSBTYWZhcmkgdGhhdCBwcmV2ZW50cyBpdCBmcm9tIHJlcGFpbnRpbmcgZWxlbWVudHMgaW4gdGhlaXIgbmV3IHBvc2l0aW9ucyBpZiB0aGV5IGRvbid0IGhhdmUgYSB6SW5kZXggc2V0LiBXZSBhbHNvIGNhbid0IGp1c3QgYXBwbHkgdGhpcyBpbnNpZGUgX3BhcnNlVHJhbnNmb3JtKCkgYmVjYXVzZSBhbnl0aGluZyB0aGF0J3MgbW92ZWQgaW4gYW55IHdheSAobGlrZSB1c2luZyBcImxlZnRcIiBvciBcInRvcFwiIGluc3RlYWQgb2YgdHJhbnNmb3JtcyBsaWtlIFwieFwiIGFuZCBcInlcIikgY2FuIGJlIGFmZmVjdGVkLCBzbyBpdCBpcyBiZXN0IHRvIGVuc3VyZSB0aGF0IGFueXRoaW5nIHRoYXQncyB0d2VlbmluZyBoYXMgYSB6LWluZGV4LiBTZXR0aW5nIFwiV2Via2l0UGVyc3BlY3RpdmVcIiB0byBhIG5vbi16ZXJvIHZhbHVlIHdvcmtlZCB0b28gZXhjZXB0IHRoYXQgb24gaU9TIFNhZmFyaSB0aGluZ3Mgd291bGQgZmxpY2tlciByYW5kb21seS4gUGx1cyB6SW5kZXggaXMgbGVzcyBtZW1vcnktaW50ZW5zaXZlLlxuXHRcdFx0XHRcdHRoaXMuX2FkZExhenlTZXQoc3R5bGUsIFwiekluZGV4XCIsIDApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICh0eXBlb2YodmFycykgPT09IFwic3RyaW5nXCIpIHtcblx0XHRcdFx0Zmlyc3QgPSBzdHlsZS5jc3NUZXh0O1xuXHRcdFx0XHR2ID0gX2dldEFsbFN0eWxlcyh0YXJnZXQsIF9jcyk7XG5cdFx0XHRcdHN0eWxlLmNzc1RleHQgPSBmaXJzdCArIFwiO1wiICsgdmFycztcblx0XHRcdFx0diA9IF9jc3NEaWYodGFyZ2V0LCB2LCBfZ2V0QWxsU3R5bGVzKHRhcmdldCkpLmRpZnM7XG5cdFx0XHRcdGlmICghX3N1cHBvcnRzT3BhY2l0eSAmJiBfb3BhY2l0eVZhbEV4cC50ZXN0KHZhcnMpKSB7XG5cdFx0XHRcdFx0di5vcGFjaXR5ID0gcGFyc2VGbG9hdCggUmVnRXhwLiQxICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0dmFycyA9IHY7XG5cdFx0XHRcdHN0eWxlLmNzc1RleHQgPSBmaXJzdDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKHZhcnMuY2xhc3NOYW1lKSB7IC8vY2xhc3NOYW1lIHR3ZWVucyB3aWxsIGNvbWJpbmUgYW55IGRpZmZlcmVuY2VzIHRoZXkgZmluZCBpbiB0aGUgY3NzIHdpdGggdGhlIHZhcnMgdGhhdCBhcmUgcGFzc2VkIGluLCBzbyB7Y2xhc3NOYW1lOlwibXlDbGFzc1wiLCBzY2FsZTowLjUsIGxlZnQ6MjB9IHdvdWxkIHdvcmsuXG5cdFx0XHRcdHRoaXMuX2ZpcnN0UFQgPSBwdCA9IF9zcGVjaWFsUHJvcHMuY2xhc3NOYW1lLnBhcnNlKHRhcmdldCwgdmFycy5jbGFzc05hbWUsIFwiY2xhc3NOYW1lXCIsIHRoaXMsIG51bGwsIG51bGwsIHZhcnMpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy5fZmlyc3RQVCA9IHB0ID0gdGhpcy5wYXJzZSh0YXJnZXQsIHZhcnMsIG51bGwpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAodGhpcy5fdHJhbnNmb3JtVHlwZSkge1xuXHRcdFx0XHR0aHJlZUQgPSAodGhpcy5fdHJhbnNmb3JtVHlwZSA9PT0gMyk7XG5cdFx0XHRcdGlmICghX3RyYW5zZm9ybVByb3ApIHtcblx0XHRcdFx0XHRzdHlsZS56b29tID0gMTsgLy9oZWxwcyBjb3JyZWN0IGFuIElFIGlzc3VlLlxuXHRcdFx0XHR9IGVsc2UgaWYgKF9pc1NhZmFyaSkge1xuXHRcdFx0XHRcdF9yZXFTYWZhcmlGaXggPSB0cnVlO1xuXHRcdFx0XHRcdC8vaWYgekluZGV4IGlzbid0IHNldCwgaU9TIFNhZmFyaSBkb2Vzbid0IHJlcGFpbnQgdGhpbmdzIGNvcnJlY3RseSBzb21ldGltZXMgKHNlZW1pbmdseSBhdCByYW5kb20pLlxuXHRcdFx0XHRcdGlmIChzdHlsZS56SW5kZXggPT09IFwiXCIpIHtcblx0XHRcdFx0XHRcdHpJbmRleCA9IF9nZXRTdHlsZSh0YXJnZXQsIFwiekluZGV4XCIsIF9jcyk7XG5cdFx0XHRcdFx0XHRpZiAoekluZGV4ID09PSBcImF1dG9cIiB8fCB6SW5kZXggPT09IFwiXCIpIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5fYWRkTGF6eVNldChzdHlsZSwgXCJ6SW5kZXhcIiwgMCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdC8vU2V0dGluZyBXZWJraXRCYWNrZmFjZVZpc2liaWxpdHkgY29ycmVjdHMgMyBidWdzOlxuXHRcdFx0XHRcdC8vIDEpIFtub24tQW5kcm9pZF0gU2FmYXJpIHNraXBzIHJlbmRlcmluZyBjaGFuZ2VzIHRvIFwidG9wXCIgYW5kIFwibGVmdFwiIHRoYXQgYXJlIG1hZGUgb24gdGhlIHNhbWUgZnJhbWUvcmVuZGVyIGFzIGEgdHJhbnNmb3JtIHVwZGF0ZS5cblx0XHRcdFx0XHQvLyAyKSBpT1MgU2FmYXJpIHNvbWV0aW1lcyBuZWdsZWN0cyB0byByZXBhaW50IGVsZW1lbnRzIGluIHRoZWlyIG5ldyBwb3NpdGlvbnMuIFNldHRpbmcgXCJXZWJraXRQZXJzcGVjdGl2ZVwiIHRvIGEgbm9uLXplcm8gdmFsdWUgd29ya2VkIHRvbyBleGNlcHQgdGhhdCBvbiBpT1MgU2FmYXJpIHRoaW5ncyB3b3VsZCBmbGlja2VyIHJhbmRvbWx5LlxuXHRcdFx0XHRcdC8vIDMpIFNhZmFyaSBzb21ldGltZXMgZGlzcGxheWVkIG9kZCBhcnRpZmFjdHMgd2hlbiB0d2VlbmluZyB0aGUgdHJhbnNmb3JtIChvciBXZWJraXRUcmFuc2Zvcm0pIHByb3BlcnR5LCBsaWtlIGdob3N0cyBvZiB0aGUgZWRnZXMgb2YgdGhlIGVsZW1lbnQgcmVtYWluZWQuIERlZmluaXRlbHkgYSBicm93c2VyIGJ1Zy5cblx0XHRcdFx0XHQvL05vdGU6IHdlIGFsbG93IHRoZSB1c2VyIHRvIG92ZXJyaWRlIHRoZSBhdXRvLXNldHRpbmcgYnkgZGVmaW5pbmcgV2Via2l0QmFja2ZhY2VWaXNpYmlsaXR5IGluIHRoZSB2YXJzIG9mIHRoZSB0d2Vlbi5cblx0XHRcdFx0XHRpZiAoX2lzU2FmYXJpTFQ2KSB7XG5cdFx0XHRcdFx0XHR0aGlzLl9hZGRMYXp5U2V0KHN0eWxlLCBcIldlYmtpdEJhY2tmYWNlVmlzaWJpbGl0eVwiLCB0aGlzLl92YXJzLldlYmtpdEJhY2tmYWNlVmlzaWJpbGl0eSB8fCAodGhyZWVEID8gXCJ2aXNpYmxlXCIgOiBcImhpZGRlblwiKSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHB0MiA9IHB0O1xuXHRcdFx0XHR3aGlsZSAocHQyICYmIHB0Mi5fbmV4dCkge1xuXHRcdFx0XHRcdHB0MiA9IHB0Mi5fbmV4dDtcblx0XHRcdFx0fVxuXHRcdFx0XHR0cHQgPSBuZXcgQ1NTUHJvcFR3ZWVuKHRhcmdldCwgXCJ0cmFuc2Zvcm1cIiwgMCwgMCwgbnVsbCwgMik7XG5cdFx0XHRcdHRoaXMuX2xpbmtDU1NQKHRwdCwgbnVsbCwgcHQyKTtcblx0XHRcdFx0dHB0LnNldFJhdGlvID0gX3RyYW5zZm9ybVByb3AgPyBfc2V0VHJhbnNmb3JtUmF0aW8gOiBfc2V0SUVUcmFuc2Zvcm1SYXRpbztcblx0XHRcdFx0dHB0LmRhdGEgPSB0aGlzLl90cmFuc2Zvcm0gfHwgX2dldFRyYW5zZm9ybSh0YXJnZXQsIF9jcywgdHJ1ZSk7XG5cdFx0XHRcdHRwdC50d2VlbiA9IHR3ZWVuO1xuXHRcdFx0XHR0cHQucHIgPSAtMTsgLy9lbnN1cmVzIHRoYXQgdGhlIHRyYW5zZm9ybXMgZ2V0IGFwcGxpZWQgYWZ0ZXIgdGhlIGNvbXBvbmVudHMgYXJlIHVwZGF0ZWQuXG5cdFx0XHRcdF9vdmVyd3JpdGVQcm9wcy5wb3AoKTsgLy93ZSBkb24ndCB3YW50IHRvIGZvcmNlIHRoZSBvdmVyd3JpdGUgb2YgYWxsIFwidHJhbnNmb3JtXCIgdHdlZW5zIG9mIHRoZSB0YXJnZXQgLSB3ZSBvbmx5IGNhcmUgYWJvdXQgaW5kaXZpZHVhbCB0cmFuc2Zvcm0gcHJvcGVydGllcyBsaWtlIHNjYWxlWCwgcm90YXRpb24sIGV0Yy4gVGhlIENTU1Byb3BUd2VlbiBjb25zdHJ1Y3RvciBhdXRvbWF0aWNhbGx5IGFkZHMgdGhlIHByb3BlcnR5IHRvIF9vdmVyd3JpdGVQcm9wcyB3aGljaCBpcyB3aHkgd2UgbmVlZCB0byBwb3AoKSBoZXJlLlxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoX2hhc1ByaW9yaXR5KSB7XG5cdFx0XHRcdC8vcmVvcmRlcnMgdGhlIGxpbmtlZCBsaXN0IGluIG9yZGVyIG9mIHByIChwcmlvcml0eSlcblx0XHRcdFx0d2hpbGUgKHB0KSB7XG5cdFx0XHRcdFx0bmV4dCA9IHB0Ll9uZXh0O1xuXHRcdFx0XHRcdHB0MiA9IGZpcnN0O1xuXHRcdFx0XHRcdHdoaWxlIChwdDIgJiYgcHQyLnByID4gcHQucHIpIHtcblx0XHRcdFx0XHRcdHB0MiA9IHB0Mi5fbmV4dDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKChwdC5fcHJldiA9IHB0MiA/IHB0Mi5fcHJldiA6IGxhc3QpKSB7XG5cdFx0XHRcdFx0XHRwdC5fcHJldi5fbmV4dCA9IHB0O1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRmaXJzdCA9IHB0O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoKHB0Ll9uZXh0ID0gcHQyKSkge1xuXHRcdFx0XHRcdFx0cHQyLl9wcmV2ID0gcHQ7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGxhc3QgPSBwdDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cHQgPSBuZXh0O1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuX2ZpcnN0UFQgPSBmaXJzdDtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH07XG5cblxuXHRcdHAucGFyc2UgPSBmdW5jdGlvbih0YXJnZXQsIHZhcnMsIHB0LCBwbHVnaW4pIHtcblx0XHRcdHZhciBzdHlsZSA9IHRhcmdldC5zdHlsZSxcblx0XHRcdFx0cCwgc3AsIGJuLCBlbiwgYnMsIGVzLCBic2Z4LCBlc2Z4LCBpc1N0ciwgcmVsO1xuXHRcdFx0Zm9yIChwIGluIHZhcnMpIHtcblx0XHRcdFx0ZXMgPSB2YXJzW3BdOyAvL2VuZGluZyB2YWx1ZSBzdHJpbmdcblx0XHRcdFx0aWYgKHR5cGVvZihlcykgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdGVzID0gZXMoX2luZGV4LCBfdGFyZ2V0KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRzcCA9IF9zcGVjaWFsUHJvcHNbcF07IC8vU3BlY2lhbFByb3AgbG9va3VwLlxuXHRcdFx0XHRpZiAoc3ApIHtcblx0XHRcdFx0XHRwdCA9IHNwLnBhcnNlKHRhcmdldCwgZXMsIHAsIHRoaXMsIHB0LCBwbHVnaW4sIHZhcnMpO1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YnMgPSBfZ2V0U3R5bGUodGFyZ2V0LCBwLCBfY3MpICsgXCJcIjtcblx0XHRcdFx0XHRpc1N0ciA9ICh0eXBlb2YoZXMpID09PSBcInN0cmluZ1wiKTtcblx0XHRcdFx0XHRpZiAocCA9PT0gXCJjb2xvclwiIHx8IHAgPT09IFwiZmlsbFwiIHx8IHAgPT09IFwic3Ryb2tlXCIgfHwgcC5pbmRleE9mKFwiQ29sb3JcIikgIT09IC0xIHx8IChpc1N0ciAmJiBfcmdiaHNsRXhwLnRlc3QoZXMpKSkgeyAvL09wZXJhIHVzZXMgYmFja2dyb3VuZDogdG8gZGVmaW5lIGNvbG9yIHNvbWV0aW1lcyBpbiBhZGRpdGlvbiB0byBiYWNrZ3JvdW5kQ29sb3I6XG5cdFx0XHRcdFx0XHRpZiAoIWlzU3RyKSB7XG5cdFx0XHRcdFx0XHRcdGVzID0gX3BhcnNlQ29sb3IoZXMpO1xuXHRcdFx0XHRcdFx0XHRlcyA9ICgoZXMubGVuZ3RoID4gMykgPyBcInJnYmEoXCIgOiBcInJnYihcIikgKyBlcy5qb2luKFwiLFwiKSArIFwiKVwiO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0cHQgPSBfcGFyc2VDb21wbGV4KHN0eWxlLCBwLCBicywgZXMsIHRydWUsIFwidHJhbnNwYXJlbnRcIiwgcHQsIDAsIHBsdWdpbik7XG5cblx0XHRcdFx0XHR9IGVsc2UgaWYgKGlzU3RyICYmIF9jb21wbGV4RXhwLnRlc3QoZXMpKSB7XG5cdFx0XHRcdFx0XHRwdCA9IF9wYXJzZUNvbXBsZXgoc3R5bGUsIHAsIGJzLCBlcywgdHJ1ZSwgbnVsbCwgcHQsIDAsIHBsdWdpbik7XG5cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Ym4gPSBwYXJzZUZsb2F0KGJzKTtcblx0XHRcdFx0XHRcdGJzZnggPSAoYm4gfHwgYm4gPT09IDApID8gYnMuc3Vic3RyKChibiArIFwiXCIpLmxlbmd0aCkgOiBcIlwiOyAvL3JlbWVtYmVyLCBicyBjb3VsZCBiZSBub24tbnVtZXJpYyBsaWtlIFwibm9ybWFsXCIgZm9yIGZvbnRXZWlnaHQsIHNvIHdlIHNob3VsZCBkZWZhdWx0IHRvIGEgYmxhbmsgc3VmZml4IGluIHRoYXQgY2FzZS5cblxuXHRcdFx0XHRcdFx0aWYgKGJzID09PSBcIlwiIHx8IGJzID09PSBcImF1dG9cIikge1xuXHRcdFx0XHRcdFx0XHRpZiAocCA9PT0gXCJ3aWR0aFwiIHx8IHAgPT09IFwiaGVpZ2h0XCIpIHtcblx0XHRcdFx0XHRcdFx0XHRibiA9IF9nZXREaW1lbnNpb24odGFyZ2V0LCBwLCBfY3MpO1xuXHRcdFx0XHRcdFx0XHRcdGJzZnggPSBcInB4XCI7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAocCA9PT0gXCJsZWZ0XCIgfHwgcCA9PT0gXCJ0b3BcIikge1xuXHRcdFx0XHRcdFx0XHRcdGJuID0gX2NhbGN1bGF0ZU9mZnNldCh0YXJnZXQsIHAsIF9jcyk7XG5cdFx0XHRcdFx0XHRcdFx0YnNmeCA9IFwicHhcIjtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRibiA9IChwICE9PSBcIm9wYWNpdHlcIikgPyAwIDogMTtcblx0XHRcdFx0XHRcdFx0XHRic2Z4ID0gXCJcIjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRyZWwgPSAoaXNTdHIgJiYgZXMuY2hhckF0KDEpID09PSBcIj1cIik7XG5cdFx0XHRcdFx0XHRpZiAocmVsKSB7XG5cdFx0XHRcdFx0XHRcdGVuID0gcGFyc2VJbnQoZXMuY2hhckF0KDApICsgXCIxXCIsIDEwKTtcblx0XHRcdFx0XHRcdFx0ZXMgPSBlcy5zdWJzdHIoMik7XG5cdFx0XHRcdFx0XHRcdGVuICo9IHBhcnNlRmxvYXQoZXMpO1xuXHRcdFx0XHRcdFx0XHRlc2Z4ID0gZXMucmVwbGFjZShfc3VmZml4RXhwLCBcIlwiKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGVuID0gcGFyc2VGbG9hdChlcyk7XG5cdFx0XHRcdFx0XHRcdGVzZnggPSBpc1N0ciA/IGVzLnJlcGxhY2UoX3N1ZmZpeEV4cCwgXCJcIikgOiBcIlwiO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRpZiAoZXNmeCA9PT0gXCJcIikge1xuXHRcdFx0XHRcdFx0XHRlc2Z4ID0gKHAgaW4gX3N1ZmZpeE1hcCkgPyBfc3VmZml4TWFwW3BdIDogYnNmeDsgLy9wb3B1bGF0ZSB0aGUgZW5kIHN1ZmZpeCwgcHJpb3JpdGl6aW5nIHRoZSBtYXAsIHRoZW4gaWYgbm9uZSBpcyBmb3VuZCwgdXNlIHRoZSBiZWdpbm5pbmcgc3VmZml4LlxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRlcyA9IChlbiB8fCBlbiA9PT0gMCkgPyAocmVsID8gZW4gKyBibiA6IGVuKSArIGVzZnggOiB2YXJzW3BdOyAvL2Vuc3VyZXMgdGhhdCBhbnkgKz0gb3IgLT0gcHJlZml4ZXMgYXJlIHRha2VuIGNhcmUgb2YuIFJlY29yZCB0aGUgZW5kIHZhbHVlIGJlZm9yZSBub3JtYWxpemluZyB0aGUgc3VmZml4IGJlY2F1c2Ugd2UgYWx3YXlzIHdhbnQgdG8gZW5kIHRoZSB0d2VlbiBvbiBleGFjdGx5IHdoYXQgdGhleSBpbnRlbmRlZCBldmVuIGlmIGl0IGRvZXNuJ3QgbWF0Y2ggdGhlIGJlZ2lubmluZyB2YWx1ZSdzIHN1ZmZpeC5cblxuXHRcdFx0XHRcdFx0Ly9pZiB0aGUgYmVnaW5uaW5nL2VuZGluZyBzdWZmaXhlcyBkb24ndCBtYXRjaCwgbm9ybWFsaXplIHRoZW0uLi5cblx0XHRcdFx0XHRcdGlmIChic2Z4ICE9PSBlc2Z4KSBpZiAoZXNmeCAhPT0gXCJcIikgaWYgKGVuIHx8IGVuID09PSAwKSBpZiAoYm4pIHsgLy9ub3RlOiBpZiB0aGUgYmVnaW5uaW5nIHZhbHVlIChibikgaXMgMCwgd2UgZG9uJ3QgbmVlZCB0byBjb252ZXJ0IHVuaXRzIVxuXHRcdFx0XHRcdFx0XHRibiA9IF9jb252ZXJ0VG9QaXhlbHModGFyZ2V0LCBwLCBibiwgYnNmeCk7XG5cdFx0XHRcdFx0XHRcdGlmIChlc2Z4ID09PSBcIiVcIikge1xuXHRcdFx0XHRcdFx0XHRcdGJuIC89IF9jb252ZXJ0VG9QaXhlbHModGFyZ2V0LCBwLCAxMDAsIFwiJVwiKSAvIDEwMDtcblx0XHRcdFx0XHRcdFx0XHRpZiAodmFycy5zdHJpY3RVbml0cyAhPT0gdHJ1ZSkgeyAvL3NvbWUgYnJvd3NlcnMgcmVwb3J0IG9ubHkgXCJweFwiIHZhbHVlcyBpbnN0ZWFkIG9mIGFsbG93aW5nIFwiJVwiIHdpdGggZ2V0Q29tcHV0ZWRTdHlsZSgpLCBzbyB3ZSBhc3N1bWUgdGhhdCBpZiB3ZSdyZSB0d2VlbmluZyB0byBhICUsIHdlIHNob3VsZCBzdGFydCB0aGVyZSB0b28gdW5sZXNzIHN0cmljdFVuaXRzOnRydWUgaXMgZGVmaW5lZC4gVGhpcyBhcHByb2FjaCBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsIGZvciByZXNwb25zaXZlIGRlc2lnbnMgdGhhdCB1c2UgZnJvbSgpIHR3ZWVucy5cblx0XHRcdFx0XHRcdFx0XHRcdGJzID0gYm4gKyBcIiVcIjtcblx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmIChlc2Z4ID09PSBcImVtXCIgfHwgZXNmeCA9PT0gXCJyZW1cIiB8fCBlc2Z4ID09PSBcInZ3XCIgfHwgZXNmeCA9PT0gXCJ2aFwiKSB7XG5cdFx0XHRcdFx0XHRcdFx0Ym4gLz0gX2NvbnZlcnRUb1BpeGVscyh0YXJnZXQsIHAsIDEsIGVzZngpO1xuXG5cdFx0XHRcdFx0XHRcdC8vb3RoZXJ3aXNlIGNvbnZlcnQgdG8gcGl4ZWxzLlxuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKGVzZnggIT09IFwicHhcIikge1xuXHRcdFx0XHRcdFx0XHRcdGVuID0gX2NvbnZlcnRUb1BpeGVscyh0YXJnZXQsIHAsIGVuLCBlc2Z4KTtcblx0XHRcdFx0XHRcdFx0XHRlc2Z4ID0gXCJweFwiOyAvL3dlIGRvbid0IHVzZSBic2Z4IGFmdGVyIHRoaXMsIHNvIHdlIGRvbid0IG5lZWQgdG8gc2V0IGl0IHRvIHB4IHRvby5cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRpZiAocmVsKSBpZiAoZW4gfHwgZW4gPT09IDApIHtcblx0XHRcdFx0XHRcdFx0XHRlcyA9IChlbiArIGJuKSArIGVzZng7IC8vdGhlIGNoYW5nZXMgd2UgbWFkZSBhZmZlY3QgcmVsYXRpdmUgY2FsY3VsYXRpb25zLCBzbyBhZGp1c3QgdGhlIGVuZCB2YWx1ZSBoZXJlLlxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmIChyZWwpIHtcblx0XHRcdFx0XHRcdFx0ZW4gKz0gYm47XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmICgoYm4gfHwgYm4gPT09IDApICYmIChlbiB8fCBlbiA9PT0gMCkpIHsgLy9mYXN0ZXIgdGhhbiBpc05hTigpLiBBbHNvLCBwcmV2aW91c2x5IHdlIHJlcXVpcmVkIGVuICE9PSBibiBidXQgdGhhdCBkb2Vzbid0IHJlYWxseSBnYWluIG11Y2ggcGVyZm9ybWFuY2UgYW5kIGl0IHByZXZlbnRzIF9wYXJzZVRvUHJveHkoKSBmcm9tIHdvcmtpbmcgcHJvcGVybHkgaWYgYmVnaW5uaW5nIGFuZCBlbmRpbmcgdmFsdWVzIG1hdGNoIGJ1dCBuZWVkIHRvIGdldCB0d2VlbmVkIGJ5IGFuIGV4dGVybmFsIHBsdWdpbiBhbnl3YXkuIEZvciBleGFtcGxlLCBhIGJlemllciB0d2VlbiB3aGVyZSB0aGUgdGFyZ2V0IHN0YXJ0cyBhdCBsZWZ0OjAgYW5kIGhhcyB0aGVzZSBwb2ludHM6IFt7bGVmdDo1MH0se2xlZnQ6MH1dIHdvdWxkbid0IHdvcmsgcHJvcGVybHkgYmVjYXVzZSB3aGVuIHBhcnNpbmcgdGhlIGxhc3QgcG9pbnQsIGl0J2QgbWF0Y2ggdGhlIGZpcnN0IChjdXJyZW50KSBvbmUgYW5kIGEgbm9uLXR3ZWVuaW5nIENTU1Byb3BUd2VlbiB3b3VsZCBiZSByZWNvcmRlZCB3aGVuIHdlIGFjdHVhbGx5IG5lZWQgYSBub3JtYWwgdHdlZW4gKHR5cGU6MCkgc28gdGhhdCB0aGluZ3MgZ2V0IHVwZGF0ZWQgZHVyaW5nIHRoZSB0d2VlbiBwcm9wZXJseS5cblx0XHRcdFx0XHRcdFx0cHQgPSBuZXcgQ1NTUHJvcFR3ZWVuKHN0eWxlLCBwLCBibiwgZW4gLSBibiwgcHQsIDAsIHAsIChfYXV0b1JvdW5kICE9PSBmYWxzZSAmJiAoZXNmeCA9PT0gXCJweFwiIHx8IHAgPT09IFwiekluZGV4XCIpKSwgMCwgYnMsIGVzKTtcblx0XHRcdFx0XHRcdFx0cHQueHMwID0gZXNmeDtcblx0XHRcdFx0XHRcdFx0Ly9ERUJVRzogX2xvZyhcInR3ZWVuIFwiK3ArXCIgZnJvbSBcIitwdC5iK1wiIChcIitibitlc2Z4K1wiKSB0byBcIitwdC5lK1wiIHdpdGggc3VmZml4OiBcIitwdC54czApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChzdHlsZVtwXSA9PT0gdW5kZWZpbmVkIHx8ICFlcyAmJiAoZXMgKyBcIlwiID09PSBcIk5hTlwiIHx8IGVzID09IG51bGwpKSB7XG5cdFx0XHRcdFx0XHRcdF9sb2coXCJpbnZhbGlkIFwiICsgcCArIFwiIHR3ZWVuIHZhbHVlOiBcIiArIHZhcnNbcF0pO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cHQgPSBuZXcgQ1NTUHJvcFR3ZWVuKHN0eWxlLCBwLCBlbiB8fCBibiB8fCAwLCAwLCBwdCwgLTEsIHAsIGZhbHNlLCAwLCBicywgZXMpO1xuXHRcdFx0XHRcdFx0XHRwdC54czAgPSAoZXMgPT09IFwibm9uZVwiICYmIChwID09PSBcImRpc3BsYXlcIiB8fCBwLmluZGV4T2YoXCJTdHlsZVwiKSAhPT0gLTEpKSA/IGJzIDogZXM7IC8vaW50ZXJtZWRpYXRlIHZhbHVlIHNob3VsZCB0eXBpY2FsbHkgYmUgc2V0IGltbWVkaWF0ZWx5IChlbmQgdmFsdWUpIGV4Y2VwdCBmb3IgXCJkaXNwbGF5XCIgb3IgdGhpbmdzIGxpa2UgYm9yZGVyVG9wU3R5bGUsIGJvcmRlckJvdHRvbVN0eWxlLCBldGMuIHdoaWNoIHNob3VsZCB1c2UgdGhlIGJlZ2lubmluZyB2YWx1ZSBkdXJpbmcgdGhlIHR3ZWVuLlxuXHRcdFx0XHRcdFx0XHQvL0RFQlVHOiBfbG9nKFwibm9uLXR3ZWVuaW5nIHZhbHVlIFwiK3ArXCI6IFwiK3B0LnhzMCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChwbHVnaW4pIGlmIChwdCAmJiAhcHQucGx1Z2luKSB7XG5cdFx0XHRcdFx0cHQucGx1Z2luID0gcGx1Z2luO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcHQ7XG5cdFx0fTtcblxuXG5cdFx0Ly9nZXRzIGNhbGxlZCBldmVyeSB0aW1lIHRoZSB0d2VlbiB1cGRhdGVzLCBwYXNzaW5nIHRoZSBuZXcgcmF0aW8gKHR5cGljYWxseSBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMSwgYnV0IG5vdCBhbHdheXMgKGZvciBleGFtcGxlLCBpZiBhbiBFbGFzdGljLmVhc2VPdXQgaXMgdXNlZCwgdGhlIHZhbHVlIGNhbiBqdW1wIGFib3ZlIDEgbWlkLXR3ZWVuKS4gSXQgd2lsbCBhbHdheXMgc3RhcnQgYW5kIDAgYW5kIGVuZCBhdCAxLlxuXHRcdHAuc2V0UmF0aW8gPSBmdW5jdGlvbih2KSB7XG5cdFx0XHR2YXIgcHQgPSB0aGlzLl9maXJzdFBULFxuXHRcdFx0XHRtaW4gPSAwLjAwMDAwMSxcblx0XHRcdFx0dmFsLCBzdHIsIGk7XG5cdFx0XHQvL2F0IHRoZSBlbmQgb2YgdGhlIHR3ZWVuLCB3ZSBzZXQgdGhlIHZhbHVlcyB0byBleGFjdGx5IHdoYXQgd2UgcmVjZWl2ZWQgaW4gb3JkZXIgdG8gbWFrZSBzdXJlIG5vbi10d2VlbmluZyB2YWx1ZXMgKGxpa2UgXCJwb3NpdGlvblwiIG9yIFwiZmxvYXRcIiBvciB3aGF0ZXZlcikgYXJlIHNldCBhbmQgc28gdGhhdCBpZiB0aGUgYmVnaW5uaW5nL2VuZGluZyBzdWZmaXhlcyAodW5pdHMpIGRpZG4ndCBtYXRjaCBhbmQgd2Ugbm9ybWFsaXplZCB0byBweCwgdGhlIHZhbHVlIHRoYXQgdGhlIHVzZXIgcGFzc2VkIGluIGlzIHVzZWQgaGVyZS4gV2UgY2hlY2sgdG8gc2VlIGlmIHRoZSB0d2VlbiBpcyBhdCBpdHMgYmVnaW5uaW5nIGluIGNhc2UgaXQncyBhIGZyb20oKSB0d2VlbiBpbiB3aGljaCBjYXNlIHRoZSByYXRpbyB3aWxsIGFjdHVhbGx5IGdvIGZyb20gMSB0byAwIG92ZXIgdGhlIGNvdXJzZSBvZiB0aGUgdHdlZW4gKGJhY2t3YXJkcykuXG5cdFx0XHRpZiAodiA9PT0gMSAmJiAodGhpcy5fdHdlZW4uX3RpbWUgPT09IHRoaXMuX3R3ZWVuLl9kdXJhdGlvbiB8fCB0aGlzLl90d2Vlbi5fdGltZSA9PT0gMCkpIHtcblx0XHRcdFx0d2hpbGUgKHB0KSB7XG5cdFx0XHRcdFx0aWYgKHB0LnR5cGUgIT09IDIpIHtcblx0XHRcdFx0XHRcdGlmIChwdC5yICYmIHB0LnR5cGUgIT09IC0xKSB7XG5cdFx0XHRcdFx0XHRcdHZhbCA9IE1hdGgucm91bmQocHQucyArIHB0LmMpO1xuXHRcdFx0XHRcdFx0XHRpZiAoIXB0LnR5cGUpIHtcblx0XHRcdFx0XHRcdFx0XHRwdC50W3B0LnBdID0gdmFsICsgcHQueHMwO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKHB0LnR5cGUgPT09IDEpIHsgLy9jb21wbGV4IHZhbHVlIChvbmUgdGhhdCB0eXBpY2FsbHkgaGFzIG11bHRpcGxlIG51bWJlcnMgaW5zaWRlIGEgc3RyaW5nLCBsaWtlIFwicmVjdCg1cHgsMTBweCwyMHB4LDI1cHgpXCJcblx0XHRcdFx0XHRcdFx0XHRpID0gcHQubDtcblx0XHRcdFx0XHRcdFx0XHRzdHIgPSBwdC54czAgKyB2YWwgKyBwdC54czE7XG5cdFx0XHRcdFx0XHRcdFx0Zm9yIChpID0gMTsgaSA8IHB0Lmw7IGkrKykge1xuXHRcdFx0XHRcdFx0XHRcdFx0c3RyICs9IHB0W1wieG5cIitpXSArIHB0W1wieHNcIisoaSsxKV07XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdHB0LnRbcHQucF0gPSBzdHI7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHB0LnRbcHQucF0gPSBwdC5lO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRwdC5zZXRSYXRpbyh2KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cHQgPSBwdC5fbmV4dDtcblx0XHRcdFx0fVxuXG5cdFx0XHR9IGVsc2UgaWYgKHYgfHwgISh0aGlzLl90d2Vlbi5fdGltZSA9PT0gdGhpcy5fdHdlZW4uX2R1cmF0aW9uIHx8IHRoaXMuX3R3ZWVuLl90aW1lID09PSAwKSB8fCB0aGlzLl90d2Vlbi5fcmF3UHJldlRpbWUgPT09IC0wLjAwMDAwMSkge1xuXHRcdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0XHR2YWwgPSBwdC5jICogdiArIHB0LnM7XG5cdFx0XHRcdFx0aWYgKHB0LnIpIHtcblx0XHRcdFx0XHRcdHZhbCA9IE1hdGgucm91bmQodmFsKTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHZhbCA8IG1pbikgaWYgKHZhbCA+IC1taW4pIHtcblx0XHRcdFx0XHRcdHZhbCA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICghcHQudHlwZSkge1xuXHRcdFx0XHRcdFx0cHQudFtwdC5wXSA9IHZhbCArIHB0LnhzMDtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHB0LnR5cGUgPT09IDEpIHsgLy9jb21wbGV4IHZhbHVlIChvbmUgdGhhdCB0eXBpY2FsbHkgaGFzIG11bHRpcGxlIG51bWJlcnMgaW5zaWRlIGEgc3RyaW5nLCBsaWtlIFwicmVjdCg1cHgsMTBweCwyMHB4LDI1cHgpXCJcblx0XHRcdFx0XHRcdGkgPSBwdC5sO1xuXHRcdFx0XHRcdFx0aWYgKGkgPT09IDIpIHtcblx0XHRcdFx0XHRcdFx0cHQudFtwdC5wXSA9IHB0LnhzMCArIHZhbCArIHB0LnhzMSArIHB0LnhuMSArIHB0LnhzMjtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoaSA9PT0gMykge1xuXHRcdFx0XHRcdFx0XHRwdC50W3B0LnBdID0gcHQueHMwICsgdmFsICsgcHQueHMxICsgcHQueG4xICsgcHQueHMyICsgcHQueG4yICsgcHQueHMzO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChpID09PSA0KSB7XG5cdFx0XHRcdFx0XHRcdHB0LnRbcHQucF0gPSBwdC54czAgKyB2YWwgKyBwdC54czEgKyBwdC54bjEgKyBwdC54czIgKyBwdC54bjIgKyBwdC54czMgKyBwdC54bjMgKyBwdC54czQ7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKGkgPT09IDUpIHtcblx0XHRcdFx0XHRcdFx0cHQudFtwdC5wXSA9IHB0LnhzMCArIHZhbCArIHB0LnhzMSArIHB0LnhuMSArIHB0LnhzMiArIHB0LnhuMiArIHB0LnhzMyArIHB0LnhuMyArIHB0LnhzNCArIHB0LnhuNCArIHB0LnhzNTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHN0ciA9IHB0LnhzMCArIHZhbCArIHB0LnhzMTtcblx0XHRcdFx0XHRcdFx0Zm9yIChpID0gMTsgaSA8IHB0Lmw7IGkrKykge1xuXHRcdFx0XHRcdFx0XHRcdHN0ciArPSBwdFtcInhuXCIraV0gKyBwdFtcInhzXCIrKGkrMSldO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHB0LnRbcHQucF0gPSBzdHI7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR9IGVsc2UgaWYgKHB0LnR5cGUgPT09IC0xKSB7IC8vbm9uLXR3ZWVuaW5nIHZhbHVlXG5cdFx0XHRcdFx0XHRwdC50W3B0LnBdID0gcHQueHMwO1xuXG5cdFx0XHRcdFx0fSBlbHNlIGlmIChwdC5zZXRSYXRpbykgeyAvL2N1c3RvbSBzZXRSYXRpbygpIGZvciB0aGluZ3MgbGlrZSBTcGVjaWFsUHJvcHMsIGV4dGVybmFsIHBsdWdpbnMsIGV0Yy5cblx0XHRcdFx0XHRcdHB0LnNldFJhdGlvKHYpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwdCA9IHB0Ll9uZXh0O1xuXHRcdFx0XHR9XG5cblx0XHRcdC8vaWYgdGhlIHR3ZWVuIGlzIHJldmVyc2VkIGFsbCB0aGUgd2F5IGJhY2sgdG8gdGhlIGJlZ2lubmluZywgd2UgbmVlZCB0byByZXN0b3JlIHRoZSBvcmlnaW5hbCB2YWx1ZXMgd2hpY2ggbWF5IGhhdmUgZGlmZmVyZW50IHVuaXRzIChsaWtlICUgaW5zdGVhZCBvZiBweCBvciBlbSBvciB3aGF0ZXZlcikuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0XHRpZiAocHQudHlwZSAhPT0gMikge1xuXHRcdFx0XHRcdFx0cHQudFtwdC5wXSA9IHB0LmI7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHB0LnNldFJhdGlvKHYpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwdCA9IHB0Ll9uZXh0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIEBwcml2YXRlXG5cdFx0ICogRm9yY2VzIHJlbmRlcmluZyBvZiB0aGUgdGFyZ2V0J3MgdHJhbnNmb3JtcyAocm90YXRpb24sIHNjYWxlLCBldGMuKSB3aGVuZXZlciB0aGUgQ1NTUGx1Z2luJ3Mgc2V0UmF0aW8oKSBpcyBjYWxsZWQuXG5cdFx0ICogQmFzaWNhbGx5LCB0aGlzIHRlbGxzIHRoZSBDU1NQbHVnaW4gdG8gY3JlYXRlIGEgQ1NTUHJvcFR3ZWVuICh0eXBlIDIpIGFmdGVyIGluc3RhbnRpYXRpb24gdGhhdCBydW5zIGxhc3QgaW4gdGhlIGxpbmtlZFxuXHRcdCAqIGxpc3QgYW5kIGNhbGxzIHRoZSBhcHByb3ByaWF0ZSAoM0Qgb3IgMkQpIHJlbmRlcmluZyBmdW5jdGlvbi4gV2Ugc2VwYXJhdGUgdGhpcyBpbnRvIGl0cyBvd24gbWV0aG9kIHNvIHRoYXQgd2UgY2FuIGNhbGxcblx0XHQgKiBpdCBmcm9tIG90aGVyIHBsdWdpbnMgbGlrZSBCZXppZXJQbHVnaW4gaWYsIGZvciBleGFtcGxlLCBpdCBuZWVkcyB0byBhcHBseSBhbiBhdXRvUm90YXRpb24gYW5kIHRoaXMgQ1NTUGx1Z2luXG5cdFx0ICogZG9lc24ndCBoYXZlIGFueSB0cmFuc2Zvcm0tcmVsYXRlZCBwcm9wZXJ0aWVzIG9mIGl0cyBvd24uIFlvdSBjYW4gY2FsbCB0aGlzIG1ldGhvZCBhcyBtYW55IHRpbWVzIGFzIHlvdVxuXHRcdCAqIHdhbnQgYW5kIGl0IHdvbid0IGNyZWF0ZSBkdXBsaWNhdGUgQ1NTUHJvcFR3ZWVucy5cblx0XHQgKlxuXHRcdCAqIEBwYXJhbSB7Ym9vbGVhbn0gdGhyZWVEIGlmIHRydWUsIGl0IHNob3VsZCBhcHBseSAzRCB0d2VlbnMgKG90aGVyd2lzZSwganVzdCAyRCBvbmVzIGFyZSBmaW5lIGFuZCB0eXBpY2FsbHkgZmFzdGVyKVxuXHRcdCAqL1xuXHRcdHAuX2VuYWJsZVRyYW5zZm9ybXMgPSBmdW5jdGlvbih0aHJlZUQpIHtcblx0XHRcdHRoaXMuX3RyYW5zZm9ybSA9IHRoaXMuX3RyYW5zZm9ybSB8fCBfZ2V0VHJhbnNmb3JtKHRoaXMuX3RhcmdldCwgX2NzLCB0cnVlKTsgLy9lbnN1cmVzIHRoYXQgdGhlIGVsZW1lbnQgaGFzIGEgX2dzVHJhbnNmb3JtIHByb3BlcnR5IHdpdGggdGhlIGFwcHJvcHJpYXRlIHZhbHVlcy5cblx0XHRcdHRoaXMuX3RyYW5zZm9ybVR5cGUgPSAoISh0aGlzLl90cmFuc2Zvcm0uc3ZnICYmIF91c2VTVkdUcmFuc2Zvcm1BdHRyKSAmJiAodGhyZWVEIHx8IHRoaXMuX3RyYW5zZm9ybVR5cGUgPT09IDMpKSA/IDMgOiAyO1xuXHRcdH07XG5cblx0XHR2YXIgbGF6eVNldCA9IGZ1bmN0aW9uKHYpIHtcblx0XHRcdHRoaXMudFt0aGlzLnBdID0gdGhpcy5lO1xuXHRcdFx0dGhpcy5kYXRhLl9saW5rQ1NTUCh0aGlzLCB0aGlzLl9uZXh0LCBudWxsLCB0cnVlKTsgLy93ZSBwdXJwb3NlZnVsbHkga2VlcCB0aGlzLl9uZXh0IGV2ZW4gdGhvdWdoIGl0J2QgbWFrZSBzZW5zZSB0byBudWxsIGl0LCBidXQgdGhpcyBpcyBhIHBlcmZvcm1hbmNlIG9wdGltaXphdGlvbiwgYXMgdGhpcyBoYXBwZW5zIGR1cmluZyB0aGUgd2hpbGUgKHB0KSB7fSBsb29wIGluIHNldFJhdGlvKCkgYXQgdGhlIGJvdHRvbSBvZiB3aGljaCBpdCBzZXRzIHB0ID0gcHQuX25leHQsIHNvIGlmIHdlIG51bGwgaXQsIHRoZSBsaW5rZWQgbGlzdCB3aWxsIGJlIGJyb2tlbiBpbiB0aGF0IGxvb3AuXG5cdFx0fTtcblx0XHQvKiogQHByaXZhdGUgR2l2ZXMgdXMgYSB3YXkgdG8gc2V0IGEgdmFsdWUgb24gdGhlIGZpcnN0IHJlbmRlciAoYW5kIG9ubHkgdGhlIGZpcnN0IHJlbmRlcikuICoqL1xuXHRcdHAuX2FkZExhenlTZXQgPSBmdW5jdGlvbih0LCBwLCB2KSB7XG5cdFx0XHR2YXIgcHQgPSB0aGlzLl9maXJzdFBUID0gbmV3IENTU1Byb3BUd2Vlbih0LCBwLCAwLCAwLCB0aGlzLl9maXJzdFBULCAyKTtcblx0XHRcdHB0LmUgPSB2O1xuXHRcdFx0cHQuc2V0UmF0aW8gPSBsYXp5U2V0O1xuXHRcdFx0cHQuZGF0YSA9IHRoaXM7XG5cdFx0fTtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqKi9cblx0XHRwLl9saW5rQ1NTUCA9IGZ1bmN0aW9uKHB0LCBuZXh0LCBwcmV2LCByZW1vdmUpIHtcblx0XHRcdGlmIChwdCkge1xuXHRcdFx0XHRpZiAobmV4dCkge1xuXHRcdFx0XHRcdG5leHQuX3ByZXYgPSBwdDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAocHQuX25leHQpIHtcblx0XHRcdFx0XHRwdC5fbmV4dC5fcHJldiA9IHB0Ll9wcmV2O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChwdC5fcHJldikge1xuXHRcdFx0XHRcdHB0Ll9wcmV2Ll9uZXh0ID0gcHQuX25leHQ7XG5cdFx0XHRcdH0gZWxzZSBpZiAodGhpcy5fZmlyc3RQVCA9PT0gcHQpIHtcblx0XHRcdFx0XHR0aGlzLl9maXJzdFBUID0gcHQuX25leHQ7XG5cdFx0XHRcdFx0cmVtb3ZlID0gdHJ1ZTsgLy9qdXN0IHRvIHByZXZlbnQgcmVzZXR0aW5nIHRoaXMuX2ZpcnN0UFQgNSBsaW5lcyBkb3duIGluIGNhc2UgcHQuX25leHQgaXMgbnVsbC4gKG9wdGltaXplZCBmb3Igc3BlZWQpXG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHByZXYpIHtcblx0XHRcdFx0XHRwcmV2Ll9uZXh0ID0gcHQ7XG5cdFx0XHRcdH0gZWxzZSBpZiAoIXJlbW92ZSAmJiB0aGlzLl9maXJzdFBUID09PSBudWxsKSB7XG5cdFx0XHRcdFx0dGhpcy5fZmlyc3RQVCA9IHB0O1xuXHRcdFx0XHR9XG5cdFx0XHRcdHB0Ll9uZXh0ID0gbmV4dDtcblx0XHRcdFx0cHQuX3ByZXYgPSBwcmV2O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHB0O1xuXHRcdH07XG5cblx0XHRwLl9tb2QgPSBmdW5jdGlvbihsb29rdXApIHtcblx0XHRcdHZhciBwdCA9IHRoaXMuX2ZpcnN0UFQ7XG5cdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0aWYgKHR5cGVvZihsb29rdXBbcHQucF0pID09PSBcImZ1bmN0aW9uXCIgJiYgbG9va3VwW3B0LnBdID09PSBNYXRoLnJvdW5kKSB7IC8vb25seSBnZXRzIGNhbGxlZCBieSBSb3VuZFByb3BzUGx1Z2luIChNb2RpZnlQbHVnaW4gbWFuYWdlcyBhbGwgdGhlIHJlbmRlcmluZyBpbnRlcm5hbGx5IGZvciBDU1NQbHVnaW4gcHJvcGVydGllcyB0aGF0IG5lZWQgbW9kaWZpY2F0aW9uKS4gUmVtZW1iZXIsIHdlIGhhbmRsZSByb3VuZGluZyBhIGJpdCBkaWZmZXJlbnRseSBpbiB0aGlzIHBsdWdpbiBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucywgbGV2ZXJhZ2luZyBcInJcIiBhcyBhbiBpbmRpY2F0b3IgdGhhdCB0aGUgdmFsdWUgc2hvdWxkIGJlIHJvdW5kZWQgaW50ZXJuYWxseS4uXG5cdFx0XHRcdFx0cHQuciA9IDE7XG5cdFx0XHRcdH1cblx0XHRcdFx0cHQgPSBwdC5fbmV4dDtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0Ly93ZSBuZWVkIHRvIG1ha2Ugc3VyZSB0aGF0IGlmIGFscGhhIG9yIGF1dG9BbHBoYSBpcyBraWxsZWQsIG9wYWNpdHkgaXMgdG9vLiBBbmQgYXV0b0FscGhhIGFmZmVjdHMgdGhlIFwidmlzaWJpbGl0eVwiIHByb3BlcnR5LlxuXHRcdHAuX2tpbGwgPSBmdW5jdGlvbihsb29rdXApIHtcblx0XHRcdHZhciBjb3B5ID0gbG9va3VwLFxuXHRcdFx0XHRwdCwgcCwgeGZpcnN0O1xuXHRcdFx0aWYgKGxvb2t1cC5hdXRvQWxwaGEgfHwgbG9va3VwLmFscGhhKSB7XG5cdFx0XHRcdGNvcHkgPSB7fTtcblx0XHRcdFx0Zm9yIChwIGluIGxvb2t1cCkgeyAvL2NvcHkgdGhlIGxvb2t1cCBzbyB0aGF0IHdlJ3JlIG5vdCBjaGFuZ2luZyB0aGUgb3JpZ2luYWwgd2hpY2ggbWF5IGJlIHBhc3NlZCBlbHNld2hlcmUuXG5cdFx0XHRcdFx0Y29weVtwXSA9IGxvb2t1cFtwXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb3B5Lm9wYWNpdHkgPSAxO1xuXHRcdFx0XHRpZiAoY29weS5hdXRvQWxwaGEpIHtcblx0XHRcdFx0XHRjb3B5LnZpc2liaWxpdHkgPSAxO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAobG9va3VwLmNsYXNzTmFtZSAmJiAocHQgPSB0aGlzLl9jbGFzc05hbWVQVCkpIHsgLy9mb3IgY2xhc3NOYW1lIHR3ZWVucywgd2UgbmVlZCB0byBraWxsIGFueSBhc3NvY2lhdGVkIENTU1Byb3BUd2VlbnMgdG9vOyBhIGxpbmtlZCBsaXN0IHN0YXJ0cyBhdCB0aGUgY2xhc3NOYW1lJ3MgXCJ4Zmlyc3RcIi5cblx0XHRcdFx0eGZpcnN0ID0gcHQueGZpcnN0O1xuXHRcdFx0XHRpZiAoeGZpcnN0ICYmIHhmaXJzdC5fcHJldikge1xuXHRcdFx0XHRcdHRoaXMuX2xpbmtDU1NQKHhmaXJzdC5fcHJldiwgcHQuX25leHQsIHhmaXJzdC5fcHJldi5fcHJldik7IC8vYnJlYWsgb2ZmIHRoZSBwcmV2XG5cdFx0XHRcdH0gZWxzZSBpZiAoeGZpcnN0ID09PSB0aGlzLl9maXJzdFBUKSB7XG5cdFx0XHRcdFx0dGhpcy5fZmlyc3RQVCA9IHB0Ll9uZXh0O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChwdC5fbmV4dCkge1xuXHRcdFx0XHRcdHRoaXMuX2xpbmtDU1NQKHB0Ll9uZXh0LCBwdC5fbmV4dC5fbmV4dCwgeGZpcnN0Ll9wcmV2KTtcblx0XHRcdFx0fVxuXHRcdFx0XHR0aGlzLl9jbGFzc05hbWVQVCA9IG51bGw7XG5cdFx0XHR9XG5cdFx0XHRwdCA9IHRoaXMuX2ZpcnN0UFQ7XG5cdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0aWYgKHB0LnBsdWdpbiAmJiBwdC5wbHVnaW4gIT09IHAgJiYgcHQucGx1Z2luLl9raWxsKSB7IC8vZm9yIHBsdWdpbnMgdGhhdCBhcmUgcmVnaXN0ZXJlZCB3aXRoIENTU1BsdWdpbiwgd2Ugc2hvdWxkIG5vdGlmeSB0aGVtIG9mIHRoZSBraWxsLlxuXHRcdFx0XHRcdHB0LnBsdWdpbi5fa2lsbChsb29rdXApO1xuXHRcdFx0XHRcdHAgPSBwdC5wbHVnaW47XG5cdFx0XHRcdH1cblx0XHRcdFx0cHQgPSBwdC5fbmV4dDtcblx0XHRcdH1cblx0XHRcdHJldHVybiBUd2VlblBsdWdpbi5wcm90b3R5cGUuX2tpbGwuY2FsbCh0aGlzLCBjb3B5KTtcblx0XHR9O1xuXG5cblxuXHRcdC8vdXNlZCBieSBjYXNjYWRlVG8oKSBmb3IgZ2F0aGVyaW5nIGFsbCB0aGUgc3R5bGUgcHJvcGVydGllcyBvZiBlYWNoIGNoaWxkIGVsZW1lbnQgaW50byBhbiBhcnJheSBmb3IgY29tcGFyaXNvbi5cblx0XHR2YXIgX2dldENoaWxkU3R5bGVzID0gZnVuY3Rpb24oZSwgcHJvcHMsIHRhcmdldHMpIHtcblx0XHRcdFx0dmFyIGNoaWxkcmVuLCBpLCBjaGlsZCwgdHlwZTtcblx0XHRcdFx0aWYgKGUuc2xpY2UpIHtcblx0XHRcdFx0XHRpID0gZS5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0XHRfZ2V0Q2hpbGRTdHlsZXMoZVtpXSwgcHJvcHMsIHRhcmdldHMpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Y2hpbGRyZW4gPSBlLmNoaWxkTm9kZXM7XG5cdFx0XHRcdGkgPSBjaGlsZHJlbi5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdGNoaWxkID0gY2hpbGRyZW5baV07XG5cdFx0XHRcdFx0dHlwZSA9IGNoaWxkLnR5cGU7XG5cdFx0XHRcdFx0aWYgKGNoaWxkLnN0eWxlKSB7XG5cdFx0XHRcdFx0XHRwcm9wcy5wdXNoKF9nZXRBbGxTdHlsZXMoY2hpbGQpKTtcblx0XHRcdFx0XHRcdGlmICh0YXJnZXRzKSB7XG5cdFx0XHRcdFx0XHRcdHRhcmdldHMucHVzaChjaGlsZCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICgodHlwZSA9PT0gMSB8fCB0eXBlID09PSA5IHx8IHR5cGUgPT09IDExKSAmJiBjaGlsZC5jaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0X2dldENoaWxkU3R5bGVzKGNoaWxkLCBwcm9wcywgdGFyZ2V0cyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogVHlwaWNhbGx5IG9ubHkgdXNlZnVsIGZvciBjbGFzc05hbWUgdHdlZW5zIHRoYXQgbWF5IGFmZmVjdCBjaGlsZCBlbGVtZW50cywgdGhpcyBtZXRob2QgY3JlYXRlcyBhIFR3ZWVuTGl0ZVxuXHRcdCAqIGFuZCB0aGVuIGNvbXBhcmVzIHRoZSBzdHlsZSBwcm9wZXJ0aWVzIG9mIGFsbCB0aGUgdGFyZ2V0J3MgY2hpbGQgZWxlbWVudHMgYXQgdGhlIHR3ZWVuJ3Mgc3RhcnQgYW5kIGVuZCwgYW5kXG5cdFx0ICogaWYgYW55IGFyZSBkaWZmZXJlbnQsIGl0IGFsc28gY3JlYXRlcyB0d2VlbnMgZm9yIHRob3NlIGFuZCByZXR1cm5zIGFuIGFycmF5IGNvbnRhaW5pbmcgQUxMIG9mIHRoZSByZXN1bHRpbmdcblx0XHQgKiB0d2VlbnMgKHNvIHRoYXQgeW91IGNhbiBlYXNpbHkgYWRkKCkgdGhlbSB0byBhIFRpbWVsaW5lTGl0ZSwgZm9yIGV4YW1wbGUpLiBUaGUgcmVhc29uIHRoaXMgZnVuY3Rpb25hbGl0eSBpc1xuXHRcdCAqIHdyYXBwZWQgaW50byBhIHNlcGFyYXRlIHN0YXRpYyBtZXRob2Qgb2YgQ1NTUGx1Z2luIGluc3RlYWQgb2YgYmVpbmcgaW50ZWdyYXRlZCBpbnRvIGFsbCByZWd1bGFyIGNsYXNzTmFtZSB0d2VlbnNcblx0XHQgKiBpcyBiZWNhdXNlIGl0IGNyZWF0ZXMgZW50aXJlbHkgbmV3IHR3ZWVucyB0aGF0IG1heSBoYXZlIGNvbXBsZXRlbHkgZGlmZmVyZW50IHRhcmdldHMgdGhhbiB0aGUgb3JpZ2luYWwgdHdlZW4sXG5cdFx0ICogc28gaWYgdGhleSB3ZXJlIGFsbCBsdW1wZWQgaW50byB0aGUgb3JpZ2luYWwgdHdlZW4gaW5zdGFuY2UsIGl0IHdvdWxkIGJlIGluY29uc2lzdGVudCB3aXRoIHRoZSByZXN0IG9mIHRoZSBBUElcblx0XHQgKiBhbmQgaXQgd291bGQgY3JlYXRlIG90aGVyIHByb2JsZW1zLiBGb3IgZXhhbXBsZTpcblx0XHQgKiAgLSBJZiBJIGNyZWF0ZSBhIHR3ZWVuIG9mIGVsZW1lbnRBLCB0aGF0IHR3ZWVuIGluc3RhbmNlIG1heSBzdWRkZW5seSBjaGFuZ2UgaXRzIHRhcmdldCB0byBpbmNsdWRlIDUwIG90aGVyIGVsZW1lbnRzICh1bmludHVpdGl2ZSBpZiBJIHNwZWNpZmljYWxseSBkZWZpbmVkIHRoZSB0YXJnZXQgSSB3YW50ZWQpXG5cdFx0ICogIC0gV2UgY2FuJ3QganVzdCBjcmVhdGUgbmV3IGluZGVwZW5kZW50IHR3ZWVucyBiZWNhdXNlIG90aGVyd2lzZSwgd2hhdCBoYXBwZW5zIGlmIHRoZSBvcmlnaW5hbC9wYXJlbnQgdHdlZW4gaXMgcmV2ZXJzZWQgb3IgcGF1c2Ugb3IgZHJvcHBlZCBpbnRvIGEgVGltZWxpbmVMaXRlIGZvciB0aWdodCBjb250cm9sPyBZb3UnZCBleHBlY3QgdGhhdCB0d2VlbidzIGJlaGF2aW9yIHRvIGFmZmVjdCBhbGwgdGhlIG90aGVycy5cblx0XHQgKiAgLSBBbmFseXppbmcgZXZlcnkgc3R5bGUgcHJvcGVydHkgb2YgZXZlcnkgY2hpbGQgYmVmb3JlIGFuZCBhZnRlciB0aGUgdHdlZW4gaXMgYW4gZXhwZW5zaXZlIG9wZXJhdGlvbiB3aGVuIHRoZXJlIGFyZSBtYW55IGNoaWxkcmVuLCBzbyB0aGlzIGJlaGF2aW9yIHNob3VsZG4ndCBiZSBpbXBvc2VkIG9uIGFsbCBjbGFzc05hbWUgdHdlZW5zIGJ5IGRlZmF1bHQsIGVzcGVjaWFsbHkgc2luY2UgaXQncyBwcm9iYWJseSByYXJlIHRoYXQgdGhpcyBleHRyYSBmdW5jdGlvbmFsaXR5IGlzIG5lZWRlZC5cblx0XHQgKlxuXHRcdCAqIEBwYXJhbSB7T2JqZWN0fSB0YXJnZXQgb2JqZWN0IHRvIGJlIHR3ZWVuZWRcblx0XHQgKiBAcGFyYW0ge251bWJlcn0gRHVyYXRpb24gaW4gc2Vjb25kcyAob3IgZnJhbWVzIGZvciBmcmFtZXMtYmFzZWQgdHdlZW5zKVxuXHRcdCAqIEBwYXJhbSB7T2JqZWN0fSBPYmplY3QgY29udGFpbmluZyB0aGUgZW5kIHZhbHVlcywgbGlrZSB7Y2xhc3NOYW1lOlwibmV3Q2xhc3NcIiwgZWFzZTpMaW5lYXIuZWFzZU5vbmV9XG5cdFx0ICogQHJldHVybiB7QXJyYXl9IEFuIGFycmF5IG9mIFR3ZWVuTGl0ZSBpbnN0YW5jZXNcblx0XHQgKi9cblx0XHRDU1NQbHVnaW4uY2FzY2FkZVRvID0gZnVuY3Rpb24odGFyZ2V0LCBkdXJhdGlvbiwgdmFycykge1xuXHRcdFx0dmFyIHR3ZWVuID0gVHdlZW5MaXRlLnRvKHRhcmdldCwgZHVyYXRpb24sIHZhcnMpLFxuXHRcdFx0XHRyZXN1bHRzID0gW3R3ZWVuXSxcblx0XHRcdFx0YiA9IFtdLFxuXHRcdFx0XHRlID0gW10sXG5cdFx0XHRcdHRhcmdldHMgPSBbXSxcblx0XHRcdFx0X3Jlc2VydmVkUHJvcHMgPSBUd2VlbkxpdGUuX2ludGVybmFscy5yZXNlcnZlZFByb3BzLFxuXHRcdFx0XHRpLCBkaWZzLCBwLCBmcm9tO1xuXHRcdFx0dGFyZ2V0ID0gdHdlZW4uX3RhcmdldHMgfHwgdHdlZW4udGFyZ2V0O1xuXHRcdFx0X2dldENoaWxkU3R5bGVzKHRhcmdldCwgYiwgdGFyZ2V0cyk7XG5cdFx0XHR0d2Vlbi5yZW5kZXIoZHVyYXRpb24sIHRydWUsIHRydWUpO1xuXHRcdFx0X2dldENoaWxkU3R5bGVzKHRhcmdldCwgZSk7XG5cdFx0XHR0d2Vlbi5yZW5kZXIoMCwgdHJ1ZSwgdHJ1ZSk7XG5cdFx0XHR0d2Vlbi5fZW5hYmxlZCh0cnVlKTtcblx0XHRcdGkgPSB0YXJnZXRzLmxlbmd0aDtcblx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRkaWZzID0gX2Nzc0RpZih0YXJnZXRzW2ldLCBiW2ldLCBlW2ldKTtcblx0XHRcdFx0aWYgKGRpZnMuZmlyc3RNUFQpIHtcblx0XHRcdFx0XHRkaWZzID0gZGlmcy5kaWZzO1xuXHRcdFx0XHRcdGZvciAocCBpbiB2YXJzKSB7XG5cdFx0XHRcdFx0XHRpZiAoX3Jlc2VydmVkUHJvcHNbcF0pIHtcblx0XHRcdFx0XHRcdFx0ZGlmc1twXSA9IHZhcnNbcF07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGZyb20gPSB7fTtcblx0XHRcdFx0XHRmb3IgKHAgaW4gZGlmcykge1xuXHRcdFx0XHRcdFx0ZnJvbVtwXSA9IGJbaV1bcF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJlc3VsdHMucHVzaChUd2VlbkxpdGUuZnJvbVRvKHRhcmdldHNbaV0sIGR1cmF0aW9uLCBmcm9tLCBkaWZzKSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdH07XG5cblx0XHRUd2VlblBsdWdpbi5hY3RpdmF0ZShbQ1NTUGx1Z2luXSk7XG5cdFx0cmV0dXJuIENTU1BsdWdpbjtcblxuXHR9LCB0cnVlKTtcblxuXHRcblx0XG5cdFxuXHRcblx0XG5cdFxuXHRcblx0XG5cdFxuXHRcbi8qXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBSb3VuZFByb3BzUGx1Z2luXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblx0KGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIFJvdW5kUHJvcHNQbHVnaW4gPSBfZ3NTY29wZS5fZ3NEZWZpbmUucGx1Z2luKHtcblx0XHRcdFx0cHJvcE5hbWU6IFwicm91bmRQcm9wc1wiLFxuXHRcdFx0XHR2ZXJzaW9uOiBcIjEuNi4wXCIsXG5cdFx0XHRcdHByaW9yaXR5OiAtMSxcblx0XHRcdFx0QVBJOiAyLFxuXG5cdFx0XHRcdC8vY2FsbGVkIHdoZW4gdGhlIHR3ZWVuIHJlbmRlcnMgZm9yIHRoZSBmaXJzdCB0aW1lLiBUaGlzIGlzIHdoZXJlIGluaXRpYWwgdmFsdWVzIHNob3VsZCBiZSByZWNvcmRlZCBhbmQgYW55IHNldHVwIHJvdXRpbmVzIHNob3VsZCBydW4uXG5cdFx0XHRcdGluaXQ6IGZ1bmN0aW9uKHRhcmdldCwgdmFsdWUsIHR3ZWVuKSB7XG5cdFx0XHRcdFx0dGhpcy5fdHdlZW4gPSB0d2Vlbjtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHR9KSxcblx0XHRcdF9yb3VuZExpbmtlZExpc3QgPSBmdW5jdGlvbihub2RlKSB7XG5cdFx0XHRcdHdoaWxlIChub2RlKSB7XG5cdFx0XHRcdFx0aWYgKCFub2RlLmYgJiYgIW5vZGUuYmxvYikge1xuXHRcdFx0XHRcdFx0bm9kZS5tID0gTWF0aC5yb3VuZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bm9kZSA9IG5vZGUuX25leHQ7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRwID0gUm91bmRQcm9wc1BsdWdpbi5wcm90b3R5cGU7XG5cblx0XHRwLl9vbkluaXRBbGxQcm9wcyA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHR3ZWVuID0gdGhpcy5fdHdlZW4sXG5cdFx0XHRcdHJwID0gKHR3ZWVuLnZhcnMucm91bmRQcm9wcy5qb2luKSA/IHR3ZWVuLnZhcnMucm91bmRQcm9wcyA6IHR3ZWVuLnZhcnMucm91bmRQcm9wcy5zcGxpdChcIixcIiksXG5cdFx0XHRcdGkgPSBycC5sZW5ndGgsXG5cdFx0XHRcdGxvb2t1cCA9IHt9LFxuXHRcdFx0XHRycHQgPSB0d2Vlbi5fcHJvcExvb2t1cC5yb3VuZFByb3BzLFxuXHRcdFx0XHRwcm9wLCBwdCwgbmV4dDtcblx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRsb29rdXBbcnBbaV1dID0gTWF0aC5yb3VuZDtcblx0XHRcdH1cblx0XHRcdGkgPSBycC5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0cHJvcCA9IHJwW2ldO1xuXHRcdFx0XHRwdCA9IHR3ZWVuLl9maXJzdFBUO1xuXHRcdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0XHRuZXh0ID0gcHQuX25leHQ7IC8vcmVjb3JkIGhlcmUsIGJlY2F1c2UgaXQgbWF5IGdldCByZW1vdmVkXG5cdFx0XHRcdFx0aWYgKHB0LnBnKSB7XG5cdFx0XHRcdFx0XHRwdC50Ll9tb2QobG9va3VwKTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHB0Lm4gPT09IHByb3ApIHtcblx0XHRcdFx0XHRcdGlmIChwdC5mID09PSAyICYmIHB0LnQpIHsgLy9hIGJsb2IgKHRleHQgY29udGFpbmluZyBtdWx0aXBsZSBudW1lcmljIHZhbHVlcylcblx0XHRcdFx0XHRcdFx0X3JvdW5kTGlua2VkTGlzdChwdC50Ll9maXJzdFBUKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMuX2FkZChwdC50LCBwcm9wLCBwdC5zLCBwdC5jKTtcblx0XHRcdFx0XHRcdFx0Ly9yZW1vdmUgZnJvbSBsaW5rZWQgbGlzdFxuXHRcdFx0XHRcdFx0XHRpZiAobmV4dCkge1xuXHRcdFx0XHRcdFx0XHRcdG5leHQuX3ByZXYgPSBwdC5fcHJldjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRpZiAocHQuX3ByZXYpIHtcblx0XHRcdFx0XHRcdFx0XHRwdC5fcHJldi5fbmV4dCA9IG5leHQ7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAodHdlZW4uX2ZpcnN0UFQgPT09IHB0KSB7XG5cdFx0XHRcdFx0XHRcdFx0dHdlZW4uX2ZpcnN0UFQgPSBuZXh0O1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHB0Ll9uZXh0ID0gcHQuX3ByZXYgPSBudWxsO1xuXHRcdFx0XHRcdFx0XHR0d2Vlbi5fcHJvcExvb2t1cFtwcm9wXSA9IHJwdDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cHQgPSBuZXh0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcblxuXHRcdHAuX2FkZCA9IGZ1bmN0aW9uKHRhcmdldCwgcCwgcywgYykge1xuXHRcdFx0dGhpcy5fYWRkVHdlZW4odGFyZ2V0LCBwLCBzLCBzICsgYywgcCwgTWF0aC5yb3VuZCk7XG5cdFx0XHR0aGlzLl9vdmVyd3JpdGVQcm9wcy5wdXNoKHApO1xuXHRcdH07XG5cblx0fSgpKTtcblxuXG5cblxuXG5cblxuXG5cblxuLypcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEF0dHJQbHVnaW5cbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXG5cdChmdW5jdGlvbigpIHtcblxuXHRcdF9nc1Njb3BlLl9nc0RlZmluZS5wbHVnaW4oe1xuXHRcdFx0cHJvcE5hbWU6IFwiYXR0clwiLFxuXHRcdFx0QVBJOiAyLFxuXHRcdFx0dmVyc2lvbjogXCIwLjYuMFwiLFxuXG5cdFx0XHQvL2NhbGxlZCB3aGVuIHRoZSB0d2VlbiByZW5kZXJzIGZvciB0aGUgZmlyc3QgdGltZS4gVGhpcyBpcyB3aGVyZSBpbml0aWFsIHZhbHVlcyBzaG91bGQgYmUgcmVjb3JkZWQgYW5kIGFueSBzZXR1cCByb3V0aW5lcyBzaG91bGQgcnVuLlxuXHRcdFx0aW5pdDogZnVuY3Rpb24odGFyZ2V0LCB2YWx1ZSwgdHdlZW4sIGluZGV4KSB7XG5cdFx0XHRcdHZhciBwLCBlbmQ7XG5cdFx0XHRcdGlmICh0eXBlb2YodGFyZ2V0LnNldEF0dHJpYnV0ZSkgIT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRmb3IgKHAgaW4gdmFsdWUpIHtcblx0XHRcdFx0XHRlbmQgPSB2YWx1ZVtwXTtcblx0XHRcdFx0XHRpZiAodHlwZW9mKGVuZCkgPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdFx0ZW5kID0gZW5kKGluZGV4LCB0YXJnZXQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0aGlzLl9hZGRUd2Vlbih0YXJnZXQsIFwic2V0QXR0cmlidXRlXCIsIHRhcmdldC5nZXRBdHRyaWJ1dGUocCkgKyBcIlwiLCBlbmQgKyBcIlwiLCBwLCBmYWxzZSwgcCk7XG5cdFx0XHRcdFx0dGhpcy5fb3ZlcndyaXRlUHJvcHMucHVzaChwKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdH0pO1xuXG5cdH0oKSk7XG5cblxuXG5cblxuXG5cblxuXG5cbi8qXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBEaXJlY3Rpb25hbFJvdGF0aW9uUGx1Z2luXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblx0X2dzU2NvcGUuX2dzRGVmaW5lLnBsdWdpbih7XG5cdFx0cHJvcE5hbWU6IFwiZGlyZWN0aW9uYWxSb3RhdGlvblwiLFxuXHRcdHZlcnNpb246IFwiMC4zLjBcIixcblx0XHRBUEk6IDIsXG5cblx0XHQvL2NhbGxlZCB3aGVuIHRoZSB0d2VlbiByZW5kZXJzIGZvciB0aGUgZmlyc3QgdGltZS4gVGhpcyBpcyB3aGVyZSBpbml0aWFsIHZhbHVlcyBzaG91bGQgYmUgcmVjb3JkZWQgYW5kIGFueSBzZXR1cCByb3V0aW5lcyBzaG91bGQgcnVuLlxuXHRcdGluaXQ6IGZ1bmN0aW9uKHRhcmdldCwgdmFsdWUsIHR3ZWVuLCBpbmRleCkge1xuXHRcdFx0aWYgKHR5cGVvZih2YWx1ZSkgIT09IFwib2JqZWN0XCIpIHtcblx0XHRcdFx0dmFsdWUgPSB7cm90YXRpb246dmFsdWV9O1xuXHRcdFx0fVxuXHRcdFx0dGhpcy5maW5hbHMgPSB7fTtcblx0XHRcdHZhciBjYXAgPSAodmFsdWUudXNlUmFkaWFucyA9PT0gdHJ1ZSkgPyBNYXRoLlBJICogMiA6IDM2MCxcblx0XHRcdFx0bWluID0gMC4wMDAwMDEsXG5cdFx0XHRcdHAsIHYsIHN0YXJ0LCBlbmQsIGRpZiwgc3BsaXQ7XG5cdFx0XHRmb3IgKHAgaW4gdmFsdWUpIHtcblx0XHRcdFx0aWYgKHAgIT09IFwidXNlUmFkaWFuc1wiKSB7XG5cdFx0XHRcdFx0ZW5kID0gdmFsdWVbcF07XG5cdFx0XHRcdFx0aWYgKHR5cGVvZihlbmQpID09PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdFx0XHRcdGVuZCA9IGVuZChpbmRleCwgdGFyZ2V0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0c3BsaXQgPSAoZW5kICsgXCJcIikuc3BsaXQoXCJfXCIpO1xuXHRcdFx0XHRcdHYgPSBzcGxpdFswXTtcblx0XHRcdFx0XHRzdGFydCA9IHBhcnNlRmxvYXQoICh0eXBlb2YodGFyZ2V0W3BdKSAhPT0gXCJmdW5jdGlvblwiKSA/IHRhcmdldFtwXSA6IHRhcmdldFsgKChwLmluZGV4T2YoXCJzZXRcIikgfHwgdHlwZW9mKHRhcmdldFtcImdldFwiICsgcC5zdWJzdHIoMyldKSAhPT0gXCJmdW5jdGlvblwiKSA/IHAgOiBcImdldFwiICsgcC5zdWJzdHIoMykpIF0oKSApO1xuXHRcdFx0XHRcdGVuZCA9IHRoaXMuZmluYWxzW3BdID0gKHR5cGVvZih2KSA9PT0gXCJzdHJpbmdcIiAmJiB2LmNoYXJBdCgxKSA9PT0gXCI9XCIpID8gc3RhcnQgKyBwYXJzZUludCh2LmNoYXJBdCgwKSArIFwiMVwiLCAxMCkgKiBOdW1iZXIodi5zdWJzdHIoMikpIDogTnVtYmVyKHYpIHx8IDA7XG5cdFx0XHRcdFx0ZGlmID0gZW5kIC0gc3RhcnQ7XG5cdFx0XHRcdFx0aWYgKHNwbGl0Lmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0diA9IHNwbGl0LmpvaW4oXCJfXCIpO1xuXHRcdFx0XHRcdFx0aWYgKHYuaW5kZXhPZihcInNob3J0XCIpICE9PSAtMSkge1xuXHRcdFx0XHRcdFx0XHRkaWYgPSBkaWYgJSBjYXA7XG5cdFx0XHRcdFx0XHRcdGlmIChkaWYgIT09IGRpZiAlIChjYXAgLyAyKSkge1xuXHRcdFx0XHRcdFx0XHRcdGRpZiA9IChkaWYgPCAwKSA/IGRpZiArIGNhcCA6IGRpZiAtIGNhcDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKHYuaW5kZXhPZihcIl9jd1wiKSAhPT0gLTEgJiYgZGlmIDwgMCkge1xuXHRcdFx0XHRcdFx0XHRkaWYgPSAoKGRpZiArIGNhcCAqIDk5OTk5OTk5OTkpICUgY2FwKSAtICgoZGlmIC8gY2FwKSB8IDApICogY2FwO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmICh2LmluZGV4T2YoXCJjY3dcIikgIT09IC0xICYmIGRpZiA+IDApIHtcblx0XHRcdFx0XHRcdFx0ZGlmID0gKChkaWYgLSBjYXAgKiA5OTk5OTk5OTk5KSAlIGNhcCkgLSAoKGRpZiAvIGNhcCkgfCAwKSAqIGNhcDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGRpZiA+IG1pbiB8fCBkaWYgPCAtbWluKSB7XG5cdFx0XHRcdFx0XHR0aGlzLl9hZGRUd2Vlbih0YXJnZXQsIHAsIHN0YXJ0LCBzdGFydCArIGRpZiwgcCk7XG5cdFx0XHRcdFx0XHR0aGlzLl9vdmVyd3JpdGVQcm9wcy5wdXNoKHApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdC8vY2FsbGVkIGVhY2ggdGltZSB0aGUgdmFsdWVzIHNob3VsZCBiZSB1cGRhdGVkLCBhbmQgdGhlIHJhdGlvIGdldHMgcGFzc2VkIGFzIHRoZSBvbmx5IHBhcmFtZXRlciAodHlwaWNhbGx5IGl0J3MgYSB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEsIGJ1dCBpdCBjYW4gZXhjZWVkIHRob3NlIHdoZW4gdXNpbmcgYW4gZWFzZSBsaWtlIEVsYXN0aWMuZWFzZU91dCBvciBCYWNrLmVhc2VPdXQsIGV0Yy4pXG5cdFx0c2V0OiBmdW5jdGlvbihyYXRpbykge1xuXHRcdFx0dmFyIHB0O1xuXHRcdFx0aWYgKHJhdGlvICE9PSAxKSB7XG5cdFx0XHRcdHRoaXMuX3N1cGVyLnNldFJhdGlvLmNhbGwodGhpcywgcmF0aW8pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHQgPSB0aGlzLl9maXJzdFBUO1xuXHRcdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0XHRpZiAocHQuZikge1xuXHRcdFx0XHRcdFx0cHQudFtwdC5wXSh0aGlzLmZpbmFsc1twdC5wXSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHB0LnRbcHQucF0gPSB0aGlzLmZpbmFsc1twdC5wXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cHQgPSBwdC5fbmV4dDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHR9KS5fYXV0b0NTUyA9IHRydWU7XG5cblxuXG5cblxuXG5cblx0XG5cdFxuXHRcblx0XG4vKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogRWFzZVBhY2tcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXHRfZ3NTY29wZS5fZ3NEZWZpbmUoXCJlYXNpbmcuQmFja1wiLCBbXCJlYXNpbmcuRWFzZVwiXSwgZnVuY3Rpb24oRWFzZSkge1xuXHRcdFxuXHRcdHZhciB3ID0gKF9nc1Njb3BlLkdyZWVuU29ja0dsb2JhbHMgfHwgX2dzU2NvcGUpLFxuXHRcdFx0Z3MgPSB3LmNvbS5ncmVlbnNvY2ssXG5cdFx0XHRfMlBJID0gTWF0aC5QSSAqIDIsXG5cdFx0XHRfSEFMRl9QSSA9IE1hdGguUEkgLyAyLFxuXHRcdFx0X2NsYXNzID0gZ3MuX2NsYXNzLFxuXHRcdFx0X2NyZWF0ZSA9IGZ1bmN0aW9uKG4sIGYpIHtcblx0XHRcdFx0dmFyIEMgPSBfY2xhc3MoXCJlYXNpbmcuXCIgKyBuLCBmdW5jdGlvbigpe30sIHRydWUpLFxuXHRcdFx0XHRcdHAgPSBDLnByb3RvdHlwZSA9IG5ldyBFYXNlKCk7XG5cdFx0XHRcdHAuY29uc3RydWN0b3IgPSBDO1xuXHRcdFx0XHRwLmdldFJhdGlvID0gZjtcblx0XHRcdFx0cmV0dXJuIEM7XG5cdFx0XHR9LFxuXHRcdFx0X2Vhc2VSZWcgPSBFYXNlLnJlZ2lzdGVyIHx8IGZ1bmN0aW9uKCl7fSwgLy9wdXQgYW4gZW1wdHkgZnVuY3Rpb24gaW4gcGxhY2UganVzdCBhcyBhIHNhZmV0eSBtZWFzdXJlIGluIGNhc2Ugc29tZW9uZSBsb2FkcyBhbiBPTEQgdmVyc2lvbiBvZiBUd2VlbkxpdGUuanMgd2hlcmUgRWFzZS5yZWdpc3RlciBkb2Vzbid0IGV4aXN0LlxuXHRcdFx0X3dyYXAgPSBmdW5jdGlvbihuYW1lLCBFYXNlT3V0LCBFYXNlSW4sIEVhc2VJbk91dCwgYWxpYXNlcykge1xuXHRcdFx0XHR2YXIgQyA9IF9jbGFzcyhcImVhc2luZy5cIituYW1lLCB7XG5cdFx0XHRcdFx0ZWFzZU91dDpuZXcgRWFzZU91dCgpLFxuXHRcdFx0XHRcdGVhc2VJbjpuZXcgRWFzZUluKCksXG5cdFx0XHRcdFx0ZWFzZUluT3V0Om5ldyBFYXNlSW5PdXQoKVxuXHRcdFx0XHR9LCB0cnVlKTtcblx0XHRcdFx0X2Vhc2VSZWcoQywgbmFtZSk7XG5cdFx0XHRcdHJldHVybiBDO1xuXHRcdFx0fSxcblx0XHRcdEVhc2VQb2ludCA9IGZ1bmN0aW9uKHRpbWUsIHZhbHVlLCBuZXh0KSB7XG5cdFx0XHRcdHRoaXMudCA9IHRpbWU7XG5cdFx0XHRcdHRoaXMudiA9IHZhbHVlO1xuXHRcdFx0XHRpZiAobmV4dCkge1xuXHRcdFx0XHRcdHRoaXMubmV4dCA9IG5leHQ7XG5cdFx0XHRcdFx0bmV4dC5wcmV2ID0gdGhpcztcblx0XHRcdFx0XHR0aGlzLmMgPSBuZXh0LnYgLSB2YWx1ZTtcblx0XHRcdFx0XHR0aGlzLmdhcCA9IG5leHQudCAtIHRpbWU7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cblx0XHRcdC8vQmFja1xuXHRcdFx0X2NyZWF0ZUJhY2sgPSBmdW5jdGlvbihuLCBmKSB7XG5cdFx0XHRcdHZhciBDID0gX2NsYXNzKFwiZWFzaW5nLlwiICsgbiwgZnVuY3Rpb24ob3ZlcnNob290KSB7XG5cdFx0XHRcdFx0XHR0aGlzLl9wMSA9IChvdmVyc2hvb3QgfHwgb3ZlcnNob290ID09PSAwKSA/IG92ZXJzaG9vdCA6IDEuNzAxNTg7XG5cdFx0XHRcdFx0XHR0aGlzLl9wMiA9IHRoaXMuX3AxICogMS41MjU7XG5cdFx0XHRcdFx0fSwgdHJ1ZSksXG5cdFx0XHRcdFx0cCA9IEMucHJvdG90eXBlID0gbmV3IEVhc2UoKTtcblx0XHRcdFx0cC5jb25zdHJ1Y3RvciA9IEM7XG5cdFx0XHRcdHAuZ2V0UmF0aW8gPSBmO1xuXHRcdFx0XHRwLmNvbmZpZyA9IGZ1bmN0aW9uKG92ZXJzaG9vdCkge1xuXHRcdFx0XHRcdHJldHVybiBuZXcgQyhvdmVyc2hvb3QpO1xuXHRcdFx0XHR9O1xuXHRcdFx0XHRyZXR1cm4gQztcblx0XHRcdH0sXG5cblx0XHRcdEJhY2sgPSBfd3JhcChcIkJhY2tcIixcblx0XHRcdFx0X2NyZWF0ZUJhY2soXCJCYWNrT3V0XCIsIGZ1bmN0aW9uKHApIHtcblx0XHRcdFx0XHRyZXR1cm4gKChwID0gcCAtIDEpICogcCAqICgodGhpcy5fcDEgKyAxKSAqIHAgKyB0aGlzLl9wMSkgKyAxKTtcblx0XHRcdFx0fSksXG5cdFx0XHRcdF9jcmVhdGVCYWNrKFwiQmFja0luXCIsIGZ1bmN0aW9uKHApIHtcblx0XHRcdFx0XHRyZXR1cm4gcCAqIHAgKiAoKHRoaXMuX3AxICsgMSkgKiBwIC0gdGhpcy5fcDEpO1xuXHRcdFx0XHR9KSxcblx0XHRcdFx0X2NyZWF0ZUJhY2soXCJCYWNrSW5PdXRcIiwgZnVuY3Rpb24ocCkge1xuXHRcdFx0XHRcdHJldHVybiAoKHAgKj0gMikgPCAxKSA/IDAuNSAqIHAgKiBwICogKCh0aGlzLl9wMiArIDEpICogcCAtIHRoaXMuX3AyKSA6IDAuNSAqICgocCAtPSAyKSAqIHAgKiAoKHRoaXMuX3AyICsgMSkgKiBwICsgdGhpcy5fcDIpICsgMik7XG5cdFx0XHRcdH0pXG5cdFx0XHQpLFxuXG5cblx0XHRcdC8vU2xvd01vXG5cdFx0XHRTbG93TW8gPSBfY2xhc3MoXCJlYXNpbmcuU2xvd01vXCIsIGZ1bmN0aW9uKGxpbmVhclJhdGlvLCBwb3dlciwgeW95b01vZGUpIHtcblx0XHRcdFx0cG93ZXIgPSAocG93ZXIgfHwgcG93ZXIgPT09IDApID8gcG93ZXIgOiAwLjc7XG5cdFx0XHRcdGlmIChsaW5lYXJSYXRpbyA9PSBudWxsKSB7XG5cdFx0XHRcdFx0bGluZWFyUmF0aW8gPSAwLjc7XG5cdFx0XHRcdH0gZWxzZSBpZiAobGluZWFyUmF0aW8gPiAxKSB7XG5cdFx0XHRcdFx0bGluZWFyUmF0aW8gPSAxO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuX3AgPSAobGluZWFyUmF0aW8gIT09IDEpID8gcG93ZXIgOiAwO1xuXHRcdFx0XHR0aGlzLl9wMSA9ICgxIC0gbGluZWFyUmF0aW8pIC8gMjtcblx0XHRcdFx0dGhpcy5fcDIgPSBsaW5lYXJSYXRpbztcblx0XHRcdFx0dGhpcy5fcDMgPSB0aGlzLl9wMSArIHRoaXMuX3AyO1xuXHRcdFx0XHR0aGlzLl9jYWxjRW5kID0gKHlveW9Nb2RlID09PSB0cnVlKTtcblx0XHRcdH0sIHRydWUpLFxuXHRcdFx0cCA9IFNsb3dNby5wcm90b3R5cGUgPSBuZXcgRWFzZSgpLFxuXHRcdFx0U3RlcHBlZEVhc2UsIFJvdWdoRWFzZSwgX2NyZWF0ZUVsYXN0aWM7XG5cblx0XHRwLmNvbnN0cnVjdG9yID0gU2xvd01vO1xuXHRcdHAuZ2V0UmF0aW8gPSBmdW5jdGlvbihwKSB7XG5cdFx0XHR2YXIgciA9IHAgKyAoMC41IC0gcCkgKiB0aGlzLl9wO1xuXHRcdFx0aWYgKHAgPCB0aGlzLl9wMSkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5fY2FsY0VuZCA/IDEgLSAoKHAgPSAxIC0gKHAgLyB0aGlzLl9wMSkpICogcCkgOiByIC0gKChwID0gMSAtIChwIC8gdGhpcy5fcDEpKSAqIHAgKiBwICogcCAqIHIpO1xuXHRcdFx0fSBlbHNlIGlmIChwID4gdGhpcy5fcDMpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX2NhbGNFbmQgPyAxIC0gKHAgPSAocCAtIHRoaXMuX3AzKSAvIHRoaXMuX3AxKSAqIHAgOiByICsgKChwIC0gcikgKiAocCA9IChwIC0gdGhpcy5fcDMpIC8gdGhpcy5fcDEpICogcCAqIHAgKiBwKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzLl9jYWxjRW5kID8gMSA6IHI7XG5cdFx0fTtcblx0XHRTbG93TW8uZWFzZSA9IG5ldyBTbG93TW8oMC43LCAwLjcpO1xuXG5cdFx0cC5jb25maWcgPSBTbG93TW8uY29uZmlnID0gZnVuY3Rpb24obGluZWFyUmF0aW8sIHBvd2VyLCB5b3lvTW9kZSkge1xuXHRcdFx0cmV0dXJuIG5ldyBTbG93TW8obGluZWFyUmF0aW8sIHBvd2VyLCB5b3lvTW9kZSk7XG5cdFx0fTtcblxuXG5cdFx0Ly9TdGVwcGVkRWFzZVxuXHRcdFN0ZXBwZWRFYXNlID0gX2NsYXNzKFwiZWFzaW5nLlN0ZXBwZWRFYXNlXCIsIGZ1bmN0aW9uKHN0ZXBzKSB7XG5cdFx0XHRcdHN0ZXBzID0gc3RlcHMgfHwgMTtcblx0XHRcdFx0dGhpcy5fcDEgPSAxIC8gc3RlcHM7XG5cdFx0XHRcdHRoaXMuX3AyID0gc3RlcHMgKyAxO1xuXHRcdFx0fSwgdHJ1ZSk7XG5cdFx0cCA9IFN0ZXBwZWRFYXNlLnByb3RvdHlwZSA9IG5ldyBFYXNlKCk7XG5cdFx0cC5jb25zdHJ1Y3RvciA9IFN0ZXBwZWRFYXNlO1xuXHRcdHAuZ2V0UmF0aW8gPSBmdW5jdGlvbihwKSB7XG5cdFx0XHRpZiAocCA8IDApIHtcblx0XHRcdFx0cCA9IDA7XG5cdFx0XHR9IGVsc2UgaWYgKHAgPj0gMSkge1xuXHRcdFx0XHRwID0gMC45OTk5OTk5OTk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gKCh0aGlzLl9wMiAqIHApID4+IDApICogdGhpcy5fcDE7XG5cdFx0fTtcblx0XHRwLmNvbmZpZyA9IFN0ZXBwZWRFYXNlLmNvbmZpZyA9IGZ1bmN0aW9uKHN0ZXBzKSB7XG5cdFx0XHRyZXR1cm4gbmV3IFN0ZXBwZWRFYXNlKHN0ZXBzKTtcblx0XHR9O1xuXG5cblx0XHQvL1JvdWdoRWFzZVxuXHRcdFJvdWdoRWFzZSA9IF9jbGFzcyhcImVhc2luZy5Sb3VnaEVhc2VcIiwgZnVuY3Rpb24odmFycykge1xuXHRcdFx0dmFycyA9IHZhcnMgfHwge307XG5cdFx0XHR2YXIgdGFwZXIgPSB2YXJzLnRhcGVyIHx8IFwibm9uZVwiLFxuXHRcdFx0XHRhID0gW10sXG5cdFx0XHRcdGNudCA9IDAsXG5cdFx0XHRcdHBvaW50cyA9ICh2YXJzLnBvaW50cyB8fCAyMCkgfCAwLFxuXHRcdFx0XHRpID0gcG9pbnRzLFxuXHRcdFx0XHRyYW5kb21pemUgPSAodmFycy5yYW5kb21pemUgIT09IGZhbHNlKSxcblx0XHRcdFx0Y2xhbXAgPSAodmFycy5jbGFtcCA9PT0gdHJ1ZSksXG5cdFx0XHRcdHRlbXBsYXRlID0gKHZhcnMudGVtcGxhdGUgaW5zdGFuY2VvZiBFYXNlKSA/IHZhcnMudGVtcGxhdGUgOiBudWxsLFxuXHRcdFx0XHRzdHJlbmd0aCA9ICh0eXBlb2YodmFycy5zdHJlbmd0aCkgPT09IFwibnVtYmVyXCIpID8gdmFycy5zdHJlbmd0aCAqIDAuNCA6IDAuNCxcblx0XHRcdFx0eCwgeSwgYnVtcCwgaW52WCwgb2JqLCBwbnQ7XG5cdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0eCA9IHJhbmRvbWl6ZSA/IE1hdGgucmFuZG9tKCkgOiAoMSAvIHBvaW50cykgKiBpO1xuXHRcdFx0XHR5ID0gdGVtcGxhdGUgPyB0ZW1wbGF0ZS5nZXRSYXRpbyh4KSA6IHg7XG5cdFx0XHRcdGlmICh0YXBlciA9PT0gXCJub25lXCIpIHtcblx0XHRcdFx0XHRidW1wID0gc3RyZW5ndGg7XG5cdFx0XHRcdH0gZWxzZSBpZiAodGFwZXIgPT09IFwib3V0XCIpIHtcblx0XHRcdFx0XHRpbnZYID0gMSAtIHg7XG5cdFx0XHRcdFx0YnVtcCA9IGludlggKiBpbnZYICogc3RyZW5ndGg7XG5cdFx0XHRcdH0gZWxzZSBpZiAodGFwZXIgPT09IFwiaW5cIikge1xuXHRcdFx0XHRcdGJ1bXAgPSB4ICogeCAqIHN0cmVuZ3RoO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHggPCAwLjUpIHsgIC8vXCJib3RoXCIgKHN0YXJ0KVxuXHRcdFx0XHRcdGludlggPSB4ICogMjtcblx0XHRcdFx0XHRidW1wID0gaW52WCAqIGludlggKiAwLjUgKiBzdHJlbmd0aDtcblx0XHRcdFx0fSBlbHNlIHtcdFx0XHRcdC8vXCJib3RoXCIgKGVuZClcblx0XHRcdFx0XHRpbnZYID0gKDEgLSB4KSAqIDI7XG5cdFx0XHRcdFx0YnVtcCA9IGludlggKiBpbnZYICogMC41ICogc3RyZW5ndGg7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHJhbmRvbWl6ZSkge1xuXHRcdFx0XHRcdHkgKz0gKE1hdGgucmFuZG9tKCkgKiBidW1wKSAtIChidW1wICogMC41KTtcblx0XHRcdFx0fSBlbHNlIGlmIChpICUgMikge1xuXHRcdFx0XHRcdHkgKz0gYnVtcCAqIDAuNTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR5IC09IGJ1bXAgKiAwLjU7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGNsYW1wKSB7XG5cdFx0XHRcdFx0aWYgKHkgPiAxKSB7XG5cdFx0XHRcdFx0XHR5ID0gMTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHkgPCAwKSB7XG5cdFx0XHRcdFx0XHR5ID0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0YVtjbnQrK10gPSB7eDp4LCB5Onl9O1xuXHRcdFx0fVxuXHRcdFx0YS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdFx0cmV0dXJuIGEueCAtIGIueDtcblx0XHRcdH0pO1xuXG5cdFx0XHRwbnQgPSBuZXcgRWFzZVBvaW50KDEsIDEsIG51bGwpO1xuXHRcdFx0aSA9IHBvaW50cztcblx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRvYmogPSBhW2ldO1xuXHRcdFx0XHRwbnQgPSBuZXcgRWFzZVBvaW50KG9iai54LCBvYmoueSwgcG50KTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5fcHJldiA9IG5ldyBFYXNlUG9pbnQoMCwgMCwgKHBudC50ICE9PSAwKSA/IHBudCA6IHBudC5uZXh0KTtcblx0XHR9LCB0cnVlKTtcblx0XHRwID0gUm91Z2hFYXNlLnByb3RvdHlwZSA9IG5ldyBFYXNlKCk7XG5cdFx0cC5jb25zdHJ1Y3RvciA9IFJvdWdoRWFzZTtcblx0XHRwLmdldFJhdGlvID0gZnVuY3Rpb24ocCkge1xuXHRcdFx0dmFyIHBudCA9IHRoaXMuX3ByZXY7XG5cdFx0XHRpZiAocCA+IHBudC50KSB7XG5cdFx0XHRcdHdoaWxlIChwbnQubmV4dCAmJiBwID49IHBudC50KSB7XG5cdFx0XHRcdFx0cG50ID0gcG50Lm5leHQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0cG50ID0gcG50LnByZXY7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR3aGlsZSAocG50LnByZXYgJiYgcCA8PSBwbnQudCkge1xuXHRcdFx0XHRcdHBudCA9IHBudC5wcmV2O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHR0aGlzLl9wcmV2ID0gcG50O1xuXHRcdFx0cmV0dXJuIChwbnQudiArICgocCAtIHBudC50KSAvIHBudC5nYXApICogcG50LmMpO1xuXHRcdH07XG5cdFx0cC5jb25maWcgPSBmdW5jdGlvbih2YXJzKSB7XG5cdFx0XHRyZXR1cm4gbmV3IFJvdWdoRWFzZSh2YXJzKTtcblx0XHR9O1xuXHRcdFJvdWdoRWFzZS5lYXNlID0gbmV3IFJvdWdoRWFzZSgpO1xuXG5cblx0XHQvL0JvdW5jZVxuXHRcdF93cmFwKFwiQm91bmNlXCIsXG5cdFx0XHRfY3JlYXRlKFwiQm91bmNlT3V0XCIsIGZ1bmN0aW9uKHApIHtcblx0XHRcdFx0aWYgKHAgPCAxIC8gMi43NSkge1xuXHRcdFx0XHRcdHJldHVybiA3LjU2MjUgKiBwICogcDtcblx0XHRcdFx0fSBlbHNlIGlmIChwIDwgMiAvIDIuNzUpIHtcblx0XHRcdFx0XHRyZXR1cm4gNy41NjI1ICogKHAgLT0gMS41IC8gMi43NSkgKiBwICsgMC43NTtcblx0XHRcdFx0fSBlbHNlIGlmIChwIDwgMi41IC8gMi43NSkge1xuXHRcdFx0XHRcdHJldHVybiA3LjU2MjUgKiAocCAtPSAyLjI1IC8gMi43NSkgKiBwICsgMC45Mzc1O1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiA3LjU2MjUgKiAocCAtPSAyLjYyNSAvIDIuNzUpICogcCArIDAuOTg0Mzc1O1xuXHRcdFx0fSksXG5cdFx0XHRfY3JlYXRlKFwiQm91bmNlSW5cIiwgZnVuY3Rpb24ocCkge1xuXHRcdFx0XHRpZiAoKHAgPSAxIC0gcCkgPCAxIC8gMi43NSkge1xuXHRcdFx0XHRcdHJldHVybiAxIC0gKDcuNTYyNSAqIHAgKiBwKTtcblx0XHRcdFx0fSBlbHNlIGlmIChwIDwgMiAvIDIuNzUpIHtcblx0XHRcdFx0XHRyZXR1cm4gMSAtICg3LjU2MjUgKiAocCAtPSAxLjUgLyAyLjc1KSAqIHAgKyAwLjc1KTtcblx0XHRcdFx0fSBlbHNlIGlmIChwIDwgMi41IC8gMi43NSkge1xuXHRcdFx0XHRcdHJldHVybiAxIC0gKDcuNTYyNSAqIChwIC09IDIuMjUgLyAyLjc1KSAqIHAgKyAwLjkzNzUpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiAxIC0gKDcuNTYyNSAqIChwIC09IDIuNjI1IC8gMi43NSkgKiBwICsgMC45ODQzNzUpO1xuXHRcdFx0fSksXG5cdFx0XHRfY3JlYXRlKFwiQm91bmNlSW5PdXRcIiwgZnVuY3Rpb24ocCkge1xuXHRcdFx0XHR2YXIgaW52ZXJ0ID0gKHAgPCAwLjUpO1xuXHRcdFx0XHRpZiAoaW52ZXJ0KSB7XG5cdFx0XHRcdFx0cCA9IDEgLSAocCAqIDIpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHAgPSAocCAqIDIpIC0gMTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAocCA8IDEgLyAyLjc1KSB7XG5cdFx0XHRcdFx0cCA9IDcuNTYyNSAqIHAgKiBwO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHAgPCAyIC8gMi43NSkge1xuXHRcdFx0XHRcdHAgPSA3LjU2MjUgKiAocCAtPSAxLjUgLyAyLjc1KSAqIHAgKyAwLjc1O1xuXHRcdFx0XHR9IGVsc2UgaWYgKHAgPCAyLjUgLyAyLjc1KSB7XG5cdFx0XHRcdFx0cCA9IDcuNTYyNSAqIChwIC09IDIuMjUgLyAyLjc1KSAqIHAgKyAwLjkzNzU7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cCA9IDcuNTYyNSAqIChwIC09IDIuNjI1IC8gMi43NSkgKiBwICsgMC45ODQzNzU7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGludmVydCA/ICgxIC0gcCkgKiAwLjUgOiBwICogMC41ICsgMC41O1xuXHRcdFx0fSlcblx0XHQpO1xuXG5cblx0XHQvL0NJUkNcblx0XHRfd3JhcChcIkNpcmNcIixcblx0XHRcdF9jcmVhdGUoXCJDaXJjT3V0XCIsIGZ1bmN0aW9uKHApIHtcblx0XHRcdFx0cmV0dXJuIE1hdGguc3FydCgxIC0gKHAgPSBwIC0gMSkgKiBwKTtcblx0XHRcdH0pLFxuXHRcdFx0X2NyZWF0ZShcIkNpcmNJblwiLCBmdW5jdGlvbihwKSB7XG5cdFx0XHRcdHJldHVybiAtKE1hdGguc3FydCgxIC0gKHAgKiBwKSkgLSAxKTtcblx0XHRcdH0pLFxuXHRcdFx0X2NyZWF0ZShcIkNpcmNJbk91dFwiLCBmdW5jdGlvbihwKSB7XG5cdFx0XHRcdHJldHVybiAoKHAqPTIpIDwgMSkgPyAtMC41ICogKE1hdGguc3FydCgxIC0gcCAqIHApIC0gMSkgOiAwLjUgKiAoTWF0aC5zcXJ0KDEgLSAocCAtPSAyKSAqIHApICsgMSk7XG5cdFx0XHR9KVxuXHRcdCk7XG5cblxuXHRcdC8vRWxhc3RpY1xuXHRcdF9jcmVhdGVFbGFzdGljID0gZnVuY3Rpb24obiwgZiwgZGVmKSB7XG5cdFx0XHR2YXIgQyA9IF9jbGFzcyhcImVhc2luZy5cIiArIG4sIGZ1bmN0aW9uKGFtcGxpdHVkZSwgcGVyaW9kKSB7XG5cdFx0XHRcdFx0dGhpcy5fcDEgPSAoYW1wbGl0dWRlID49IDEpID8gYW1wbGl0dWRlIDogMTsgLy9ub3RlOiBpZiBhbXBsaXR1ZGUgaXMgPCAxLCB3ZSBzaW1wbHkgYWRqdXN0IHRoZSBwZXJpb2QgZm9yIGEgbW9yZSBuYXR1cmFsIGZlZWwuIE90aGVyd2lzZSB0aGUgbWF0aCBkb2Vzbid0IHdvcmsgcmlnaHQgYW5kIHRoZSBjdXJ2ZSBzdGFydHMgYXQgMS5cblx0XHRcdFx0XHR0aGlzLl9wMiA9IChwZXJpb2QgfHwgZGVmKSAvIChhbXBsaXR1ZGUgPCAxID8gYW1wbGl0dWRlIDogMSk7XG5cdFx0XHRcdFx0dGhpcy5fcDMgPSB0aGlzLl9wMiAvIF8yUEkgKiAoTWF0aC5hc2luKDEgLyB0aGlzLl9wMSkgfHwgMCk7XG5cdFx0XHRcdFx0dGhpcy5fcDIgPSBfMlBJIC8gdGhpcy5fcDI7IC8vcHJlY2FsY3VsYXRlIHRvIG9wdGltaXplXG5cdFx0XHRcdH0sIHRydWUpLFxuXHRcdFx0XHRwID0gQy5wcm90b3R5cGUgPSBuZXcgRWFzZSgpO1xuXHRcdFx0cC5jb25zdHJ1Y3RvciA9IEM7XG5cdFx0XHRwLmdldFJhdGlvID0gZjtcblx0XHRcdHAuY29uZmlnID0gZnVuY3Rpb24oYW1wbGl0dWRlLCBwZXJpb2QpIHtcblx0XHRcdFx0cmV0dXJuIG5ldyBDKGFtcGxpdHVkZSwgcGVyaW9kKTtcblx0XHRcdH07XG5cdFx0XHRyZXR1cm4gQztcblx0XHR9O1xuXHRcdF93cmFwKFwiRWxhc3RpY1wiLFxuXHRcdFx0X2NyZWF0ZUVsYXN0aWMoXCJFbGFzdGljT3V0XCIsIGZ1bmN0aW9uKHApIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX3AxICogTWF0aC5wb3coMiwgLTEwICogcCkgKiBNYXRoLnNpbiggKHAgLSB0aGlzLl9wMykgKiB0aGlzLl9wMiApICsgMTtcblx0XHRcdH0sIDAuMyksXG5cdFx0XHRfY3JlYXRlRWxhc3RpYyhcIkVsYXN0aWNJblwiLCBmdW5jdGlvbihwKSB7XG5cdFx0XHRcdHJldHVybiAtKHRoaXMuX3AxICogTWF0aC5wb3coMiwgMTAgKiAocCAtPSAxKSkgKiBNYXRoLnNpbiggKHAgLSB0aGlzLl9wMykgKiB0aGlzLl9wMiApKTtcblx0XHRcdH0sIDAuMyksXG5cdFx0XHRfY3JlYXRlRWxhc3RpYyhcIkVsYXN0aWNJbk91dFwiLCBmdW5jdGlvbihwKSB7XG5cdFx0XHRcdHJldHVybiAoKHAgKj0gMikgPCAxKSA/IC0wLjUgKiAodGhpcy5fcDEgKiBNYXRoLnBvdygyLCAxMCAqIChwIC09IDEpKSAqIE1hdGguc2luKCAocCAtIHRoaXMuX3AzKSAqIHRoaXMuX3AyKSkgOiB0aGlzLl9wMSAqIE1hdGgucG93KDIsIC0xMCAqKHAgLT0gMSkpICogTWF0aC5zaW4oIChwIC0gdGhpcy5fcDMpICogdGhpcy5fcDIgKSAqIDAuNSArIDE7XG5cdFx0XHR9LCAwLjQ1KVxuXHRcdCk7XG5cblxuXHRcdC8vRXhwb1xuXHRcdF93cmFwKFwiRXhwb1wiLFxuXHRcdFx0X2NyZWF0ZShcIkV4cG9PdXRcIiwgZnVuY3Rpb24ocCkge1xuXHRcdFx0XHRyZXR1cm4gMSAtIE1hdGgucG93KDIsIC0xMCAqIHApO1xuXHRcdFx0fSksXG5cdFx0XHRfY3JlYXRlKFwiRXhwb0luXCIsIGZ1bmN0aW9uKHApIHtcblx0XHRcdFx0cmV0dXJuIE1hdGgucG93KDIsIDEwICogKHAgLSAxKSkgLSAwLjAwMTtcblx0XHRcdH0pLFxuXHRcdFx0X2NyZWF0ZShcIkV4cG9Jbk91dFwiLCBmdW5jdGlvbihwKSB7XG5cdFx0XHRcdHJldHVybiAoKHAgKj0gMikgPCAxKSA/IDAuNSAqIE1hdGgucG93KDIsIDEwICogKHAgLSAxKSkgOiAwLjUgKiAoMiAtIE1hdGgucG93KDIsIC0xMCAqIChwIC0gMSkpKTtcblx0XHRcdH0pXG5cdFx0KTtcblxuXG5cdFx0Ly9TaW5lXG5cdFx0X3dyYXAoXCJTaW5lXCIsXG5cdFx0XHRfY3JlYXRlKFwiU2luZU91dFwiLCBmdW5jdGlvbihwKSB7XG5cdFx0XHRcdHJldHVybiBNYXRoLnNpbihwICogX0hBTEZfUEkpO1xuXHRcdFx0fSksXG5cdFx0XHRfY3JlYXRlKFwiU2luZUluXCIsIGZ1bmN0aW9uKHApIHtcblx0XHRcdFx0cmV0dXJuIC1NYXRoLmNvcyhwICogX0hBTEZfUEkpICsgMTtcblx0XHRcdH0pLFxuXHRcdFx0X2NyZWF0ZShcIlNpbmVJbk91dFwiLCBmdW5jdGlvbihwKSB7XG5cdFx0XHRcdHJldHVybiAtMC41ICogKE1hdGguY29zKE1hdGguUEkgKiBwKSAtIDEpO1xuXHRcdFx0fSlcblx0XHQpO1xuXG5cdFx0X2NsYXNzKFwiZWFzaW5nLkVhc2VMb29rdXBcIiwge1xuXHRcdFx0XHRmaW5kOmZ1bmN0aW9uKHMpIHtcblx0XHRcdFx0XHRyZXR1cm4gRWFzZS5tYXBbc107XG5cdFx0XHRcdH1cblx0XHRcdH0sIHRydWUpO1xuXG5cdFx0Ly9yZWdpc3RlciB0aGUgbm9uLXN0YW5kYXJkIGVhc2VzXG5cdFx0X2Vhc2VSZWcody5TbG93TW8sIFwiU2xvd01vXCIsIFwiZWFzZSxcIik7XG5cdFx0X2Vhc2VSZWcoUm91Z2hFYXNlLCBcIlJvdWdoRWFzZVwiLCBcImVhc2UsXCIpO1xuXHRcdF9lYXNlUmVnKFN0ZXBwZWRFYXNlLCBcIlN0ZXBwZWRFYXNlXCIsIFwiZWFzZSxcIik7XG5cblx0XHRyZXR1cm4gQmFjaztcblx0XHRcblx0fSwgdHJ1ZSk7XG5cblxufSk7XG5cbmlmIChfZ3NTY29wZS5fZ3NEZWZpbmUpIHsgX2dzU2NvcGUuX2dzUXVldWUucG9wKCkoKTsgfSAvL25lY2Vzc2FyeSBpbiBjYXNlIFR3ZWVuTGl0ZSB3YXMgYWxyZWFkeSBsb2FkZWQgc2VwYXJhdGVseS5cblxuXG5cblxuXG5cblxuXG5cblxuXG4vKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQmFzZSBjbGFzc2VzIGxpa2UgVHdlZW5MaXRlLCBTaW1wbGVUaW1lbGluZSwgRWFzZSwgVGlja2VyLCBldGMuXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cbihmdW5jdGlvbih3aW5kb3csIG1vZHVsZU5hbWUpIHtcblxuXHRcdFwidXNlIHN0cmljdFwiO1xuXHRcdHZhciBfZXhwb3J0cyA9IHt9LFxuXHRcdFx0X2dsb2JhbHMgPSB3aW5kb3cuR3JlZW5Tb2NrR2xvYmFscyA9IHdpbmRvdy5HcmVlblNvY2tHbG9iYWxzIHx8IHdpbmRvdztcblx0XHRpZiAoX2dsb2JhbHMuVHdlZW5MaXRlKSB7XG5cdFx0XHRyZXR1cm47IC8vaW4gY2FzZSB0aGUgY29yZSBzZXQgb2YgY2xhc3NlcyBpcyBhbHJlYWR5IGxvYWRlZCwgZG9uJ3QgaW5zdGFudGlhdGUgdHdpY2UuXG5cdFx0fVxuXHRcdHZhciBfbmFtZXNwYWNlID0gZnVuY3Rpb24obnMpIHtcblx0XHRcdFx0dmFyIGEgPSBucy5zcGxpdChcIi5cIiksXG5cdFx0XHRcdFx0cCA9IF9nbG9iYWxzLCBpO1xuXHRcdFx0XHRmb3IgKGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdHBbYVtpXV0gPSBwID0gcFthW2ldXSB8fCB7fTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gcDtcblx0XHRcdH0sXG5cdFx0XHRncyA9IF9uYW1lc3BhY2UoXCJjb20uZ3JlZW5zb2NrXCIpLFxuXHRcdFx0X3RpbnlOdW0gPSAwLjAwMDAwMDAwMDEsXG5cdFx0XHRfc2xpY2UgPSBmdW5jdGlvbihhKSB7IC8vZG9uJ3QgdXNlIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRhcmdldCwgMCkgYmVjYXVzZSB0aGF0IGRvZXNuJ3Qgd29yayBpbiBJRTggd2l0aCBhIE5vZGVMaXN0IHRoYXQncyByZXR1cm5lZCBieSBxdWVyeVNlbGVjdG9yQWxsKClcblx0XHRcdFx0dmFyIGIgPSBbXSxcblx0XHRcdFx0XHRsID0gYS5sZW5ndGgsXG5cdFx0XHRcdFx0aTtcblx0XHRcdFx0Zm9yIChpID0gMDsgaSAhPT0gbDsgYi5wdXNoKGFbaSsrXSkpIHt9XG5cdFx0XHRcdHJldHVybiBiO1xuXHRcdFx0fSxcblx0XHRcdF9lbXB0eUZ1bmMgPSBmdW5jdGlvbigpIHt9LFxuXHRcdFx0X2lzQXJyYXkgPSAoZnVuY3Rpb24oKSB7IC8vd29ya3MgYXJvdW5kIGlzc3VlcyBpbiBpZnJhbWUgZW52aXJvbm1lbnRzIHdoZXJlIHRoZSBBcnJheSBnbG9iYWwgaXNuJ3Qgc2hhcmVkLCB0aHVzIGlmIHRoZSBvYmplY3Qgb3JpZ2luYXRlcyBpbiBhIGRpZmZlcmVudCB3aW5kb3cvaWZyYW1lLCBcIihvYmogaW5zdGFuY2VvZiBBcnJheSlcIiB3aWxsIGV2YWx1YXRlIGZhbHNlLiBXZSBhZGRlZCBzb21lIHNwZWVkIG9wdGltaXphdGlvbnMgdG8gYXZvaWQgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKCkgdW5sZXNzIGl0J3MgYWJzb2x1dGVseSBuZWNlc3NhcnkgYmVjYXVzZSBpdCdzIFZFUlkgc2xvdyAobGlrZSAyMHggc2xvd2VyKVxuXHRcdFx0XHR2YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLFxuXHRcdFx0XHRcdGFycmF5ID0gdG9TdHJpbmcuY2FsbChbXSk7XG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbihvYmopIHtcblx0XHRcdFx0XHRyZXR1cm4gb2JqICE9IG51bGwgJiYgKG9iaiBpbnN0YW5jZW9mIEFycmF5IHx8ICh0eXBlb2Yob2JqKSA9PT0gXCJvYmplY3RcIiAmJiAhIW9iai5wdXNoICYmIHRvU3RyaW5nLmNhbGwob2JqKSA9PT0gYXJyYXkpKTtcblx0XHRcdFx0fTtcblx0XHRcdH0oKSksXG5cdFx0XHRhLCBpLCBwLCBfdGlja2VyLCBfdGlja2VyQWN0aXZlLFxuXHRcdFx0X2RlZkxvb2t1cCA9IHt9LFxuXG5cdFx0XHQvKipcblx0XHRcdCAqIEBjb25zdHJ1Y3RvclxuXHRcdFx0ICogRGVmaW5lcyBhIEdyZWVuU29jayBjbGFzcywgb3B0aW9uYWxseSB3aXRoIGFuIGFycmF5IG9mIGRlcGVuZGVuY2llcyB0aGF0IG11c3QgYmUgaW5zdGFudGlhdGVkIGZpcnN0IGFuZCBwYXNzZWQgaW50byB0aGUgZGVmaW5pdGlvbi5cblx0XHRcdCAqIFRoaXMgYWxsb3dzIHVzZXJzIHRvIGxvYWQgR3JlZW5Tb2NrIEpTIGZpbGVzIGluIGFueSBvcmRlciBldmVuIGlmIHRoZXkgaGF2ZSBpbnRlcmRlcGVuZGVuY2llcyAobGlrZSBDU1NQbHVnaW4gZXh0ZW5kcyBUd2VlblBsdWdpbiB3aGljaCBpc1xuXHRcdFx0ICogaW5zaWRlIFR3ZWVuTGl0ZS5qcywgYnV0IGlmIENTU1BsdWdpbiBpcyBsb2FkZWQgZmlyc3QsIGl0IHNob3VsZCB3YWl0IHRvIHJ1biBpdHMgY29kZSB1bnRpbCBUd2VlbkxpdGUuanMgbG9hZHMgYW5kIGluc3RhbnRpYXRlcyBUd2VlblBsdWdpblxuXHRcdFx0ICogYW5kIHRoZW4gcGFzcyBUd2VlblBsdWdpbiB0byBDU1NQbHVnaW4ncyBkZWZpbml0aW9uKS4gVGhpcyBpcyBhbGwgZG9uZSBhdXRvbWF0aWNhbGx5IGFuZCBpbnRlcm5hbGx5LlxuXHRcdFx0ICpcblx0XHRcdCAqIEV2ZXJ5IGRlZmluaXRpb24gd2lsbCBiZSBhZGRlZCB0byBhIFwiY29tLmdyZWVuc29ja1wiIGdsb2JhbCBvYmplY3QgKHR5cGljYWxseSB3aW5kb3csIGJ1dCBpZiBhIHdpbmRvdy5HcmVlblNvY2tHbG9iYWxzIG9iamVjdCBpcyBmb3VuZCxcblx0XHRcdCAqIGl0IHdpbGwgZ28gdGhlcmUgYXMgb2YgdjEuNykuIEZvciBleGFtcGxlLCBUd2VlbkxpdGUgd2lsbCBiZSBmb3VuZCBhdCB3aW5kb3cuY29tLmdyZWVuc29jay5Ud2VlbkxpdGUgYW5kIHNpbmNlIGl0J3MgYSBnbG9iYWwgY2xhc3MgdGhhdCBzaG91bGQgYmUgYXZhaWxhYmxlIGFueXdoZXJlLFxuXHRcdFx0ICogaXQgaXMgQUxTTyByZWZlcmVuY2VkIGF0IHdpbmRvdy5Ud2VlbkxpdGUuIEhvd2V2ZXIgc29tZSBjbGFzc2VzIGFyZW4ndCBjb25zaWRlcmVkIGdsb2JhbCwgbGlrZSB0aGUgYmFzZSBjb20uZ3JlZW5zb2NrLmNvcmUuQW5pbWF0aW9uIGNsYXNzLCBzb1xuXHRcdFx0ICogdGhvc2Ugd2lsbCBvbmx5IGJlIGF0IHRoZSBwYWNrYWdlIGxpa2Ugd2luZG93LmNvbS5ncmVlbnNvY2suY29yZS5BbmltYXRpb24uIEFnYWluLCBpZiB5b3UgZGVmaW5lIGEgR3JlZW5Tb2NrR2xvYmFscyBvYmplY3Qgb24gdGhlIHdpbmRvdywgZXZlcnl0aGluZ1xuXHRcdFx0ICogZ2V0cyB0dWNrZWQgbmVhdGx5IGluc2lkZSB0aGVyZSBpbnN0ZWFkIG9mIG9uIHRoZSB3aW5kb3cgZGlyZWN0bHkuIFRoaXMgYWxsb3dzIHlvdSB0byBkbyBhZHZhbmNlZCB0aGluZ3MgbGlrZSBsb2FkIG11bHRpcGxlIHZlcnNpb25zIG9mIEdyZWVuU29ja1xuXHRcdFx0ICogZmlsZXMgYW5kIHB1dCB0aGVtIGludG8gZGlzdGluY3Qgb2JqZWN0cyAoaW1hZ2luZSBhIGJhbm5lciBhZCB1c2VzIGEgbmV3ZXIgdmVyc2lvbiBidXQgdGhlIG1haW4gc2l0ZSB1c2VzIGFuIG9sZGVyIG9uZSkuIEluIHRoYXQgY2FzZSwgeW91IGNvdWxkXG5cdFx0XHQgKiBzYW5kYm94IHRoZSBiYW5uZXIgb25lIGxpa2U6XG5cdFx0XHQgKlxuXHRcdFx0ICogPHNjcmlwdD5cblx0XHRcdCAqICAgICB2YXIgZ3MgPSB3aW5kb3cuR3JlZW5Tb2NrR2xvYmFscyA9IHt9OyAvL3RoZSBuZXdlciB2ZXJzaW9uIHdlJ3JlIGFib3V0IHRvIGxvYWQgY291bGQgbm93IGJlIHJlZmVyZW5jZWQgaW4gYSBcImdzXCIgb2JqZWN0LCBsaWtlIGdzLlR3ZWVuTGl0ZS50byguLi4pLiBVc2Ugd2hhdGV2ZXIgYWxpYXMgeW91IHdhbnQgYXMgbG9uZyBhcyBpdCdzIHVuaXF1ZSwgXCJnc1wiIG9yIFwiYmFubmVyXCIgb3Igd2hhdGV2ZXIuXG5cdFx0XHQgKiA8L3NjcmlwdD5cblx0XHRcdCAqIDxzY3JpcHQgc3JjPVwianMvZ3JlZW5zb2NrL3YxLjcvVHdlZW5NYXguanNcIj48L3NjcmlwdD5cblx0XHRcdCAqIDxzY3JpcHQ+XG5cdFx0XHQgKiAgICAgd2luZG93LkdyZWVuU29ja0dsb2JhbHMgPSB3aW5kb3cuX2dzUXVldWUgPSB3aW5kb3cuX2dzRGVmaW5lID0gbnVsbDsgLy9yZXNldCBpdCBiYWNrIHRvIG51bGwgKGFsb25nIHdpdGggdGhlIHNwZWNpYWwgX2dzUXVldWUgdmFyaWFibGUpIHNvIHRoYXQgdGhlIG5leHQgbG9hZCBvZiBUd2Vlbk1heCBhZmZlY3RzIHRoZSB3aW5kb3cgYW5kIHdlIGNhbiByZWZlcmVuY2UgdGhpbmdzIGRpcmVjdGx5IGxpa2UgVHdlZW5MaXRlLnRvKC4uLilcblx0XHRcdCAqIDwvc2NyaXB0PlxuXHRcdFx0ICogPHNjcmlwdCBzcmM9XCJqcy9ncmVlbnNvY2svdjEuNi9Ud2Vlbk1heC5qc1wiPjwvc2NyaXB0PlxuXHRcdFx0ICogPHNjcmlwdD5cblx0XHRcdCAqICAgICBncy5Ud2VlbkxpdGUudG8oLi4uKTsgLy93b3VsZCB1c2UgdjEuN1xuXHRcdFx0ICogICAgIFR3ZWVuTGl0ZS50byguLi4pOyAvL3dvdWxkIHVzZSB2MS42XG5cdFx0XHQgKiA8L3NjcmlwdD5cblx0XHRcdCAqXG5cdFx0XHQgKiBAcGFyYW0geyFzdHJpbmd9IG5zIFRoZSBuYW1lc3BhY2Ugb2YgdGhlIGNsYXNzIGRlZmluaXRpb24sIGxlYXZpbmcgb2ZmIFwiY29tLmdyZWVuc29jay5cIiBhcyB0aGF0J3MgYXNzdW1lZC4gRm9yIGV4YW1wbGUsIFwiVHdlZW5MaXRlXCIgb3IgXCJwbHVnaW5zLkNTU1BsdWdpblwiIG9yIFwiZWFzaW5nLkJhY2tcIi5cblx0XHRcdCAqIEBwYXJhbSB7IUFycmF5LjxzdHJpbmc+fSBkZXBlbmRlbmNpZXMgQW4gYXJyYXkgb2YgZGVwZW5kZW5jaWVzIChkZXNjcmliZWQgYXMgdGhlaXIgbmFtZXNwYWNlcyBtaW51cyBcImNvbS5ncmVlbnNvY2suXCIgcHJlZml4KS4gRm9yIGV4YW1wbGUgW1wiVHdlZW5MaXRlXCIsXCJwbHVnaW5zLlR3ZWVuUGx1Z2luXCIsXCJjb3JlLkFuaW1hdGlvblwiXVxuXHRcdFx0ICogQHBhcmFtIHshZnVuY3Rpb24oKTpPYmplY3R9IGZ1bmMgVGhlIGZ1bmN0aW9uIHRoYXQgc2hvdWxkIGJlIGNhbGxlZCBhbmQgcGFzc2VkIHRoZSByZXNvbHZlZCBkZXBlbmRlbmNpZXMgd2hpY2ggd2lsbCByZXR1cm4gdGhlIGFjdHVhbCBjbGFzcyBmb3IgdGhpcyBkZWZpbml0aW9uLlxuXHRcdFx0ICogQHBhcmFtIHtib29sZWFuPX0gZ2xvYmFsIElmIHRydWUsIHRoZSBjbGFzcyB3aWxsIGJlIGFkZGVkIHRvIHRoZSBnbG9iYWwgc2NvcGUgKHR5cGljYWxseSB3aW5kb3cgdW5sZXNzIHlvdSBkZWZpbmUgYSB3aW5kb3cuR3JlZW5Tb2NrR2xvYmFscyBvYmplY3QpXG5cdFx0XHQgKi9cblx0XHRcdERlZmluaXRpb24gPSBmdW5jdGlvbihucywgZGVwZW5kZW5jaWVzLCBmdW5jLCBnbG9iYWwpIHtcblx0XHRcdFx0dGhpcy5zYyA9IChfZGVmTG9va3VwW25zXSkgPyBfZGVmTG9va3VwW25zXS5zYyA6IFtdOyAvL3N1YmNsYXNzZXNcblx0XHRcdFx0X2RlZkxvb2t1cFtuc10gPSB0aGlzO1xuXHRcdFx0XHR0aGlzLmdzQ2xhc3MgPSBudWxsO1xuXHRcdFx0XHR0aGlzLmZ1bmMgPSBmdW5jO1xuXHRcdFx0XHR2YXIgX2NsYXNzZXMgPSBbXTtcblx0XHRcdFx0dGhpcy5jaGVjayA9IGZ1bmN0aW9uKGluaXQpIHtcblx0XHRcdFx0XHR2YXIgaSA9IGRlcGVuZGVuY2llcy5sZW5ndGgsXG5cdFx0XHRcdFx0XHRtaXNzaW5nID0gaSxcblx0XHRcdFx0XHRcdGN1ciwgYSwgbiwgY2wsIGhhc01vZHVsZTtcblx0XHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRcdGlmICgoY3VyID0gX2RlZkxvb2t1cFtkZXBlbmRlbmNpZXNbaV1dIHx8IG5ldyBEZWZpbml0aW9uKGRlcGVuZGVuY2llc1tpXSwgW10pKS5nc0NsYXNzKSB7XG5cdFx0XHRcdFx0XHRcdF9jbGFzc2VzW2ldID0gY3VyLmdzQ2xhc3M7XG5cdFx0XHRcdFx0XHRcdG1pc3NpbmctLTtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoaW5pdCkge1xuXHRcdFx0XHRcdFx0XHRjdXIuc2MucHVzaCh0aGlzKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKG1pc3NpbmcgPT09IDAgJiYgZnVuYykge1xuXHRcdFx0XHRcdFx0YSA9IChcImNvbS5ncmVlbnNvY2suXCIgKyBucykuc3BsaXQoXCIuXCIpO1xuXHRcdFx0XHRcdFx0biA9IGEucG9wKCk7XG5cdFx0XHRcdFx0XHRjbCA9IF9uYW1lc3BhY2UoYS5qb2luKFwiLlwiKSlbbl0gPSB0aGlzLmdzQ2xhc3MgPSBmdW5jLmFwcGx5KGZ1bmMsIF9jbGFzc2VzKTtcblxuXHRcdFx0XHRcdFx0Ly9leHBvcnRzIHRvIG11bHRpcGxlIGVudmlyb25tZW50c1xuXHRcdFx0XHRcdFx0aWYgKGdsb2JhbCkge1xuXHRcdFx0XHRcdFx0XHRfZ2xvYmFsc1tuXSA9IF9leHBvcnRzW25dID0gY2w7IC8vcHJvdmlkZXMgYSB3YXkgdG8gYXZvaWQgZ2xvYmFsIG5hbWVzcGFjZSBwb2xsdXRpb24uIEJ5IGRlZmF1bHQsIHRoZSBtYWluIGNsYXNzZXMgbGlrZSBUd2VlbkxpdGUsIFBvd2VyMSwgU3Ryb25nLCBldGMuIGFyZSBhZGRlZCB0byB3aW5kb3cgdW5sZXNzIGEgR3JlZW5Tb2NrR2xvYmFscyBpcyBkZWZpbmVkLiBTbyBpZiB5b3Ugd2FudCB0byBoYXZlIHRoaW5ncyBhZGRlZCB0byBhIGN1c3RvbSBvYmplY3QgaW5zdGVhZCwganVzdCBkbyBzb21ldGhpbmcgbGlrZSB3aW5kb3cuR3JlZW5Tb2NrR2xvYmFscyA9IHt9IGJlZm9yZSBsb2FkaW5nIGFueSBHcmVlblNvY2sgZmlsZXMuIFlvdSBjYW4gZXZlbiBzZXQgdXAgYW4gYWxpYXMgbGlrZSB3aW5kb3cuR3JlZW5Tb2NrR2xvYmFscyA9IHdpbmRvd3MuZ3MgPSB7fSBzbyB0aGF0IHlvdSBjYW4gYWNjZXNzIGV2ZXJ5dGhpbmcgbGlrZSBncy5Ud2VlbkxpdGUuIEFsc28gcmVtZW1iZXIgdGhhdCBBTEwgY2xhc3NlcyBhcmUgYWRkZWQgdG8gdGhlIHdpbmRvdy5jb20uZ3JlZW5zb2NrIG9iamVjdCAoaW4gdGhlaXIgcmVzcGVjdGl2ZSBwYWNrYWdlcywgbGlrZSBjb20uZ3JlZW5zb2NrLmVhc2luZy5Qb3dlcjEsIGNvbS5ncmVlbnNvY2suVHdlZW5MaXRlLCBldGMuKVxuXHRcdFx0XHRcdFx0XHRoYXNNb2R1bGUgPSAodHlwZW9mKG1vZHVsZSkgIT09IFwidW5kZWZpbmVkXCIgJiYgbW9kdWxlLmV4cG9ydHMpO1xuXHRcdFx0XHRcdFx0XHRpZiAoIWhhc01vZHVsZSAmJiB0eXBlb2YoZGVmaW5lKSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpeyAvL0FNRFxuXHRcdFx0XHRcdFx0XHRcdGRlZmluZSgod2luZG93LkdyZWVuU29ja0FNRFBhdGggPyB3aW5kb3cuR3JlZW5Tb2NrQU1EUGF0aCArIFwiL1wiIDogXCJcIikgKyBucy5zcGxpdChcIi5cIikucG9wKCksIFtdLCBmdW5jdGlvbigpIHsgcmV0dXJuIGNsOyB9KTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmIChoYXNNb2R1bGUpeyAvL25vZGVcblx0XHRcdFx0XHRcdFx0XHRpZiAobnMgPT09IG1vZHVsZU5hbWUpIHtcblx0XHRcdFx0XHRcdFx0XHRcdG1vZHVsZS5leHBvcnRzID0gX2V4cG9ydHNbbW9kdWxlTmFtZV0gPSBjbDtcblx0XHRcdFx0XHRcdFx0XHRcdGZvciAoaSBpbiBfZXhwb3J0cykge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRjbFtpXSA9IF9leHBvcnRzW2ldO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoX2V4cG9ydHNbbW9kdWxlTmFtZV0pIHtcblx0XHRcdFx0XHRcdFx0XHRcdF9leHBvcnRzW21vZHVsZU5hbWVdW25dID0gY2w7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRmb3IgKGkgPSAwOyBpIDwgdGhpcy5zYy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdFx0XHR0aGlzLnNjW2ldLmNoZWNrKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0XHR0aGlzLmNoZWNrKHRydWUpO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly91c2VkIHRvIGNyZWF0ZSBEZWZpbml0aW9uIGluc3RhbmNlcyAod2hpY2ggYmFzaWNhbGx5IHJlZ2lzdGVycyBhIGNsYXNzIHRoYXQgaGFzIGRlcGVuZGVuY2llcykuXG5cdFx0XHRfZ3NEZWZpbmUgPSB3aW5kb3cuX2dzRGVmaW5lID0gZnVuY3Rpb24obnMsIGRlcGVuZGVuY2llcywgZnVuYywgZ2xvYmFsKSB7XG5cdFx0XHRcdHJldHVybiBuZXcgRGVmaW5pdGlvbihucywgZGVwZW5kZW5jaWVzLCBmdW5jLCBnbG9iYWwpO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly9hIHF1aWNrIHdheSB0byBjcmVhdGUgYSBjbGFzcyB0aGF0IGRvZXNuJ3QgaGF2ZSBhbnkgZGVwZW5kZW5jaWVzLiBSZXR1cm5zIHRoZSBjbGFzcywgYnV0IGZpcnN0IHJlZ2lzdGVycyBpdCBpbiB0aGUgR3JlZW5Tb2NrIG5hbWVzcGFjZSBzbyB0aGF0IG90aGVyIGNsYXNzZXMgY2FuIGdyYWIgaXQgKG90aGVyIGNsYXNzZXMgbWlnaHQgYmUgZGVwZW5kZW50IG9uIHRoZSBjbGFzcykuXG5cdFx0XHRfY2xhc3MgPSBncy5fY2xhc3MgPSBmdW5jdGlvbihucywgZnVuYywgZ2xvYmFsKSB7XG5cdFx0XHRcdGZ1bmMgPSBmdW5jIHx8IGZ1bmN0aW9uKCkge307XG5cdFx0XHRcdF9nc0RlZmluZShucywgW10sIGZ1bmN0aW9uKCl7IHJldHVybiBmdW5jOyB9LCBnbG9iYWwpO1xuXHRcdFx0XHRyZXR1cm4gZnVuYztcblx0XHRcdH07XG5cblx0XHRfZ3NEZWZpbmUuZ2xvYmFscyA9IF9nbG9iYWxzO1xuXG5cblxuLypcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEVhc2VcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXHRcdHZhciBfYmFzZVBhcmFtcyA9IFswLCAwLCAxLCAxXSxcblx0XHRcdF9ibGFua0FycmF5ID0gW10sXG5cdFx0XHRFYXNlID0gX2NsYXNzKFwiZWFzaW5nLkVhc2VcIiwgZnVuY3Rpb24oZnVuYywgZXh0cmFQYXJhbXMsIHR5cGUsIHBvd2VyKSB7XG5cdFx0XHRcdHRoaXMuX2Z1bmMgPSBmdW5jO1xuXHRcdFx0XHR0aGlzLl90eXBlID0gdHlwZSB8fCAwO1xuXHRcdFx0XHR0aGlzLl9wb3dlciA9IHBvd2VyIHx8IDA7XG5cdFx0XHRcdHRoaXMuX3BhcmFtcyA9IGV4dHJhUGFyYW1zID8gX2Jhc2VQYXJhbXMuY29uY2F0KGV4dHJhUGFyYW1zKSA6IF9iYXNlUGFyYW1zO1xuXHRcdFx0fSwgdHJ1ZSksXG5cdFx0XHRfZWFzZU1hcCA9IEVhc2UubWFwID0ge30sXG5cdFx0XHRfZWFzZVJlZyA9IEVhc2UucmVnaXN0ZXIgPSBmdW5jdGlvbihlYXNlLCBuYW1lcywgdHlwZXMsIGNyZWF0ZSkge1xuXHRcdFx0XHR2YXIgbmEgPSBuYW1lcy5zcGxpdChcIixcIiksXG5cdFx0XHRcdFx0aSA9IG5hLmxlbmd0aCxcblx0XHRcdFx0XHR0YSA9ICh0eXBlcyB8fCBcImVhc2VJbixlYXNlT3V0LGVhc2VJbk91dFwiKS5zcGxpdChcIixcIiksXG5cdFx0XHRcdFx0ZSwgbmFtZSwgaiwgdHlwZTtcblx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0bmFtZSA9IG5hW2ldO1xuXHRcdFx0XHRcdGUgPSBjcmVhdGUgPyBfY2xhc3MoXCJlYXNpbmcuXCIrbmFtZSwgbnVsbCwgdHJ1ZSkgOiBncy5lYXNpbmdbbmFtZV0gfHwge307XG5cdFx0XHRcdFx0aiA9IHRhLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoLS1qID4gLTEpIHtcblx0XHRcdFx0XHRcdHR5cGUgPSB0YVtqXTtcblx0XHRcdFx0XHRcdF9lYXNlTWFwW25hbWUgKyBcIi5cIiArIHR5cGVdID0gX2Vhc2VNYXBbdHlwZSArIG5hbWVdID0gZVt0eXBlXSA9IGVhc2UuZ2V0UmF0aW8gPyBlYXNlIDogZWFzZVt0eXBlXSB8fCBuZXcgZWFzZSgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdHAgPSBFYXNlLnByb3RvdHlwZTtcblx0XHRwLl9jYWxjRW5kID0gZmFsc2U7XG5cdFx0cC5nZXRSYXRpbyA9IGZ1bmN0aW9uKHApIHtcblx0XHRcdGlmICh0aGlzLl9mdW5jKSB7XG5cdFx0XHRcdHRoaXMuX3BhcmFtc1swXSA9IHA7XG5cdFx0XHRcdHJldHVybiB0aGlzLl9mdW5jLmFwcGx5KG51bGwsIHRoaXMuX3BhcmFtcyk7XG5cdFx0XHR9XG5cdFx0XHR2YXIgdCA9IHRoaXMuX3R5cGUsXG5cdFx0XHRcdHB3ID0gdGhpcy5fcG93ZXIsXG5cdFx0XHRcdHIgPSAodCA9PT0gMSkgPyAxIC0gcCA6ICh0ID09PSAyKSA/IHAgOiAocCA8IDAuNSkgPyBwICogMiA6ICgxIC0gcCkgKiAyO1xuXHRcdFx0aWYgKHB3ID09PSAxKSB7XG5cdFx0XHRcdHIgKj0gcjtcblx0XHRcdH0gZWxzZSBpZiAocHcgPT09IDIpIHtcblx0XHRcdFx0ciAqPSByICogcjtcblx0XHRcdH0gZWxzZSBpZiAocHcgPT09IDMpIHtcblx0XHRcdFx0ciAqPSByICogciAqIHI7XG5cdFx0XHR9IGVsc2UgaWYgKHB3ID09PSA0KSB7XG5cdFx0XHRcdHIgKj0gciAqIHIgKiByICogcjtcblx0XHRcdH1cblx0XHRcdHJldHVybiAodCA9PT0gMSkgPyAxIC0gciA6ICh0ID09PSAyKSA/IHIgOiAocCA8IDAuNSkgPyByIC8gMiA6IDEgLSAociAvIDIpO1xuXHRcdH07XG5cblx0XHQvL2NyZWF0ZSBhbGwgdGhlIHN0YW5kYXJkIGVhc2VzIGxpa2UgTGluZWFyLCBRdWFkLCBDdWJpYywgUXVhcnQsIFF1aW50LCBTdHJvbmcsIFBvd2VyMCwgUG93ZXIxLCBQb3dlcjIsIFBvd2VyMywgYW5kIFBvd2VyNCAoZWFjaCB3aXRoIGVhc2VJbiwgZWFzZU91dCwgYW5kIGVhc2VJbk91dClcblx0XHRhID0gW1wiTGluZWFyXCIsXCJRdWFkXCIsXCJDdWJpY1wiLFwiUXVhcnRcIixcIlF1aW50LFN0cm9uZ1wiXTtcblx0XHRpID0gYS5sZW5ndGg7XG5cdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRwID0gYVtpXStcIixQb3dlclwiK2k7XG5cdFx0XHRfZWFzZVJlZyhuZXcgRWFzZShudWxsLG51bGwsMSxpKSwgcCwgXCJlYXNlT3V0XCIsIHRydWUpO1xuXHRcdFx0X2Vhc2VSZWcobmV3IEVhc2UobnVsbCxudWxsLDIsaSksIHAsIFwiZWFzZUluXCIgKyAoKGkgPT09IDApID8gXCIsZWFzZU5vbmVcIiA6IFwiXCIpKTtcblx0XHRcdF9lYXNlUmVnKG5ldyBFYXNlKG51bGwsbnVsbCwzLGkpLCBwLCBcImVhc2VJbk91dFwiKTtcblx0XHR9XG5cdFx0X2Vhc2VNYXAubGluZWFyID0gZ3MuZWFzaW5nLkxpbmVhci5lYXNlSW47XG5cdFx0X2Vhc2VNYXAuc3dpbmcgPSBncy5lYXNpbmcuUXVhZC5lYXNlSW5PdXQ7IC8vZm9yIGpRdWVyeSBmb2xrc1xuXG5cbi8qXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBFdmVudERpc3BhdGNoZXJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXHRcdHZhciBFdmVudERpc3BhdGNoZXIgPSBfY2xhc3MoXCJldmVudHMuRXZlbnREaXNwYXRjaGVyXCIsIGZ1bmN0aW9uKHRhcmdldCkge1xuXHRcdFx0dGhpcy5fbGlzdGVuZXJzID0ge307XG5cdFx0XHR0aGlzLl9ldmVudFRhcmdldCA9IHRhcmdldCB8fCB0aGlzO1xuXHRcdH0pO1xuXHRcdHAgPSBFdmVudERpc3BhdGNoZXIucHJvdG90eXBlO1xuXG5cdFx0cC5hZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24odHlwZSwgY2FsbGJhY2ssIHNjb3BlLCB1c2VQYXJhbSwgcHJpb3JpdHkpIHtcblx0XHRcdHByaW9yaXR5ID0gcHJpb3JpdHkgfHwgMDtcblx0XHRcdHZhciBsaXN0ID0gdGhpcy5fbGlzdGVuZXJzW3R5cGVdLFxuXHRcdFx0XHRpbmRleCA9IDAsXG5cdFx0XHRcdGxpc3RlbmVyLCBpO1xuXHRcdFx0aWYgKHRoaXMgPT09IF90aWNrZXIgJiYgIV90aWNrZXJBY3RpdmUpIHtcblx0XHRcdFx0X3RpY2tlci53YWtlKCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAobGlzdCA9PSBudWxsKSB7XG5cdFx0XHRcdHRoaXMuX2xpc3RlbmVyc1t0eXBlXSA9IGxpc3QgPSBbXTtcblx0XHRcdH1cblx0XHRcdGkgPSBsaXN0Lmxlbmd0aDtcblx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRsaXN0ZW5lciA9IGxpc3RbaV07XG5cdFx0XHRcdGlmIChsaXN0ZW5lci5jID09PSBjYWxsYmFjayAmJiBsaXN0ZW5lci5zID09PSBzY29wZSkge1xuXHRcdFx0XHRcdGxpc3Quc3BsaWNlKGksIDEpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGluZGV4ID09PSAwICYmIGxpc3RlbmVyLnByIDwgcHJpb3JpdHkpIHtcblx0XHRcdFx0XHRpbmRleCA9IGkgKyAxO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRsaXN0LnNwbGljZShpbmRleCwgMCwge2M6Y2FsbGJhY2ssIHM6c2NvcGUsIHVwOnVzZVBhcmFtLCBwcjpwcmlvcml0eX0pO1xuXHRcdH07XG5cblx0XHRwLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbih0eXBlLCBjYWxsYmFjaykge1xuXHRcdFx0dmFyIGxpc3QgPSB0aGlzLl9saXN0ZW5lcnNbdHlwZV0sIGk7XG5cdFx0XHRpZiAobGlzdCkge1xuXHRcdFx0XHRpID0gbGlzdC5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdGlmIChsaXN0W2ldLmMgPT09IGNhbGxiYWNrKSB7XG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZShpLCAxKTtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0cC5kaXNwYXRjaEV2ZW50ID0gZnVuY3Rpb24odHlwZSkge1xuXHRcdFx0dmFyIGxpc3QgPSB0aGlzLl9saXN0ZW5lcnNbdHlwZV0sXG5cdFx0XHRcdGksIHQsIGxpc3RlbmVyO1xuXHRcdFx0aWYgKGxpc3QpIHtcblx0XHRcdFx0aSA9IGxpc3QubGVuZ3RoO1xuXHRcdFx0XHRpZiAoaSA+IDEpIHtcblx0XHRcdFx0XHRsaXN0ID0gbGlzdC5zbGljZSgwKTsgLy9pbiBjYXNlIGFkZEV2ZW50TGlzdGVuZXIoKSBpcyBjYWxsZWQgZnJvbSB3aXRoaW4gYSBsaXN0ZW5lci9jYWxsYmFjayAob3RoZXJ3aXNlIHRoZSBpbmRleCBjb3VsZCBjaGFuZ2UsIHJlc3VsdGluZyBpbiBhIHNraXApXG5cdFx0XHRcdH1cblx0XHRcdFx0dCA9IHRoaXMuX2V2ZW50VGFyZ2V0O1xuXHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRsaXN0ZW5lciA9IGxpc3RbaV07XG5cdFx0XHRcdFx0aWYgKGxpc3RlbmVyKSB7XG5cdFx0XHRcdFx0XHRpZiAobGlzdGVuZXIudXApIHtcblx0XHRcdFx0XHRcdFx0bGlzdGVuZXIuYy5jYWxsKGxpc3RlbmVyLnMgfHwgdCwge3R5cGU6dHlwZSwgdGFyZ2V0OnR9KTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGxpc3RlbmVyLmMuY2FsbChsaXN0ZW5lci5zIHx8IHQpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cblxuLypcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIFRpY2tlclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG4gXHRcdHZhciBfcmVxQW5pbUZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSxcblx0XHRcdF9jYW5jZWxBbmltRnJhbWUgPSB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUsXG5cdFx0XHRfZ2V0VGltZSA9IERhdGUubm93IHx8IGZ1bmN0aW9uKCkge3JldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTt9LFxuXHRcdFx0X2xhc3RVcGRhdGUgPSBfZ2V0VGltZSgpO1xuXG5cdFx0Ly9ub3cgdHJ5IHRvIGRldGVybWluZSB0aGUgcmVxdWVzdEFuaW1hdGlvbkZyYW1lIGFuZCBjYW5jZWxBbmltYXRpb25GcmFtZSBmdW5jdGlvbnMgYW5kIGlmIG5vbmUgYXJlIGZvdW5kLCB3ZSdsbCB1c2UgYSBzZXRUaW1lb3V0KCkvY2xlYXJUaW1lb3V0KCkgcG9seWZpbGwuXG5cdFx0YSA9IFtcIm1zXCIsXCJtb3pcIixcIndlYmtpdFwiLFwib1wiXTtcblx0XHRpID0gYS5sZW5ndGg7XG5cdFx0d2hpbGUgKC0taSA+IC0xICYmICFfcmVxQW5pbUZyYW1lKSB7XG5cdFx0XHRfcmVxQW5pbUZyYW1lID0gd2luZG93W2FbaV0gKyBcIlJlcXVlc3RBbmltYXRpb25GcmFtZVwiXTtcblx0XHRcdF9jYW5jZWxBbmltRnJhbWUgPSB3aW5kb3dbYVtpXSArIFwiQ2FuY2VsQW5pbWF0aW9uRnJhbWVcIl0gfHwgd2luZG93W2FbaV0gKyBcIkNhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZVwiXTtcblx0XHR9XG5cblx0XHRfY2xhc3MoXCJUaWNrZXJcIiwgZnVuY3Rpb24oZnBzLCB1c2VSQUYpIHtcblx0XHRcdHZhciBfc2VsZiA9IHRoaXMsXG5cdFx0XHRcdF9zdGFydFRpbWUgPSBfZ2V0VGltZSgpLFxuXHRcdFx0XHRfdXNlUkFGID0gKHVzZVJBRiAhPT0gZmFsc2UgJiYgX3JlcUFuaW1GcmFtZSkgPyBcImF1dG9cIiA6IGZhbHNlLFxuXHRcdFx0XHRfbGFnVGhyZXNob2xkID0gNTAwLFxuXHRcdFx0XHRfYWRqdXN0ZWRMYWcgPSAzMyxcblx0XHRcdFx0X3RpY2tXb3JkID0gXCJ0aWNrXCIsIC8vaGVscHMgcmVkdWNlIGdjIGJ1cmRlblxuXHRcdFx0XHRfZnBzLCBfcmVxLCBfaWQsIF9nYXAsIF9uZXh0VGltZSxcblx0XHRcdFx0X3RpY2sgPSBmdW5jdGlvbihtYW51YWwpIHtcblx0XHRcdFx0XHR2YXIgZWxhcHNlZCA9IF9nZXRUaW1lKCkgLSBfbGFzdFVwZGF0ZSxcblx0XHRcdFx0XHRcdG92ZXJsYXAsIGRpc3BhdGNoO1xuXHRcdFx0XHRcdGlmIChlbGFwc2VkID4gX2xhZ1RocmVzaG9sZCkge1xuXHRcdFx0XHRcdFx0X3N0YXJ0VGltZSArPSBlbGFwc2VkIC0gX2FkanVzdGVkTGFnO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRfbGFzdFVwZGF0ZSArPSBlbGFwc2VkO1xuXHRcdFx0XHRcdF9zZWxmLnRpbWUgPSAoX2xhc3RVcGRhdGUgLSBfc3RhcnRUaW1lKSAvIDEwMDA7XG5cdFx0XHRcdFx0b3ZlcmxhcCA9IF9zZWxmLnRpbWUgLSBfbmV4dFRpbWU7XG5cdFx0XHRcdFx0aWYgKCFfZnBzIHx8IG92ZXJsYXAgPiAwIHx8IG1hbnVhbCA9PT0gdHJ1ZSkge1xuXHRcdFx0XHRcdFx0X3NlbGYuZnJhbWUrKztcblx0XHRcdFx0XHRcdF9uZXh0VGltZSArPSBvdmVybGFwICsgKG92ZXJsYXAgPj0gX2dhcCA/IDAuMDA0IDogX2dhcCAtIG92ZXJsYXApO1xuXHRcdFx0XHRcdFx0ZGlzcGF0Y2ggPSB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAobWFudWFsICE9PSB0cnVlKSB7IC8vbWFrZSBzdXJlIHRoZSByZXF1ZXN0IGlzIG1hZGUgYmVmb3JlIHdlIGRpc3BhdGNoIHRoZSBcInRpY2tcIiBldmVudCBzbyB0aGF0IHRpbWluZyBpcyBtYWludGFpbmVkLiBPdGhlcndpc2UsIGlmIHByb2Nlc3NpbmcgdGhlIFwidGlja1wiIHJlcXVpcmVzIGEgYnVuY2ggb2YgdGltZSAobGlrZSAxNW1zKSBhbmQgd2UncmUgdXNpbmcgYSBzZXRUaW1lb3V0KCkgdGhhdCdzIGJhc2VkIG9uIDE2LjdtcywgaXQnZCB0ZWNobmljYWxseSB0YWtlIDMxLjdtcyBiZXR3ZWVuIGZyYW1lcyBvdGhlcndpc2UuXG5cdFx0XHRcdFx0XHRfaWQgPSBfcmVxKF90aWNrKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGRpc3BhdGNoKSB7XG5cdFx0XHRcdFx0XHRfc2VsZi5kaXNwYXRjaEV2ZW50KF90aWNrV29yZCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXG5cdFx0XHRFdmVudERpc3BhdGNoZXIuY2FsbChfc2VsZik7XG5cdFx0XHRfc2VsZi50aW1lID0gX3NlbGYuZnJhbWUgPSAwO1xuXHRcdFx0X3NlbGYudGljayA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRfdGljayh0cnVlKTtcblx0XHRcdH07XG5cblx0XHRcdF9zZWxmLmxhZ1Ntb290aGluZyA9IGZ1bmN0aW9uKHRocmVzaG9sZCwgYWRqdXN0ZWRMYWcpIHtcblx0XHRcdFx0X2xhZ1RocmVzaG9sZCA9IHRocmVzaG9sZCB8fCAoMSAvIF90aW55TnVtKTsgLy96ZXJvIHNob3VsZCBiZSBpbnRlcnByZXRlZCBhcyBiYXNpY2FsbHkgdW5saW1pdGVkXG5cdFx0XHRcdF9hZGp1c3RlZExhZyA9IE1hdGgubWluKGFkanVzdGVkTGFnLCBfbGFnVGhyZXNob2xkLCAwKTtcblx0XHRcdH07XG5cblx0XHRcdF9zZWxmLnNsZWVwID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmIChfaWQgPT0gbnVsbCkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIV91c2VSQUYgfHwgIV9jYW5jZWxBbmltRnJhbWUpIHtcblx0XHRcdFx0XHRjbGVhclRpbWVvdXQoX2lkKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRfY2FuY2VsQW5pbUZyYW1lKF9pZCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0X3JlcSA9IF9lbXB0eUZ1bmM7XG5cdFx0XHRcdF9pZCA9IG51bGw7XG5cdFx0XHRcdGlmIChfc2VsZiA9PT0gX3RpY2tlcikge1xuXHRcdFx0XHRcdF90aWNrZXJBY3RpdmUgPSBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0X3NlbGYud2FrZSA9IGZ1bmN0aW9uKHNlYW1sZXNzKSB7XG5cdFx0XHRcdGlmIChfaWQgIT09IG51bGwpIHtcblx0XHRcdFx0XHRfc2VsZi5zbGVlcCgpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHNlYW1sZXNzKSB7XG5cdFx0XHRcdFx0X3N0YXJ0VGltZSArPSAtX2xhc3RVcGRhdGUgKyAoX2xhc3RVcGRhdGUgPSBfZ2V0VGltZSgpKTtcblx0XHRcdFx0fSBlbHNlIGlmIChfc2VsZi5mcmFtZSA+IDEwKSB7IC8vZG9uJ3QgdHJpZ2dlciBsYWdTbW9vdGhpbmcgaWYgd2UncmUganVzdCB3YWtpbmcgdXAsIGFuZCBtYWtlIHN1cmUgdGhhdCBhdCBsZWFzdCAxMCBmcmFtZXMgaGF2ZSBlbGFwc2VkIGJlY2F1c2Ugb2YgdGhlIGlPUyBidWcgdGhhdCB3ZSB3b3JrIGFyb3VuZCBiZWxvdyB3aXRoIHRoZSAxLjUtc2Vjb25kIHNldFRpbW91dCgpLlxuXHRcdFx0XHRcdF9sYXN0VXBkYXRlID0gX2dldFRpbWUoKSAtIF9sYWdUaHJlc2hvbGQgKyA1O1xuXHRcdFx0XHR9XG5cdFx0XHRcdF9yZXEgPSAoX2ZwcyA9PT0gMCkgPyBfZW1wdHlGdW5jIDogKCFfdXNlUkFGIHx8ICFfcmVxQW5pbUZyYW1lKSA/IGZ1bmN0aW9uKGYpIHsgcmV0dXJuIHNldFRpbWVvdXQoZiwgKChfbmV4dFRpbWUgLSBfc2VsZi50aW1lKSAqIDEwMDAgKyAxKSB8IDApOyB9IDogX3JlcUFuaW1GcmFtZTtcblx0XHRcdFx0aWYgKF9zZWxmID09PSBfdGlja2VyKSB7XG5cdFx0XHRcdFx0X3RpY2tlckFjdGl2ZSA9IHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdFx0X3RpY2soMik7XG5cdFx0XHR9O1xuXG5cdFx0XHRfc2VsZi5mcHMgPSBmdW5jdGlvbih2YWx1ZSkge1xuXHRcdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0XHRyZXR1cm4gX2Zwcztcblx0XHRcdFx0fVxuXHRcdFx0XHRfZnBzID0gdmFsdWU7XG5cdFx0XHRcdF9nYXAgPSAxIC8gKF9mcHMgfHwgNjApO1xuXHRcdFx0XHRfbmV4dFRpbWUgPSB0aGlzLnRpbWUgKyBfZ2FwO1xuXHRcdFx0XHRfc2VsZi53YWtlKCk7XG5cdFx0XHR9O1xuXG5cdFx0XHRfc2VsZi51c2VSQUYgPSBmdW5jdGlvbih2YWx1ZSkge1xuXHRcdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0XHRyZXR1cm4gX3VzZVJBRjtcblx0XHRcdFx0fVxuXHRcdFx0XHRfc2VsZi5zbGVlcCgpO1xuXHRcdFx0XHRfdXNlUkFGID0gdmFsdWU7XG5cdFx0XHRcdF9zZWxmLmZwcyhfZnBzKTtcblx0XHRcdH07XG5cdFx0XHRfc2VsZi5mcHMoZnBzKTtcblxuXHRcdFx0Ly9hIGJ1ZyBpbiBpT1MgNiBTYWZhcmkgb2NjYXNpb25hbGx5IHByZXZlbnRzIHRoZSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgZnJvbSB3b3JraW5nIGluaXRpYWxseSwgc28gd2UgdXNlIGEgMS41LXNlY29uZCB0aW1lb3V0IHRoYXQgYXV0b21hdGljYWxseSBmYWxscyBiYWNrIHRvIHNldFRpbWVvdXQoKSBpZiBpdCBzZW5zZXMgdGhpcyBjb25kaXRpb24uXG5cdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoX3VzZVJBRiA9PT0gXCJhdXRvXCIgJiYgX3NlbGYuZnJhbWUgPCA1ICYmIGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSAhPT0gXCJoaWRkZW5cIikge1xuXHRcdFx0XHRcdF9zZWxmLnVzZVJBRihmYWxzZSk7XG5cdFx0XHRcdH1cblx0XHRcdH0sIDE1MDApO1xuXHRcdH0pO1xuXG5cdFx0cCA9IGdzLlRpY2tlci5wcm90b3R5cGUgPSBuZXcgZ3MuZXZlbnRzLkV2ZW50RGlzcGF0Y2hlcigpO1xuXHRcdHAuY29uc3RydWN0b3IgPSBncy5UaWNrZXI7XG5cblxuLypcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEFuaW1hdGlvblxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cdFx0dmFyIEFuaW1hdGlvbiA9IF9jbGFzcyhcImNvcmUuQW5pbWF0aW9uXCIsIGZ1bmN0aW9uKGR1cmF0aW9uLCB2YXJzKSB7XG5cdFx0XHRcdHRoaXMudmFycyA9IHZhcnMgPSB2YXJzIHx8IHt9O1xuXHRcdFx0XHR0aGlzLl9kdXJhdGlvbiA9IHRoaXMuX3RvdGFsRHVyYXRpb24gPSBkdXJhdGlvbiB8fCAwO1xuXHRcdFx0XHR0aGlzLl9kZWxheSA9IE51bWJlcih2YXJzLmRlbGF5KSB8fCAwO1xuXHRcdFx0XHR0aGlzLl90aW1lU2NhbGUgPSAxO1xuXHRcdFx0XHR0aGlzLl9hY3RpdmUgPSAodmFycy5pbW1lZGlhdGVSZW5kZXIgPT09IHRydWUpO1xuXHRcdFx0XHR0aGlzLmRhdGEgPSB2YXJzLmRhdGE7XG5cdFx0XHRcdHRoaXMuX3JldmVyc2VkID0gKHZhcnMucmV2ZXJzZWQgPT09IHRydWUpO1xuXG5cdFx0XHRcdGlmICghX3Jvb3RUaW1lbGluZSkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIV90aWNrZXJBY3RpdmUpIHsgLy9zb21lIGJyb3dzZXJzIChsaWtlIGlPUyA2IFNhZmFyaSkgc2h1dCBkb3duIEphdmFTY3JpcHQgZXhlY3V0aW9uIHdoZW4gdGhlIHRhYiBpcyBkaXNhYmxlZCBhbmQgdGhleSBbb2NjYXNpb25hbGx5XSBuZWdsZWN0IHRvIHN0YXJ0IHVwIHJlcXVlc3RBbmltYXRpb25GcmFtZSBhZ2FpbiB3aGVuIHJldHVybmluZyAtIHRoaXMgY29kZSBlbnN1cmVzIHRoYXQgdGhlIGVuZ2luZSBzdGFydHMgdXAgYWdhaW4gcHJvcGVybHkuXG5cdFx0XHRcdFx0X3RpY2tlci53YWtlKCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR2YXIgdGwgPSB0aGlzLnZhcnMudXNlRnJhbWVzID8gX3Jvb3RGcmFtZXNUaW1lbGluZSA6IF9yb290VGltZWxpbmU7XG5cdFx0XHRcdHRsLmFkZCh0aGlzLCB0bC5fdGltZSk7XG5cblx0XHRcdFx0aWYgKHRoaXMudmFycy5wYXVzZWQpIHtcblx0XHRcdFx0XHR0aGlzLnBhdXNlZCh0cnVlKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRfdGlja2VyID0gQW5pbWF0aW9uLnRpY2tlciA9IG5ldyBncy5UaWNrZXIoKTtcblx0XHRwID0gQW5pbWF0aW9uLnByb3RvdHlwZTtcblx0XHRwLl9kaXJ0eSA9IHAuX2djID0gcC5faW5pdHRlZCA9IHAuX3BhdXNlZCA9IGZhbHNlO1xuXHRcdHAuX3RvdGFsVGltZSA9IHAuX3RpbWUgPSAwO1xuXHRcdHAuX3Jhd1ByZXZUaW1lID0gLTE7XG5cdFx0cC5fbmV4dCA9IHAuX2xhc3QgPSBwLl9vblVwZGF0ZSA9IHAuX3RpbWVsaW5lID0gcC50aW1lbGluZSA9IG51bGw7XG5cdFx0cC5fcGF1c2VkID0gZmFsc2U7XG5cblxuXHRcdC8vc29tZSBicm93c2VycyAobGlrZSBpT1MpIG9jY2FzaW9uYWxseSBkcm9wIHRoZSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgZXZlbnQgd2hlbiB0aGUgdXNlciBzd2l0Y2hlcyB0byBhIGRpZmZlcmVudCB0YWIgYW5kIHRoZW4gY29tZXMgYmFjayBhZ2Fpbiwgc28gd2UgdXNlIGEgMi1zZWNvbmQgc2V0VGltZW91dCgpIHRvIHNlbnNlIGlmL3doZW4gdGhhdCBjb25kaXRpb24gb2NjdXJzIGFuZCB0aGVuIHdha2UoKSB0aGUgdGlja2VyLlxuXHRcdHZhciBfY2hlY2tUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmIChfdGlja2VyQWN0aXZlICYmIF9nZXRUaW1lKCkgLSBfbGFzdFVwZGF0ZSA+IDIwMDApIHtcblx0XHRcdFx0XHRfdGlja2VyLndha2UoKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRzZXRUaW1lb3V0KF9jaGVja1RpbWVvdXQsIDIwMDApO1xuXHRcdFx0fTtcblx0XHRfY2hlY2tUaW1lb3V0KCk7XG5cblxuXHRcdHAucGxheSA9IGZ1bmN0aW9uKGZyb20sIHN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRpZiAoZnJvbSAhPSBudWxsKSB7XG5cdFx0XHRcdHRoaXMuc2Vlayhmcm9tLCBzdXBwcmVzc0V2ZW50cyk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy5yZXZlcnNlZChmYWxzZSkucGF1c2VkKGZhbHNlKTtcblx0XHR9O1xuXG5cdFx0cC5wYXVzZSA9IGZ1bmN0aW9uKGF0VGltZSwgc3VwcHJlc3NFdmVudHMpIHtcblx0XHRcdGlmIChhdFRpbWUgIT0gbnVsbCkge1xuXHRcdFx0XHR0aGlzLnNlZWsoYXRUaW1lLCBzdXBwcmVzc0V2ZW50cyk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy5wYXVzZWQodHJ1ZSk7XG5cdFx0fTtcblxuXHRcdHAucmVzdW1lID0gZnVuY3Rpb24oZnJvbSwgc3VwcHJlc3NFdmVudHMpIHtcblx0XHRcdGlmIChmcm9tICE9IG51bGwpIHtcblx0XHRcdFx0dGhpcy5zZWVrKGZyb20sIHN1cHByZXNzRXZlbnRzKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzLnBhdXNlZChmYWxzZSk7XG5cdFx0fTtcblxuXHRcdHAuc2VlayA9IGZ1bmN0aW9uKHRpbWUsIHN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy50b3RhbFRpbWUoTnVtYmVyKHRpbWUpLCBzdXBwcmVzc0V2ZW50cyAhPT0gZmFsc2UpO1xuXHRcdH07XG5cblx0XHRwLnJlc3RhcnQgPSBmdW5jdGlvbihpbmNsdWRlRGVsYXksIHN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5yZXZlcnNlZChmYWxzZSkucGF1c2VkKGZhbHNlKS50b3RhbFRpbWUoaW5jbHVkZURlbGF5ID8gLXRoaXMuX2RlbGF5IDogMCwgKHN1cHByZXNzRXZlbnRzICE9PSBmYWxzZSksIHRydWUpO1xuXHRcdH07XG5cblx0XHRwLnJldmVyc2UgPSBmdW5jdGlvbihmcm9tLCBzdXBwcmVzc0V2ZW50cykge1xuXHRcdFx0aWYgKGZyb20gIT0gbnVsbCkge1xuXHRcdFx0XHR0aGlzLnNlZWsoKGZyb20gfHwgdGhpcy50b3RhbER1cmF0aW9uKCkpLCBzdXBwcmVzc0V2ZW50cyk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy5yZXZlcnNlZCh0cnVlKS5wYXVzZWQoZmFsc2UpO1xuXHRcdH07XG5cblx0XHRwLnJlbmRlciA9IGZ1bmN0aW9uKHRpbWUsIHN1cHByZXNzRXZlbnRzLCBmb3JjZSkge1xuXHRcdFx0Ly9zdHViIC0gd2Ugb3ZlcnJpZGUgdGhpcyBtZXRob2QgaW4gc3ViY2xhc3Nlcy5cblx0XHR9O1xuXG5cdFx0cC5pbnZhbGlkYXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLl90aW1lID0gdGhpcy5fdG90YWxUaW1lID0gMDtcblx0XHRcdHRoaXMuX2luaXR0ZWQgPSB0aGlzLl9nYyA9IGZhbHNlO1xuXHRcdFx0dGhpcy5fcmF3UHJldlRpbWUgPSAtMTtcblx0XHRcdGlmICh0aGlzLl9nYyB8fCAhdGhpcy50aW1lbGluZSkge1xuXHRcdFx0XHR0aGlzLl9lbmFibGVkKHRydWUpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fTtcblxuXHRcdHAuaXNBY3RpdmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB0bCA9IHRoaXMuX3RpbWVsaW5lLCAvL3RoZSAyIHJvb3QgdGltZWxpbmVzIHdvbid0IGhhdmUgYSBfdGltZWxpbmU7IHRoZXkncmUgYWx3YXlzIGFjdGl2ZS5cblx0XHRcdFx0c3RhcnRUaW1lID0gdGhpcy5fc3RhcnRUaW1lLFxuXHRcdFx0XHRyYXdUaW1lO1xuXHRcdFx0cmV0dXJuICghdGwgfHwgKCF0aGlzLl9nYyAmJiAhdGhpcy5fcGF1c2VkICYmIHRsLmlzQWN0aXZlKCkgJiYgKHJhd1RpbWUgPSB0bC5yYXdUaW1lKCkpID49IHN0YXJ0VGltZSAmJiByYXdUaW1lIDwgc3RhcnRUaW1lICsgdGhpcy50b3RhbER1cmF0aW9uKCkgLyB0aGlzLl90aW1lU2NhbGUpKTtcblx0XHR9O1xuXG5cdFx0cC5fZW5hYmxlZCA9IGZ1bmN0aW9uIChlbmFibGVkLCBpZ25vcmVUaW1lbGluZSkge1xuXHRcdFx0aWYgKCFfdGlja2VyQWN0aXZlKSB7XG5cdFx0XHRcdF90aWNrZXIud2FrZSgpO1xuXHRcdFx0fVxuXHRcdFx0dGhpcy5fZ2MgPSAhZW5hYmxlZDtcblx0XHRcdHRoaXMuX2FjdGl2ZSA9IHRoaXMuaXNBY3RpdmUoKTtcblx0XHRcdGlmIChpZ25vcmVUaW1lbGluZSAhPT0gdHJ1ZSkge1xuXHRcdFx0XHRpZiAoZW5hYmxlZCAmJiAhdGhpcy50aW1lbGluZSkge1xuXHRcdFx0XHRcdHRoaXMuX3RpbWVsaW5lLmFkZCh0aGlzLCB0aGlzLl9zdGFydFRpbWUgLSB0aGlzLl9kZWxheSk7XG5cdFx0XHRcdH0gZWxzZSBpZiAoIWVuYWJsZWQgJiYgdGhpcy50aW1lbGluZSkge1xuXHRcdFx0XHRcdHRoaXMuX3RpbWVsaW5lLl9yZW1vdmUodGhpcywgdHJ1ZSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXG5cblx0XHRwLl9raWxsID0gZnVuY3Rpb24odmFycywgdGFyZ2V0KSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5fZW5hYmxlZChmYWxzZSwgZmFsc2UpO1xuXHRcdH07XG5cblx0XHRwLmtpbGwgPSBmdW5jdGlvbih2YXJzLCB0YXJnZXQpIHtcblx0XHRcdHRoaXMuX2tpbGwodmFycywgdGFyZ2V0KTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLl91bmNhY2hlID0gZnVuY3Rpb24oaW5jbHVkZVNlbGYpIHtcblx0XHRcdHZhciB0d2VlbiA9IGluY2x1ZGVTZWxmID8gdGhpcyA6IHRoaXMudGltZWxpbmU7XG5cdFx0XHR3aGlsZSAodHdlZW4pIHtcblx0XHRcdFx0dHdlZW4uX2RpcnR5ID0gdHJ1ZTtcblx0XHRcdFx0dHdlZW4gPSB0d2Vlbi50aW1lbGluZTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLl9zd2FwU2VsZkluUGFyYW1zID0gZnVuY3Rpb24ocGFyYW1zKSB7XG5cdFx0XHR2YXIgaSA9IHBhcmFtcy5sZW5ndGgsXG5cdFx0XHRcdGNvcHkgPSBwYXJhbXMuY29uY2F0KCk7XG5cdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0aWYgKHBhcmFtc1tpXSA9PT0gXCJ7c2VsZn1cIikge1xuXHRcdFx0XHRcdGNvcHlbaV0gPSB0aGlzO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gY29weTtcblx0XHR9O1xuXG5cdFx0cC5fY2FsbGJhY2sgPSBmdW5jdGlvbih0eXBlKSB7XG5cdFx0XHR2YXIgdiA9IHRoaXMudmFycyxcblx0XHRcdFx0Y2FsbGJhY2sgPSB2W3R5cGVdLFxuXHRcdFx0XHRwYXJhbXMgPSB2W3R5cGUgKyBcIlBhcmFtc1wiXSxcblx0XHRcdFx0c2NvcGUgPSB2W3R5cGUgKyBcIlNjb3BlXCJdIHx8IHYuY2FsbGJhY2tTY29wZSB8fCB0aGlzLFxuXHRcdFx0XHRsID0gcGFyYW1zID8gcGFyYW1zLmxlbmd0aCA6IDA7XG5cdFx0XHRzd2l0Y2ggKGwpIHsgLy9zcGVlZCBvcHRpbWl6YXRpb247IGNhbGwoKSBpcyBmYXN0ZXIgdGhhbiBhcHBseSgpIHNvIHVzZSBpdCB3aGVuIHRoZXJlIGFyZSBvbmx5IGEgZmV3IHBhcmFtZXRlcnMgKHdoaWNoIGlzIGJ5IGZhciBtb3N0IGNvbW1vbikuIFByZXZpb3VzbHkgd2Ugc2ltcGx5IGRpZCB2YXIgdiA9IHRoaXMudmFyczsgdlt0eXBlXS5hcHBseSh2W3R5cGUgKyBcIlNjb3BlXCJdIHx8IHYuY2FsbGJhY2tTY29wZSB8fCB0aGlzLCB2W3R5cGUgKyBcIlBhcmFtc1wiXSB8fCBfYmxhbmtBcnJheSk7XG5cdFx0XHRcdGNhc2UgMDogY2FsbGJhY2suY2FsbChzY29wZSk7IGJyZWFrO1xuXHRcdFx0XHRjYXNlIDE6IGNhbGxiYWNrLmNhbGwoc2NvcGUsIHBhcmFtc1swXSk7IGJyZWFrO1xuXHRcdFx0XHRjYXNlIDI6IGNhbGxiYWNrLmNhbGwoc2NvcGUsIHBhcmFtc1swXSwgcGFyYW1zWzFdKTsgYnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6IGNhbGxiYWNrLmFwcGx5KHNjb3BlLCBwYXJhbXMpO1xuXHRcdFx0fVxuXHRcdH07XG5cbi8vLS0tLUFuaW1hdGlvbiBnZXR0ZXJzL3NldHRlcnMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXHRcdHAuZXZlbnRDYWxsYmFjayA9IGZ1bmN0aW9uKHR5cGUsIGNhbGxiYWNrLCBwYXJhbXMsIHNjb3BlKSB7XG5cdFx0XHRpZiAoKHR5cGUgfHwgXCJcIikuc3Vic3RyKDAsMikgPT09IFwib25cIikge1xuXHRcdFx0XHR2YXIgdiA9IHRoaXMudmFycztcblx0XHRcdFx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcblx0XHRcdFx0XHRyZXR1cm4gdlt0eXBlXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoY2FsbGJhY2sgPT0gbnVsbCkge1xuXHRcdFx0XHRcdGRlbGV0ZSB2W3R5cGVdO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHZbdHlwZV0gPSBjYWxsYmFjaztcblx0XHRcdFx0XHR2W3R5cGUgKyBcIlBhcmFtc1wiXSA9IChfaXNBcnJheShwYXJhbXMpICYmIHBhcmFtcy5qb2luKFwiXCIpLmluZGV4T2YoXCJ7c2VsZn1cIikgIT09IC0xKSA/IHRoaXMuX3N3YXBTZWxmSW5QYXJhbXMocGFyYW1zKSA6IHBhcmFtcztcblx0XHRcdFx0XHR2W3R5cGUgKyBcIlNjb3BlXCJdID0gc2NvcGU7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHR5cGUgPT09IFwib25VcGRhdGVcIikge1xuXHRcdFx0XHRcdHRoaXMuX29uVXBkYXRlID0gY2FsbGJhY2s7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLmRlbGF5ID0gZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5fZGVsYXk7XG5cdFx0XHR9XG5cdFx0XHRpZiAodGhpcy5fdGltZWxpbmUuc21vb3RoQ2hpbGRUaW1pbmcpIHtcblx0XHRcdFx0dGhpcy5zdGFydFRpbWUoIHRoaXMuX3N0YXJ0VGltZSArIHZhbHVlIC0gdGhpcy5fZGVsYXkgKTtcblx0XHRcdH1cblx0XHRcdHRoaXMuX2RlbGF5ID0gdmFsdWU7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9O1xuXG5cdFx0cC5kdXJhdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0dGhpcy5fZGlydHkgPSBmYWxzZTtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX2R1cmF0aW9uO1xuXHRcdFx0fVxuXHRcdFx0dGhpcy5fZHVyYXRpb24gPSB0aGlzLl90b3RhbER1cmF0aW9uID0gdmFsdWU7XG5cdFx0XHR0aGlzLl91bmNhY2hlKHRydWUpOyAvL3RydWUgaW4gY2FzZSBpdCdzIGEgVHdlZW5NYXggb3IgVGltZWxpbmVNYXggdGhhdCBoYXMgYSByZXBlYXQgLSB3ZSdsbCBuZWVkIHRvIHJlZnJlc2ggdGhlIHRvdGFsRHVyYXRpb24uXG5cdFx0XHRpZiAodGhpcy5fdGltZWxpbmUuc21vb3RoQ2hpbGRUaW1pbmcpIGlmICh0aGlzLl90aW1lID4gMCkgaWYgKHRoaXMuX3RpbWUgPCB0aGlzLl9kdXJhdGlvbikgaWYgKHZhbHVlICE9PSAwKSB7XG5cdFx0XHRcdHRoaXMudG90YWxUaW1lKHRoaXMuX3RvdGFsVGltZSAqICh2YWx1ZSAvIHRoaXMuX2R1cmF0aW9uKSwgdHJ1ZSk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9O1xuXG5cdFx0cC50b3RhbER1cmF0aW9uID0gZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdHRoaXMuX2RpcnR5ID0gZmFsc2U7XG5cdFx0XHRyZXR1cm4gKCFhcmd1bWVudHMubGVuZ3RoKSA/IHRoaXMuX3RvdGFsRHVyYXRpb24gOiB0aGlzLmR1cmF0aW9uKHZhbHVlKTtcblx0XHR9O1xuXG5cdFx0cC50aW1lID0gZnVuY3Rpb24odmFsdWUsIHN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX3RpbWU7XG5cdFx0XHR9XG5cdFx0XHRpZiAodGhpcy5fZGlydHkpIHtcblx0XHRcdFx0dGhpcy50b3RhbER1cmF0aW9uKCk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy50b3RhbFRpbWUoKHZhbHVlID4gdGhpcy5fZHVyYXRpb24pID8gdGhpcy5fZHVyYXRpb24gOiB2YWx1ZSwgc3VwcHJlc3NFdmVudHMpO1xuXHRcdH07XG5cblx0XHRwLnRvdGFsVGltZSA9IGZ1bmN0aW9uKHRpbWUsIHN1cHByZXNzRXZlbnRzLCB1bmNhcHBlZCkge1xuXHRcdFx0aWYgKCFfdGlja2VyQWN0aXZlKSB7XG5cdFx0XHRcdF90aWNrZXIud2FrZSgpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLl90b3RhbFRpbWU7XG5cdFx0XHR9XG5cdFx0XHRpZiAodGhpcy5fdGltZWxpbmUpIHtcblx0XHRcdFx0aWYgKHRpbWUgPCAwICYmICF1bmNhcHBlZCkge1xuXHRcdFx0XHRcdHRpbWUgKz0gdGhpcy50b3RhbER1cmF0aW9uKCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHRoaXMuX3RpbWVsaW5lLnNtb290aENoaWxkVGltaW5nKSB7XG5cdFx0XHRcdFx0aWYgKHRoaXMuX2RpcnR5KSB7XG5cdFx0XHRcdFx0XHR0aGlzLnRvdGFsRHVyYXRpb24oKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dmFyIHRvdGFsRHVyYXRpb24gPSB0aGlzLl90b3RhbER1cmF0aW9uLFxuXHRcdFx0XHRcdFx0dGwgPSB0aGlzLl90aW1lbGluZTtcblx0XHRcdFx0XHRpZiAodGltZSA+IHRvdGFsRHVyYXRpb24gJiYgIXVuY2FwcGVkKSB7XG5cdFx0XHRcdFx0XHR0aW1lID0gdG90YWxEdXJhdGlvbjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dGhpcy5fc3RhcnRUaW1lID0gKHRoaXMuX3BhdXNlZCA/IHRoaXMuX3BhdXNlVGltZSA6IHRsLl90aW1lKSAtICgoIXRoaXMuX3JldmVyc2VkID8gdGltZSA6IHRvdGFsRHVyYXRpb24gLSB0aW1lKSAvIHRoaXMuX3RpbWVTY2FsZSk7XG5cdFx0XHRcdFx0aWYgKCF0bC5fZGlydHkpIHsgLy9mb3IgcGVyZm9ybWFuY2UgaW1wcm92ZW1lbnQuIElmIHRoZSBwYXJlbnQncyBjYWNoZSBpcyBhbHJlYWR5IGRpcnR5LCBpdCBhbHJlYWR5IHRvb2sgY2FyZSBvZiBtYXJraW5nIHRoZSBhbmNlc3RvcnMgYXMgZGlydHkgdG9vLCBzbyBza2lwIHRoZSBmdW5jdGlvbiBjYWxsIGhlcmUuXG5cdFx0XHRcdFx0XHR0aGlzLl91bmNhY2hlKGZhbHNlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Ly9pbiBjYXNlIGFueSBvZiB0aGUgYW5jZXN0b3IgdGltZWxpbmVzIGhhZCBjb21wbGV0ZWQgYnV0IHNob3VsZCBub3cgYmUgZW5hYmxlZCwgd2Ugc2hvdWxkIHJlc2V0IHRoZWlyIHRvdGFsVGltZSgpIHdoaWNoIHdpbGwgYWxzbyBlbnN1cmUgdGhhdCB0aGV5J3JlIGxpbmVkIHVwIHByb3Blcmx5IGFuZCBlbmFibGVkLiBTa2lwIGZvciBhbmltYXRpb25zIHRoYXQgYXJlIG9uIHRoZSByb290ICh3YXN0ZWZ1bCkuIEV4YW1wbGU6IGEgVGltZWxpbmVMaXRlLmV4cG9ydFJvb3QoKSBpcyBwZXJmb3JtZWQgd2hlbiB0aGVyZSdzIGEgcGF1c2VkIHR3ZWVuIG9uIHRoZSByb290LCB0aGUgZXhwb3J0IHdpbGwgbm90IGNvbXBsZXRlIHVudGlsIHRoYXQgdHdlZW4gaXMgdW5wYXVzZWQsIGJ1dCBpbWFnaW5lIGEgY2hpbGQgZ2V0cyByZXN0YXJ0ZWQgbGF0ZXIsIGFmdGVyIGFsbCBbdW5wYXVzZWRdIHR3ZWVucyBoYXZlIGNvbXBsZXRlZC4gVGhlIHN0YXJ0VGltZSBvZiB0aGF0IGNoaWxkIHdvdWxkIGdldCBwdXNoZWQgb3V0LCBidXQgb25lIG9mIHRoZSBhbmNlc3RvcnMgbWF5IGhhdmUgY29tcGxldGVkLlxuXHRcdFx0XHRcdGlmICh0bC5fdGltZWxpbmUpIHtcblx0XHRcdFx0XHRcdHdoaWxlICh0bC5fdGltZWxpbmUpIHtcblx0XHRcdFx0XHRcdFx0aWYgKHRsLl90aW1lbGluZS5fdGltZSAhPT0gKHRsLl9zdGFydFRpbWUgKyB0bC5fdG90YWxUaW1lKSAvIHRsLl90aW1lU2NhbGUpIHtcblx0XHRcdFx0XHRcdFx0XHR0bC50b3RhbFRpbWUodGwuX3RvdGFsVGltZSwgdHJ1ZSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0dGwgPSB0bC5fdGltZWxpbmU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0aGlzLl9nYykge1xuXHRcdFx0XHRcdHRoaXMuX2VuYWJsZWQodHJ1ZSwgZmFsc2UpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0aGlzLl90b3RhbFRpbWUgIT09IHRpbWUgfHwgdGhpcy5fZHVyYXRpb24gPT09IDApIHtcblx0XHRcdFx0XHRpZiAoX2xhenlUd2VlbnMubGVuZ3RoKSB7XG5cdFx0XHRcdFx0XHRfbGF6eVJlbmRlcigpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0aGlzLnJlbmRlcih0aW1lLCBzdXBwcmVzc0V2ZW50cywgZmFsc2UpO1xuXHRcdFx0XHRcdGlmIChfbGF6eVR3ZWVucy5sZW5ndGgpIHsgLy9pbiBjYXNlIHJlbmRlcmluZyBjYXVzZWQgYW55IHR3ZWVucyB0byBsYXp5LWluaXQsIHdlIHNob3VsZCByZW5kZXIgdGhlbSBiZWNhdXNlIHR5cGljYWxseSB3aGVuIHNvbWVvbmUgY2FsbHMgc2VlaygpIG9yIHRpbWUoKSBvciBwcm9ncmVzcygpLCB0aGV5IGV4cGVjdCBhbiBpbW1lZGlhdGUgcmVuZGVyLlxuXHRcdFx0XHRcdFx0X2xhenlSZW5kZXIoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLnByb2dyZXNzID0gcC50b3RhbFByb2dyZXNzID0gZnVuY3Rpb24odmFsdWUsIHN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHR2YXIgZHVyYXRpb24gPSB0aGlzLmR1cmF0aW9uKCk7XG5cdFx0XHRyZXR1cm4gKCFhcmd1bWVudHMubGVuZ3RoKSA/IChkdXJhdGlvbiA/IHRoaXMuX3RpbWUgLyBkdXJhdGlvbiA6IHRoaXMucmF0aW8pIDogdGhpcy50b3RhbFRpbWUoZHVyYXRpb24gKiB2YWx1ZSwgc3VwcHJlc3NFdmVudHMpO1xuXHRcdH07XG5cblx0XHRwLnN0YXJ0VGltZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX3N0YXJ0VGltZTtcblx0XHRcdH1cblx0XHRcdGlmICh2YWx1ZSAhPT0gdGhpcy5fc3RhcnRUaW1lKSB7XG5cdFx0XHRcdHRoaXMuX3N0YXJ0VGltZSA9IHZhbHVlO1xuXHRcdFx0XHRpZiAodGhpcy50aW1lbGluZSkgaWYgKHRoaXMudGltZWxpbmUuX3NvcnRDaGlsZHJlbikge1xuXHRcdFx0XHRcdHRoaXMudGltZWxpbmUuYWRkKHRoaXMsIHZhbHVlIC0gdGhpcy5fZGVsYXkpOyAvL2Vuc3VyZXMgdGhhdCBhbnkgbmVjZXNzYXJ5IHJlLXNlcXVlbmNpbmcgb2YgQW5pbWF0aW9ucyBpbiB0aGUgdGltZWxpbmUgb2NjdXJzIHRvIG1ha2Ugc3VyZSB0aGUgcmVuZGVyaW5nIG9yZGVyIGlzIGNvcnJlY3QuXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLmVuZFRpbWUgPSBmdW5jdGlvbihpbmNsdWRlUmVwZWF0cykge1xuXHRcdFx0cmV0dXJuIHRoaXMuX3N0YXJ0VGltZSArICgoaW5jbHVkZVJlcGVhdHMgIT0gZmFsc2UpID8gdGhpcy50b3RhbER1cmF0aW9uKCkgOiB0aGlzLmR1cmF0aW9uKCkpIC8gdGhpcy5fdGltZVNjYWxlO1xuXHRcdH07XG5cblx0XHRwLnRpbWVTY2FsZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX3RpbWVTY2FsZTtcblx0XHRcdH1cblx0XHRcdHZhbHVlID0gdmFsdWUgfHwgX3RpbnlOdW07IC8vY2FuJ3QgYWxsb3cgemVybyBiZWNhdXNlIGl0J2xsIHRocm93IHRoZSBtYXRoIG9mZlxuXHRcdFx0aWYgKHRoaXMuX3RpbWVsaW5lICYmIHRoaXMuX3RpbWVsaW5lLnNtb290aENoaWxkVGltaW5nKSB7XG5cdFx0XHRcdHZhciBwYXVzZVRpbWUgPSB0aGlzLl9wYXVzZVRpbWUsXG5cdFx0XHRcdFx0dCA9IChwYXVzZVRpbWUgfHwgcGF1c2VUaW1lID09PSAwKSA/IHBhdXNlVGltZSA6IHRoaXMuX3RpbWVsaW5lLnRvdGFsVGltZSgpO1xuXHRcdFx0XHR0aGlzLl9zdGFydFRpbWUgPSB0IC0gKCh0IC0gdGhpcy5fc3RhcnRUaW1lKSAqIHRoaXMuX3RpbWVTY2FsZSAvIHZhbHVlKTtcblx0XHRcdH1cblx0XHRcdHRoaXMuX3RpbWVTY2FsZSA9IHZhbHVlO1xuXHRcdFx0cmV0dXJuIHRoaXMuX3VuY2FjaGUoZmFsc2UpO1xuXHRcdH07XG5cblx0XHRwLnJldmVyc2VkID0gZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5fcmV2ZXJzZWQ7XG5cdFx0XHR9XG5cdFx0XHRpZiAodmFsdWUgIT0gdGhpcy5fcmV2ZXJzZWQpIHtcblx0XHRcdFx0dGhpcy5fcmV2ZXJzZWQgPSB2YWx1ZTtcblx0XHRcdFx0dGhpcy50b3RhbFRpbWUoKCh0aGlzLl90aW1lbGluZSAmJiAhdGhpcy5fdGltZWxpbmUuc21vb3RoQ2hpbGRUaW1pbmcpID8gdGhpcy50b3RhbER1cmF0aW9uKCkgLSB0aGlzLl90b3RhbFRpbWUgOiB0aGlzLl90b3RhbFRpbWUpLCB0cnVlKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLnBhdXNlZCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHRpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX3BhdXNlZDtcblx0XHRcdH1cblx0XHRcdHZhciB0bCA9IHRoaXMuX3RpbWVsaW5lLFxuXHRcdFx0XHRyYXcsIGVsYXBzZWQ7XG5cdFx0XHRpZiAodmFsdWUgIT0gdGhpcy5fcGF1c2VkKSBpZiAodGwpIHtcblx0XHRcdFx0aWYgKCFfdGlja2VyQWN0aXZlICYmICF2YWx1ZSkge1xuXHRcdFx0XHRcdF90aWNrZXIud2FrZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJhdyA9IHRsLnJhd1RpbWUoKTtcblx0XHRcdFx0ZWxhcHNlZCA9IHJhdyAtIHRoaXMuX3BhdXNlVGltZTtcblx0XHRcdFx0aWYgKCF2YWx1ZSAmJiB0bC5zbW9vdGhDaGlsZFRpbWluZykge1xuXHRcdFx0XHRcdHRoaXMuX3N0YXJ0VGltZSArPSBlbGFwc2VkO1xuXHRcdFx0XHRcdHRoaXMuX3VuY2FjaGUoZmFsc2UpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuX3BhdXNlVGltZSA9IHZhbHVlID8gcmF3IDogbnVsbDtcblx0XHRcdFx0dGhpcy5fcGF1c2VkID0gdmFsdWU7XG5cdFx0XHRcdHRoaXMuX2FjdGl2ZSA9IHRoaXMuaXNBY3RpdmUoKTtcblx0XHRcdFx0aWYgKCF2YWx1ZSAmJiBlbGFwc2VkICE9PSAwICYmIHRoaXMuX2luaXR0ZWQgJiYgdGhpcy5kdXJhdGlvbigpKSB7XG5cdFx0XHRcdFx0cmF3ID0gdGwuc21vb3RoQ2hpbGRUaW1pbmcgPyB0aGlzLl90b3RhbFRpbWUgOiAocmF3IC0gdGhpcy5fc3RhcnRUaW1lKSAvIHRoaXMuX3RpbWVTY2FsZTtcblx0XHRcdFx0XHR0aGlzLnJlbmRlcihyYXcsIChyYXcgPT09IHRoaXMuX3RvdGFsVGltZSksIHRydWUpOyAvL2luIGNhc2UgdGhlIHRhcmdldCdzIHByb3BlcnRpZXMgY2hhbmdlZCB2aWEgc29tZSBvdGhlciB0d2VlbiBvciBtYW51YWwgdXBkYXRlIGJ5IHRoZSB1c2VyLCB3ZSBzaG91bGQgZm9yY2UgYSByZW5kZXIuXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICh0aGlzLl9nYyAmJiAhdmFsdWUpIHtcblx0XHRcdFx0dGhpcy5fZW5hYmxlZCh0cnVlLCBmYWxzZSk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9O1xuXG5cbi8qXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBTaW1wbGVUaW1lbGluZVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cdFx0dmFyIFNpbXBsZVRpbWVsaW5lID0gX2NsYXNzKFwiY29yZS5TaW1wbGVUaW1lbGluZVwiLCBmdW5jdGlvbih2YXJzKSB7XG5cdFx0XHRBbmltYXRpb24uY2FsbCh0aGlzLCAwLCB2YXJzKTtcblx0XHRcdHRoaXMuYXV0b1JlbW92ZUNoaWxkcmVuID0gdGhpcy5zbW9vdGhDaGlsZFRpbWluZyA9IHRydWU7XG5cdFx0fSk7XG5cblx0XHRwID0gU2ltcGxlVGltZWxpbmUucHJvdG90eXBlID0gbmV3IEFuaW1hdGlvbigpO1xuXHRcdHAuY29uc3RydWN0b3IgPSBTaW1wbGVUaW1lbGluZTtcblx0XHRwLmtpbGwoKS5fZ2MgPSBmYWxzZTtcblx0XHRwLl9maXJzdCA9IHAuX2xhc3QgPSBwLl9yZWNlbnQgPSBudWxsO1xuXHRcdHAuX3NvcnRDaGlsZHJlbiA9IGZhbHNlO1xuXG5cdFx0cC5hZGQgPSBwLmluc2VydCA9IGZ1bmN0aW9uKGNoaWxkLCBwb3NpdGlvbiwgYWxpZ24sIHN0YWdnZXIpIHtcblx0XHRcdHZhciBwcmV2VHdlZW4sIHN0O1xuXHRcdFx0Y2hpbGQuX3N0YXJ0VGltZSA9IE51bWJlcihwb3NpdGlvbiB8fCAwKSArIGNoaWxkLl9kZWxheTtcblx0XHRcdGlmIChjaGlsZC5fcGF1c2VkKSBpZiAodGhpcyAhPT0gY2hpbGQuX3RpbWVsaW5lKSB7IC8vd2Ugb25seSBhZGp1c3QgdGhlIF9wYXVzZVRpbWUgaWYgaXQgd2Fzbid0IGluIHRoaXMgdGltZWxpbmUgYWxyZWFkeS4gUmVtZW1iZXIsIHNvbWV0aW1lcyBhIHR3ZWVuIHdpbGwgYmUgaW5zZXJ0ZWQgYWdhaW4gaW50byB0aGUgc2FtZSB0aW1lbGluZSB3aGVuIGl0cyBzdGFydFRpbWUgaXMgY2hhbmdlZCBzbyB0aGF0IHRoZSB0d2VlbnMgaW4gdGhlIFRpbWVsaW5lTGl0ZS9NYXggYXJlIHJlLW9yZGVyZWQgcHJvcGVybHkgaW4gdGhlIGxpbmtlZCBsaXN0IChzbyBldmVyeXRoaW5nIHJlbmRlcnMgaW4gdGhlIHByb3BlciBvcmRlcikuXG5cdFx0XHRcdGNoaWxkLl9wYXVzZVRpbWUgPSBjaGlsZC5fc3RhcnRUaW1lICsgKCh0aGlzLnJhd1RpbWUoKSAtIGNoaWxkLl9zdGFydFRpbWUpIC8gY2hpbGQuX3RpbWVTY2FsZSk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoY2hpbGQudGltZWxpbmUpIHtcblx0XHRcdFx0Y2hpbGQudGltZWxpbmUuX3JlbW92ZShjaGlsZCwgdHJ1ZSk7IC8vcmVtb3ZlcyBmcm9tIGV4aXN0aW5nIHRpbWVsaW5lIHNvIHRoYXQgaXQgY2FuIGJlIHByb3Blcmx5IGFkZGVkIHRvIHRoaXMgb25lLlxuXHRcdFx0fVxuXHRcdFx0Y2hpbGQudGltZWxpbmUgPSBjaGlsZC5fdGltZWxpbmUgPSB0aGlzO1xuXHRcdFx0aWYgKGNoaWxkLl9nYykge1xuXHRcdFx0XHRjaGlsZC5fZW5hYmxlZCh0cnVlLCB0cnVlKTtcblx0XHRcdH1cblx0XHRcdHByZXZUd2VlbiA9IHRoaXMuX2xhc3Q7XG5cdFx0XHRpZiAodGhpcy5fc29ydENoaWxkcmVuKSB7XG5cdFx0XHRcdHN0ID0gY2hpbGQuX3N0YXJ0VGltZTtcblx0XHRcdFx0d2hpbGUgKHByZXZUd2VlbiAmJiBwcmV2VHdlZW4uX3N0YXJ0VGltZSA+IHN0KSB7XG5cdFx0XHRcdFx0cHJldlR3ZWVuID0gcHJldlR3ZWVuLl9wcmV2O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAocHJldlR3ZWVuKSB7XG5cdFx0XHRcdGNoaWxkLl9uZXh0ID0gcHJldlR3ZWVuLl9uZXh0O1xuXHRcdFx0XHRwcmV2VHdlZW4uX25leHQgPSBjaGlsZDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGNoaWxkLl9uZXh0ID0gdGhpcy5fZmlyc3Q7XG5cdFx0XHRcdHRoaXMuX2ZpcnN0ID0gY2hpbGQ7XG5cdFx0XHR9XG5cdFx0XHRpZiAoY2hpbGQuX25leHQpIHtcblx0XHRcdFx0Y2hpbGQuX25leHQuX3ByZXYgPSBjaGlsZDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMuX2xhc3QgPSBjaGlsZDtcblx0XHRcdH1cblx0XHRcdGNoaWxkLl9wcmV2ID0gcHJldlR3ZWVuO1xuXHRcdFx0dGhpcy5fcmVjZW50ID0gY2hpbGQ7XG5cdFx0XHRpZiAodGhpcy5fdGltZWxpbmUpIHtcblx0XHRcdFx0dGhpcy5fdW5jYWNoZSh0cnVlKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH07XG5cblx0XHRwLl9yZW1vdmUgPSBmdW5jdGlvbih0d2Vlbiwgc2tpcERpc2FibGUpIHtcblx0XHRcdGlmICh0d2Vlbi50aW1lbGluZSA9PT0gdGhpcykge1xuXHRcdFx0XHRpZiAoIXNraXBEaXNhYmxlKSB7XG5cdFx0XHRcdFx0dHdlZW4uX2VuYWJsZWQoZmFsc2UsIHRydWUpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKHR3ZWVuLl9wcmV2KSB7XG5cdFx0XHRcdFx0dHdlZW4uX3ByZXYuX25leHQgPSB0d2Vlbi5fbmV4dDtcblx0XHRcdFx0fSBlbHNlIGlmICh0aGlzLl9maXJzdCA9PT0gdHdlZW4pIHtcblx0XHRcdFx0XHR0aGlzLl9maXJzdCA9IHR3ZWVuLl9uZXh0O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0d2Vlbi5fbmV4dCkge1xuXHRcdFx0XHRcdHR3ZWVuLl9uZXh0Ll9wcmV2ID0gdHdlZW4uX3ByZXY7XG5cdFx0XHRcdH0gZWxzZSBpZiAodGhpcy5fbGFzdCA9PT0gdHdlZW4pIHtcblx0XHRcdFx0XHR0aGlzLl9sYXN0ID0gdHdlZW4uX3ByZXY7XG5cdFx0XHRcdH1cblx0XHRcdFx0dHdlZW4uX25leHQgPSB0d2Vlbi5fcHJldiA9IHR3ZWVuLnRpbWVsaW5lID0gbnVsbDtcblx0XHRcdFx0aWYgKHR3ZWVuID09PSB0aGlzLl9yZWNlbnQpIHtcblx0XHRcdFx0XHR0aGlzLl9yZWNlbnQgPSB0aGlzLl9sYXN0O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKHRoaXMuX3RpbWVsaW5lKSB7XG5cdFx0XHRcdFx0dGhpcy5fdW5jYWNoZSh0cnVlKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fTtcblxuXHRcdHAucmVuZGVyID0gZnVuY3Rpb24odGltZSwgc3VwcHJlc3NFdmVudHMsIGZvcmNlKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLl9maXJzdCxcblx0XHRcdFx0bmV4dDtcblx0XHRcdHRoaXMuX3RvdGFsVGltZSA9IHRoaXMuX3RpbWUgPSB0aGlzLl9yYXdQcmV2VGltZSA9IHRpbWU7XG5cdFx0XHR3aGlsZSAodHdlZW4pIHtcblx0XHRcdFx0bmV4dCA9IHR3ZWVuLl9uZXh0OyAvL3JlY29yZCBpdCBoZXJlIGJlY2F1c2UgdGhlIHZhbHVlIGNvdWxkIGNoYW5nZSBhZnRlciByZW5kZXJpbmcuLi5cblx0XHRcdFx0aWYgKHR3ZWVuLl9hY3RpdmUgfHwgKHRpbWUgPj0gdHdlZW4uX3N0YXJ0VGltZSAmJiAhdHdlZW4uX3BhdXNlZCkpIHtcblx0XHRcdFx0XHRpZiAoIXR3ZWVuLl9yZXZlcnNlZCkge1xuXHRcdFx0XHRcdFx0dHdlZW4ucmVuZGVyKCh0aW1lIC0gdHdlZW4uX3N0YXJ0VGltZSkgKiB0d2Vlbi5fdGltZVNjYWxlLCBzdXBwcmVzc0V2ZW50cywgZm9yY2UpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR0d2Vlbi5yZW5kZXIoKCghdHdlZW4uX2RpcnR5KSA/IHR3ZWVuLl90b3RhbER1cmF0aW9uIDogdHdlZW4udG90YWxEdXJhdGlvbigpKSAtICgodGltZSAtIHR3ZWVuLl9zdGFydFRpbWUpICogdHdlZW4uX3RpbWVTY2FsZSksIHN1cHByZXNzRXZlbnRzLCBmb3JjZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHR3ZWVuID0gbmV4dDtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0cC5yYXdUaW1lID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIV90aWNrZXJBY3RpdmUpIHtcblx0XHRcdFx0X3RpY2tlci53YWtlKCk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcy5fdG90YWxUaW1lO1xuXHRcdH07XG5cbi8qXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBUd2VlbkxpdGVcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqL1xuXHRcdHZhciBUd2VlbkxpdGUgPSBfY2xhc3MoXCJUd2VlbkxpdGVcIiwgZnVuY3Rpb24odGFyZ2V0LCBkdXJhdGlvbiwgdmFycykge1xuXHRcdFx0XHRBbmltYXRpb24uY2FsbCh0aGlzLCBkdXJhdGlvbiwgdmFycyk7XG5cdFx0XHRcdHRoaXMucmVuZGVyID0gVHdlZW5MaXRlLnByb3RvdHlwZS5yZW5kZXI7IC8vc3BlZWQgb3B0aW1pemF0aW9uIChhdm9pZCBwcm90b3R5cGUgbG9va3VwIG9uIHRoaXMgXCJob3RcIiBtZXRob2QpXG5cblx0XHRcdFx0aWYgKHRhcmdldCA9PSBudWxsKSB7XG5cdFx0XHRcdFx0dGhyb3cgXCJDYW5ub3QgdHdlZW4gYSBudWxsIHRhcmdldC5cIjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHRoaXMudGFyZ2V0ID0gdGFyZ2V0ID0gKHR5cGVvZih0YXJnZXQpICE9PSBcInN0cmluZ1wiKSA/IHRhcmdldCA6IFR3ZWVuTGl0ZS5zZWxlY3Rvcih0YXJnZXQpIHx8IHRhcmdldDtcblxuXHRcdFx0XHR2YXIgaXNTZWxlY3RvciA9ICh0YXJnZXQuanF1ZXJ5IHx8ICh0YXJnZXQubGVuZ3RoICYmIHRhcmdldCAhPT0gd2luZG93ICYmIHRhcmdldFswXSAmJiAodGFyZ2V0WzBdID09PSB3aW5kb3cgfHwgKHRhcmdldFswXS5ub2RlVHlwZSAmJiB0YXJnZXRbMF0uc3R5bGUgJiYgIXRhcmdldC5ub2RlVHlwZSkpKSksXG5cdFx0XHRcdFx0b3ZlcndyaXRlID0gdGhpcy52YXJzLm92ZXJ3cml0ZSxcblx0XHRcdFx0XHRpLCB0YXJnLCB0YXJnZXRzO1xuXG5cdFx0XHRcdHRoaXMuX292ZXJ3cml0ZSA9IG92ZXJ3cml0ZSA9IChvdmVyd3JpdGUgPT0gbnVsbCkgPyBfb3ZlcndyaXRlTG9va3VwW1R3ZWVuTGl0ZS5kZWZhdWx0T3ZlcndyaXRlXSA6ICh0eXBlb2Yob3ZlcndyaXRlKSA9PT0gXCJudW1iZXJcIikgPyBvdmVyd3JpdGUgPj4gMCA6IF9vdmVyd3JpdGVMb29rdXBbb3ZlcndyaXRlXTtcblxuXHRcdFx0XHRpZiAoKGlzU2VsZWN0b3IgfHwgdGFyZ2V0IGluc3RhbmNlb2YgQXJyYXkgfHwgKHRhcmdldC5wdXNoICYmIF9pc0FycmF5KHRhcmdldCkpKSAmJiB0eXBlb2YodGFyZ2V0WzBdKSAhPT0gXCJudW1iZXJcIikge1xuXHRcdFx0XHRcdHRoaXMuX3RhcmdldHMgPSB0YXJnZXRzID0gX3NsaWNlKHRhcmdldCk7ICAvL2Rvbid0IHVzZSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0YXJnZXQsIDApIGJlY2F1c2UgdGhhdCBkb2Vzbid0IHdvcmsgaW4gSUU4IHdpdGggYSBOb2RlTGlzdCB0aGF0J3MgcmV0dXJuZWQgYnkgcXVlcnlTZWxlY3RvckFsbCgpXG5cdFx0XHRcdFx0dGhpcy5fcHJvcExvb2t1cCA9IFtdO1xuXHRcdFx0XHRcdHRoaXMuX3NpYmxpbmdzID0gW107XG5cdFx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IHRhcmdldHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHRcdHRhcmcgPSB0YXJnZXRzW2ldO1xuXHRcdFx0XHRcdFx0aWYgKCF0YXJnKSB7XG5cdFx0XHRcdFx0XHRcdHRhcmdldHMuc3BsaWNlKGktLSwgMSk7XG5cdFx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmICh0eXBlb2YodGFyZykgPT09IFwic3RyaW5nXCIpIHtcblx0XHRcdFx0XHRcdFx0dGFyZyA9IHRhcmdldHNbaS0tXSA9IFR3ZWVuTGl0ZS5zZWxlY3Rvcih0YXJnKTsgLy9pbiBjYXNlIGl0J3MgYW4gYXJyYXkgb2Ygc3RyaW5nc1xuXHRcdFx0XHRcdFx0XHRpZiAodHlwZW9mKHRhcmcpID09PSBcInN0cmluZ1wiKSB7XG5cdFx0XHRcdFx0XHRcdFx0dGFyZ2V0cy5zcGxpY2UoaSsxLCAxKTsgLy90byBhdm9pZCBhbiBlbmRsZXNzIGxvb3AgKGNhbid0IGltYWdpbmUgd2h5IHRoZSBzZWxlY3RvciB3b3VsZCByZXR1cm4gYSBzdHJpbmcsIGJ1dCBqdXN0IGluIGNhc2UpXG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKHRhcmcubGVuZ3RoICYmIHRhcmcgIT09IHdpbmRvdyAmJiB0YXJnWzBdICYmICh0YXJnWzBdID09PSB3aW5kb3cgfHwgKHRhcmdbMF0ubm9kZVR5cGUgJiYgdGFyZ1swXS5zdHlsZSAmJiAhdGFyZy5ub2RlVHlwZSkpKSB7IC8vaW4gY2FzZSB0aGUgdXNlciBpcyBwYXNzaW5nIGluIGFuIGFycmF5IG9mIHNlbGVjdG9yIG9iamVjdHMgKGxpa2UgalF1ZXJ5IG9iamVjdHMpLCB3ZSBuZWVkIHRvIGNoZWNrIG9uZSBtb3JlIGxldmVsIGFuZCBwdWxsIHRoaW5ncyBvdXQgaWYgbmVjZXNzYXJ5LiBBbHNvIG5vdGUgdGhhdCA8c2VsZWN0PiBlbGVtZW50cyBwYXNzIGFsbCB0aGUgY3JpdGVyaWEgcmVnYXJkaW5nIGxlbmd0aCBhbmQgdGhlIGZpcnN0IGNoaWxkIGhhdmluZyBzdHlsZSwgc28gd2UgbXVzdCBhbHNvIGNoZWNrIHRvIGVuc3VyZSB0aGUgdGFyZ2V0IGlzbid0IGFuIEhUTUwgbm9kZSBpdHNlbGYuXG5cdFx0XHRcdFx0XHRcdHRhcmdldHMuc3BsaWNlKGktLSwgMSk7XG5cdFx0XHRcdFx0XHRcdHRoaXMuX3RhcmdldHMgPSB0YXJnZXRzID0gdGFyZ2V0cy5jb25jYXQoX3NsaWNlKHRhcmcpKTtcblx0XHRcdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR0aGlzLl9zaWJsaW5nc1tpXSA9IF9yZWdpc3Rlcih0YXJnLCB0aGlzLCBmYWxzZSk7XG5cdFx0XHRcdFx0XHRpZiAob3ZlcndyaXRlID09PSAxKSBpZiAodGhpcy5fc2libGluZ3NbaV0ubGVuZ3RoID4gMSkge1xuXHRcdFx0XHRcdFx0XHRfYXBwbHlPdmVyd3JpdGUodGFyZywgdGhpcywgbnVsbCwgMSwgdGhpcy5fc2libGluZ3NbaV0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRoaXMuX3Byb3BMb29rdXAgPSB7fTtcblx0XHRcdFx0XHR0aGlzLl9zaWJsaW5ncyA9IF9yZWdpc3Rlcih0YXJnZXQsIHRoaXMsIGZhbHNlKTtcblx0XHRcdFx0XHRpZiAob3ZlcndyaXRlID09PSAxKSBpZiAodGhpcy5fc2libGluZ3MubGVuZ3RoID4gMSkge1xuXHRcdFx0XHRcdFx0X2FwcGx5T3ZlcndyaXRlKHRhcmdldCwgdGhpcywgbnVsbCwgMSwgdGhpcy5fc2libGluZ3MpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodGhpcy52YXJzLmltbWVkaWF0ZVJlbmRlciB8fCAoZHVyYXRpb24gPT09IDAgJiYgdGhpcy5fZGVsYXkgPT09IDAgJiYgdGhpcy52YXJzLmltbWVkaWF0ZVJlbmRlciAhPT0gZmFsc2UpKSB7XG5cdFx0XHRcdFx0dGhpcy5fdGltZSA9IC1fdGlueU51bTsgLy9mb3JjZXMgYSByZW5kZXIgd2l0aG91dCBoYXZpbmcgdG8gc2V0IHRoZSByZW5kZXIoKSBcImZvcmNlXCIgcGFyYW1ldGVyIHRvIHRydWUgYmVjYXVzZSB3ZSB3YW50IHRvIGFsbG93IGxhenlpbmcgYnkgZGVmYXVsdCAodXNpbmcgdGhlIFwiZm9yY2VcIiBwYXJhbWV0ZXIgYWx3YXlzIGZvcmNlcyBhbiBpbW1lZGlhdGUgZnVsbCByZW5kZXIpXG5cdFx0XHRcdFx0dGhpcy5yZW5kZXIoTWF0aC5taW4oMCwgLXRoaXMuX2RlbGF5KSk7IC8vaW4gY2FzZSBkZWxheSBpcyBuZWdhdGl2ZVxuXHRcdFx0XHR9XG5cdFx0XHR9LCB0cnVlKSxcblx0XHRcdF9pc1NlbGVjdG9yID0gZnVuY3Rpb24odikge1xuXHRcdFx0XHRyZXR1cm4gKHYgJiYgdi5sZW5ndGggJiYgdiAhPT0gd2luZG93ICYmIHZbMF0gJiYgKHZbMF0gPT09IHdpbmRvdyB8fCAodlswXS5ub2RlVHlwZSAmJiB2WzBdLnN0eWxlICYmICF2Lm5vZGVUeXBlKSkpOyAvL3dlIGNhbm5vdCBjaGVjayBcIm5vZGVUeXBlXCIgaWYgdGhlIHRhcmdldCBpcyB3aW5kb3cgZnJvbSB3aXRoaW4gYW4gaWZyYW1lLCBvdGhlcndpc2UgaXQgd2lsbCB0cmlnZ2VyIGEgc2VjdXJpdHkgZXJyb3IgaW4gc29tZSBicm93c2VycyBsaWtlIEZpcmVmb3guXG5cdFx0XHR9LFxuXHRcdFx0X2F1dG9DU1MgPSBmdW5jdGlvbih2YXJzLCB0YXJnZXQpIHtcblx0XHRcdFx0dmFyIGNzcyA9IHt9LFxuXHRcdFx0XHRcdHA7XG5cdFx0XHRcdGZvciAocCBpbiB2YXJzKSB7XG5cdFx0XHRcdFx0aWYgKCFfcmVzZXJ2ZWRQcm9wc1twXSAmJiAoIShwIGluIHRhcmdldCkgfHwgcCA9PT0gXCJ0cmFuc2Zvcm1cIiB8fCBwID09PSBcInhcIiB8fCBwID09PSBcInlcIiB8fCBwID09PSBcIndpZHRoXCIgfHwgcCA9PT0gXCJoZWlnaHRcIiB8fCBwID09PSBcImNsYXNzTmFtZVwiIHx8IHAgPT09IFwiYm9yZGVyXCIpICYmICghX3BsdWdpbnNbcF0gfHwgKF9wbHVnaW5zW3BdICYmIF9wbHVnaW5zW3BdLl9hdXRvQ1NTKSkpIHsgLy9ub3RlOiA8aW1nPiBlbGVtZW50cyBjb250YWluIHJlYWQtb25seSBcInhcIiBhbmQgXCJ5XCIgcHJvcGVydGllcy4gV2Ugc2hvdWxkIGFsc28gcHJpb3JpdGl6ZSBlZGl0aW5nIGNzcyB3aWR0aC9oZWlnaHQgcmF0aGVyIHRoYW4gdGhlIGVsZW1lbnQncyBwcm9wZXJ0aWVzLlxuXHRcdFx0XHRcdFx0Y3NzW3BdID0gdmFyc1twXTtcblx0XHRcdFx0XHRcdGRlbGV0ZSB2YXJzW3BdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHR2YXJzLmNzcyA9IGNzcztcblx0XHRcdH07XG5cblx0XHRwID0gVHdlZW5MaXRlLnByb3RvdHlwZSA9IG5ldyBBbmltYXRpb24oKTtcblx0XHRwLmNvbnN0cnVjdG9yID0gVHdlZW5MaXRlO1xuXHRcdHAua2lsbCgpLl9nYyA9IGZhbHNlO1xuXG4vLy0tLS1Ud2VlbkxpdGUgZGVmYXVsdHMsIG92ZXJ3cml0ZSBtYW5hZ2VtZW50LCBhbmQgcm9vdCB1cGRhdGVzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXHRcdHAucmF0aW8gPSAwO1xuXHRcdHAuX2ZpcnN0UFQgPSBwLl90YXJnZXRzID0gcC5fb3ZlcndyaXR0ZW5Qcm9wcyA9IHAuX3N0YXJ0QXQgPSBudWxsO1xuXHRcdHAuX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQgPSBwLl9sYXp5ID0gZmFsc2U7XG5cblx0XHRUd2VlbkxpdGUudmVyc2lvbiA9IFwiMS4xOS4wXCI7XG5cdFx0VHdlZW5MaXRlLmRlZmF1bHRFYXNlID0gcC5fZWFzZSA9IG5ldyBFYXNlKG51bGwsIG51bGwsIDEsIDEpO1xuXHRcdFR3ZWVuTGl0ZS5kZWZhdWx0T3ZlcndyaXRlID0gXCJhdXRvXCI7XG5cdFx0VHdlZW5MaXRlLnRpY2tlciA9IF90aWNrZXI7XG5cdFx0VHdlZW5MaXRlLmF1dG9TbGVlcCA9IDEyMDtcblx0XHRUd2VlbkxpdGUubGFnU21vb3RoaW5nID0gZnVuY3Rpb24odGhyZXNob2xkLCBhZGp1c3RlZExhZykge1xuXHRcdFx0X3RpY2tlci5sYWdTbW9vdGhpbmcodGhyZXNob2xkLCBhZGp1c3RlZExhZyk7XG5cdFx0fTtcblxuXHRcdFR3ZWVuTGl0ZS5zZWxlY3RvciA9IHdpbmRvdy4kIHx8IHdpbmRvdy5qUXVlcnkgfHwgZnVuY3Rpb24oZSkge1xuXHRcdFx0dmFyIHNlbGVjdG9yID0gd2luZG93LiQgfHwgd2luZG93LmpRdWVyeTtcblx0XHRcdGlmIChzZWxlY3Rvcikge1xuXHRcdFx0XHRUd2VlbkxpdGUuc2VsZWN0b3IgPSBzZWxlY3Rvcjtcblx0XHRcdFx0cmV0dXJuIHNlbGVjdG9yKGUpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuICh0eXBlb2YoZG9jdW1lbnQpID09PSBcInVuZGVmaW5lZFwiKSA/IGUgOiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZSkgOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgoZS5jaGFyQXQoMCkgPT09IFwiI1wiKSA/IGUuc3Vic3RyKDEpIDogZSkpO1xuXHRcdH07XG5cblx0XHR2YXIgX2xhenlUd2VlbnMgPSBbXSxcblx0XHRcdF9sYXp5TG9va3VwID0ge30sXG5cdFx0XHRfbnVtYmVyc0V4cCA9IC8oPzooLXwtPXxcXCs9KT9cXGQqXFwuP1xcZCooPzplW1xcLStdP1xcZCspPylbMC05XS9pZyxcblx0XHRcdC8vX25vbk51bWJlcnNFeHAgPSAvKD86KFtcXC0rXSg/IShcXGR8PSkpKXxbXlxcZFxcLSs9ZV18KGUoPyFbXFwtK11bXFxkXSkpKSsvaWcsXG5cdFx0XHRfc2V0UmF0aW8gPSBmdW5jdGlvbih2KSB7XG5cdFx0XHRcdHZhciBwdCA9IHRoaXMuX2ZpcnN0UFQsXG5cdFx0XHRcdFx0bWluID0gMC4wMDAwMDEsXG5cdFx0XHRcdFx0dmFsO1xuXHRcdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0XHR2YWwgPSAhcHQuYmxvYiA/IHB0LmMgKiB2ICsgcHQucyA6IHYgPyB0aGlzLmpvaW4oXCJcIikgOiB0aGlzLnN0YXJ0O1xuXHRcdFx0XHRcdGlmIChwdC5tKSB7XG5cdFx0XHRcdFx0XHR2YWwgPSBwdC5tKHZhbCwgdGhpcy5fdGFyZ2V0IHx8IHB0LnQpO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAodmFsIDwgbWluKSBpZiAodmFsID4gLW1pbikgeyAvL3ByZXZlbnRzIGlzc3VlcyB3aXRoIGNvbnZlcnRpbmcgdmVyeSBzbWFsbCBudW1iZXJzIHRvIHN0cmluZ3MgaW4gdGhlIGJyb3dzZXJcblx0XHRcdFx0XHRcdHZhbCA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICghcHQuZikge1xuXHRcdFx0XHRcdFx0cHQudFtwdC5wXSA9IHZhbDtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHB0LmZwKSB7XG5cdFx0XHRcdFx0XHRwdC50W3B0LnBdKHB0LmZwLCB2YWwpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRwdC50W3B0LnBdKHZhbCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHB0ID0gcHQuX25leHQ7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHQvL2NvbXBhcmVzIHR3byBzdHJpbmdzIChzdGFydC9lbmQpLCBmaW5kcyB0aGUgbnVtYmVycyB0aGF0IGFyZSBkaWZmZXJlbnQgYW5kIHNwaXRzIGJhY2sgYW4gYXJyYXkgcmVwcmVzZW50aW5nIHRoZSB3aG9sZSB2YWx1ZSBidXQgd2l0aCB0aGUgY2hhbmdpbmcgdmFsdWVzIGlzb2xhdGVkIGFzIGVsZW1lbnRzLiBGb3IgZXhhbXBsZSwgXCJyZ2IoMCwwLDApXCIgYW5kIFwicmdiKDEwMCw1MCwwKVwiIHdvdWxkIGJlY29tZSBbXCJyZ2IoXCIsIDAsIFwiLFwiLCA1MCwgXCIsMClcIl0uIE5vdGljZSBpdCBtZXJnZXMgdGhlIHBhcnRzIHRoYXQgYXJlIGlkZW50aWNhbCAocGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9uKS4gVGhlIGFycmF5IGFsc28gaGFzIGEgbGlua2VkIGxpc3Qgb2YgUHJvcFR3ZWVucyBhdHRhY2hlZCBzdGFydGluZyB3aXRoIF9maXJzdFBUIHRoYXQgY29udGFpbiB0aGUgdHdlZW5pbmcgZGF0YSAodCwgcCwgcywgYywgZiwgZXRjLikuIEl0IGFsc28gc3RvcmVzIHRoZSBzdGFydGluZyB2YWx1ZSBhcyBhIFwic3RhcnRcIiBwcm9wZXJ0eSBzbyB0aGF0IHdlIGNhbiByZXZlcnQgdG8gaXQgaWYvd2hlbiBuZWNlc3NhcnksIGxpa2Ugd2hlbiBhIHR3ZWVuIHJld2luZHMgZnVsbHkuIElmIHRoZSBxdWFudGl0eSBvZiBudW1iZXJzIGRpZmZlcnMgYmV0d2VlbiB0aGUgc3RhcnQgYW5kIGVuZCwgaXQgd2lsbCBhbHdheXMgcHJpb3JpdGl6ZSB0aGUgZW5kIHZhbHVlKHMpLiBUaGUgcHQgcGFyYW1ldGVyIGlzIG9wdGlvbmFsIC0gaXQncyBmb3IgYSBQcm9wVHdlZW4gdGhhdCB3aWxsIGJlIGFwcGVuZGVkIHRvIHRoZSBlbmQgb2YgdGhlIGxpbmtlZCBsaXN0IGFuZCBpcyB0eXBpY2FsbHkgZm9yIGFjdHVhbGx5IHNldHRpbmcgdGhlIHZhbHVlIGFmdGVyIGFsbCBvZiB0aGUgZWxlbWVudHMgaGF2ZSBiZWVuIHVwZGF0ZWQgKHdpdGggYXJyYXkuam9pbihcIlwiKSkuXG5cdFx0XHRfYmxvYkRpZiA9IGZ1bmN0aW9uKHN0YXJ0LCBlbmQsIGZpbHRlciwgcHQpIHtcblx0XHRcdFx0dmFyIGEgPSBbc3RhcnQsIGVuZF0sXG5cdFx0XHRcdFx0Y2hhckluZGV4ID0gMCxcblx0XHRcdFx0XHRzID0gXCJcIixcblx0XHRcdFx0XHRjb2xvciA9IDAsXG5cdFx0XHRcdFx0c3RhcnROdW1zLCBlbmROdW1zLCBudW0sIGksIGwsIG5vbk51bWJlcnMsIGN1cnJlbnROdW07XG5cdFx0XHRcdGEuc3RhcnQgPSBzdGFydDtcblx0XHRcdFx0aWYgKGZpbHRlcikge1xuXHRcdFx0XHRcdGZpbHRlcihhKTsgLy9wYXNzIGFuIGFycmF5IHdpdGggdGhlIHN0YXJ0aW5nIGFuZCBlbmRpbmcgdmFsdWVzIGFuZCBsZXQgdGhlIGZpbHRlciBkbyB3aGF0ZXZlciBpdCBuZWVkcyB0byB0aGUgdmFsdWVzLlxuXHRcdFx0XHRcdHN0YXJ0ID0gYVswXTtcblx0XHRcdFx0XHRlbmQgPSBhWzFdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGEubGVuZ3RoID0gMDtcblx0XHRcdFx0c3RhcnROdW1zID0gc3RhcnQubWF0Y2goX251bWJlcnNFeHApIHx8IFtdO1xuXHRcdFx0XHRlbmROdW1zID0gZW5kLm1hdGNoKF9udW1iZXJzRXhwKSB8fCBbXTtcblx0XHRcdFx0aWYgKHB0KSB7XG5cdFx0XHRcdFx0cHQuX25leHQgPSBudWxsO1xuXHRcdFx0XHRcdHB0LmJsb2IgPSAxO1xuXHRcdFx0XHRcdGEuX2ZpcnN0UFQgPSBhLl9hcHBseVBUID0gcHQ7IC8vYXBwbHkgbGFzdCBpbiB0aGUgbGlua2VkIGxpc3QgKHdoaWNoIG1lYW5zIGluc2VydGluZyBpdCBmaXJzdClcblx0XHRcdFx0fVxuXHRcdFx0XHRsID0gZW5kTnVtcy5sZW5ndGg7XG5cdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBsOyBpKyspIHtcblx0XHRcdFx0XHRjdXJyZW50TnVtID0gZW5kTnVtc1tpXTtcblx0XHRcdFx0XHRub25OdW1iZXJzID0gZW5kLnN1YnN0cihjaGFySW5kZXgsIGVuZC5pbmRleE9mKGN1cnJlbnROdW0sIGNoYXJJbmRleCktY2hhckluZGV4KTtcblx0XHRcdFx0XHRzICs9IChub25OdW1iZXJzIHx8ICFpKSA/IG5vbk51bWJlcnMgOiBcIixcIjsgLy9ub3RlOiBTVkcgc3BlYyBhbGxvd3Mgb21pc3Npb24gb2YgY29tbWEvc3BhY2Ugd2hlbiBhIG5lZ2F0aXZlIHNpZ24gaXMgd2VkZ2VkIGJldHdlZW4gdHdvIG51bWJlcnMsIGxpa2UgMi41LTUuMyBpbnN0ZWFkIG9mIDIuNSwtNS4zIGJ1dCB3aGVuIHR3ZWVuaW5nLCB0aGUgbmVnYXRpdmUgdmFsdWUgbWF5IHN3aXRjaCB0byBwb3NpdGl2ZSwgc28gd2UgaW5zZXJ0IHRoZSBjb21tYSBqdXN0IGluIGNhc2UuXG5cdFx0XHRcdFx0Y2hhckluZGV4ICs9IG5vbk51bWJlcnMubGVuZ3RoO1xuXHRcdFx0XHRcdGlmIChjb2xvcikgeyAvL3NlbnNlIHJnYmEoKSB2YWx1ZXMgYW5kIHJvdW5kIHRoZW0uXG5cdFx0XHRcdFx0XHRjb2xvciA9IChjb2xvciArIDEpICUgNTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKG5vbk51bWJlcnMuc3Vic3RyKC01KSA9PT0gXCJyZ2JhKFwiKSB7XG5cdFx0XHRcdFx0XHRjb2xvciA9IDE7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChjdXJyZW50TnVtID09PSBzdGFydE51bXNbaV0gfHwgc3RhcnROdW1zLmxlbmd0aCA8PSBpKSB7XG5cdFx0XHRcdFx0XHRzICs9IGN1cnJlbnROdW07XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGlmIChzKSB7XG5cdFx0XHRcdFx0XHRcdGEucHVzaChzKTtcblx0XHRcdFx0XHRcdFx0cyA9IFwiXCI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRudW0gPSBwYXJzZUZsb2F0KHN0YXJ0TnVtc1tpXSk7XG5cdFx0XHRcdFx0XHRhLnB1c2gobnVtKTtcblx0XHRcdFx0XHRcdGEuX2ZpcnN0UFQgPSB7X25leHQ6IGEuX2ZpcnN0UFQsIHQ6YSwgcDogYS5sZW5ndGgtMSwgczpudW0sIGM6KChjdXJyZW50TnVtLmNoYXJBdCgxKSA9PT0gXCI9XCIpID8gcGFyc2VJbnQoY3VycmVudE51bS5jaGFyQXQoMCkgKyBcIjFcIiwgMTApICogcGFyc2VGbG9hdChjdXJyZW50TnVtLnN1YnN0cigyKSkgOiAocGFyc2VGbG9hdChjdXJyZW50TnVtKSAtIG51bSkpIHx8IDAsIGY6MCwgbTooY29sb3IgJiYgY29sb3IgPCA0KSA/IE1hdGgucm91bmQgOiAwfTtcblx0XHRcdFx0XHRcdC8vbm90ZTogd2UgZG9uJ3Qgc2V0IF9wcmV2IGJlY2F1c2Ugd2UnbGwgbmV2ZXIgbmVlZCB0byByZW1vdmUgaW5kaXZpZHVhbCBQcm9wVHdlZW5zIGZyb20gdGhpcyBsaXN0LlxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRjaGFySW5kZXggKz0gY3VycmVudE51bS5sZW5ndGg7XG5cdFx0XHRcdH1cblx0XHRcdFx0cyArPSBlbmQuc3Vic3RyKGNoYXJJbmRleCk7XG5cdFx0XHRcdGlmIChzKSB7XG5cdFx0XHRcdFx0YS5wdXNoKHMpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGEuc2V0UmF0aW8gPSBfc2V0UmF0aW87XG5cdFx0XHRcdHJldHVybiBhO1xuXHRcdFx0fSxcblx0XHRcdC8vbm90ZTogXCJmdW5jUGFyYW1cIiBpcyBvbmx5IG5lY2Vzc2FyeSBmb3IgZnVuY3Rpb24tYmFzZWQgZ2V0dGVycy9zZXR0ZXJzIHRoYXQgcmVxdWlyZSBhbiBleHRyYSBwYXJhbWV0ZXIgbGlrZSBnZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiKSBhbmQgc2V0QXR0cmlidXRlKFwid2lkdGhcIiwgdmFsdWUpLiBJbiB0aGlzIGV4YW1wbGUsIGZ1bmNQYXJhbSB3b3VsZCBiZSBcIndpZHRoXCIuIFVzZWQgYnkgQXR0clBsdWdpbiBmb3IgZXhhbXBsZS5cblx0XHRcdF9hZGRQcm9wVHdlZW4gPSBmdW5jdGlvbih0YXJnZXQsIHByb3AsIHN0YXJ0LCBlbmQsIG92ZXJ3cml0ZVByb3AsIG1vZCwgZnVuY1BhcmFtLCBzdHJpbmdGaWx0ZXIsIGluZGV4KSB7XG5cdFx0XHRcdGlmICh0eXBlb2YoZW5kKSA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRcdFx0ZW5kID0gZW5kKGluZGV4IHx8IDAsIHRhcmdldCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0dmFyIHMgPSAoc3RhcnQgPT09IFwiZ2V0XCIpID8gdGFyZ2V0W3Byb3BdIDogc3RhcnQsXG5cdFx0XHRcdFx0dHlwZSA9IHR5cGVvZih0YXJnZXRbcHJvcF0pLFxuXHRcdFx0XHRcdGlzUmVsYXRpdmUgPSAodHlwZW9mKGVuZCkgPT09IFwic3RyaW5nXCIgJiYgZW5kLmNoYXJBdCgxKSA9PT0gXCI9XCIpLFxuXHRcdFx0XHRcdHB0ID0ge3Q6dGFyZ2V0LCBwOnByb3AsIHM6cywgZjoodHlwZSA9PT0gXCJmdW5jdGlvblwiKSwgcGc6MCwgbjpvdmVyd3JpdGVQcm9wIHx8IHByb3AsIG06KCFtb2QgPyAwIDogKHR5cGVvZihtb2QpID09PSBcImZ1bmN0aW9uXCIpID8gbW9kIDogTWF0aC5yb3VuZCksIHByOjAsIGM6aXNSZWxhdGl2ZSA/IHBhcnNlSW50KGVuZC5jaGFyQXQoMCkgKyBcIjFcIiwgMTApICogcGFyc2VGbG9hdChlbmQuc3Vic3RyKDIpKSA6IChwYXJzZUZsb2F0KGVuZCkgLSBzKSB8fCAwfSxcblx0XHRcdFx0XHRibG9iLCBnZXR0ZXJOYW1lO1xuXHRcdFx0XHRpZiAodHlwZSAhPT0gXCJudW1iZXJcIikge1xuXHRcdFx0XHRcdGlmICh0eXBlID09PSBcImZ1bmN0aW9uXCIgJiYgc3RhcnQgPT09IFwiZ2V0XCIpIHtcblx0XHRcdFx0XHRcdGdldHRlck5hbWUgPSAoKHByb3AuaW5kZXhPZihcInNldFwiKSB8fCB0eXBlb2YodGFyZ2V0W1wiZ2V0XCIgKyBwcm9wLnN1YnN0cigzKV0pICE9PSBcImZ1bmN0aW9uXCIpID8gcHJvcCA6IFwiZ2V0XCIgKyBwcm9wLnN1YnN0cigzKSk7XG5cdFx0XHRcdFx0XHRwdC5zID0gcyA9IGZ1bmNQYXJhbSA/IHRhcmdldFtnZXR0ZXJOYW1lXShmdW5jUGFyYW0pIDogdGFyZ2V0W2dldHRlck5hbWVdKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICh0eXBlb2YocykgPT09IFwic3RyaW5nXCIgJiYgKGZ1bmNQYXJhbSB8fCBpc05hTihzKSkpIHtcblx0XHRcdFx0XHRcdC8vYSBibG9iIChzdHJpbmcgdGhhdCBoYXMgbXVsdGlwbGUgbnVtYmVycyBpbiBpdClcblx0XHRcdFx0XHRcdHB0LmZwID0gZnVuY1BhcmFtO1xuXHRcdFx0XHRcdFx0YmxvYiA9IF9ibG9iRGlmKHMsIGVuZCwgc3RyaW5nRmlsdGVyIHx8IFR3ZWVuTGl0ZS5kZWZhdWx0U3RyaW5nRmlsdGVyLCBwdCk7XG5cdFx0XHRcdFx0XHRwdCA9IHt0OmJsb2IsIHA6XCJzZXRSYXRpb1wiLCBzOjAsIGM6MSwgZjoyLCBwZzowLCBuOm92ZXJ3cml0ZVByb3AgfHwgcHJvcCwgcHI6MCwgbTowfTsgLy9cIjJcIiBpbmRpY2F0ZXMgaXQncyBhIEJsb2IgcHJvcGVydHkgdHdlZW4uIE5lZWRlZCBmb3IgUm91bmRQcm9wc1BsdWdpbiBmb3IgZXhhbXBsZS5cblx0XHRcdFx0XHR9IGVsc2UgaWYgKCFpc1JlbGF0aXZlKSB7XG5cdFx0XHRcdFx0XHRwdC5zID0gcGFyc2VGbG9hdChzKTtcblx0XHRcdFx0XHRcdHB0LmMgPSAocGFyc2VGbG9hdChlbmQpIC0gcHQucykgfHwgMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHB0LmMpIHsgLy9vbmx5IGFkZCBpdCB0byB0aGUgbGlua2VkIGxpc3QgaWYgdGhlcmUncyBhIGNoYW5nZS5cblx0XHRcdFx0XHRpZiAoKHB0Ll9uZXh0ID0gdGhpcy5fZmlyc3RQVCkpIHtcblx0XHRcdFx0XHRcdHB0Ll9uZXh0Ll9wcmV2ID0gcHQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRoaXMuX2ZpcnN0UFQgPSBwdDtcblx0XHRcdFx0XHRyZXR1cm4gcHQ7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRfaW50ZXJuYWxzID0gVHdlZW5MaXRlLl9pbnRlcm5hbHMgPSB7aXNBcnJheTpfaXNBcnJheSwgaXNTZWxlY3RvcjpfaXNTZWxlY3RvciwgbGF6eVR3ZWVuczpfbGF6eVR3ZWVucywgYmxvYkRpZjpfYmxvYkRpZn0sIC8vZ2l2ZXMgdXMgYSB3YXkgdG8gZXhwb3NlIGNlcnRhaW4gcHJpdmF0ZSB2YWx1ZXMgdG8gb3RoZXIgR3JlZW5Tb2NrIGNsYXNzZXMgd2l0aG91dCBjb250YW1pbmF0aW5nIHRoYSBtYWluIFR3ZWVuTGl0ZSBvYmplY3QuXG5cdFx0XHRfcGx1Z2lucyA9IFR3ZWVuTGl0ZS5fcGx1Z2lucyA9IHt9LFxuXHRcdFx0X3R3ZWVuTG9va3VwID0gX2ludGVybmFscy50d2Vlbkxvb2t1cCA9IHt9LFxuXHRcdFx0X3R3ZWVuTG9va3VwTnVtID0gMCxcblx0XHRcdF9yZXNlcnZlZFByb3BzID0gX2ludGVybmFscy5yZXNlcnZlZFByb3BzID0ge2Vhc2U6MSwgZGVsYXk6MSwgb3ZlcndyaXRlOjEsIG9uQ29tcGxldGU6MSwgb25Db21wbGV0ZVBhcmFtczoxLCBvbkNvbXBsZXRlU2NvcGU6MSwgdXNlRnJhbWVzOjEsIHJ1bkJhY2t3YXJkczoxLCBzdGFydEF0OjEsIG9uVXBkYXRlOjEsIG9uVXBkYXRlUGFyYW1zOjEsIG9uVXBkYXRlU2NvcGU6MSwgb25TdGFydDoxLCBvblN0YXJ0UGFyYW1zOjEsIG9uU3RhcnRTY29wZToxLCBvblJldmVyc2VDb21wbGV0ZToxLCBvblJldmVyc2VDb21wbGV0ZVBhcmFtczoxLCBvblJldmVyc2VDb21wbGV0ZVNjb3BlOjEsIG9uUmVwZWF0OjEsIG9uUmVwZWF0UGFyYW1zOjEsIG9uUmVwZWF0U2NvcGU6MSwgZWFzZVBhcmFtczoxLCB5b3lvOjEsIGltbWVkaWF0ZVJlbmRlcjoxLCByZXBlYXQ6MSwgcmVwZWF0RGVsYXk6MSwgZGF0YToxLCBwYXVzZWQ6MSwgcmV2ZXJzZWQ6MSwgYXV0b0NTUzoxLCBsYXp5OjEsIG9uT3ZlcndyaXRlOjEsIGNhbGxiYWNrU2NvcGU6MSwgc3RyaW5nRmlsdGVyOjEsIGlkOjF9LFxuXHRcdFx0X292ZXJ3cml0ZUxvb2t1cCA9IHtub25lOjAsIGFsbDoxLCBhdXRvOjIsIGNvbmN1cnJlbnQ6MywgYWxsT25TdGFydDo0LCBwcmVleGlzdGluZzo1LCBcInRydWVcIjoxLCBcImZhbHNlXCI6MH0sXG5cdFx0XHRfcm9vdEZyYW1lc1RpbWVsaW5lID0gQW5pbWF0aW9uLl9yb290RnJhbWVzVGltZWxpbmUgPSBuZXcgU2ltcGxlVGltZWxpbmUoKSxcblx0XHRcdF9yb290VGltZWxpbmUgPSBBbmltYXRpb24uX3Jvb3RUaW1lbGluZSA9IG5ldyBTaW1wbGVUaW1lbGluZSgpLFxuXHRcdFx0X25leHRHQ0ZyYW1lID0gMzAsXG5cdFx0XHRfbGF6eVJlbmRlciA9IF9pbnRlcm5hbHMubGF6eVJlbmRlciA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgaSA9IF9sYXp5VHdlZW5zLmxlbmd0aCxcblx0XHRcdFx0XHR0d2Vlbjtcblx0XHRcdFx0X2xhenlMb29rdXAgPSB7fTtcblx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0dHdlZW4gPSBfbGF6eVR3ZWVuc1tpXTtcblx0XHRcdFx0XHRpZiAodHdlZW4gJiYgdHdlZW4uX2xhenkgIT09IGZhbHNlKSB7XG5cdFx0XHRcdFx0XHR0d2Vlbi5yZW5kZXIodHdlZW4uX2xhenlbMF0sIHR3ZWVuLl9sYXp5WzFdLCB0cnVlKTtcblx0XHRcdFx0XHRcdHR3ZWVuLl9sYXp5ID0gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdF9sYXp5VHdlZW5zLmxlbmd0aCA9IDA7XG5cdFx0XHR9O1xuXG5cdFx0X3Jvb3RUaW1lbGluZS5fc3RhcnRUaW1lID0gX3RpY2tlci50aW1lO1xuXHRcdF9yb290RnJhbWVzVGltZWxpbmUuX3N0YXJ0VGltZSA9IF90aWNrZXIuZnJhbWU7XG5cdFx0X3Jvb3RUaW1lbGluZS5fYWN0aXZlID0gX3Jvb3RGcmFtZXNUaW1lbGluZS5fYWN0aXZlID0gdHJ1ZTtcblx0XHRzZXRUaW1lb3V0KF9sYXp5UmVuZGVyLCAxKTsgLy9vbiBzb21lIG1vYmlsZSBkZXZpY2VzLCB0aGVyZSBpc24ndCBhIFwidGlja1wiIGJlZm9yZSBjb2RlIHJ1bnMgd2hpY2ggbWVhbnMgYW55IGxhenkgcmVuZGVycyB3b3VsZG4ndCBydW4gYmVmb3JlIHRoZSBuZXh0IG9mZmljaWFsIFwidGlja1wiLlxuXG5cdFx0QW5pbWF0aW9uLl91cGRhdGVSb290ID0gVHdlZW5MaXRlLnJlbmRlciA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgaSwgYSwgcDtcblx0XHRcdFx0aWYgKF9sYXp5VHdlZW5zLmxlbmd0aCkgeyAvL2lmIGNvZGUgaXMgcnVuIG91dHNpZGUgb2YgdGhlIHJlcXVlc3RBbmltYXRpb25GcmFtZSBsb29wLCB0aGVyZSBtYXkgYmUgdHdlZW5zIHF1ZXVlZCBBRlRFUiB0aGUgZW5naW5lIHJlZnJlc2hlZCwgc28gd2UgbmVlZCB0byBlbnN1cmUgYW55IHBlbmRpbmcgcmVuZGVycyBvY2N1ciBiZWZvcmUgd2UgcmVmcmVzaCBhZ2Fpbi5cblx0XHRcdFx0XHRfbGF6eVJlbmRlcigpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdF9yb290VGltZWxpbmUucmVuZGVyKChfdGlja2VyLnRpbWUgLSBfcm9vdFRpbWVsaW5lLl9zdGFydFRpbWUpICogX3Jvb3RUaW1lbGluZS5fdGltZVNjYWxlLCBmYWxzZSwgZmFsc2UpO1xuXHRcdFx0XHRfcm9vdEZyYW1lc1RpbWVsaW5lLnJlbmRlcigoX3RpY2tlci5mcmFtZSAtIF9yb290RnJhbWVzVGltZWxpbmUuX3N0YXJ0VGltZSkgKiBfcm9vdEZyYW1lc1RpbWVsaW5lLl90aW1lU2NhbGUsIGZhbHNlLCBmYWxzZSk7XG5cdFx0XHRcdGlmIChfbGF6eVR3ZWVucy5sZW5ndGgpIHtcblx0XHRcdFx0XHRfbGF6eVJlbmRlcigpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChfdGlja2VyLmZyYW1lID49IF9uZXh0R0NGcmFtZSkgeyAvL2R1bXAgZ2FyYmFnZSBldmVyeSAxMjAgZnJhbWVzIG9yIHdoYXRldmVyIHRoZSB1c2VyIHNldHMgVHdlZW5MaXRlLmF1dG9TbGVlcCB0b1xuXHRcdFx0XHRcdF9uZXh0R0NGcmFtZSA9IF90aWNrZXIuZnJhbWUgKyAocGFyc2VJbnQoVHdlZW5MaXRlLmF1dG9TbGVlcCwgMTApIHx8IDEyMCk7XG5cdFx0XHRcdFx0Zm9yIChwIGluIF90d2Vlbkxvb2t1cCkge1xuXHRcdFx0XHRcdFx0YSA9IF90d2Vlbkxvb2t1cFtwXS50d2VlbnM7XG5cdFx0XHRcdFx0XHRpID0gYS5sZW5ndGg7XG5cdFx0XHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRcdFx0aWYgKGFbaV0uX2djKSB7XG5cdFx0XHRcdFx0XHRcdFx0YS5zcGxpY2UoaSwgMSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmIChhLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0XHRcdFx0XHRkZWxldGUgX3R3ZWVuTG9va3VwW3BdO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHQvL2lmIHRoZXJlIGFyZSBubyBtb3JlIHR3ZWVucyBpbiB0aGUgcm9vdCB0aW1lbGluZXMsIG9yIGlmIHRoZXkncmUgYWxsIHBhdXNlZCwgbWFrZSB0aGUgX3RpbWVyIHNsZWVwIHRvIHJlZHVjZSBsb2FkIG9uIHRoZSBDUFUgc2xpZ2h0bHlcblx0XHRcdFx0XHRwID0gX3Jvb3RUaW1lbGluZS5fZmlyc3Q7XG5cdFx0XHRcdFx0aWYgKCFwIHx8IHAuX3BhdXNlZCkgaWYgKFR3ZWVuTGl0ZS5hdXRvU2xlZXAgJiYgIV9yb290RnJhbWVzVGltZWxpbmUuX2ZpcnN0ICYmIF90aWNrZXIuX2xpc3RlbmVycy50aWNrLmxlbmd0aCA9PT0gMSkge1xuXHRcdFx0XHRcdFx0d2hpbGUgKHAgJiYgcC5fcGF1c2VkKSB7XG5cdFx0XHRcdFx0XHRcdHAgPSBwLl9uZXh0O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCFwKSB7XG5cdFx0XHRcdFx0XHRcdF90aWNrZXIuc2xlZXAoKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRfdGlja2VyLmFkZEV2ZW50TGlzdGVuZXIoXCJ0aWNrXCIsIEFuaW1hdGlvbi5fdXBkYXRlUm9vdCk7XG5cblx0XHR2YXIgX3JlZ2lzdGVyID0gZnVuY3Rpb24odGFyZ2V0LCB0d2Vlbiwgc2NydWIpIHtcblx0XHRcdFx0dmFyIGlkID0gdGFyZ2V0Ll9nc1R3ZWVuSUQsIGEsIGk7XG5cdFx0XHRcdGlmICghX3R3ZWVuTG9va3VwW2lkIHx8ICh0YXJnZXQuX2dzVHdlZW5JRCA9IGlkID0gXCJ0XCIgKyAoX3R3ZWVuTG9va3VwTnVtKyspKV0pIHtcblx0XHRcdFx0XHRfdHdlZW5Mb29rdXBbaWRdID0ge3RhcmdldDp0YXJnZXQsIHR3ZWVuczpbXX07XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHR3ZWVuKSB7XG5cdFx0XHRcdFx0YSA9IF90d2Vlbkxvb2t1cFtpZF0udHdlZW5zO1xuXHRcdFx0XHRcdGFbKGkgPSBhLmxlbmd0aCldID0gdHdlZW47XG5cdFx0XHRcdFx0aWYgKHNjcnViKSB7XG5cdFx0XHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRcdFx0aWYgKGFbaV0gPT09IHR3ZWVuKSB7XG5cdFx0XHRcdFx0XHRcdFx0YS5zcGxpY2UoaSwgMSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIF90d2Vlbkxvb2t1cFtpZF0udHdlZW5zO1xuXHRcdFx0fSxcblx0XHRcdF9vbk92ZXJ3cml0ZSA9IGZ1bmN0aW9uKG92ZXJ3cml0dGVuVHdlZW4sIG92ZXJ3cml0aW5nVHdlZW4sIHRhcmdldCwga2lsbGVkUHJvcHMpIHtcblx0XHRcdFx0dmFyIGZ1bmMgPSBvdmVyd3JpdHRlblR3ZWVuLnZhcnMub25PdmVyd3JpdGUsIHIxLCByMjtcblx0XHRcdFx0aWYgKGZ1bmMpIHtcblx0XHRcdFx0XHRyMSA9IGZ1bmMob3ZlcndyaXR0ZW5Ud2Vlbiwgb3ZlcndyaXRpbmdUd2VlbiwgdGFyZ2V0LCBraWxsZWRQcm9wcyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZnVuYyA9IFR3ZWVuTGl0ZS5vbk92ZXJ3cml0ZTtcblx0XHRcdFx0aWYgKGZ1bmMpIHtcblx0XHRcdFx0XHRyMiA9IGZ1bmMob3ZlcndyaXR0ZW5Ud2Vlbiwgb3ZlcndyaXRpbmdUd2VlbiwgdGFyZ2V0LCBraWxsZWRQcm9wcyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIChyMSAhPT0gZmFsc2UgJiYgcjIgIT09IGZhbHNlKTtcblx0XHRcdH0sXG5cdFx0XHRfYXBwbHlPdmVyd3JpdGUgPSBmdW5jdGlvbih0YXJnZXQsIHR3ZWVuLCBwcm9wcywgbW9kZSwgc2libGluZ3MpIHtcblx0XHRcdFx0dmFyIGksIGNoYW5nZWQsIGN1clR3ZWVuLCBsO1xuXHRcdFx0XHRpZiAobW9kZSA9PT0gMSB8fCBtb2RlID49IDQpIHtcblx0XHRcdFx0XHRsID0gc2libGluZ3MubGVuZ3RoO1xuXHRcdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBsOyBpKyspIHtcblx0XHRcdFx0XHRcdGlmICgoY3VyVHdlZW4gPSBzaWJsaW5nc1tpXSkgIT09IHR3ZWVuKSB7XG5cdFx0XHRcdFx0XHRcdGlmICghY3VyVHdlZW4uX2djKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKGN1clR3ZWVuLl9raWxsKG51bGwsIHRhcmdldCwgdHdlZW4pKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjaGFuZ2VkID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAobW9kZSA9PT0gNSkge1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIGNoYW5nZWQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly9OT1RFOiBBZGQgMC4wMDAwMDAwMDAxIHRvIG92ZXJjb21lIGZsb2F0aW5nIHBvaW50IGVycm9ycyB0aGF0IGNhbiBjYXVzZSB0aGUgc3RhcnRUaW1lIHRvIGJlIFZFUlkgc2xpZ2h0bHkgb2ZmICh3aGVuIGEgdHdlZW4ncyB0aW1lKCkgaXMgc2V0IGZvciBleGFtcGxlKVxuXHRcdFx0XHR2YXIgc3RhcnRUaW1lID0gdHdlZW4uX3N0YXJ0VGltZSArIF90aW55TnVtLFxuXHRcdFx0XHRcdG92ZXJsYXBzID0gW10sXG5cdFx0XHRcdFx0b0NvdW50ID0gMCxcblx0XHRcdFx0XHR6ZXJvRHVyID0gKHR3ZWVuLl9kdXJhdGlvbiA9PT0gMCksXG5cdFx0XHRcdFx0Z2xvYmFsU3RhcnQ7XG5cdFx0XHRcdGkgPSBzaWJsaW5ncy5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdGlmICgoY3VyVHdlZW4gPSBzaWJsaW5nc1tpXSkgPT09IHR3ZWVuIHx8IGN1clR3ZWVuLl9nYyB8fCBjdXJUd2Vlbi5fcGF1c2VkKSB7XG5cdFx0XHRcdFx0XHQvL2lnbm9yZVxuXHRcdFx0XHRcdH0gZWxzZSBpZiAoY3VyVHdlZW4uX3RpbWVsaW5lICE9PSB0d2Vlbi5fdGltZWxpbmUpIHtcblx0XHRcdFx0XHRcdGdsb2JhbFN0YXJ0ID0gZ2xvYmFsU3RhcnQgfHwgX2NoZWNrT3ZlcmxhcCh0d2VlbiwgMCwgemVyb0R1cik7XG5cdFx0XHRcdFx0XHRpZiAoX2NoZWNrT3ZlcmxhcChjdXJUd2VlbiwgZ2xvYmFsU3RhcnQsIHplcm9EdXIpID09PSAwKSB7XG5cdFx0XHRcdFx0XHRcdG92ZXJsYXBzW29Db3VudCsrXSA9IGN1clR3ZWVuO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gZWxzZSBpZiAoY3VyVHdlZW4uX3N0YXJ0VGltZSA8PSBzdGFydFRpbWUpIGlmIChjdXJUd2Vlbi5fc3RhcnRUaW1lICsgY3VyVHdlZW4udG90YWxEdXJhdGlvbigpIC8gY3VyVHdlZW4uX3RpbWVTY2FsZSA+IHN0YXJ0VGltZSkgaWYgKCEoKHplcm9EdXIgfHwgIWN1clR3ZWVuLl9pbml0dGVkKSAmJiBzdGFydFRpbWUgLSBjdXJUd2Vlbi5fc3RhcnRUaW1lIDw9IDAuMDAwMDAwMDAwMikpIHtcblx0XHRcdFx0XHRcdG92ZXJsYXBzW29Db3VudCsrXSA9IGN1clR3ZWVuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdGkgPSBvQ291bnQ7XG5cdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdGN1clR3ZWVuID0gb3ZlcmxhcHNbaV07XG5cdFx0XHRcdFx0aWYgKG1vZGUgPT09IDIpIGlmIChjdXJUd2Vlbi5fa2lsbChwcm9wcywgdGFyZ2V0LCB0d2VlbikpIHtcblx0XHRcdFx0XHRcdGNoYW5nZWQgPSB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAobW9kZSAhPT0gMiB8fCAoIWN1clR3ZWVuLl9maXJzdFBUICYmIGN1clR3ZWVuLl9pbml0dGVkKSkge1xuXHRcdFx0XHRcdFx0aWYgKG1vZGUgIT09IDIgJiYgIV9vbk92ZXJ3cml0ZShjdXJUd2VlbiwgdHdlZW4pKSB7XG5cdFx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKGN1clR3ZWVuLl9lbmFibGVkKGZhbHNlLCBmYWxzZSkpIHsgLy9pZiBhbGwgcHJvcGVydHkgdHdlZW5zIGhhdmUgYmVlbiBvdmVyd3JpdHRlbiwga2lsbCB0aGUgdHdlZW4uXG5cdFx0XHRcdFx0XHRcdGNoYW5nZWQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gY2hhbmdlZDtcblx0XHRcdH0sXG5cdFx0XHRfY2hlY2tPdmVybGFwID0gZnVuY3Rpb24odHdlZW4sIHJlZmVyZW5jZSwgemVyb0R1cikge1xuXHRcdFx0XHR2YXIgdGwgPSB0d2Vlbi5fdGltZWxpbmUsXG5cdFx0XHRcdFx0dHMgPSB0bC5fdGltZVNjYWxlLFxuXHRcdFx0XHRcdHQgPSB0d2Vlbi5fc3RhcnRUaW1lO1xuXHRcdFx0XHR3aGlsZSAodGwuX3RpbWVsaW5lKSB7XG5cdFx0XHRcdFx0dCArPSB0bC5fc3RhcnRUaW1lO1xuXHRcdFx0XHRcdHRzICo9IHRsLl90aW1lU2NhbGU7XG5cdFx0XHRcdFx0aWYgKHRsLl9wYXVzZWQpIHtcblx0XHRcdFx0XHRcdHJldHVybiAtMTAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0bCA9IHRsLl90aW1lbGluZTtcblx0XHRcdFx0fVxuXHRcdFx0XHR0IC89IHRzO1xuXHRcdFx0XHRyZXR1cm4gKHQgPiByZWZlcmVuY2UpID8gdCAtIHJlZmVyZW5jZSA6ICgoemVyb0R1ciAmJiB0ID09PSByZWZlcmVuY2UpIHx8ICghdHdlZW4uX2luaXR0ZWQgJiYgdCAtIHJlZmVyZW5jZSA8IDIgKiBfdGlueU51bSkpID8gX3RpbnlOdW0gOiAoKHQgKz0gdHdlZW4udG90YWxEdXJhdGlvbigpIC8gdHdlZW4uX3RpbWVTY2FsZSAvIHRzKSA+IHJlZmVyZW5jZSArIF90aW55TnVtKSA/IDAgOiB0IC0gcmVmZXJlbmNlIC0gX3RpbnlOdW07XG5cdFx0XHR9O1xuXG5cbi8vLS0tLSBUd2VlbkxpdGUgaW5zdGFuY2UgbWV0aG9kcyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cdFx0cC5faW5pdCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHYgPSB0aGlzLnZhcnMsXG5cdFx0XHRcdG9wID0gdGhpcy5fb3ZlcndyaXR0ZW5Qcm9wcyxcblx0XHRcdFx0ZHVyID0gdGhpcy5fZHVyYXRpb24sXG5cdFx0XHRcdGltbWVkaWF0ZSA9ICEhdi5pbW1lZGlhdGVSZW5kZXIsXG5cdFx0XHRcdGVhc2UgPSB2LmVhc2UsXG5cdFx0XHRcdGksIGluaXRQbHVnaW5zLCBwdCwgcCwgc3RhcnRWYXJzLCBsO1xuXHRcdFx0aWYgKHYuc3RhcnRBdCkge1xuXHRcdFx0XHRpZiAodGhpcy5fc3RhcnRBdCkge1xuXHRcdFx0XHRcdHRoaXMuX3N0YXJ0QXQucmVuZGVyKC0xLCB0cnVlKTsgLy9pZiB3ZSd2ZSBydW4gYSBzdGFydEF0IHByZXZpb3VzbHkgKHdoZW4gdGhlIHR3ZWVuIGluc3RhbnRpYXRlZCksIHdlIHNob3VsZCByZXZlcnQgaXQgc28gdGhhdCB0aGUgdmFsdWVzIHJlLWluc3RhbnRpYXRlIGNvcnJlY3RseSBwYXJ0aWN1bGFybHkgZm9yIHJlbGF0aXZlIHR3ZWVucy4gV2l0aG91dCB0aGlzLCBhIFR3ZWVuTGl0ZS5mcm9tVG8ob2JqLCAxLCB7eDpcIis9MTAwXCJ9LCB7eDpcIi09MTAwXCJ9KSwgZm9yIGV4YW1wbGUsIHdvdWxkIGFjdHVhbGx5IGp1bXAgdG8gKz0yMDAgYmVjYXVzZSB0aGUgc3RhcnRBdCB3b3VsZCBydW4gdHdpY2UsIGRvdWJsaW5nIHRoZSByZWxhdGl2ZSBjaGFuZ2UuXG5cdFx0XHRcdFx0dGhpcy5fc3RhcnRBdC5raWxsKCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0c3RhcnRWYXJzID0ge307XG5cdFx0XHRcdGZvciAocCBpbiB2LnN0YXJ0QXQpIHsgLy9jb3B5IHRoZSBwcm9wZXJ0aWVzL3ZhbHVlcyBpbnRvIGEgbmV3IG9iamVjdCB0byBhdm9pZCBjb2xsaXNpb25zLCBsaWtlIHZhciB0byA9IHt4OjB9LCBmcm9tID0ge3g6NTAwfTsgdGltZWxpbmUuZnJvbVRvKGUsIDEsIGZyb20sIHRvKS5mcm9tVG8oZSwgMSwgdG8sIGZyb20pO1xuXHRcdFx0XHRcdHN0YXJ0VmFyc1twXSA9IHYuc3RhcnRBdFtwXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRzdGFydFZhcnMub3ZlcndyaXRlID0gZmFsc2U7XG5cdFx0XHRcdHN0YXJ0VmFycy5pbW1lZGlhdGVSZW5kZXIgPSB0cnVlO1xuXHRcdFx0XHRzdGFydFZhcnMubGF6eSA9IChpbW1lZGlhdGUgJiYgdi5sYXp5ICE9PSBmYWxzZSk7XG5cdFx0XHRcdHN0YXJ0VmFycy5zdGFydEF0ID0gc3RhcnRWYXJzLmRlbGF5ID0gbnVsbDsgLy9ubyBuZXN0aW5nIG9mIHN0YXJ0QXQgb2JqZWN0cyBhbGxvd2VkIChvdGhlcndpc2UgaXQgY291bGQgY2F1c2UgYW4gaW5maW5pdGUgbG9vcCkuXG5cdFx0XHRcdHRoaXMuX3N0YXJ0QXQgPSBUd2VlbkxpdGUudG8odGhpcy50YXJnZXQsIDAsIHN0YXJ0VmFycyk7XG5cdFx0XHRcdGlmIChpbW1lZGlhdGUpIHtcblx0XHRcdFx0XHRpZiAodGhpcy5fdGltZSA+IDApIHtcblx0XHRcdFx0XHRcdHRoaXMuX3N0YXJ0QXQgPSBudWxsOyAvL3R3ZWVucyB0aGF0IHJlbmRlciBpbW1lZGlhdGVseSAobGlrZSBtb3N0IGZyb20oKSBhbmQgZnJvbVRvKCkgdHdlZW5zKSBzaG91bGRuJ3QgcmV2ZXJ0IHdoZW4gdGhlaXIgcGFyZW50IHRpbWVsaW5lJ3MgcGxheWhlYWQgZ29lcyBiYWNrd2FyZCBwYXN0IHRoZSBzdGFydFRpbWUgYmVjYXVzZSB0aGUgaW5pdGlhbCByZW5kZXIgY291bGQgaGF2ZSBoYXBwZW5lZCBhbnl0aW1lIGFuZCBpdCBzaG91bGRuJ3QgYmUgZGlyZWN0bHkgY29ycmVsYXRlZCB0byB0aGlzIHR3ZWVuJ3Mgc3RhcnRUaW1lLiBJbWFnaW5lIHNldHRpbmcgdXAgYSBjb21wbGV4IGFuaW1hdGlvbiB3aGVyZSB0aGUgYmVnaW5uaW5nIHN0YXRlcyBvZiB2YXJpb3VzIG9iamVjdHMgYXJlIHJlbmRlcmVkIGltbWVkaWF0ZWx5IGJ1dCB0aGUgdHdlZW4gZG9lc24ndCBoYXBwZW4gZm9yIHF1aXRlIHNvbWUgdGltZSAtIGlmIHdlIHJldmVydCB0byB0aGUgc3RhcnRpbmcgdmFsdWVzIGFzIHNvb24gYXMgdGhlIHBsYXloZWFkIGdvZXMgYmFja3dhcmQgcGFzdCB0aGUgdHdlZW4ncyBzdGFydFRpbWUsIGl0IHdpbGwgdGhyb3cgdGhpbmdzIG9mZiB2aXN1YWxseS4gUmV2ZXJzaW9uIHNob3VsZCBvbmx5IGhhcHBlbiBpbiBUaW1lbGluZUxpdGUvTWF4IGluc3RhbmNlcyB3aGVyZSBpbW1lZGlhdGVSZW5kZXIgd2FzIGZhbHNlICh3aGljaCBpcyB0aGUgZGVmYXVsdCBpbiB0aGUgY29udmVuaWVuY2UgbWV0aG9kcyBsaWtlIGZyb20oKSkuXG5cdFx0XHRcdFx0fSBlbHNlIGlmIChkdXIgIT09IDApIHtcblx0XHRcdFx0XHRcdHJldHVybjsgLy93ZSBza2lwIGluaXRpYWxpemF0aW9uIGhlcmUgc28gdGhhdCBvdmVyd3JpdGluZyBkb2Vzbid0IG9jY3VyIHVudGlsIHRoZSB0d2VlbiBhY3R1YWxseSBiZWdpbnMuIE90aGVyd2lzZSwgaWYgeW91IGNyZWF0ZSBzZXZlcmFsIGltbWVkaWF0ZVJlbmRlcjp0cnVlIHR3ZWVucyBvZiB0aGUgc2FtZSB0YXJnZXQvcHJvcGVydGllcyB0byBkcm9wIGludG8gYSBUaW1lbGluZUxpdGUgb3IgVGltZWxpbmVNYXgsIHRoZSBsYXN0IG9uZSBjcmVhdGVkIHdvdWxkIG92ZXJ3cml0ZSB0aGUgZmlyc3Qgb25lcyBiZWNhdXNlIHRoZXkgZGlkbid0IGdldCBwbGFjZWQgaW50byB0aGUgdGltZWxpbmUgeWV0IGJlZm9yZSB0aGUgZmlyc3QgcmVuZGVyIG9jY3VycyBhbmQga2lja3MgaW4gb3ZlcndyaXRpbmcuXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKHYucnVuQmFja3dhcmRzICYmIGR1ciAhPT0gMCkge1xuXHRcdFx0XHQvL2Zyb20oKSB0d2VlbnMgbXVzdCBiZSBoYW5kbGVkIHVuaXF1ZWx5OiB0aGVpciBiZWdpbm5pbmcgdmFsdWVzIG11c3QgYmUgcmVuZGVyZWQgYnV0IHdlIGRvbid0IHdhbnQgb3ZlcndyaXRpbmcgdG8gb2NjdXIgeWV0ICh3aGVuIHRpbWUgaXMgc3RpbGwgMCkuIFdhaXQgdW50aWwgdGhlIHR3ZWVuIGFjdHVhbGx5IGJlZ2lucyBiZWZvcmUgZG9pbmcgYWxsIHRoZSByb3V0aW5lcyBsaWtlIG92ZXJ3cml0aW5nLiBBdCB0aGF0IHRpbWUsIHdlIHNob3VsZCByZW5kZXIgYXQgdGhlIEVORCBvZiB0aGUgdHdlZW4gdG8gZW5zdXJlIHRoYXQgdGhpbmdzIGluaXRpYWxpemUgY29ycmVjdGx5IChyZW1lbWJlciwgZnJvbSgpIHR3ZWVucyBnbyBiYWNrd2FyZHMpXG5cdFx0XHRcdGlmICh0aGlzLl9zdGFydEF0KSB7XG5cdFx0XHRcdFx0dGhpcy5fc3RhcnRBdC5yZW5kZXIoLTEsIHRydWUpO1xuXHRcdFx0XHRcdHRoaXMuX3N0YXJ0QXQua2lsbCgpO1xuXHRcdFx0XHRcdHRoaXMuX3N0YXJ0QXQgPSBudWxsO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGlmICh0aGlzLl90aW1lICE9PSAwKSB7IC8vaW4gcmFyZSBjYXNlcyAobGlrZSBpZiBhIGZyb20oKSB0d2VlbiBydW5zIGFuZCB0aGVuIGlzIGludmFsaWRhdGUoKS1lZCksIGltbWVkaWF0ZVJlbmRlciBjb3VsZCBiZSB0cnVlIGJ1dCB0aGUgaW5pdGlhbCBmb3JjZWQtcmVuZGVyIGdldHMgc2tpcHBlZCwgc28gdGhlcmUncyBubyBuZWVkIHRvIGZvcmNlIHRoZSByZW5kZXIgaW4gdGhpcyBjb250ZXh0IHdoZW4gdGhlIF90aW1lIGlzIGdyZWF0ZXIgdGhhbiAwXG5cdFx0XHRcdFx0XHRpbW1lZGlhdGUgPSBmYWxzZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cHQgPSB7fTtcblx0XHRcdFx0XHRmb3IgKHAgaW4gdikgeyAvL2NvcHkgcHJvcHMgaW50byBhIG5ldyBvYmplY3QgYW5kIHNraXAgYW55IHJlc2VydmVkIHByb3BzLCBvdGhlcndpc2Ugb25Db21wbGV0ZSBvciBvblVwZGF0ZSBvciBvblN0YXJ0IGNvdWxkIGZpcmUuIFdlIHNob3VsZCwgaG93ZXZlciwgcGVybWl0IGF1dG9DU1MgdG8gZ28gdGhyb3VnaC5cblx0XHRcdFx0XHRcdGlmICghX3Jlc2VydmVkUHJvcHNbcF0gfHwgcCA9PT0gXCJhdXRvQ1NTXCIpIHtcblx0XHRcdFx0XHRcdFx0cHRbcF0gPSB2W3BdO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwdC5vdmVyd3JpdGUgPSAwO1xuXHRcdFx0XHRcdHB0LmRhdGEgPSBcImlzRnJvbVN0YXJ0XCI7IC8vd2UgdGFnIHRoZSB0d2VlbiB3aXRoIGFzIFwiaXNGcm9tU3RhcnRcIiBzbyB0aGF0IGlmIFtpbnNpZGUgYSBwbHVnaW5dIHdlIG5lZWQgdG8gb25seSBkbyBzb21ldGhpbmcgYXQgdGhlIHZlcnkgRU5EIG9mIGEgdHdlZW4sIHdlIGhhdmUgYSB3YXkgb2YgaWRlbnRpZnlpbmcgdGhpcyB0d2VlbiBhcyBtZXJlbHkgdGhlIG9uZSB0aGF0J3Mgc2V0dGluZyB0aGUgYmVnaW5uaW5nIHZhbHVlcyBmb3IgYSBcImZyb20oKVwiIHR3ZWVuLiBGb3IgZXhhbXBsZSwgY2xlYXJQcm9wcyBpbiBDU1NQbHVnaW4gc2hvdWxkIG9ubHkgZ2V0IGFwcGxpZWQgYXQgdGhlIHZlcnkgRU5EIG9mIGEgdHdlZW4gYW5kIHdpdGhvdXQgdGhpcyB0YWcsIGZyb20oLi4ue2hlaWdodDoxMDAsIGNsZWFyUHJvcHM6XCJoZWlnaHRcIiwgZGVsYXk6MX0pIHdvdWxkIHdpcGUgdGhlIGhlaWdodCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSB0d2VlbiBhbmQgYWZ0ZXIgMSBzZWNvbmQsIGl0J2Qga2ljayBiYWNrIGluLlxuXHRcdFx0XHRcdHB0LmxhenkgPSAoaW1tZWRpYXRlICYmIHYubGF6eSAhPT0gZmFsc2UpO1xuXHRcdFx0XHRcdHB0LmltbWVkaWF0ZVJlbmRlciA9IGltbWVkaWF0ZTsgLy96ZXJvLWR1cmF0aW9uIHR3ZWVucyByZW5kZXIgaW1tZWRpYXRlbHkgYnkgZGVmYXVsdCwgYnV0IGlmIHdlJ3JlIG5vdCBzcGVjaWZpY2FsbHkgaW5zdHJ1Y3RlZCB0byByZW5kZXIgdGhpcyB0d2VlbiBpbW1lZGlhdGVseSwgd2Ugc2hvdWxkIHNraXAgdGhpcyBhbmQgbWVyZWx5IF9pbml0KCkgdG8gcmVjb3JkIHRoZSBzdGFydGluZyB2YWx1ZXMgKHJlbmRlcmluZyB0aGVtIGltbWVkaWF0ZWx5IHdvdWxkIHB1c2ggdGhlbSB0byBjb21wbGV0aW9uIHdoaWNoIGlzIHdhc3RlZnVsIGluIHRoYXQgY2FzZSAtIHdlJ2QgaGF2ZSB0byByZW5kZXIoLTEpIGltbWVkaWF0ZWx5IGFmdGVyKVxuXHRcdFx0XHRcdHRoaXMuX3N0YXJ0QXQgPSBUd2VlbkxpdGUudG8odGhpcy50YXJnZXQsIDAsIHB0KTtcblx0XHRcdFx0XHRpZiAoIWltbWVkaWF0ZSkge1xuXHRcdFx0XHRcdFx0dGhpcy5fc3RhcnRBdC5faW5pdCgpOyAvL2Vuc3VyZXMgdGhhdCB0aGUgaW5pdGlhbCB2YWx1ZXMgYXJlIHJlY29yZGVkXG5cdFx0XHRcdFx0XHR0aGlzLl9zdGFydEF0Ll9lbmFibGVkKGZhbHNlKTsgLy9ubyBuZWVkIHRvIGhhdmUgdGhlIHR3ZWVuIHJlbmRlciBvbiB0aGUgbmV4dCBjeWNsZS4gRGlzYWJsZSBpdCBiZWNhdXNlIHdlJ2xsIGFsd2F5cyBtYW51YWxseSBjb250cm9sIHRoZSByZW5kZXJzIG9mIHRoZSBfc3RhcnRBdCB0d2Vlbi5cblx0XHRcdFx0XHRcdGlmICh0aGlzLnZhcnMuaW1tZWRpYXRlUmVuZGVyKSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMuX3N0YXJ0QXQgPSBudWxsO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gZWxzZSBpZiAodGhpcy5fdGltZSA9PT0gMCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0dGhpcy5fZWFzZSA9IGVhc2UgPSAoIWVhc2UpID8gVHdlZW5MaXRlLmRlZmF1bHRFYXNlIDogKGVhc2UgaW5zdGFuY2VvZiBFYXNlKSA/IGVhc2UgOiAodHlwZW9mKGVhc2UpID09PSBcImZ1bmN0aW9uXCIpID8gbmV3IEVhc2UoZWFzZSwgdi5lYXNlUGFyYW1zKSA6IF9lYXNlTWFwW2Vhc2VdIHx8IFR3ZWVuTGl0ZS5kZWZhdWx0RWFzZTtcblx0XHRcdGlmICh2LmVhc2VQYXJhbXMgaW5zdGFuY2VvZiBBcnJheSAmJiBlYXNlLmNvbmZpZykge1xuXHRcdFx0XHR0aGlzLl9lYXNlID0gZWFzZS5jb25maWcuYXBwbHkoZWFzZSwgdi5lYXNlUGFyYW1zKTtcblx0XHRcdH1cblx0XHRcdHRoaXMuX2Vhc2VUeXBlID0gdGhpcy5fZWFzZS5fdHlwZTtcblx0XHRcdHRoaXMuX2Vhc2VQb3dlciA9IHRoaXMuX2Vhc2UuX3Bvd2VyO1xuXHRcdFx0dGhpcy5fZmlyc3RQVCA9IG51bGw7XG5cblx0XHRcdGlmICh0aGlzLl90YXJnZXRzKSB7XG5cdFx0XHRcdGwgPSB0aGlzLl90YXJnZXRzLmxlbmd0aDtcblx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IGw7IGkrKykge1xuXHRcdFx0XHRcdGlmICggdGhpcy5faW5pdFByb3BzKCB0aGlzLl90YXJnZXRzW2ldLCAodGhpcy5fcHJvcExvb2t1cFtpXSA9IHt9KSwgdGhpcy5fc2libGluZ3NbaV0sIChvcCA/IG9wW2ldIDogbnVsbCksIGkpICkge1xuXHRcdFx0XHRcdFx0aW5pdFBsdWdpbnMgPSB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aW5pdFBsdWdpbnMgPSB0aGlzLl9pbml0UHJvcHModGhpcy50YXJnZXQsIHRoaXMuX3Byb3BMb29rdXAsIHRoaXMuX3NpYmxpbmdzLCBvcCwgMCk7XG5cdFx0XHR9XG5cblx0XHRcdGlmIChpbml0UGx1Z2lucykge1xuXHRcdFx0XHRUd2VlbkxpdGUuX29uUGx1Z2luRXZlbnQoXCJfb25Jbml0QWxsUHJvcHNcIiwgdGhpcyk7IC8vcmVvcmRlcnMgdGhlIGFycmF5IGluIG9yZGVyIG9mIHByaW9yaXR5LiBVc2VzIGEgc3RhdGljIFR3ZWVuUGx1Z2luIG1ldGhvZCBpbiBvcmRlciB0byBtaW5pbWl6ZSBmaWxlIHNpemUgaW4gVHdlZW5MaXRlXG5cdFx0XHR9XG5cdFx0XHRpZiAob3ApIGlmICghdGhpcy5fZmlyc3RQVCkgaWYgKHR5cGVvZih0aGlzLnRhcmdldCkgIT09IFwiZnVuY3Rpb25cIikgeyAvL2lmIGFsbCB0d2VlbmluZyBwcm9wZXJ0aWVzIGhhdmUgYmVlbiBvdmVyd3JpdHRlbiwga2lsbCB0aGUgdHdlZW4uIElmIHRoZSB0YXJnZXQgaXMgYSBmdW5jdGlvbiwgaXQncyBwcm9iYWJseSBhIGRlbGF5ZWRDYWxsIHNvIGxldCBpdCBsaXZlLlxuXHRcdFx0XHR0aGlzLl9lbmFibGVkKGZhbHNlLCBmYWxzZSk7XG5cdFx0XHR9XG5cdFx0XHRpZiAodi5ydW5CYWNrd2FyZHMpIHtcblx0XHRcdFx0cHQgPSB0aGlzLl9maXJzdFBUO1xuXHRcdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0XHRwdC5zICs9IHB0LmM7XG5cdFx0XHRcdFx0cHQuYyA9IC1wdC5jO1xuXHRcdFx0XHRcdHB0ID0gcHQuX25leHQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHRoaXMuX29uVXBkYXRlID0gdi5vblVwZGF0ZTtcblx0XHRcdHRoaXMuX2luaXR0ZWQgPSB0cnVlO1xuXHRcdH07XG5cblx0XHRwLl9pbml0UHJvcHMgPSBmdW5jdGlvbih0YXJnZXQsIHByb3BMb29rdXAsIHNpYmxpbmdzLCBvdmVyd3JpdHRlblByb3BzLCBpbmRleCkge1xuXHRcdFx0dmFyIHAsIGksIGluaXRQbHVnaW5zLCBwbHVnaW4sIHB0LCB2O1xuXHRcdFx0aWYgKHRhcmdldCA9PSBudWxsKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKF9sYXp5TG9va3VwW3RhcmdldC5fZ3NUd2VlbklEXSkge1xuXHRcdFx0XHRfbGF6eVJlbmRlcigpOyAvL2lmIG90aGVyIHR3ZWVucyBvZiB0aGUgc2FtZSB0YXJnZXQgaGF2ZSByZWNlbnRseSBpbml0dGVkIGJ1dCBoYXZlbid0IHJlbmRlcmVkIHlldCwgd2UndmUgZ290IHRvIGZvcmNlIHRoZSByZW5kZXIgc28gdGhhdCB0aGUgc3RhcnRpbmcgdmFsdWVzIGFyZSBjb3JyZWN0IChpbWFnaW5lIHBvcHVsYXRpbmcgYSB0aW1lbGluZSB3aXRoIGEgYnVuY2ggb2Ygc2VxdWVudGlhbCB0d2VlbnMgYW5kIHRoZW4ganVtcGluZyB0byB0aGUgZW5kKVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIXRoaXMudmFycy5jc3MpIGlmICh0YXJnZXQuc3R5bGUpIGlmICh0YXJnZXQgIT09IHdpbmRvdyAmJiB0YXJnZXQubm9kZVR5cGUpIGlmIChfcGx1Z2lucy5jc3MpIGlmICh0aGlzLnZhcnMuYXV0b0NTUyAhPT0gZmFsc2UpIHsgLy9pdCdzIHNvIGNvbW1vbiB0byB1c2UgVHdlZW5MaXRlL01heCB0byBhbmltYXRlIHRoZSBjc3Mgb2YgRE9NIGVsZW1lbnRzLCB3ZSBhc3N1bWUgdGhhdCBpZiB0aGUgdGFyZ2V0IGlzIGEgRE9NIGVsZW1lbnQsIHRoYXQncyB3aGF0IGlzIGludGVuZGVkIChhIGNvbnZlbmllbmNlIHNvIHRoYXQgdXNlcnMgZG9uJ3QgaGF2ZSB0byB3cmFwIHRoaW5ncyBpbiBjc3M6e30sIGFsdGhvdWdoIHdlIHN0aWxsIHJlY29tbWVuZCBpdCBmb3IgYSBzbGlnaHQgcGVyZm9ybWFuY2UgYm9vc3QgYW5kIGJldHRlciBzcGVjaWZpY2l0eSkuIE5vdGU6IHdlIGNhbm5vdCBjaGVjayBcIm5vZGVUeXBlXCIgb24gdGhlIHdpbmRvdyBpbnNpZGUgYW4gaWZyYW1lLlxuXHRcdFx0XHRfYXV0b0NTUyh0aGlzLnZhcnMsIHRhcmdldCk7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKHAgaW4gdGhpcy52YXJzKSB7XG5cdFx0XHRcdHYgPSB0aGlzLnZhcnNbcF07XG5cdFx0XHRcdGlmIChfcmVzZXJ2ZWRQcm9wc1twXSkge1xuXHRcdFx0XHRcdGlmICh2KSBpZiAoKHYgaW5zdGFuY2VvZiBBcnJheSkgfHwgKHYucHVzaCAmJiBfaXNBcnJheSh2KSkpIGlmICh2LmpvaW4oXCJcIikuaW5kZXhPZihcIntzZWxmfVwiKSAhPT0gLTEpIHtcblx0XHRcdFx0XHRcdHRoaXMudmFyc1twXSA9IHYgPSB0aGlzLl9zd2FwU2VsZkluUGFyYW1zKHYsIHRoaXMpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHR9IGVsc2UgaWYgKF9wbHVnaW5zW3BdICYmIChwbHVnaW4gPSBuZXcgX3BsdWdpbnNbcF0oKSkuX29uSW5pdFR3ZWVuKHRhcmdldCwgdGhpcy52YXJzW3BdLCB0aGlzLCBpbmRleCkpIHtcblxuXHRcdFx0XHRcdC8vdCAtIHRhcmdldCBcdFx0W29iamVjdF1cblx0XHRcdFx0XHQvL3AgLSBwcm9wZXJ0eSBcdFx0W3N0cmluZ11cblx0XHRcdFx0XHQvL3MgLSBzdGFydFx0XHRcdFtudW1iZXJdXG5cdFx0XHRcdFx0Ly9jIC0gY2hhbmdlXHRcdFtudW1iZXJdXG5cdFx0XHRcdFx0Ly9mIC0gaXNGdW5jdGlvblx0W2Jvb2xlYW5dXG5cdFx0XHRcdFx0Ly9uIC0gbmFtZVx0XHRcdFtzdHJpbmddXG5cdFx0XHRcdFx0Ly9wZyAtIGlzUGx1Z2luIFx0W2Jvb2xlYW5dXG5cdFx0XHRcdFx0Ly9wciAtIHByaW9yaXR5XHRcdFtudW1iZXJdXG5cdFx0XHRcdFx0Ly9tIC0gbW9kICAgICAgICAgICBbZnVuY3Rpb24gfCAwXVxuXHRcdFx0XHRcdHRoaXMuX2ZpcnN0UFQgPSBwdCA9IHtfbmV4dDp0aGlzLl9maXJzdFBULCB0OnBsdWdpbiwgcDpcInNldFJhdGlvXCIsIHM6MCwgYzoxLCBmOjEsIG46cCwgcGc6MSwgcHI6cGx1Z2luLl9wcmlvcml0eSwgbTowfTtcblx0XHRcdFx0XHRpID0gcGx1Z2luLl9vdmVyd3JpdGVQcm9wcy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0XHRwcm9wTG9va3VwW3BsdWdpbi5fb3ZlcndyaXRlUHJvcHNbaV1dID0gdGhpcy5fZmlyc3RQVDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHBsdWdpbi5fcHJpb3JpdHkgfHwgcGx1Z2luLl9vbkluaXRBbGxQcm9wcykge1xuXHRcdFx0XHRcdFx0aW5pdFBsdWdpbnMgPSB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAocGx1Z2luLl9vbkRpc2FibGUgfHwgcGx1Z2luLl9vbkVuYWJsZSkge1xuXHRcdFx0XHRcdFx0dGhpcy5fbm90aWZ5UGx1Z2luc09mRW5hYmxlZCA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChwdC5fbmV4dCkge1xuXHRcdFx0XHRcdFx0cHQuX25leHQuX3ByZXYgPSBwdDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRwcm9wTG9va3VwW3BdID0gX2FkZFByb3BUd2Vlbi5jYWxsKHRoaXMsIHRhcmdldCwgcCwgXCJnZXRcIiwgdiwgcCwgMCwgbnVsbCwgdGhpcy52YXJzLnN0cmluZ0ZpbHRlciwgaW5kZXgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmIChvdmVyd3JpdHRlblByb3BzKSBpZiAodGhpcy5fa2lsbChvdmVyd3JpdHRlblByb3BzLCB0YXJnZXQpKSB7IC8vYW5vdGhlciB0d2VlbiBtYXkgaGF2ZSB0cmllZCB0byBvdmVyd3JpdGUgcHJvcGVydGllcyBvZiB0aGlzIHR3ZWVuIGJlZm9yZSBpbml0KCkgd2FzIGNhbGxlZCAobGlrZSBpZiB0d28gdHdlZW5zIHN0YXJ0IGF0IHRoZSBzYW1lIHRpbWUsIHRoZSBvbmUgY3JlYXRlZCBzZWNvbmQgd2lsbCBydW4gZmlyc3QpXG5cdFx0XHRcdHJldHVybiB0aGlzLl9pbml0UHJvcHModGFyZ2V0LCBwcm9wTG9va3VwLCBzaWJsaW5ncywgb3ZlcndyaXR0ZW5Qcm9wcywgaW5kZXgpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHRoaXMuX292ZXJ3cml0ZSA+IDEpIGlmICh0aGlzLl9maXJzdFBUKSBpZiAoc2libGluZ3MubGVuZ3RoID4gMSkgaWYgKF9hcHBseU92ZXJ3cml0ZSh0YXJnZXQsIHRoaXMsIHByb3BMb29rdXAsIHRoaXMuX292ZXJ3cml0ZSwgc2libGluZ3MpKSB7XG5cdFx0XHRcdHRoaXMuX2tpbGwocHJvcExvb2t1cCwgdGFyZ2V0KTtcblx0XHRcdFx0cmV0dXJuIHRoaXMuX2luaXRQcm9wcyh0YXJnZXQsIHByb3BMb29rdXAsIHNpYmxpbmdzLCBvdmVyd3JpdHRlblByb3BzLCBpbmRleCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAodGhpcy5fZmlyc3RQVCkgaWYgKCh0aGlzLnZhcnMubGF6eSAhPT0gZmFsc2UgJiYgdGhpcy5fZHVyYXRpb24pIHx8ICh0aGlzLnZhcnMubGF6eSAmJiAhdGhpcy5fZHVyYXRpb24pKSB7IC8vemVybyBkdXJhdGlvbiB0d2VlbnMgZG9uJ3QgbGF6eSByZW5kZXIgYnkgZGVmYXVsdDsgZXZlcnl0aGluZyBlbHNlIGRvZXMuXG5cdFx0XHRcdF9sYXp5TG9va3VwW3RhcmdldC5fZ3NUd2VlbklEXSA9IHRydWU7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gaW5pdFBsdWdpbnM7XG5cdFx0fTtcblxuXHRcdHAucmVuZGVyID0gZnVuY3Rpb24odGltZSwgc3VwcHJlc3NFdmVudHMsIGZvcmNlKSB7XG5cdFx0XHR2YXIgcHJldlRpbWUgPSB0aGlzLl90aW1lLFxuXHRcdFx0XHRkdXJhdGlvbiA9IHRoaXMuX2R1cmF0aW9uLFxuXHRcdFx0XHRwcmV2UmF3UHJldlRpbWUgPSB0aGlzLl9yYXdQcmV2VGltZSxcblx0XHRcdFx0aXNDb21wbGV0ZSwgY2FsbGJhY2ssIHB0LCByYXdQcmV2VGltZTtcblx0XHRcdGlmICh0aW1lID49IGR1cmF0aW9uIC0gMC4wMDAwMDAxKSB7IC8vdG8gd29yayBhcm91bmQgb2NjYXNpb25hbCBmbG9hdGluZyBwb2ludCBtYXRoIGFydGlmYWN0cy5cblx0XHRcdFx0dGhpcy5fdG90YWxUaW1lID0gdGhpcy5fdGltZSA9IGR1cmF0aW9uO1xuXHRcdFx0XHR0aGlzLnJhdGlvID0gdGhpcy5fZWFzZS5fY2FsY0VuZCA/IHRoaXMuX2Vhc2UuZ2V0UmF0aW8oMSkgOiAxO1xuXHRcdFx0XHRpZiAoIXRoaXMuX3JldmVyc2VkICkge1xuXHRcdFx0XHRcdGlzQ29tcGxldGUgPSB0cnVlO1xuXHRcdFx0XHRcdGNhbGxiYWNrID0gXCJvbkNvbXBsZXRlXCI7XG5cdFx0XHRcdFx0Zm9yY2UgPSAoZm9yY2UgfHwgdGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuKTsgLy9vdGhlcndpc2UsIGlmIHRoZSBhbmltYXRpb24gaXMgdW5wYXVzZWQvYWN0aXZhdGVkIGFmdGVyIGl0J3MgYWxyZWFkeSBmaW5pc2hlZCwgaXQgZG9lc24ndCBnZXQgcmVtb3ZlZCBmcm9tIHRoZSBwYXJlbnQgdGltZWxpbmUuXG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGR1cmF0aW9uID09PSAwKSBpZiAodGhpcy5faW5pdHRlZCB8fCAhdGhpcy52YXJzLmxhenkgfHwgZm9yY2UpIHsgLy96ZXJvLWR1cmF0aW9uIHR3ZWVucyBhcmUgdHJpY2t5IGJlY2F1c2Ugd2UgbXVzdCBkaXNjZXJuIHRoZSBtb21lbnR1bS9kaXJlY3Rpb24gb2YgdGltZSBpbiBvcmRlciB0byBkZXRlcm1pbmUgd2hldGhlciB0aGUgc3RhcnRpbmcgdmFsdWVzIHNob3VsZCBiZSByZW5kZXJlZCBvciB0aGUgZW5kaW5nIHZhbHVlcy4gSWYgdGhlIFwicGxheWhlYWRcIiBvZiBpdHMgdGltZWxpbmUgZ29lcyBwYXN0IHRoZSB6ZXJvLWR1cmF0aW9uIHR3ZWVuIGluIHRoZSBmb3J3YXJkIGRpcmVjdGlvbiBvciBsYW5kcyBkaXJlY3RseSBvbiBpdCwgdGhlIGVuZCB2YWx1ZXMgc2hvdWxkIGJlIHJlbmRlcmVkLCBidXQgaWYgdGhlIHRpbWVsaW5lJ3MgXCJwbGF5aGVhZFwiIG1vdmVzIHBhc3QgaXQgaW4gdGhlIGJhY2t3YXJkIGRpcmVjdGlvbiAoZnJvbSBhIHBvc3RpdGl2ZSB0aW1lIHRvIGEgbmVnYXRpdmUgdGltZSksIHRoZSBzdGFydGluZyB2YWx1ZXMgbXVzdCBiZSByZW5kZXJlZC5cblx0XHRcdFx0XHRpZiAodGhpcy5fc3RhcnRUaW1lID09PSB0aGlzLl90aW1lbGluZS5fZHVyYXRpb24pIHsgLy9pZiBhIHplcm8tZHVyYXRpb24gdHdlZW4gaXMgYXQgdGhlIFZFUlkgZW5kIG9mIGEgdGltZWxpbmUgYW5kIHRoYXQgdGltZWxpbmUgcmVuZGVycyBhdCBpdHMgZW5kLCBpdCB3aWxsIHR5cGljYWxseSBhZGQgYSB0aW55IGJpdCBvZiBjdXNoaW9uIHRvIHRoZSByZW5kZXIgdGltZSB0byBwcmV2ZW50IHJvdW5kaW5nIGVycm9ycyBmcm9tIGdldHRpbmcgaW4gdGhlIHdheSBvZiB0d2VlbnMgcmVuZGVyaW5nIHRoZWlyIFZFUlkgZW5kLiBJZiB3ZSB0aGVuIHJldmVyc2UoKSB0aGF0IHRpbWVsaW5lLCB0aGUgemVyby1kdXJhdGlvbiB0d2VlbiB3aWxsIHRyaWdnZXIgaXRzIG9uUmV2ZXJzZUNvbXBsZXRlIGV2ZW4gdGhvdWdoIHRlY2huaWNhbGx5IHRoZSBwbGF5aGVhZCBkaWRuJ3QgcGFzcyBvdmVyIGl0IGFnYWluLiBJdCdzIGEgdmVyeSBzcGVjaWZpYyBlZGdlIGNhc2Ugd2UgbXVzdCBhY2NvbW1vZGF0ZS5cblx0XHRcdFx0XHRcdHRpbWUgPSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAocHJldlJhd1ByZXZUaW1lIDwgMCB8fCAodGltZSA8PSAwICYmIHRpbWUgPj0gLTAuMDAwMDAwMSkgfHwgKHByZXZSYXdQcmV2VGltZSA9PT0gX3RpbnlOdW0gJiYgdGhpcy5kYXRhICE9PSBcImlzUGF1c2VcIikpIGlmIChwcmV2UmF3UHJldlRpbWUgIT09IHRpbWUpIHsgLy9ub3RlOiB3aGVuIHRoaXMuZGF0YSBpcyBcImlzUGF1c2VcIiwgaXQncyBhIGNhbGxiYWNrIGFkZGVkIGJ5IGFkZFBhdXNlKCkgb24gYSB0aW1lbGluZSB0aGF0IHdlIHNob3VsZCBub3QgYmUgdHJpZ2dlcmVkIHdoZW4gTEVBVklORyBpdHMgZXhhY3Qgc3RhcnQgdGltZS4gSW4gb3RoZXIgd29yZHMsIHRsLmFkZFBhdXNlKDEpLnBsYXkoMSkgc2hvdWxkbid0IHBhdXNlLlxuXHRcdFx0XHRcdFx0Zm9yY2UgPSB0cnVlO1xuXHRcdFx0XHRcdFx0aWYgKHByZXZSYXdQcmV2VGltZSA+IF90aW55TnVtKSB7XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrID0gXCJvblJldmVyc2VDb21wbGV0ZVwiO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0aGlzLl9yYXdQcmV2VGltZSA9IHJhd1ByZXZUaW1lID0gKCFzdXBwcmVzc0V2ZW50cyB8fCB0aW1lIHx8IHByZXZSYXdQcmV2VGltZSA9PT0gdGltZSkgPyB0aW1lIDogX3RpbnlOdW07IC8vd2hlbiB0aGUgcGxheWhlYWQgYXJyaXZlcyBhdCBFWEFDVExZIHRpbWUgMCAocmlnaHQgb24gdG9wKSBvZiBhIHplcm8tZHVyYXRpb24gdHdlZW4sIHdlIG5lZWQgdG8gZGlzY2VybiBpZiBldmVudHMgYXJlIHN1cHByZXNzZWQgc28gdGhhdCB3aGVuIHRoZSBwbGF5aGVhZCBtb3ZlcyBhZ2FpbiAobmV4dCB0aW1lKSwgaXQnbGwgdHJpZ2dlciB0aGUgY2FsbGJhY2suIElmIGV2ZW50cyBhcmUgTk9UIHN1cHByZXNzZWQsIG9idmlvdXNseSB0aGUgY2FsbGJhY2sgd291bGQgYmUgdHJpZ2dlcmVkIGluIHRoaXMgcmVuZGVyLiBCYXNpY2FsbHksIHRoZSBjYWxsYmFjayBzaG91bGQgZmlyZSBlaXRoZXIgd2hlbiB0aGUgcGxheWhlYWQgQVJSSVZFUyBvciBMRUFWRVMgdGhpcyBleGFjdCBzcG90LCBub3QgYm90aC4gSW1hZ2luZSBkb2luZyBhIHRpbWVsaW5lLnNlZWsoMCkgYW5kIHRoZXJlJ3MgYSBjYWxsYmFjayB0aGF0IHNpdHMgYXQgMC4gU2luY2UgZXZlbnRzIGFyZSBzdXBwcmVzc2VkIG9uIHRoYXQgc2VlaygpIGJ5IGRlZmF1bHQsIG5vdGhpbmcgd2lsbCBmaXJlLCBidXQgd2hlbiB0aGUgcGxheWhlYWQgbW92ZXMgb2ZmIG9mIHRoYXQgcG9zaXRpb24sIHRoZSBjYWxsYmFjayBzaG91bGQgZmlyZS4gVGhpcyBiZWhhdmlvciBpcyB3aGF0IHBlb3BsZSBpbnR1aXRpdmVseSBleHBlY3QuIFdlIHNldCB0aGUgX3Jhd1ByZXZUaW1lIHRvIGJlIGEgcHJlY2lzZSB0aW55IG51bWJlciB0byBpbmRpY2F0ZSB0aGlzIHNjZW5hcmlvIHJhdGhlciB0aGFuIHVzaW5nIGFub3RoZXIgcHJvcGVydHkvdmFyaWFibGUgd2hpY2ggd291bGQgaW5jcmVhc2UgbWVtb3J5IHVzYWdlLiBUaGlzIHRlY2huaXF1ZSBpcyBsZXNzIHJlYWRhYmxlLCBidXQgbW9yZSBlZmZpY2llbnQuXG5cdFx0XHRcdH1cblxuXHRcdFx0fSBlbHNlIGlmICh0aW1lIDwgMC4wMDAwMDAxKSB7IC8vdG8gd29yayBhcm91bmQgb2NjYXNpb25hbCBmbG9hdGluZyBwb2ludCBtYXRoIGFydGlmYWN0cywgcm91bmQgc3VwZXIgc21hbGwgdmFsdWVzIHRvIDAuXG5cdFx0XHRcdHRoaXMuX3RvdGFsVGltZSA9IHRoaXMuX3RpbWUgPSAwO1xuXHRcdFx0XHR0aGlzLnJhdGlvID0gdGhpcy5fZWFzZS5fY2FsY0VuZCA/IHRoaXMuX2Vhc2UuZ2V0UmF0aW8oMCkgOiAwO1xuXHRcdFx0XHRpZiAocHJldlRpbWUgIT09IDAgfHwgKGR1cmF0aW9uID09PSAwICYmIHByZXZSYXdQcmV2VGltZSA+IDApKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2sgPSBcIm9uUmV2ZXJzZUNvbXBsZXRlXCI7XG5cdFx0XHRcdFx0aXNDb21wbGV0ZSA9IHRoaXMuX3JldmVyc2VkO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0aW1lIDwgMCkge1xuXHRcdFx0XHRcdHRoaXMuX2FjdGl2ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdGlmIChkdXJhdGlvbiA9PT0gMCkgaWYgKHRoaXMuX2luaXR0ZWQgfHwgIXRoaXMudmFycy5sYXp5IHx8IGZvcmNlKSB7IC8vemVyby1kdXJhdGlvbiB0d2VlbnMgYXJlIHRyaWNreSBiZWNhdXNlIHdlIG11c3QgZGlzY2VybiB0aGUgbW9tZW50dW0vZGlyZWN0aW9uIG9mIHRpbWUgaW4gb3JkZXIgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHN0YXJ0aW5nIHZhbHVlcyBzaG91bGQgYmUgcmVuZGVyZWQgb3IgdGhlIGVuZGluZyB2YWx1ZXMuIElmIHRoZSBcInBsYXloZWFkXCIgb2YgaXRzIHRpbWVsaW5lIGdvZXMgcGFzdCB0aGUgemVyby1kdXJhdGlvbiB0d2VlbiBpbiB0aGUgZm9yd2FyZCBkaXJlY3Rpb24gb3IgbGFuZHMgZGlyZWN0bHkgb24gaXQsIHRoZSBlbmQgdmFsdWVzIHNob3VsZCBiZSByZW5kZXJlZCwgYnV0IGlmIHRoZSB0aW1lbGluZSdzIFwicGxheWhlYWRcIiBtb3ZlcyBwYXN0IGl0IGluIHRoZSBiYWNrd2FyZCBkaXJlY3Rpb24gKGZyb20gYSBwb3N0aXRpdmUgdGltZSB0byBhIG5lZ2F0aXZlIHRpbWUpLCB0aGUgc3RhcnRpbmcgdmFsdWVzIG11c3QgYmUgcmVuZGVyZWQuXG5cdFx0XHRcdFx0XHRpZiAocHJldlJhd1ByZXZUaW1lID49IDAgJiYgIShwcmV2UmF3UHJldlRpbWUgPT09IF90aW55TnVtICYmIHRoaXMuZGF0YSA9PT0gXCJpc1BhdXNlXCIpKSB7XG5cdFx0XHRcdFx0XHRcdGZvcmNlID0gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHRoaXMuX3Jhd1ByZXZUaW1lID0gcmF3UHJldlRpbWUgPSAoIXN1cHByZXNzRXZlbnRzIHx8IHRpbWUgfHwgcHJldlJhd1ByZXZUaW1lID09PSB0aW1lKSA/IHRpbWUgOiBfdGlueU51bTsgLy93aGVuIHRoZSBwbGF5aGVhZCBhcnJpdmVzIGF0IEVYQUNUTFkgdGltZSAwIChyaWdodCBvbiB0b3ApIG9mIGEgemVyby1kdXJhdGlvbiB0d2Vlbiwgd2UgbmVlZCB0byBkaXNjZXJuIGlmIGV2ZW50cyBhcmUgc3VwcHJlc3NlZCBzbyB0aGF0IHdoZW4gdGhlIHBsYXloZWFkIG1vdmVzIGFnYWluIChuZXh0IHRpbWUpLCBpdCdsbCB0cmlnZ2VyIHRoZSBjYWxsYmFjay4gSWYgZXZlbnRzIGFyZSBOT1Qgc3VwcHJlc3NlZCwgb2J2aW91c2x5IHRoZSBjYWxsYmFjayB3b3VsZCBiZSB0cmlnZ2VyZWQgaW4gdGhpcyByZW5kZXIuIEJhc2ljYWxseSwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlIGVpdGhlciB3aGVuIHRoZSBwbGF5aGVhZCBBUlJJVkVTIG9yIExFQVZFUyB0aGlzIGV4YWN0IHNwb3QsIG5vdCBib3RoLiBJbWFnaW5lIGRvaW5nIGEgdGltZWxpbmUuc2VlaygwKSBhbmQgdGhlcmUncyBhIGNhbGxiYWNrIHRoYXQgc2l0cyBhdCAwLiBTaW5jZSBldmVudHMgYXJlIHN1cHByZXNzZWQgb24gdGhhdCBzZWVrKCkgYnkgZGVmYXVsdCwgbm90aGluZyB3aWxsIGZpcmUsIGJ1dCB3aGVuIHRoZSBwbGF5aGVhZCBtb3ZlcyBvZmYgb2YgdGhhdCBwb3NpdGlvbiwgdGhlIGNhbGxiYWNrIHNob3VsZCBmaXJlLiBUaGlzIGJlaGF2aW9yIGlzIHdoYXQgcGVvcGxlIGludHVpdGl2ZWx5IGV4cGVjdC4gV2Ugc2V0IHRoZSBfcmF3UHJldlRpbWUgdG8gYmUgYSBwcmVjaXNlIHRpbnkgbnVtYmVyIHRvIGluZGljYXRlIHRoaXMgc2NlbmFyaW8gcmF0aGVyIHRoYW4gdXNpbmcgYW5vdGhlciBwcm9wZXJ0eS92YXJpYWJsZSB3aGljaCB3b3VsZCBpbmNyZWFzZSBtZW1vcnkgdXNhZ2UuIFRoaXMgdGVjaG5pcXVlIGlzIGxlc3MgcmVhZGFibGUsIGJ1dCBtb3JlIGVmZmljaWVudC5cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCF0aGlzLl9pbml0dGVkKSB7IC8vaWYgd2UgcmVuZGVyIHRoZSB2ZXJ5IGJlZ2lubmluZyAodGltZSA9PSAwKSBvZiBhIGZyb21UbygpLCB3ZSBtdXN0IGZvcmNlIHRoZSByZW5kZXIgKG5vcm1hbCB0d2VlbnMgd291bGRuJ3QgbmVlZCB0byByZW5kZXIgYXQgYSB0aW1lIG9mIDAgd2hlbiB0aGUgcHJldlRpbWUgd2FzIGFsc28gMCkuIFRoaXMgaXMgYWxzbyBtYW5kYXRvcnkgdG8gbWFrZSBzdXJlIG92ZXJ3cml0aW5nIGtpY2tzIGluIGltbWVkaWF0ZWx5LlxuXHRcdFx0XHRcdGZvcmNlID0gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy5fdG90YWxUaW1lID0gdGhpcy5fdGltZSA9IHRpbWU7XG5cblx0XHRcdFx0aWYgKHRoaXMuX2Vhc2VUeXBlKSB7XG5cdFx0XHRcdFx0dmFyIHIgPSB0aW1lIC8gZHVyYXRpb24sIHR5cGUgPSB0aGlzLl9lYXNlVHlwZSwgcG93ID0gdGhpcy5fZWFzZVBvd2VyO1xuXHRcdFx0XHRcdGlmICh0eXBlID09PSAxIHx8ICh0eXBlID09PSAzICYmIHIgPj0gMC41KSkge1xuXHRcdFx0XHRcdFx0ciA9IDEgLSByO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAodHlwZSA9PT0gMykge1xuXHRcdFx0XHRcdFx0ciAqPSAyO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAocG93ID09PSAxKSB7XG5cdFx0XHRcdFx0XHRyICo9IHI7XG5cdFx0XHRcdFx0fSBlbHNlIGlmIChwb3cgPT09IDIpIHtcblx0XHRcdFx0XHRcdHIgKj0gciAqIHI7XG5cdFx0XHRcdFx0fSBlbHNlIGlmIChwb3cgPT09IDMpIHtcblx0XHRcdFx0XHRcdHIgKj0gciAqIHIgKiByO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAocG93ID09PSA0KSB7XG5cdFx0XHRcdFx0XHRyICo9IHIgKiByICogciAqIHI7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKHR5cGUgPT09IDEpIHtcblx0XHRcdFx0XHRcdHRoaXMucmF0aW8gPSAxIC0gcjtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHR5cGUgPT09IDIpIHtcblx0XHRcdFx0XHRcdHRoaXMucmF0aW8gPSByO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAodGltZSAvIGR1cmF0aW9uIDwgMC41KSB7XG5cdFx0XHRcdFx0XHR0aGlzLnJhdGlvID0gciAvIDI7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRoaXMucmF0aW8gPSAxIC0gKHIgLyAyKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0aGlzLnJhdGlvID0gdGhpcy5fZWFzZS5nZXRSYXRpbyh0aW1lIC8gZHVyYXRpb24pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICh0aGlzLl90aW1lID09PSBwcmV2VGltZSAmJiAhZm9yY2UpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fSBlbHNlIGlmICghdGhpcy5faW5pdHRlZCkge1xuXHRcdFx0XHR0aGlzLl9pbml0KCk7XG5cdFx0XHRcdGlmICghdGhpcy5faW5pdHRlZCB8fCB0aGlzLl9nYykgeyAvL2ltbWVkaWF0ZVJlbmRlciB0d2VlbnMgdHlwaWNhbGx5IHdvbid0IGluaXRpYWxpemUgdW50aWwgdGhlIHBsYXloZWFkIGFkdmFuY2VzIChfdGltZSBpcyBncmVhdGVyIHRoYW4gMCkgaW4gb3JkZXIgdG8gZW5zdXJlIHRoYXQgb3ZlcndyaXRpbmcgb2NjdXJzIHByb3Blcmx5LiBBbHNvLCBpZiBhbGwgb2YgdGhlIHR3ZWVuaW5nIHByb3BlcnRpZXMgaGF2ZSBiZWVuIG92ZXJ3cml0dGVuICh3aGljaCB3b3VsZCBjYXVzZSBfZ2MgdG8gYmUgdHJ1ZSwgYXMgc2V0IGluIF9pbml0KCkpLCB3ZSBzaG91bGRuJ3QgY29udGludWUgb3RoZXJ3aXNlIGFuIG9uU3RhcnQgY2FsbGJhY2sgY291bGQgYmUgY2FsbGVkIGZvciBleGFtcGxlLlxuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fSBlbHNlIGlmICghZm9yY2UgJiYgdGhpcy5fZmlyc3RQVCAmJiAoKHRoaXMudmFycy5sYXp5ICE9PSBmYWxzZSAmJiB0aGlzLl9kdXJhdGlvbikgfHwgKHRoaXMudmFycy5sYXp5ICYmICF0aGlzLl9kdXJhdGlvbikpKSB7XG5cdFx0XHRcdFx0dGhpcy5fdGltZSA9IHRoaXMuX3RvdGFsVGltZSA9IHByZXZUaW1lO1xuXHRcdFx0XHRcdHRoaXMuX3Jhd1ByZXZUaW1lID0gcHJldlJhd1ByZXZUaW1lO1xuXHRcdFx0XHRcdF9sYXp5VHdlZW5zLnB1c2godGhpcyk7XG5cdFx0XHRcdFx0dGhpcy5fbGF6eSA9IFt0aW1lLCBzdXBwcmVzc0V2ZW50c107XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vX2Vhc2UgaXMgaW5pdGlhbGx5IHNldCB0byBkZWZhdWx0RWFzZSwgc28gbm93IHRoYXQgaW5pdCgpIGhhcyBydW4sIF9lYXNlIGlzIHNldCBwcm9wZXJseSBhbmQgd2UgbmVlZCB0byByZWNhbGN1bGF0ZSB0aGUgcmF0aW8uIE92ZXJhbGwgdGhpcyBpcyBmYXN0ZXIgdGhhbiB1c2luZyBjb25kaXRpb25hbCBsb2dpYyBlYXJsaWVyIGluIHRoZSBtZXRob2QgdG8gYXZvaWQgaGF2aW5nIHRvIHNldCByYXRpbyB0d2ljZSBiZWNhdXNlIHdlIG9ubHkgaW5pdCgpIG9uY2UgYnV0IHJlbmRlclRpbWUoKSBnZXRzIGNhbGxlZCBWRVJZIGZyZXF1ZW50bHkuXG5cdFx0XHRcdGlmICh0aGlzLl90aW1lICYmICFpc0NvbXBsZXRlKSB7XG5cdFx0XHRcdFx0dGhpcy5yYXRpbyA9IHRoaXMuX2Vhc2UuZ2V0UmF0aW8odGhpcy5fdGltZSAvIGR1cmF0aW9uKTtcblx0XHRcdFx0fSBlbHNlIGlmIChpc0NvbXBsZXRlICYmIHRoaXMuX2Vhc2UuX2NhbGNFbmQpIHtcblx0XHRcdFx0XHR0aGlzLnJhdGlvID0gdGhpcy5fZWFzZS5nZXRSYXRpbygodGhpcy5fdGltZSA9PT0gMCkgPyAwIDogMSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICh0aGlzLl9sYXp5ICE9PSBmYWxzZSkgeyAvL2luIGNhc2UgYSBsYXp5IHJlbmRlciBpcyBwZW5kaW5nLCB3ZSBzaG91bGQgZmx1c2ggaXQgYmVjYXVzZSB0aGUgbmV3IHJlbmRlciBpcyBvY2N1cnJpbmcgbm93IChpbWFnaW5lIGEgbGF6eSB0d2VlbiBpbnN0YW50aWF0aW5nIGFuZCB0aGVuIGltbWVkaWF0ZWx5IHRoZSB1c2VyIGNhbGxzIHR3ZWVuLnNlZWsodHdlZW4uZHVyYXRpb24oKSksIHNraXBwaW5nIHRvIHRoZSBlbmQgLSB0aGUgZW5kIHJlbmRlciB3b3VsZCBiZSBmb3JjZWQsIGFuZCB0aGVuIGlmIHdlIGRpZG4ndCBmbHVzaCB0aGUgbGF6eSByZW5kZXIsIGl0J2QgZmlyZSBBRlRFUiB0aGUgc2VlaygpLCByZW5kZXJpbmcgaXQgYXQgdGhlIHdyb25nIHRpbWUuXG5cdFx0XHRcdHRoaXMuX2xhenkgPSBmYWxzZTtcblx0XHRcdH1cblx0XHRcdGlmICghdGhpcy5fYWN0aXZlKSBpZiAoIXRoaXMuX3BhdXNlZCAmJiB0aGlzLl90aW1lICE9PSBwcmV2VGltZSAmJiB0aW1lID49IDApIHtcblx0XHRcdFx0dGhpcy5fYWN0aXZlID0gdHJ1ZTsgIC8vc28gdGhhdCBpZiB0aGUgdXNlciByZW5kZXJzIGEgdHdlZW4gKGFzIG9wcG9zZWQgdG8gdGhlIHRpbWVsaW5lIHJlbmRlcmluZyBpdCksIHRoZSB0aW1lbGluZSBpcyBmb3JjZWQgdG8gcmUtcmVuZGVyIGFuZCBhbGlnbiBpdCB3aXRoIHRoZSBwcm9wZXIgdGltZS9mcmFtZSBvbiB0aGUgbmV4dCByZW5kZXJpbmcgY3ljbGUuIE1heWJlIHRoZSB0d2VlbiBhbHJlYWR5IGZpbmlzaGVkIGJ1dCB0aGUgdXNlciBtYW51YWxseSByZS1yZW5kZXJzIGl0IGFzIGhhbGZ3YXkgZG9uZS5cblx0XHRcdH1cblx0XHRcdGlmIChwcmV2VGltZSA9PT0gMCkge1xuXHRcdFx0XHRpZiAodGhpcy5fc3RhcnRBdCkge1xuXHRcdFx0XHRcdGlmICh0aW1lID49IDApIHtcblx0XHRcdFx0XHRcdHRoaXMuX3N0YXJ0QXQucmVuZGVyKHRpbWUsIHN1cHByZXNzRXZlbnRzLCBmb3JjZSk7XG5cdFx0XHRcdFx0fSBlbHNlIGlmICghY2FsbGJhY2spIHtcblx0XHRcdFx0XHRcdGNhbGxiYWNrID0gXCJfZHVtbXlHU1wiOyAvL2lmIG5vIGNhbGxiYWNrIGlzIGRlZmluZWQsIHVzZSBhIGR1bW15IHZhbHVlIGp1c3Qgc28gdGhhdCB0aGUgY29uZGl0aW9uIGF0IHRoZSBlbmQgZXZhbHVhdGVzIGFzIHRydWUgYmVjYXVzZSBfc3RhcnRBdCBzaG91bGQgcmVuZGVyIEFGVEVSIHRoZSBub3JtYWwgcmVuZGVyIGxvb3Agd2hlbiB0aGUgdGltZSBpcyBuZWdhdGl2ZS4gV2UgY291bGQgaGFuZGxlIHRoaXMgaW4gYSBtb3JlIGludHVpdGl2ZSB3YXksIG9mIGNvdXJzZSwgYnV0IHRoZSByZW5kZXIgbG9vcCBpcyB0aGUgTU9TVCBpbXBvcnRhbnQgdGhpbmcgdG8gb3B0aW1pemUsIHNvIHRoaXMgdGVjaG5pcXVlIGFsbG93cyB1cyB0byBhdm9pZCBhZGRpbmcgZXh0cmEgY29uZGl0aW9uYWwgbG9naWMgaW4gYSBoaWdoLWZyZXF1ZW5jeSBhcmVhLlxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodGhpcy52YXJzLm9uU3RhcnQpIGlmICh0aGlzLl90aW1lICE9PSAwIHx8IGR1cmF0aW9uID09PSAwKSBpZiAoIXN1cHByZXNzRXZlbnRzKSB7XG5cdFx0XHRcdFx0dGhpcy5fY2FsbGJhY2soXCJvblN0YXJ0XCIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRwdCA9IHRoaXMuX2ZpcnN0UFQ7XG5cdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0aWYgKHB0LmYpIHtcblx0XHRcdFx0XHRwdC50W3B0LnBdKHB0LmMgKiB0aGlzLnJhdGlvICsgcHQucyk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cHQudFtwdC5wXSA9IHB0LmMgKiB0aGlzLnJhdGlvICsgcHQucztcblx0XHRcdFx0fVxuXHRcdFx0XHRwdCA9IHB0Ll9uZXh0O1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAodGhpcy5fb25VcGRhdGUpIHtcblx0XHRcdFx0aWYgKHRpbWUgPCAwKSBpZiAodGhpcy5fc3RhcnRBdCAmJiB0aW1lICE9PSAtMC4wMDAxKSB7IC8vaWYgdGhlIHR3ZWVuIGlzIHBvc2l0aW9uZWQgYXQgdGhlIFZFUlkgYmVnaW5uaW5nIChfc3RhcnRUaW1lIDApIG9mIGl0cyBwYXJlbnQgdGltZWxpbmUsIGl0J3MgaWxsZWdhbCBmb3IgdGhlIHBsYXloZWFkIHRvIGdvIGJhY2sgZnVydGhlciwgc28gd2Ugc2hvdWxkIG5vdCByZW5kZXIgdGhlIHJlY29yZGVkIHN0YXJ0QXQgdmFsdWVzLlxuXHRcdFx0XHRcdHRoaXMuX3N0YXJ0QXQucmVuZGVyKHRpbWUsIHN1cHByZXNzRXZlbnRzLCBmb3JjZSk7IC8vbm90ZTogZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnMsIHdlIHR1Y2sgdGhpcyBjb25kaXRpb25hbCBsb2dpYyBpbnNpZGUgbGVzcyB0cmF2ZWxlZCBhcmVhcyAobW9zdCB0d2VlbnMgZG9uJ3QgaGF2ZSBhbiBvblVwZGF0ZSkuIFdlJ2QganVzdCBoYXZlIGl0IGF0IHRoZSBlbmQgYmVmb3JlIHRoZSBvbkNvbXBsZXRlLCBidXQgdGhlIHZhbHVlcyBzaG91bGQgYmUgdXBkYXRlZCBiZWZvcmUgYW55IG9uVXBkYXRlIGlzIGNhbGxlZCwgc28gd2UgQUxTTyBwdXQgaXQgaGVyZSBhbmQgdGhlbiBpZiBpdCdzIG5vdCBjYWxsZWQsIHdlIGRvIHNvIGxhdGVyIG5lYXIgdGhlIG9uQ29tcGxldGUuXG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFzdXBwcmVzc0V2ZW50cykgaWYgKHRoaXMuX3RpbWUgIT09IHByZXZUaW1lIHx8IGlzQ29tcGxldGUgfHwgZm9yY2UpIHtcblx0XHRcdFx0XHR0aGlzLl9jYWxsYmFjayhcIm9uVXBkYXRlXCIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoY2FsbGJhY2spIGlmICghdGhpcy5fZ2MgfHwgZm9yY2UpIHsgLy9jaGVjayBfZ2MgYmVjYXVzZSB0aGVyZSdzIGEgY2hhbmNlIHRoYXQga2lsbCgpIGNvdWxkIGJlIGNhbGxlZCBpbiBhbiBvblVwZGF0ZVxuXHRcdFx0XHRpZiAodGltZSA8IDAgJiYgdGhpcy5fc3RhcnRBdCAmJiAhdGhpcy5fb25VcGRhdGUgJiYgdGltZSAhPT0gLTAuMDAwMSkgeyAvLy0wLjAwMDEgaXMgYSBzcGVjaWFsIHZhbHVlIHRoYXQgd2UgdXNlIHdoZW4gbG9vcGluZyBiYWNrIHRvIHRoZSBiZWdpbm5pbmcgb2YgYSByZXBlYXRlZCBUaW1lbGluZU1heCwgaW4gd2hpY2ggY2FzZSB3ZSBzaG91bGRuJ3QgcmVuZGVyIHRoZSBfc3RhcnRBdCB2YWx1ZXMuXG5cdFx0XHRcdFx0dGhpcy5fc3RhcnRBdC5yZW5kZXIodGltZSwgc3VwcHJlc3NFdmVudHMsIGZvcmNlKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoaXNDb21wbGV0ZSkge1xuXHRcdFx0XHRcdGlmICh0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4pIHtcblx0XHRcdFx0XHRcdHRoaXMuX2VuYWJsZWQoZmFsc2UsIGZhbHNlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dGhpcy5fYWN0aXZlID0gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCFzdXBwcmVzc0V2ZW50cyAmJiB0aGlzLnZhcnNbY2FsbGJhY2tdKSB7XG5cdFx0XHRcdFx0dGhpcy5fY2FsbGJhY2soY2FsbGJhY2spO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChkdXJhdGlvbiA9PT0gMCAmJiB0aGlzLl9yYXdQcmV2VGltZSA9PT0gX3RpbnlOdW0gJiYgcmF3UHJldlRpbWUgIT09IF90aW55TnVtKSB7IC8vdGhlIG9uQ29tcGxldGUgb3Igb25SZXZlcnNlQ29tcGxldGUgY291bGQgdHJpZ2dlciBtb3ZlbWVudCBvZiB0aGUgcGxheWhlYWQgYW5kIGZvciB6ZXJvLWR1cmF0aW9uIHR3ZWVucyAod2hpY2ggbXVzdCBkaXNjZXJuIGRpcmVjdGlvbikgdGhhdCBsYW5kIGRpcmVjdGx5IGJhY2sgb24gdGhlaXIgc3RhcnQgdGltZSwgd2UgZG9uJ3Qgd2FudCB0byBmaXJlIGFnYWluIG9uIHRoZSBuZXh0IHJlbmRlci4gVGhpbmsgb2Ygc2V2ZXJhbCBhZGRQYXVzZSgpJ3MgaW4gYSB0aW1lbGluZSB0aGF0IGZvcmNlcyB0aGUgcGxheWhlYWQgdG8gYSBjZXJ0YWluIHNwb3QsIGJ1dCB3aGF0IGlmIGl0J3MgYWxyZWFkeSBwYXVzZWQgYW5kIGFub3RoZXIgdHdlZW4gaXMgdHdlZW5pbmcgdGhlIFwidGltZVwiIG9mIHRoZSB0aW1lbGluZT8gRWFjaCB0aW1lIGl0IG1vdmVzIFtmb3J3YXJkXSBwYXN0IHRoYXQgc3BvdCwgaXQgd291bGQgbW92ZSBiYWNrLCBhbmQgc2luY2Ugc3VwcHJlc3NFdmVudHMgaXMgdHJ1ZSwgaXQnZCByZXNldCBfcmF3UHJldlRpbWUgdG8gX3RpbnlOdW0gc28gdGhhdCB3aGVuIGl0IGJlZ2lucyBhZ2FpbiwgdGhlIGNhbGxiYWNrIHdvdWxkIGZpcmUgKHNvIHVsdGltYXRlbHkgaXQgY291bGQgYm91bmNlIGJhY2sgYW5kIGZvcnRoIGR1cmluZyB0aGF0IHR3ZWVuKS4gQWdhaW4sIHRoaXMgaXMgYSB2ZXJ5IHVuY29tbW9uIHNjZW5hcmlvLCBidXQgcG9zc2libGUgbm9uZXRoZWxlc3MuXG5cdFx0XHRcdFx0dGhpcy5fcmF3UHJldlRpbWUgPSAwO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdHAuX2tpbGwgPSBmdW5jdGlvbih2YXJzLCB0YXJnZXQsIG92ZXJ3cml0aW5nVHdlZW4pIHtcblx0XHRcdGlmICh2YXJzID09PSBcImFsbFwiKSB7XG5cdFx0XHRcdHZhcnMgPSBudWxsO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHZhcnMgPT0gbnVsbCkgaWYgKHRhcmdldCA9PSBudWxsIHx8IHRhcmdldCA9PT0gdGhpcy50YXJnZXQpIHtcblx0XHRcdFx0dGhpcy5fbGF6eSA9IGZhbHNlO1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5fZW5hYmxlZChmYWxzZSwgZmFsc2UpO1xuXHRcdFx0fVxuXHRcdFx0dGFyZ2V0ID0gKHR5cGVvZih0YXJnZXQpICE9PSBcInN0cmluZ1wiKSA/ICh0YXJnZXQgfHwgdGhpcy5fdGFyZ2V0cyB8fCB0aGlzLnRhcmdldCkgOiBUd2VlbkxpdGUuc2VsZWN0b3IodGFyZ2V0KSB8fCB0YXJnZXQ7XG5cdFx0XHR2YXIgc2ltdWx0YW5lb3VzT3ZlcndyaXRlID0gKG92ZXJ3cml0aW5nVHdlZW4gJiYgdGhpcy5fdGltZSAmJiBvdmVyd3JpdGluZ1R3ZWVuLl9zdGFydFRpbWUgPT09IHRoaXMuX3N0YXJ0VGltZSAmJiB0aGlzLl90aW1lbGluZSA9PT0gb3ZlcndyaXRpbmdUd2Vlbi5fdGltZWxpbmUpLFxuXHRcdFx0XHRpLCBvdmVyd3JpdHRlblByb3BzLCBwLCBwdCwgcHJvcExvb2t1cCwgY2hhbmdlZCwga2lsbFByb3BzLCByZWNvcmQsIGtpbGxlZDtcblx0XHRcdGlmICgoX2lzQXJyYXkodGFyZ2V0KSB8fCBfaXNTZWxlY3Rvcih0YXJnZXQpKSAmJiB0eXBlb2YodGFyZ2V0WzBdKSAhPT0gXCJudW1iZXJcIikge1xuXHRcdFx0XHRpID0gdGFyZ2V0Lmxlbmd0aDtcblx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0aWYgKHRoaXMuX2tpbGwodmFycywgdGFyZ2V0W2ldLCBvdmVyd3JpdGluZ1R3ZWVuKSkge1xuXHRcdFx0XHRcdFx0Y2hhbmdlZCA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZiAodGhpcy5fdGFyZ2V0cykge1xuXHRcdFx0XHRcdGkgPSB0aGlzLl90YXJnZXRzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRcdGlmICh0YXJnZXQgPT09IHRoaXMuX3RhcmdldHNbaV0pIHtcblx0XHRcdFx0XHRcdFx0cHJvcExvb2t1cCA9IHRoaXMuX3Byb3BMb29rdXBbaV0gfHwge307XG5cdFx0XHRcdFx0XHRcdHRoaXMuX292ZXJ3cml0dGVuUHJvcHMgPSB0aGlzLl9vdmVyd3JpdHRlblByb3BzIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRvdmVyd3JpdHRlblByb3BzID0gdGhpcy5fb3ZlcndyaXR0ZW5Qcm9wc1tpXSA9IHZhcnMgPyB0aGlzLl9vdmVyd3JpdHRlblByb3BzW2ldIHx8IHt9IDogXCJhbGxcIjtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2UgaWYgKHRhcmdldCAhPT0gdGhpcy50YXJnZXQpIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cHJvcExvb2t1cCA9IHRoaXMuX3Byb3BMb29rdXA7XG5cdFx0XHRcdFx0b3ZlcndyaXR0ZW5Qcm9wcyA9IHRoaXMuX292ZXJ3cml0dGVuUHJvcHMgPSB2YXJzID8gdGhpcy5fb3ZlcndyaXR0ZW5Qcm9wcyB8fCB7fSA6IFwiYWxsXCI7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAocHJvcExvb2t1cCkge1xuXHRcdFx0XHRcdGtpbGxQcm9wcyA9IHZhcnMgfHwgcHJvcExvb2t1cDtcblx0XHRcdFx0XHRyZWNvcmQgPSAodmFycyAhPT0gb3ZlcndyaXR0ZW5Qcm9wcyAmJiBvdmVyd3JpdHRlblByb3BzICE9PSBcImFsbFwiICYmIHZhcnMgIT09IHByb3BMb29rdXAgJiYgKHR5cGVvZih2YXJzKSAhPT0gXCJvYmplY3RcIiB8fCAhdmFycy5fdGVtcEtpbGwpKTsgLy9fdGVtcEtpbGwgaXMgYSBzdXBlci1zZWNyZXQgd2F5IHRvIGRlbGV0ZSBhIHBhcnRpY3VsYXIgdHdlZW5pbmcgcHJvcGVydHkgYnV0IE5PVCBoYXZlIGl0IHJlbWVtYmVyZWQgYXMgYW4gb2ZmaWNpYWwgb3ZlcndyaXR0ZW4gcHJvcGVydHkgKGxpa2UgaW4gQmV6aWVyUGx1Z2luKVxuXHRcdFx0XHRcdGlmIChvdmVyd3JpdGluZ1R3ZWVuICYmIChUd2VlbkxpdGUub25PdmVyd3JpdGUgfHwgdGhpcy52YXJzLm9uT3ZlcndyaXRlKSkge1xuXHRcdFx0XHRcdFx0Zm9yIChwIGluIGtpbGxQcm9wcykge1xuXHRcdFx0XHRcdFx0XHRpZiAocHJvcExvb2t1cFtwXSkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICgha2lsbGVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRraWxsZWQgPSBbXTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0a2lsbGVkLnB1c2gocCk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICgoa2lsbGVkIHx8ICF2YXJzKSAmJiAhX29uT3ZlcndyaXRlKHRoaXMsIG92ZXJ3cml0aW5nVHdlZW4sIHRhcmdldCwga2lsbGVkKSkgeyAvL2lmIHRoZSBvbk92ZXJ3cml0ZSByZXR1cm5lZCBmYWxzZSwgdGhhdCBtZWFucyB0aGUgdXNlciB3YW50cyB0byBvdmVycmlkZSB0aGUgb3ZlcndyaXRpbmcgKGNhbmNlbCBpdCkuXG5cdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRmb3IgKHAgaW4ga2lsbFByb3BzKSB7XG5cdFx0XHRcdFx0XHRpZiAoKHB0ID0gcHJvcExvb2t1cFtwXSkpIHtcblx0XHRcdFx0XHRcdFx0aWYgKHNpbXVsdGFuZW91c092ZXJ3cml0ZSkgeyAvL2lmIGFub3RoZXIgdHdlZW4gb3ZlcndyaXRlcyB0aGlzIG9uZSBhbmQgdGhleSBib3RoIHN0YXJ0IGF0IGV4YWN0bHkgdGhlIHNhbWUgdGltZSwgeWV0IHRoaXMgdHdlZW4gaGFzIGFscmVhZHkgcmVuZGVyZWQgb25jZSAoZm9yIGV4YW1wbGUsIGF0IDAuMDAxKSBiZWNhdXNlIGl0J3MgZmlyc3QgaW4gdGhlIHF1ZXVlLCB3ZSBzaG91bGQgcmV2ZXJ0IHRoZSB2YWx1ZXMgdG8gd2hlcmUgdGhleSB3ZXJlIGF0IDAgc28gdGhhdCB0aGUgc3RhcnRpbmcgdmFsdWVzIGFyZW4ndCBjb250YW1pbmF0ZWQgb24gdGhlIG92ZXJ3cml0aW5nIHR3ZWVuLlxuXHRcdFx0XHRcdFx0XHRcdGlmIChwdC5mKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRwdC50W3B0LnBdKHB0LnMpO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRwdC50W3B0LnBdID0gcHQucztcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0Y2hhbmdlZCA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0aWYgKHB0LnBnICYmIHB0LnQuX2tpbGwoa2lsbFByb3BzKSkge1xuXHRcdFx0XHRcdFx0XHRcdGNoYW5nZWQgPSB0cnVlOyAvL3NvbWUgcGx1Z2lucyBuZWVkIHRvIGJlIG5vdGlmaWVkIHNvIHRoZXkgY2FuIHBlcmZvcm0gY2xlYW51cCB0YXNrcyBmaXJzdFxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGlmICghcHQucGcgfHwgcHQudC5fb3ZlcndyaXRlUHJvcHMubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKHB0Ll9wcmV2KSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRwdC5fcHJldi5fbmV4dCA9IHB0Ll9uZXh0O1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAocHQgPT09IHRoaXMuX2ZpcnN0UFQpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHRoaXMuX2ZpcnN0UFQgPSBwdC5fbmV4dDtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0aWYgKHB0Ll9uZXh0KSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRwdC5fbmV4dC5fcHJldiA9IHB0Ll9wcmV2O1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRwdC5fbmV4dCA9IHB0Ll9wcmV2ID0gbnVsbDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRkZWxldGUgcHJvcExvb2t1cFtwXTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmIChyZWNvcmQpIHtcblx0XHRcdFx0XHRcdFx0b3ZlcndyaXR0ZW5Qcm9wc1twXSA9IDE7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICghdGhpcy5fZmlyc3RQVCAmJiB0aGlzLl9pbml0dGVkKSB7IC8vaWYgYWxsIHR3ZWVuaW5nIHByb3BlcnRpZXMgYXJlIGtpbGxlZCwga2lsbCB0aGUgdHdlZW4uIFdpdGhvdXQgdGhpcyBsaW5lLCBpZiB0aGVyZSdzIGEgdHdlZW4gd2l0aCBtdWx0aXBsZSB0YXJnZXRzIGFuZCB0aGVuIHlvdSBraWxsVHdlZW5zT2YoKSBlYWNoIHRhcmdldCBpbmRpdmlkdWFsbHksIHRoZSB0d2VlbiB3b3VsZCB0ZWNobmljYWxseSBzdGlsbCByZW1haW4gYWN0aXZlIGFuZCBmaXJlIGl0cyBvbkNvbXBsZXRlIGV2ZW4gdGhvdWdoIHRoZXJlIGFyZW4ndCBhbnkgbW9yZSBwcm9wZXJ0aWVzIHR3ZWVuaW5nLlxuXHRcdFx0XHRcdFx0dGhpcy5fZW5hYmxlZChmYWxzZSwgZmFsc2UpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGNoYW5nZWQ7XG5cdFx0fTtcblxuXHRcdHAuaW52YWxpZGF0ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKHRoaXMuX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQpIHtcblx0XHRcdFx0VHdlZW5MaXRlLl9vblBsdWdpbkV2ZW50KFwiX29uRGlzYWJsZVwiLCB0aGlzKTtcblx0XHRcdH1cblx0XHRcdHRoaXMuX2ZpcnN0UFQgPSB0aGlzLl9vdmVyd3JpdHRlblByb3BzID0gdGhpcy5fc3RhcnRBdCA9IHRoaXMuX29uVXBkYXRlID0gbnVsbDtcblx0XHRcdHRoaXMuX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQgPSB0aGlzLl9hY3RpdmUgPSB0aGlzLl9sYXp5ID0gZmFsc2U7XG5cdFx0XHR0aGlzLl9wcm9wTG9va3VwID0gKHRoaXMuX3RhcmdldHMpID8ge30gOiBbXTtcblx0XHRcdEFuaW1hdGlvbi5wcm90b3R5cGUuaW52YWxpZGF0ZS5jYWxsKHRoaXMpO1xuXHRcdFx0aWYgKHRoaXMudmFycy5pbW1lZGlhdGVSZW5kZXIpIHtcblx0XHRcdFx0dGhpcy5fdGltZSA9IC1fdGlueU51bTsgLy9mb3JjZXMgYSByZW5kZXIgd2l0aG91dCBoYXZpbmcgdG8gc2V0IHRoZSByZW5kZXIoKSBcImZvcmNlXCIgcGFyYW1ldGVyIHRvIHRydWUgYmVjYXVzZSB3ZSB3YW50IHRvIGFsbG93IGxhenlpbmcgYnkgZGVmYXVsdCAodXNpbmcgdGhlIFwiZm9yY2VcIiBwYXJhbWV0ZXIgYWx3YXlzIGZvcmNlcyBhbiBpbW1lZGlhdGUgZnVsbCByZW5kZXIpXG5cdFx0XHRcdHRoaXMucmVuZGVyKE1hdGgubWluKDAsIC10aGlzLl9kZWxheSkpOyAvL2luIGNhc2UgZGVsYXkgaXMgbmVnYXRpdmUuXG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9O1xuXG5cdFx0cC5fZW5hYmxlZCA9IGZ1bmN0aW9uKGVuYWJsZWQsIGlnbm9yZVRpbWVsaW5lKSB7XG5cdFx0XHRpZiAoIV90aWNrZXJBY3RpdmUpIHtcblx0XHRcdFx0X3RpY2tlci53YWtlKCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoZW5hYmxlZCAmJiB0aGlzLl9nYykge1xuXHRcdFx0XHR2YXIgdGFyZ2V0cyA9IHRoaXMuX3RhcmdldHMsXG5cdFx0XHRcdFx0aTtcblx0XHRcdFx0aWYgKHRhcmdldHMpIHtcblx0XHRcdFx0XHRpID0gdGFyZ2V0cy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0XHR0aGlzLl9zaWJsaW5nc1tpXSA9IF9yZWdpc3Rlcih0YXJnZXRzW2ldLCB0aGlzLCB0cnVlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhpcy5fc2libGluZ3MgPSBfcmVnaXN0ZXIodGhpcy50YXJnZXQsIHRoaXMsIHRydWUpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRBbmltYXRpb24ucHJvdG90eXBlLl9lbmFibGVkLmNhbGwodGhpcywgZW5hYmxlZCwgaWdub3JlVGltZWxpbmUpO1xuXHRcdFx0aWYgKHRoaXMuX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQpIGlmICh0aGlzLl9maXJzdFBUKSB7XG5cdFx0XHRcdHJldHVybiBUd2VlbkxpdGUuX29uUGx1Z2luRXZlbnQoKGVuYWJsZWQgPyBcIl9vbkVuYWJsZVwiIDogXCJfb25EaXNhYmxlXCIpLCB0aGlzKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXG5cbi8vLS0tLVR3ZWVuTGl0ZSBzdGF0aWMgbWV0aG9kcyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cdFx0VHdlZW5MaXRlLnRvID0gZnVuY3Rpb24odGFyZ2V0LCBkdXJhdGlvbiwgdmFycykge1xuXHRcdFx0cmV0dXJuIG5ldyBUd2VlbkxpdGUodGFyZ2V0LCBkdXJhdGlvbiwgdmFycyk7XG5cdFx0fTtcblxuXHRcdFR3ZWVuTGl0ZS5mcm9tID0gZnVuY3Rpb24odGFyZ2V0LCBkdXJhdGlvbiwgdmFycykge1xuXHRcdFx0dmFycy5ydW5CYWNrd2FyZHMgPSB0cnVlO1xuXHRcdFx0dmFycy5pbW1lZGlhdGVSZW5kZXIgPSAodmFycy5pbW1lZGlhdGVSZW5kZXIgIT0gZmFsc2UpO1xuXHRcdFx0cmV0dXJuIG5ldyBUd2VlbkxpdGUodGFyZ2V0LCBkdXJhdGlvbiwgdmFycyk7XG5cdFx0fTtcblxuXHRcdFR3ZWVuTGl0ZS5mcm9tVG8gPSBmdW5jdGlvbih0YXJnZXQsIGR1cmF0aW9uLCBmcm9tVmFycywgdG9WYXJzKSB7XG5cdFx0XHR0b1ZhcnMuc3RhcnRBdCA9IGZyb21WYXJzO1xuXHRcdFx0dG9WYXJzLmltbWVkaWF0ZVJlbmRlciA9ICh0b1ZhcnMuaW1tZWRpYXRlUmVuZGVyICE9IGZhbHNlICYmIGZyb21WYXJzLmltbWVkaWF0ZVJlbmRlciAhPSBmYWxzZSk7XG5cdFx0XHRyZXR1cm4gbmV3IFR3ZWVuTGl0ZSh0YXJnZXQsIGR1cmF0aW9uLCB0b1ZhcnMpO1xuXHRcdH07XG5cblx0XHRUd2VlbkxpdGUuZGVsYXllZENhbGwgPSBmdW5jdGlvbihkZWxheSwgY2FsbGJhY2ssIHBhcmFtcywgc2NvcGUsIHVzZUZyYW1lcykge1xuXHRcdFx0cmV0dXJuIG5ldyBUd2VlbkxpdGUoY2FsbGJhY2ssIDAsIHtkZWxheTpkZWxheSwgb25Db21wbGV0ZTpjYWxsYmFjaywgb25Db21wbGV0ZVBhcmFtczpwYXJhbXMsIGNhbGxiYWNrU2NvcGU6c2NvcGUsIG9uUmV2ZXJzZUNvbXBsZXRlOmNhbGxiYWNrLCBvblJldmVyc2VDb21wbGV0ZVBhcmFtczpwYXJhbXMsIGltbWVkaWF0ZVJlbmRlcjpmYWxzZSwgbGF6eTpmYWxzZSwgdXNlRnJhbWVzOnVzZUZyYW1lcywgb3ZlcndyaXRlOjB9KTtcblx0XHR9O1xuXG5cdFx0VHdlZW5MaXRlLnNldCA9IGZ1bmN0aW9uKHRhcmdldCwgdmFycykge1xuXHRcdFx0cmV0dXJuIG5ldyBUd2VlbkxpdGUodGFyZ2V0LCAwLCB2YXJzKTtcblx0XHR9O1xuXG5cdFx0VHdlZW5MaXRlLmdldFR3ZWVuc09mID0gZnVuY3Rpb24odGFyZ2V0LCBvbmx5QWN0aXZlKSB7XG5cdFx0XHRpZiAodGFyZ2V0ID09IG51bGwpIHsgcmV0dXJuIFtdOyB9XG5cdFx0XHR0YXJnZXQgPSAodHlwZW9mKHRhcmdldCkgIT09IFwic3RyaW5nXCIpID8gdGFyZ2V0IDogVHdlZW5MaXRlLnNlbGVjdG9yKHRhcmdldCkgfHwgdGFyZ2V0O1xuXHRcdFx0dmFyIGksIGEsIGosIHQ7XG5cdFx0XHRpZiAoKF9pc0FycmF5KHRhcmdldCkgfHwgX2lzU2VsZWN0b3IodGFyZ2V0KSkgJiYgdHlwZW9mKHRhcmdldFswXSkgIT09IFwibnVtYmVyXCIpIHtcblx0XHRcdFx0aSA9IHRhcmdldC5sZW5ndGg7XG5cdFx0XHRcdGEgPSBbXTtcblx0XHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdFx0YSA9IGEuY29uY2F0KFR3ZWVuTGl0ZS5nZXRUd2VlbnNPZih0YXJnZXRbaV0sIG9ubHlBY3RpdmUpKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpID0gYS5sZW5ndGg7XG5cdFx0XHRcdC8vbm93IGdldCByaWQgb2YgYW55IGR1cGxpY2F0ZXMgKHR3ZWVucyBvZiBhcnJheXMgb2Ygb2JqZWN0cyBjb3VsZCBjYXVzZSBkdXBsaWNhdGVzKVxuXHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHR0ID0gYVtpXTtcblx0XHRcdFx0XHRqID0gaTtcblx0XHRcdFx0XHR3aGlsZSAoLS1qID4gLTEpIHtcblx0XHRcdFx0XHRcdGlmICh0ID09PSBhW2pdKSB7XG5cdFx0XHRcdFx0XHRcdGEuc3BsaWNlKGksIDEpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YSA9IF9yZWdpc3Rlcih0YXJnZXQpLmNvbmNhdCgpO1xuXHRcdFx0XHRpID0gYS5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRcdGlmIChhW2ldLl9nYyB8fCAob25seUFjdGl2ZSAmJiAhYVtpXS5pc0FjdGl2ZSgpKSkge1xuXHRcdFx0XHRcdFx0YS5zcGxpY2UoaSwgMSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gYTtcblx0XHR9O1xuXG5cdFx0VHdlZW5MaXRlLmtpbGxUd2VlbnNPZiA9IFR3ZWVuTGl0ZS5raWxsRGVsYXllZENhbGxzVG8gPSBmdW5jdGlvbih0YXJnZXQsIG9ubHlBY3RpdmUsIHZhcnMpIHtcblx0XHRcdGlmICh0eXBlb2Yob25seUFjdGl2ZSkgPT09IFwib2JqZWN0XCIpIHtcblx0XHRcdFx0dmFycyA9IG9ubHlBY3RpdmU7IC8vZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IChiZWZvcmUgXCJvbmx5QWN0aXZlXCIgcGFyYW1ldGVyIHdhcyBpbnNlcnRlZClcblx0XHRcdFx0b25seUFjdGl2ZSA9IGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0dmFyIGEgPSBUd2VlbkxpdGUuZ2V0VHdlZW5zT2YodGFyZ2V0LCBvbmx5QWN0aXZlKSxcblx0XHRcdFx0aSA9IGEubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKC0taSA+IC0xKSB7XG5cdFx0XHRcdGFbaV0uX2tpbGwodmFycywgdGFyZ2V0KTtcblx0XHRcdH1cblx0XHR9O1xuXG5cblxuLypcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIFR3ZWVuUGx1Z2luICAgKGNvdWxkIGVhc2lseSBiZSBzcGxpdCBvdXQgYXMgYSBzZXBhcmF0ZSBmaWxlL2NsYXNzLCBidXQgaW5jbHVkZWQgZm9yIGVhc2Ugb2YgdXNlIChzbyB0aGF0IHBlb3BsZSBkb24ndCBuZWVkIHRvIGluY2x1ZGUgYW5vdGhlciBzY3JpcHQgY2FsbCBiZWZvcmUgbG9hZGluZyBwbHVnaW5zIHdoaWNoIGlzIGVhc3kgdG8gZm9yZ2V0KVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cdFx0dmFyIFR3ZWVuUGx1Z2luID0gX2NsYXNzKFwicGx1Z2lucy5Ud2VlblBsdWdpblwiLCBmdW5jdGlvbihwcm9wcywgcHJpb3JpdHkpIHtcblx0XHRcdFx0XHR0aGlzLl9vdmVyd3JpdGVQcm9wcyA9IChwcm9wcyB8fCBcIlwiKS5zcGxpdChcIixcIik7XG5cdFx0XHRcdFx0dGhpcy5fcHJvcE5hbWUgPSB0aGlzLl9vdmVyd3JpdGVQcm9wc1swXTtcblx0XHRcdFx0XHR0aGlzLl9wcmlvcml0eSA9IHByaW9yaXR5IHx8IDA7XG5cdFx0XHRcdFx0dGhpcy5fc3VwZXIgPSBUd2VlblBsdWdpbi5wcm90b3R5cGU7XG5cdFx0XHRcdH0sIHRydWUpO1xuXG5cdFx0cCA9IFR3ZWVuUGx1Z2luLnByb3RvdHlwZTtcblx0XHRUd2VlblBsdWdpbi52ZXJzaW9uID0gXCIxLjE5LjBcIjtcblx0XHRUd2VlblBsdWdpbi5BUEkgPSAyO1xuXHRcdHAuX2ZpcnN0UFQgPSBudWxsO1xuXHRcdHAuX2FkZFR3ZWVuID0gX2FkZFByb3BUd2Vlbjtcblx0XHRwLnNldFJhdGlvID0gX3NldFJhdGlvO1xuXG5cdFx0cC5fa2lsbCA9IGZ1bmN0aW9uKGxvb2t1cCkge1xuXHRcdFx0dmFyIGEgPSB0aGlzLl9vdmVyd3JpdGVQcm9wcyxcblx0XHRcdFx0cHQgPSB0aGlzLl9maXJzdFBULFxuXHRcdFx0XHRpO1xuXHRcdFx0aWYgKGxvb2t1cFt0aGlzLl9wcm9wTmFtZV0gIT0gbnVsbCkge1xuXHRcdFx0XHR0aGlzLl9vdmVyd3JpdGVQcm9wcyA9IFtdO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aSA9IGEubGVuZ3RoO1xuXHRcdFx0XHR3aGlsZSAoLS1pID4gLTEpIHtcblx0XHRcdFx0XHRpZiAobG9va3VwW2FbaV1dICE9IG51bGwpIHtcblx0XHRcdFx0XHRcdGEuc3BsaWNlKGksIDEpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0d2hpbGUgKHB0KSB7XG5cdFx0XHRcdGlmIChsb29rdXBbcHQubl0gIT0gbnVsbCkge1xuXHRcdFx0XHRcdGlmIChwdC5fbmV4dCkge1xuXHRcdFx0XHRcdFx0cHQuX25leHQuX3ByZXYgPSBwdC5fcHJldjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHB0Ll9wcmV2KSB7XG5cdFx0XHRcdFx0XHRwdC5fcHJldi5fbmV4dCA9IHB0Ll9uZXh0O1xuXHRcdFx0XHRcdFx0cHQuX3ByZXYgPSBudWxsO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAodGhpcy5fZmlyc3RQVCA9PT0gcHQpIHtcblx0XHRcdFx0XHRcdHRoaXMuX2ZpcnN0UFQgPSBwdC5fbmV4dDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cHQgPSBwdC5fbmV4dDtcblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXG5cdFx0cC5fbW9kID0gcC5fcm91bmRQcm9wcyA9IGZ1bmN0aW9uKGxvb2t1cCkge1xuXHRcdFx0dmFyIHB0ID0gdGhpcy5fZmlyc3RQVCxcblx0XHRcdFx0dmFsO1xuXHRcdFx0d2hpbGUgKHB0KSB7XG5cdFx0XHRcdHZhbCA9IGxvb2t1cFt0aGlzLl9wcm9wTmFtZV0gfHwgKHB0Lm4gIT0gbnVsbCAmJiBsb29rdXBbIHB0Lm4uc3BsaXQodGhpcy5fcHJvcE5hbWUgKyBcIl9cIikuam9pbihcIlwiKSBdKTtcblx0XHRcdFx0aWYgKHZhbCAmJiB0eXBlb2YodmFsKSA9PT0gXCJmdW5jdGlvblwiKSB7IC8vc29tZSBwcm9wZXJ0aWVzIHRoYXQgYXJlIHZlcnkgcGx1Z2luLXNwZWNpZmljIGFkZCBhIHByZWZpeCBuYW1lZCBhZnRlciB0aGUgX3Byb3BOYW1lIHBsdXMgYW4gdW5kZXJzY29yZSwgc28gd2UgbmVlZCB0byBpZ25vcmUgdGhhdCBleHRyYSBzdHVmZiBoZXJlLlxuXHRcdFx0XHRcdGlmIChwdC5mID09PSAyKSB7XG5cdFx0XHRcdFx0XHRwdC50Ll9hcHBseVBULm0gPSB2YWw7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHB0Lm0gPSB2YWw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHB0ID0gcHQuX25leHQ7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdFR3ZWVuTGl0ZS5fb25QbHVnaW5FdmVudCA9IGZ1bmN0aW9uKHR5cGUsIHR3ZWVuKSB7XG5cdFx0XHR2YXIgcHQgPSB0d2Vlbi5fZmlyc3RQVCxcblx0XHRcdFx0Y2hhbmdlZCwgcHQyLCBmaXJzdCwgbGFzdCwgbmV4dDtcblx0XHRcdGlmICh0eXBlID09PSBcIl9vbkluaXRBbGxQcm9wc1wiKSB7XG5cdFx0XHRcdC8vc29ydHMgdGhlIFByb3BUd2VlbiBsaW5rZWQgbGlzdCBpbiBvcmRlciBvZiBwcmlvcml0eSBiZWNhdXNlIHNvbWUgcGx1Z2lucyBuZWVkIHRvIHJlbmRlciBlYXJsaWVyL2xhdGVyIHRoYW4gb3RoZXJzLCBsaWtlIE1vdGlvbkJsdXJQbHVnaW4gYXBwbGllcyBpdHMgZWZmZWN0cyBhZnRlciBhbGwgeC95L2FscGhhIHR3ZWVucyBoYXZlIHJlbmRlcmVkIG9uIGVhY2ggZnJhbWUuXG5cdFx0XHRcdHdoaWxlIChwdCkge1xuXHRcdFx0XHRcdG5leHQgPSBwdC5fbmV4dDtcblx0XHRcdFx0XHRwdDIgPSBmaXJzdDtcblx0XHRcdFx0XHR3aGlsZSAocHQyICYmIHB0Mi5wciA+IHB0LnByKSB7XG5cdFx0XHRcdFx0XHRwdDIgPSBwdDIuX25leHQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICgocHQuX3ByZXYgPSBwdDIgPyBwdDIuX3ByZXYgOiBsYXN0KSkge1xuXHRcdFx0XHRcdFx0cHQuX3ByZXYuX25leHQgPSBwdDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Zmlyc3QgPSBwdDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKChwdC5fbmV4dCA9IHB0MikpIHtcblx0XHRcdFx0XHRcdHB0Mi5fcHJldiA9IHB0O1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRsYXN0ID0gcHQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHB0ID0gbmV4dDtcblx0XHRcdFx0fVxuXHRcdFx0XHRwdCA9IHR3ZWVuLl9maXJzdFBUID0gZmlyc3Q7XG5cdFx0XHR9XG5cdFx0XHR3aGlsZSAocHQpIHtcblx0XHRcdFx0aWYgKHB0LnBnKSBpZiAodHlwZW9mKHB0LnRbdHlwZV0pID09PSBcImZ1bmN0aW9uXCIpIGlmIChwdC50W3R5cGVdKCkpIHtcblx0XHRcdFx0XHRjaGFuZ2VkID0gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRwdCA9IHB0Ll9uZXh0O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGNoYW5nZWQ7XG5cdFx0fTtcblxuXHRcdFR3ZWVuUGx1Z2luLmFjdGl2YXRlID0gZnVuY3Rpb24ocGx1Z2lucykge1xuXHRcdFx0dmFyIGkgPSBwbHVnaW5zLmxlbmd0aDtcblx0XHRcdHdoaWxlICgtLWkgPiAtMSkge1xuXHRcdFx0XHRpZiAocGx1Z2luc1tpXS5BUEkgPT09IFR3ZWVuUGx1Z2luLkFQSSkge1xuXHRcdFx0XHRcdF9wbHVnaW5zWyhuZXcgcGx1Z2luc1tpXSgpKS5fcHJvcE5hbWVdID0gcGx1Z2luc1tpXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fTtcblxuXHRcdC8vcHJvdmlkZXMgYSBtb3JlIGNvbmNpc2Ugd2F5IHRvIGRlZmluZSBwbHVnaW5zIHRoYXQgaGF2ZSBubyBkZXBlbmRlbmNpZXMgYmVzaWRlcyBUd2VlblBsdWdpbiBhbmQgVHdlZW5MaXRlLCB3cmFwcGluZyBjb21tb24gYm9pbGVycGxhdGUgc3R1ZmYgaW50byBvbmUgZnVuY3Rpb24gKGFkZGVkIGluIDEuOS4wKS4gWW91IGRvbid0IE5FRUQgdG8gdXNlIHRoaXMgdG8gZGVmaW5lIGEgcGx1Z2luIC0gdGhlIG9sZCB3YXkgc3RpbGwgd29ya3MgYW5kIGNhbiBiZSB1c2VmdWwgaW4gY2VydGFpbiAocmFyZSkgc2l0dWF0aW9ucy5cblx0XHRfZ3NEZWZpbmUucGx1Z2luID0gZnVuY3Rpb24oY29uZmlnKSB7XG5cdFx0XHRpZiAoIWNvbmZpZyB8fCAhY29uZmlnLnByb3BOYW1lIHx8ICFjb25maWcuaW5pdCB8fCAhY29uZmlnLkFQSSkgeyB0aHJvdyBcImlsbGVnYWwgcGx1Z2luIGRlZmluaXRpb24uXCI7IH1cblx0XHRcdHZhciBwcm9wTmFtZSA9IGNvbmZpZy5wcm9wTmFtZSxcblx0XHRcdFx0cHJpb3JpdHkgPSBjb25maWcucHJpb3JpdHkgfHwgMCxcblx0XHRcdFx0b3ZlcndyaXRlUHJvcHMgPSBjb25maWcub3ZlcndyaXRlUHJvcHMsXG5cdFx0XHRcdG1hcCA9IHtpbml0OlwiX29uSW5pdFR3ZWVuXCIsIHNldDpcInNldFJhdGlvXCIsIGtpbGw6XCJfa2lsbFwiLCByb3VuZDpcIl9tb2RcIiwgbW9kOlwiX21vZFwiLCBpbml0QWxsOlwiX29uSW5pdEFsbFByb3BzXCJ9LFxuXHRcdFx0XHRQbHVnaW4gPSBfY2xhc3MoXCJwbHVnaW5zLlwiICsgcHJvcE5hbWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBwcm9wTmFtZS5zdWJzdHIoMSkgKyBcIlBsdWdpblwiLFxuXHRcdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0VHdlZW5QbHVnaW4uY2FsbCh0aGlzLCBwcm9wTmFtZSwgcHJpb3JpdHkpO1xuXHRcdFx0XHRcdFx0dGhpcy5fb3ZlcndyaXRlUHJvcHMgPSBvdmVyd3JpdGVQcm9wcyB8fCBbXTtcblx0XHRcdFx0XHR9LCAoY29uZmlnLmdsb2JhbCA9PT0gdHJ1ZSkpLFxuXHRcdFx0XHRwID0gUGx1Z2luLnByb3RvdHlwZSA9IG5ldyBUd2VlblBsdWdpbihwcm9wTmFtZSksXG5cdFx0XHRcdHByb3A7XG5cdFx0XHRwLmNvbnN0cnVjdG9yID0gUGx1Z2luO1xuXHRcdFx0UGx1Z2luLkFQSSA9IGNvbmZpZy5BUEk7XG5cdFx0XHRmb3IgKHByb3AgaW4gbWFwKSB7XG5cdFx0XHRcdGlmICh0eXBlb2YoY29uZmlnW3Byb3BdKSA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRcdFx0cFttYXBbcHJvcF1dID0gY29uZmlnW3Byb3BdO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRQbHVnaW4udmVyc2lvbiA9IGNvbmZpZy52ZXJzaW9uO1xuXHRcdFx0VHdlZW5QbHVnaW4uYWN0aXZhdGUoW1BsdWdpbl0pO1xuXHRcdFx0cmV0dXJuIFBsdWdpbjtcblx0XHR9O1xuXG5cblx0XHQvL25vdyBydW4gdGhyb3VnaCBhbGwgdGhlIGRlcGVuZGVuY2llcyBkaXNjb3ZlcmVkIGFuZCBpZiBhbnkgYXJlIG1pc3NpbmcsIGxvZyB0aGF0IHRvIHRoZSBjb25zb2xlIGFzIGEgd2FybmluZy4gVGhpcyBpcyB3aHkgaXQncyBiZXN0IHRvIGhhdmUgVHdlZW5MaXRlIGxvYWQgbGFzdCAtIGl0IGNhbiBjaGVjayBhbGwgdGhlIGRlcGVuZGVuY2llcyBmb3IgeW91LlxuXHRcdGEgPSB3aW5kb3cuX2dzUXVldWU7XG5cdFx0aWYgKGEpIHtcblx0XHRcdGZvciAoaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGFbaV0oKTtcblx0XHRcdH1cblx0XHRcdGZvciAocCBpbiBfZGVmTG9va3VwKSB7XG5cdFx0XHRcdGlmICghX2RlZkxvb2t1cFtwXS5mdW5jKSB7XG5cdFx0XHRcdFx0d2luZG93LmNvbnNvbGUubG9nKFwiR1NBUCBlbmNvdW50ZXJlZCBtaXNzaW5nIGRlcGVuZGVuY3k6IFwiICsgcCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRfdGlja2VyQWN0aXZlID0gZmFsc2U7IC8vZW5zdXJlcyB0aGF0IHRoZSBmaXJzdCBvZmZpY2lhbCBhbmltYXRpb24gZm9yY2VzIGEgdGlja2VyLnRpY2soKSB0byB1cGRhdGUgdGhlIHRpbWUgd2hlbiBpdCBpcyBpbnN0YW50aWF0ZWRcblxufSkoKHR5cGVvZihtb2R1bGUpICE9PSBcInVuZGVmaW5lZFwiICYmIG1vZHVsZS5leHBvcnRzICYmIHR5cGVvZihnbG9iYWwpICE9PSBcInVuZGVmaW5lZFwiKSA/IGdsb2JhbCA6IHRoaXMgfHwgd2luZG93LCBcIlR3ZWVuTWF4XCIpOyIsIi8qISBqUXVlcnkgdjMuMS4xIC1hamF4LC1hamF4L2pzb25wLC1hamF4L2xvYWQsLWFqYXgvcGFyc2VYTUwsLWFqYXgvc2NyaXB0LC1hamF4L3Zhci9sb2NhdGlvbiwtYWpheC92YXIvbm9uY2UsLWFqYXgvdmFyL3JxdWVyeSwtYWpheC94aHIsLW1hbmlwdWxhdGlvbi9fZXZhbFVybCwtZXZlbnQvYWpheCwtZWZmZWN0cywtZWZmZWN0cy9hbmltYXRlZFNlbGVjdG9yLC1lZmZlY3RzL1R3ZWVuLC1kZXByZWNhdGVkIHwgKGMpIGpRdWVyeSBGb3VuZGF0aW9uIHwganF1ZXJ5Lm9yZy9saWNlbnNlICovXG4hZnVuY3Rpb24oYSxiKXtcInVzZSBzdHJpY3RcIjtcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9YS5kb2N1bWVudD9iKGEsITApOmZ1bmN0aW9uKGEpe2lmKCFhLmRvY3VtZW50KXRocm93IG5ldyBFcnJvcihcImpRdWVyeSByZXF1aXJlcyBhIHdpbmRvdyB3aXRoIGEgZG9jdW1lbnRcIik7cmV0dXJuIGIoYSl9OmIoYSl9KFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OnRoaXMsZnVuY3Rpb24oYSxiKXtcInVzZSBzdHJpY3RcIjt2YXIgYz1bXSxkPWEuZG9jdW1lbnQsZT1PYmplY3QuZ2V0UHJvdG90eXBlT2YsZj1jLnNsaWNlLGc9Yy5jb25jYXQsaD1jLnB1c2gsaT1jLmluZGV4T2Ysaj17fSxrPWoudG9TdHJpbmcsbD1qLmhhc093blByb3BlcnR5LG09bC50b1N0cmluZyxuPW0uY2FsbChPYmplY3QpLG89e307ZnVuY3Rpb24gcChhLGIpe2I9Ynx8ZDt2YXIgYz1iLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7Yy50ZXh0PWEsYi5oZWFkLmFwcGVuZENoaWxkKGMpLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYyl9dmFyIHE9XCIzLjEuMSAtYWpheCwtYWpheC9qc29ucCwtYWpheC9sb2FkLC1hamF4L3BhcnNlWE1MLC1hamF4L3NjcmlwdCwtYWpheC92YXIvbG9jYXRpb24sLWFqYXgvdmFyL25vbmNlLC1hamF4L3Zhci9ycXVlcnksLWFqYXgveGhyLC1tYW5pcHVsYXRpb24vX2V2YWxVcmwsLWV2ZW50L2FqYXgsLWVmZmVjdHMsLWVmZmVjdHMvYW5pbWF0ZWRTZWxlY3RvciwtZWZmZWN0cy9Ud2VlbiwtZGVwcmVjYXRlZFwiLHI9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IHIuZm4uaW5pdChhLGIpfSxzPS9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZyx0PS9eLW1zLS8sdT0vLShbYS16XSkvZyx2PWZ1bmN0aW9uKGEsYil7cmV0dXJuIGIudG9VcHBlckNhc2UoKX07ci5mbj1yLnByb3RvdHlwZT17anF1ZXJ5OnEsY29uc3RydWN0b3I6cixsZW5ndGg6MCx0b0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIGYuY2FsbCh0aGlzKX0sZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hP2YuY2FsbCh0aGlzKTphPDA/dGhpc1thK3RoaXMubGVuZ3RoXTp0aGlzW2FdfSxwdXNoU3RhY2s6ZnVuY3Rpb24oYSl7dmFyIGI9ci5tZXJnZSh0aGlzLmNvbnN0cnVjdG9yKCksYSk7cmV0dXJuIGIucHJldk9iamVjdD10aGlzLGJ9LGVhY2g6ZnVuY3Rpb24oYSl7cmV0dXJuIHIuZWFjaCh0aGlzLGEpfSxtYXA6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKHIubWFwKHRoaXMsZnVuY3Rpb24oYixjKXtyZXR1cm4gYS5jYWxsKGIsYyxiKX0pKX0sc2xpY2U6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soZi5hcHBseSh0aGlzLGFyZ3VtZW50cykpfSxmaXJzdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVxKDApfSxsYXN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoLTEpfSxlcTpmdW5jdGlvbihhKXt2YXIgYj10aGlzLmxlbmd0aCxjPSthKyhhPDA/YjowKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2soYz49MCYmYzxiP1t0aGlzW2NdXTpbXSl9LGVuZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnByZXZPYmplY3R8fHRoaXMuY29uc3RydWN0b3IoKX0scHVzaDpoLHNvcnQ6Yy5zb3J0LHNwbGljZTpjLnNwbGljZX0sci5leHRlbmQ9ci5mbi5leHRlbmQ9ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZCxlLGYsZz1hcmd1bWVudHNbMF18fHt9LGg9MSxpPWFyZ3VtZW50cy5sZW5ndGgsaj0hMTtmb3IoXCJib29sZWFuXCI9PXR5cGVvZiBnJiYoaj1nLGc9YXJndW1lbnRzW2hdfHx7fSxoKyspLFwib2JqZWN0XCI9PXR5cGVvZiBnfHxyLmlzRnVuY3Rpb24oZyl8fChnPXt9KSxoPT09aSYmKGc9dGhpcyxoLS0pO2g8aTtoKyspaWYobnVsbCE9KGE9YXJndW1lbnRzW2hdKSlmb3IoYiBpbiBhKWM9Z1tiXSxkPWFbYl0sZyE9PWQmJihqJiZkJiYoci5pc1BsYWluT2JqZWN0KGQpfHwoZT1yLmlzQXJyYXkoZCkpKT8oZT8oZT0hMSxmPWMmJnIuaXNBcnJheShjKT9jOltdKTpmPWMmJnIuaXNQbGFpbk9iamVjdChjKT9jOnt9LGdbYl09ci5leHRlbmQoaixmLGQpKTp2b2lkIDAhPT1kJiYoZ1tiXT1kKSk7cmV0dXJuIGd9LHIuZXh0ZW5kKHtleHBhbmRvOlwialF1ZXJ5XCIrKHErTWF0aC5yYW5kb20oKSkucmVwbGFjZSgvXFxEL2csXCJcIiksaXNSZWFkeTohMCxlcnJvcjpmdW5jdGlvbihhKXt0aHJvdyBuZXcgRXJyb3IoYSl9LG5vb3A6ZnVuY3Rpb24oKXt9LGlzRnVuY3Rpb246ZnVuY3Rpb24oYSl7cmV0dXJuXCJmdW5jdGlvblwiPT09ci50eXBlKGEpfSxpc0FycmF5OkFycmF5LmlzQXJyYXksaXNXaW5kb3c6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGwhPWEmJmE9PT1hLndpbmRvd30saXNOdW1lcmljOmZ1bmN0aW9uKGEpe3ZhciBiPXIudHlwZShhKTtyZXR1cm4oXCJudW1iZXJcIj09PWJ8fFwic3RyaW5nXCI9PT1iKSYmIWlzTmFOKGEtcGFyc2VGbG9hdChhKSl9LGlzUGxhaW5PYmplY3Q6ZnVuY3Rpb24oYSl7dmFyIGIsYztyZXR1cm4hKCFhfHxcIltvYmplY3QgT2JqZWN0XVwiIT09ay5jYWxsKGEpKSYmKCEoYj1lKGEpKXx8KGM9bC5jYWxsKGIsXCJjb25zdHJ1Y3RvclwiKSYmYi5jb25zdHJ1Y3RvcixcImZ1bmN0aW9uXCI9PXR5cGVvZiBjJiZtLmNhbGwoYyk9PT1uKSl9LGlzRW1wdHlPYmplY3Q6ZnVuY3Rpb24oYSl7dmFyIGI7Zm9yKGIgaW4gYSlyZXR1cm4hMTtyZXR1cm4hMH0sdHlwZTpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT9hK1wiXCI6XCJvYmplY3RcIj09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGE/altrLmNhbGwoYSldfHxcIm9iamVjdFwiOnR5cGVvZiBhfSxnbG9iYWxFdmFsOmZ1bmN0aW9uKGEpe3AoYSl9LGNhbWVsQ2FzZTpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZXBsYWNlKHQsXCJtcy1cIikucmVwbGFjZSh1LHYpfSxub2RlTmFtZTpmdW5jdGlvbihhLGIpe3JldHVybiBhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1iLnRvTG93ZXJDYXNlKCl9LGVhY2g6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPTA7aWYodyhhKSl7Zm9yKGM9YS5sZW5ndGg7ZDxjO2QrKylpZihiLmNhbGwoYVtkXSxkLGFbZF0pPT09ITEpYnJlYWt9ZWxzZSBmb3IoZCBpbiBhKWlmKGIuY2FsbChhW2RdLGQsYVtkXSk9PT0hMSlicmVhaztyZXR1cm4gYX0sdHJpbTpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT9cIlwiOihhK1wiXCIpLnJlcGxhY2UocyxcIlwiKX0sbWFrZUFycmF5OmZ1bmN0aW9uKGEsYil7dmFyIGM9Ynx8W107cmV0dXJuIG51bGwhPWEmJih3KE9iamVjdChhKSk/ci5tZXJnZShjLFwic3RyaW5nXCI9PXR5cGVvZiBhP1thXTphKTpoLmNhbGwoYyxhKSksY30saW5BcnJheTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIG51bGw9PWI/LTE6aS5jYWxsKGIsYSxjKX0sbWVyZ2U6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9K2IubGVuZ3RoLGQ9MCxlPWEubGVuZ3RoO2Q8YztkKyspYVtlKytdPWJbZF07cmV0dXJuIGEubGVuZ3RoPWUsYX0sZ3JlcDpmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkLGU9W10sZj0wLGc9YS5sZW5ndGgsaD0hYztmPGc7ZisrKWQ9IWIoYVtmXSxmKSxkIT09aCYmZS5wdXNoKGFbZl0pO3JldHVybiBlfSxtYXA6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj0wLGg9W107aWYodyhhKSlmb3IoZD1hLmxlbmd0aDtmPGQ7ZisrKWU9YihhW2ZdLGYsYyksbnVsbCE9ZSYmaC5wdXNoKGUpO2Vsc2UgZm9yKGYgaW4gYSllPWIoYVtmXSxmLGMpLG51bGwhPWUmJmgucHVzaChlKTtyZXR1cm4gZy5hcHBseShbXSxoKX0sZ3VpZDoxLHByb3h5OmZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBiJiYoYz1hW2JdLGI9YSxhPWMpLHIuaXNGdW5jdGlvbihhKSlyZXR1cm4gZD1mLmNhbGwoYXJndW1lbnRzLDIpLGU9ZnVuY3Rpb24oKXtyZXR1cm4gYS5hcHBseShifHx0aGlzLGQuY29uY2F0KGYuY2FsbChhcmd1bWVudHMpKSl9LGUuZ3VpZD1hLmd1aWQ9YS5ndWlkfHxyLmd1aWQrKyxlfSxub3c6RGF0ZS5ub3csc3VwcG9ydDpvfSksXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiYoci5mbltTeW1ib2wuaXRlcmF0b3JdPWNbU3ltYm9sLml0ZXJhdG9yXSksci5lYWNoKFwiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvciBTeW1ib2xcIi5zcGxpdChcIiBcIiksZnVuY3Rpb24oYSxiKXtqW1wiW29iamVjdCBcIitiK1wiXVwiXT1iLnRvTG93ZXJDYXNlKCl9KTtmdW5jdGlvbiB3KGEpe3ZhciBiPSEhYSYmXCJsZW5ndGhcImluIGEmJmEubGVuZ3RoLGM9ci50eXBlKGEpO3JldHVyblwiZnVuY3Rpb25cIiE9PWMmJiFyLmlzV2luZG93KGEpJiYoXCJhcnJheVwiPT09Y3x8MD09PWJ8fFwibnVtYmVyXCI9PXR5cGVvZiBiJiZiPjAmJmItMSBpbiBhKX12YXIgeD1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpLGosayxsLG0sbixvLHAscSxyLHMsdCx1PVwic2l6emxlXCIrMSpuZXcgRGF0ZSx2PWEuZG9jdW1lbnQsdz0wLHg9MCx5PWhhKCksej1oYSgpLEE9aGEoKSxCPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9PT1iJiYobD0hMCksMH0sQz17fS5oYXNPd25Qcm9wZXJ0eSxEPVtdLEU9RC5wb3AsRj1ELnB1c2gsRz1ELnB1c2gsSD1ELnNsaWNlLEk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MCxkPWEubGVuZ3RoO2M8ZDtjKyspaWYoYVtjXT09PWIpcmV0dXJuIGM7cmV0dXJuLTF9LEo9XCJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZFwiLEs9XCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiLEw9XCIoPzpcXFxcXFxcXC58W1xcXFx3LV18W15cXDAtXFxcXHhhMF0pK1wiLE09XCJcXFxcW1wiK0srXCIqKFwiK0wrXCIpKD86XCIrSytcIiooWypeJHwhfl0/PSlcIitLK1wiKig/OicoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcInwoXCIrTCtcIikpfClcIitLK1wiKlxcXFxdXCIsTj1cIjooXCIrTCtcIikoPzpcXFxcKCgoJygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwiKXwoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKVtcXFxcXV18XCIrTStcIikqKXwuKilcXFxcKXwpXCIsTz1uZXcgUmVnRXhwKEsrXCIrXCIsXCJnXCIpLFA9bmV3IFJlZ0V4cChcIl5cIitLK1wiK3woKD86XnxbXlxcXFxcXFxcXSkoPzpcXFxcXFxcXC4pKilcIitLK1wiKyRcIixcImdcIiksUT1uZXcgUmVnRXhwKFwiXlwiK0srXCIqLFwiK0srXCIqXCIpLFI9bmV3IFJlZ0V4cChcIl5cIitLK1wiKihbPit+XXxcIitLK1wiKVwiK0srXCIqXCIpLFM9bmV3IFJlZ0V4cChcIj1cIitLK1wiKihbXlxcXFxdJ1xcXCJdKj8pXCIrSytcIipcXFxcXVwiLFwiZ1wiKSxUPW5ldyBSZWdFeHAoTiksVT1uZXcgUmVnRXhwKFwiXlwiK0wrXCIkXCIpLFY9e0lEOm5ldyBSZWdFeHAoXCJeIyhcIitMK1wiKVwiKSxDTEFTUzpuZXcgUmVnRXhwKFwiXlxcXFwuKFwiK0wrXCIpXCIpLFRBRzpuZXcgUmVnRXhwKFwiXihcIitMK1wifFsqXSlcIiksQVRUUjpuZXcgUmVnRXhwKFwiXlwiK00pLFBTRVVETzpuZXcgUmVnRXhwKFwiXlwiK04pLENISUxEOm5ldyBSZWdFeHAoXCJeOihvbmx5fGZpcnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXFxcKFwiK0srXCIqKGV2ZW58b2RkfCgoWystXXwpKFxcXFxkKilufClcIitLK1wiKig/OihbKy1dfClcIitLK1wiKihcXFxcZCspfCkpXCIrSytcIipcXFxcKXwpXCIsXCJpXCIpLGJvb2w6bmV3IFJlZ0V4cChcIl4oPzpcIitKK1wiKSRcIixcImlcIiksbmVlZHNDb250ZXh0Om5ldyBSZWdFeHAoXCJeXCIrSytcIipbPit+XXw6KGV2ZW58b2RkfGVxfGd0fGx0fG50aHxmaXJzdHxsYXN0KSg/OlxcXFwoXCIrSytcIiooKD86LVxcXFxkKT9cXFxcZCopXCIrSytcIipcXFxcKXwpKD89W14tXXwkKVwiLFwiaVwiKX0sVz0vXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFg9L15oXFxkJC9pLFk9L15bXntdK1xce1xccypcXFtuYXRpdmUgXFx3LyxaPS9eKD86IyhbXFx3LV0rKXwoXFx3Kyl8XFwuKFtcXHctXSspKSQvLCQ9L1srfl0vLF89bmV3IFJlZ0V4cChcIlxcXFxcXFxcKFtcXFxcZGEtZl17MSw2fVwiK0srXCI/fChcIitLK1wiKXwuKVwiLFwiaWdcIiksYWE9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVwiMHhcIitiLTY1NTM2O3JldHVybiBkIT09ZHx8Yz9iOmQ8MD9TdHJpbmcuZnJvbUNoYXJDb2RlKGQrNjU1MzYpOlN0cmluZy5mcm9tQ2hhckNvZGUoZD4+MTB8NTUyOTYsMTAyMyZkfDU2MzIwKX0sYmE9LyhbXFwwLVxceDFmXFx4N2ZdfF4tP1xcZCl8Xi0kfFteXFwwLVxceDFmXFx4N2YtXFx1RkZGRlxcdy1dL2csY2E9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYj9cIlxcMFwiPT09YT9cIlxcdWZmZmRcIjphLnNsaWNlKDAsLTEpK1wiXFxcXFwiK2EuY2hhckNvZGVBdChhLmxlbmd0aC0xKS50b1N0cmluZygxNikrXCIgXCI6XCJcXFxcXCIrYX0sZGE9ZnVuY3Rpb24oKXttKCl9LGVhPXRhKGZ1bmN0aW9uKGEpe3JldHVybiBhLmRpc2FibGVkPT09ITAmJihcImZvcm1cImluIGF8fFwibGFiZWxcImluIGEpfSx7ZGlyOlwicGFyZW50Tm9kZVwiLG5leHQ6XCJsZWdlbmRcIn0pO3RyeXtHLmFwcGx5KEQ9SC5jYWxsKHYuY2hpbGROb2Rlcyksdi5jaGlsZE5vZGVzKSxEW3YuY2hpbGROb2Rlcy5sZW5ndGhdLm5vZGVUeXBlfWNhdGNoKGZhKXtHPXthcHBseTpELmxlbmd0aD9mdW5jdGlvbihhLGIpe0YuYXBwbHkoYSxILmNhbGwoYikpfTpmdW5jdGlvbihhLGIpe3ZhciBjPWEubGVuZ3RoLGQ9MDt3aGlsZShhW2MrK109YltkKytdKTthLmxlbmd0aD1jLTF9fX1mdW5jdGlvbiBnYShhLGIsZCxlKXt2YXIgZixoLGosayxsLG8scixzPWImJmIub3duZXJEb2N1bWVudCx3PWI/Yi5ub2RlVHlwZTo5O2lmKGQ9ZHx8W10sXCJzdHJpbmdcIiE9dHlwZW9mIGF8fCFhfHwxIT09dyYmOSE9PXcmJjExIT09dylyZXR1cm4gZDtpZighZSYmKChiP2Iub3duZXJEb2N1bWVudHx8Yjp2KSE9PW4mJm0oYiksYj1ifHxuLHApKXtpZigxMSE9PXcmJihsPVouZXhlYyhhKSkpaWYoZj1sWzFdKXtpZig5PT09dyl7aWYoIShqPWIuZ2V0RWxlbWVudEJ5SWQoZikpKXJldHVybiBkO2lmKGouaWQ9PT1mKXJldHVybiBkLnB1c2goaiksZH1lbHNlIGlmKHMmJihqPXMuZ2V0RWxlbWVudEJ5SWQoZikpJiZ0KGIsaikmJmouaWQ9PT1mKXJldHVybiBkLnB1c2goaiksZH1lbHNle2lmKGxbMl0pcmV0dXJuIEcuYXBwbHkoZCxiLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpKSxkO2lmKChmPWxbM10pJiZjLmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSlyZXR1cm4gRy5hcHBseShkLGIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShmKSksZH1pZihjLnFzYSYmIUFbYStcIiBcIl0mJighcXx8IXEudGVzdChhKSkpe2lmKDEhPT13KXM9YixyPWE7ZWxzZSBpZihcIm9iamVjdFwiIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKXsoaz1iLmdldEF0dHJpYnV0ZShcImlkXCIpKT9rPWsucmVwbGFjZShiYSxjYSk6Yi5zZXRBdHRyaWJ1dGUoXCJpZFwiLGs9dSksbz1nKGEpLGg9by5sZW5ndGg7d2hpbGUoaC0tKW9baF09XCIjXCIraytcIiBcIitzYShvW2hdKTtyPW8uam9pbihcIixcIikscz0kLnRlc3QoYSkmJnFhKGIucGFyZW50Tm9kZSl8fGJ9aWYocil0cnl7cmV0dXJuIEcuYXBwbHkoZCxzLnF1ZXJ5U2VsZWN0b3JBbGwocikpLGR9Y2F0Y2goeCl7fWZpbmFsbHl7az09PXUmJmIucmVtb3ZlQXR0cmlidXRlKFwiaWRcIil9fX1yZXR1cm4gaShhLnJlcGxhY2UoUCxcIiQxXCIpLGIsZCxlKX1mdW5jdGlvbiBoYSgpe3ZhciBhPVtdO2Z1bmN0aW9uIGIoYyxlKXtyZXR1cm4gYS5wdXNoKGMrXCIgXCIpPmQuY2FjaGVMZW5ndGgmJmRlbGV0ZSBiW2Euc2hpZnQoKV0sYltjK1wiIFwiXT1lfXJldHVybiBifWZ1bmN0aW9uIGlhKGEpe3JldHVybiBhW3VdPSEwLGF9ZnVuY3Rpb24gamEoYSl7dmFyIGI9bi5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIik7dHJ5e3JldHVybiEhYShiKX1jYXRjaChjKXtyZXR1cm4hMX1maW5hbGx5e2IucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIpLGI9bnVsbH19ZnVuY3Rpb24ga2EoYSxiKXt2YXIgYz1hLnNwbGl0KFwifFwiKSxlPWMubGVuZ3RoO3doaWxlKGUtLSlkLmF0dHJIYW5kbGVbY1tlXV09Yn1mdW5jdGlvbiBsYShhLGIpe3ZhciBjPWImJmEsZD1jJiYxPT09YS5ub2RlVHlwZSYmMT09PWIubm9kZVR5cGUmJmEuc291cmNlSW5kZXgtYi5zb3VyY2VJbmRleDtpZihkKXJldHVybiBkO2lmKGMpd2hpbGUoYz1jLm5leHRTaWJsaW5nKWlmKGM9PT1iKXJldHVybi0xO3JldHVybiBhPzE6LTF9ZnVuY3Rpb24gbWEoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3ZhciBjPWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1jJiZiLnR5cGU9PT1hfX1mdW5jdGlvbiBuYShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dmFyIGM9Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybihcImlucHV0XCI9PT1jfHxcImJ1dHRvblwiPT09YykmJmIudHlwZT09PWF9fWZ1bmN0aW9uIG9hKGEpe3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm5cImZvcm1cImluIGI/Yi5wYXJlbnROb2RlJiZiLmRpc2FibGVkPT09ITE/XCJsYWJlbFwiaW4gYj9cImxhYmVsXCJpbiBiLnBhcmVudE5vZGU/Yi5wYXJlbnROb2RlLmRpc2FibGVkPT09YTpiLmRpc2FibGVkPT09YTpiLmlzRGlzYWJsZWQ9PT1hfHxiLmlzRGlzYWJsZWQhPT0hYSYmZWEoYik9PT1hOmIuZGlzYWJsZWQ9PT1hOlwibGFiZWxcImluIGImJmIuZGlzYWJsZWQ9PT1hfX1mdW5jdGlvbiBwYShhKXtyZXR1cm4gaWEoZnVuY3Rpb24oYil7cmV0dXJuIGI9K2IsaWEoZnVuY3Rpb24oYyxkKXt2YXIgZSxmPWEoW10sYy5sZW5ndGgsYiksZz1mLmxlbmd0aDt3aGlsZShnLS0pY1tlPWZbZ11dJiYoY1tlXT0hKGRbZV09Y1tlXSkpfSl9KX1mdW5jdGlvbiBxYShhKXtyZXR1cm4gYSYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEuZ2V0RWxlbWVudHNCeVRhZ05hbWUmJmF9Yz1nYS5zdXBwb3J0PXt9LGY9Z2EuaXNYTUw9ZnVuY3Rpb24oYSl7dmFyIGI9YSYmKGEub3duZXJEb2N1bWVudHx8YSkuZG9jdW1lbnRFbGVtZW50O3JldHVybiEhYiYmXCJIVE1MXCIhPT1iLm5vZGVOYW1lfSxtPWdhLnNldERvY3VtZW50PWZ1bmN0aW9uKGEpe3ZhciBiLGUsZz1hP2Eub3duZXJEb2N1bWVudHx8YTp2O3JldHVybiBnIT09biYmOT09PWcubm9kZVR5cGUmJmcuZG9jdW1lbnRFbGVtZW50PyhuPWcsbz1uLmRvY3VtZW50RWxlbWVudCxwPSFmKG4pLHYhPT1uJiYoZT1uLmRlZmF1bHRWaWV3KSYmZS50b3AhPT1lJiYoZS5hZGRFdmVudExpc3RlbmVyP2UuYWRkRXZlbnRMaXN0ZW5lcihcInVubG9hZFwiLGRhLCExKTplLmF0dGFjaEV2ZW50JiZlLmF0dGFjaEV2ZW50KFwib251bmxvYWRcIixkYSkpLGMuYXR0cmlidXRlcz1qYShmdW5jdGlvbihhKXtyZXR1cm4gYS5jbGFzc05hbWU9XCJpXCIsIWEuZ2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIpfSksYy5nZXRFbGVtZW50c0J5VGFnTmFtZT1qYShmdW5jdGlvbihhKXtyZXR1cm4gYS5hcHBlbmRDaGlsZChuLmNyZWF0ZUNvbW1lbnQoXCJcIikpLCFhLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKS5sZW5ndGh9KSxjLmdldEVsZW1lbnRzQnlDbGFzc05hbWU9WS50ZXN0KG4uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSksYy5nZXRCeUlkPWphKGZ1bmN0aW9uKGEpe3JldHVybiBvLmFwcGVuZENoaWxkKGEpLmlkPXUsIW4uZ2V0RWxlbWVudHNCeU5hbWV8fCFuLmdldEVsZW1lbnRzQnlOYW1lKHUpLmxlbmd0aH0pLGMuZ2V0QnlJZD8oZC5maWx0ZXIuSUQ9ZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKF8sYWEpO3JldHVybiBmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoXCJpZFwiKT09PWJ9fSxkLmZpbmQuSUQ9ZnVuY3Rpb24oYSxiKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgYi5nZXRFbGVtZW50QnlJZCYmcCl7dmFyIGM9Yi5nZXRFbGVtZW50QnlJZChhKTtyZXR1cm4gYz9bY106W119fSk6KGQuZmlsdGVyLklEPWZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShfLGFhKTtyZXR1cm4gZnVuY3Rpb24oYSl7dmFyIGM9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEuZ2V0QXR0cmlidXRlTm9kZSYmYS5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIik7cmV0dXJuIGMmJmMudmFsdWU9PT1ifX0sZC5maW5kLklEPWZ1bmN0aW9uKGEsYil7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGIuZ2V0RWxlbWVudEJ5SWQmJnApe3ZhciBjLGQsZSxmPWIuZ2V0RWxlbWVudEJ5SWQoYSk7aWYoZil7aWYoYz1mLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKSxjJiZjLnZhbHVlPT09YSlyZXR1cm5bZl07ZT1iLmdldEVsZW1lbnRzQnlOYW1lKGEpLGQ9MDt3aGlsZShmPWVbZCsrXSlpZihjPWYuZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpLGMmJmMudmFsdWU9PT1hKXJldHVybltmXX1yZXR1cm5bXX19KSxkLmZpbmQuVEFHPWMuZ2V0RWxlbWVudHNCeVRhZ05hbWU/ZnVuY3Rpb24oYSxiKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgYi5nZXRFbGVtZW50c0J5VGFnTmFtZT9iLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpOmMucXNhP2IucXVlcnlTZWxlY3RvckFsbChhKTp2b2lkIDB9OmZ1bmN0aW9uKGEsYil7dmFyIGMsZD1bXSxlPTAsZj1iLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpO2lmKFwiKlwiPT09YSl7d2hpbGUoYz1mW2UrK10pMT09PWMubm9kZVR5cGUmJmQucHVzaChjKTtyZXR1cm4gZH1yZXR1cm4gZn0sZC5maW5kLkNMQVNTPWMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSYmZnVuY3Rpb24oYSxiKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgYi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lJiZwKXJldHVybiBiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoYSl9LHI9W10scT1bXSwoYy5xc2E9WS50ZXN0KG4ucXVlcnlTZWxlY3RvckFsbCkpJiYoamEoZnVuY3Rpb24oYSl7by5hcHBlbmRDaGlsZChhKS5pbm5lckhUTUw9XCI8YSBpZD0nXCIrdStcIic+PC9hPjxzZWxlY3QgaWQ9J1wiK3UrXCItXFxyXFxcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+PG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIixhLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbbXNhbGxvd2NhcHR1cmVePScnXVwiKS5sZW5ndGgmJnEucHVzaChcIlsqXiRdPVwiK0srXCIqKD86Jyd8XFxcIlxcXCIpXCIpLGEucXVlcnlTZWxlY3RvckFsbChcIltzZWxlY3RlZF1cIikubGVuZ3RofHxxLnB1c2goXCJcXFxcW1wiK0srXCIqKD86dmFsdWV8XCIrSitcIilcIiksYS5xdWVyeVNlbGVjdG9yQWxsKFwiW2lkfj1cIit1K1wiLV1cIikubGVuZ3RofHxxLnB1c2goXCJ+PVwiKSxhLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6Y2hlY2tlZFwiKS5sZW5ndGh8fHEucHVzaChcIjpjaGVja2VkXCIpLGEucXVlcnlTZWxlY3RvckFsbChcImEjXCIrdStcIisqXCIpLmxlbmd0aHx8cS5wdXNoKFwiLiMuK1srfl1cIil9KSxqYShmdW5jdGlvbihhKXthLmlubmVySFRNTD1cIjxhIGhyZWY9JycgZGlzYWJsZWQ9J2Rpc2FibGVkJz48L2E+PHNlbGVjdCBkaXNhYmxlZD0nZGlzYWJsZWQnPjxvcHRpb24vPjwvc2VsZWN0PlwiO3ZhciBiPW4uY3JlYXRlRWxlbWVudChcImlucHV0XCIpO2Iuc2V0QXR0cmlidXRlKFwidHlwZVwiLFwiaGlkZGVuXCIpLGEuYXBwZW5kQ2hpbGQoYikuc2V0QXR0cmlidXRlKFwibmFtZVwiLFwiRFwiKSxhLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbbmFtZT1kXVwiKS5sZW5ndGgmJnEucHVzaChcIm5hbWVcIitLK1wiKlsqXiR8IX5dPz1cIiksMiE9PWEucXVlcnlTZWxlY3RvckFsbChcIjplbmFibGVkXCIpLmxlbmd0aCYmcS5wdXNoKFwiOmVuYWJsZWRcIixcIjpkaXNhYmxlZFwiKSxvLmFwcGVuZENoaWxkKGEpLmRpc2FibGVkPSEwLDIhPT1hLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZGlzYWJsZWRcIikubGVuZ3RoJiZxLnB1c2goXCI6ZW5hYmxlZFwiLFwiOmRpc2FibGVkXCIpLGEucXVlcnlTZWxlY3RvckFsbChcIiosOnhcIikscS5wdXNoKFwiLC4qOlwiKX0pKSwoYy5tYXRjaGVzU2VsZWN0b3I9WS50ZXN0KHM9by5tYXRjaGVzfHxvLndlYmtpdE1hdGNoZXNTZWxlY3Rvcnx8by5tb3pNYXRjaGVzU2VsZWN0b3J8fG8ub01hdGNoZXNTZWxlY3Rvcnx8by5tc01hdGNoZXNTZWxlY3RvcikpJiZqYShmdW5jdGlvbihhKXtjLmRpc2Nvbm5lY3RlZE1hdGNoPXMuY2FsbChhLFwiKlwiKSxzLmNhbGwoYSxcIltzIT0nJ106eFwiKSxyLnB1c2goXCIhPVwiLE4pfSkscT1xLmxlbmd0aCYmbmV3IFJlZ0V4cChxLmpvaW4oXCJ8XCIpKSxyPXIubGVuZ3RoJiZuZXcgUmVnRXhwKHIuam9pbihcInxcIikpLGI9WS50ZXN0KG8uY29tcGFyZURvY3VtZW50UG9zaXRpb24pLHQ9Ynx8WS50ZXN0KG8uY29udGFpbnMpP2Z1bmN0aW9uKGEsYil7dmFyIGM9OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YSxkPWImJmIucGFyZW50Tm9kZTtyZXR1cm4gYT09PWR8fCEoIWR8fDEhPT1kLm5vZGVUeXBlfHwhKGMuY29udGFpbnM/Yy5jb250YWlucyhkKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uJiYxNiZhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGQpKSl9OmZ1bmN0aW9uKGEsYil7aWYoYil3aGlsZShiPWIucGFyZW50Tm9kZSlpZihiPT09YSlyZXR1cm4hMDtyZXR1cm4hMX0sQj1iP2Z1bmN0aW9uKGEsYil7aWYoYT09PWIpcmV0dXJuIGw9ITAsMDt2YXIgZD0hYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbi0hYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtyZXR1cm4gZD9kOihkPShhLm93bmVyRG9jdW1lbnR8fGEpPT09KGIub3duZXJEb2N1bWVudHx8Yik/YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKToxLDEmZHx8IWMuc29ydERldGFjaGVkJiZiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGEpPT09ZD9hPT09bnx8YS5vd25lckRvY3VtZW50PT09diYmdCh2LGEpPy0xOmI9PT1ufHxiLm93bmVyRG9jdW1lbnQ9PT12JiZ0KHYsYik/MTprP0koayxhKS1JKGssYik6MDo0JmQ/LTE6MSl9OmZ1bmN0aW9uKGEsYil7aWYoYT09PWIpcmV0dXJuIGw9ITAsMDt2YXIgYyxkPTAsZT1hLnBhcmVudE5vZGUsZj1iLnBhcmVudE5vZGUsZz1bYV0saD1bYl07aWYoIWV8fCFmKXJldHVybiBhPT09bj8tMTpiPT09bj8xOmU/LTE6Zj8xOms/SShrLGEpLUkoayxiKTowO2lmKGU9PT1mKXJldHVybiBsYShhLGIpO2M9YTt3aGlsZShjPWMucGFyZW50Tm9kZSlnLnVuc2hpZnQoYyk7Yz1iO3doaWxlKGM9Yy5wYXJlbnROb2RlKWgudW5zaGlmdChjKTt3aGlsZShnW2RdPT09aFtkXSlkKys7cmV0dXJuIGQ/bGEoZ1tkXSxoW2RdKTpnW2RdPT09dj8tMTpoW2RdPT09dj8xOjB9LG4pOm59LGdhLm1hdGNoZXM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZ2EoYSxudWxsLG51bGwsYil9LGdhLm1hdGNoZXNTZWxlY3Rvcj1mdW5jdGlvbihhLGIpe2lmKChhLm93bmVyRG9jdW1lbnR8fGEpIT09biYmbShhKSxiPWIucmVwbGFjZShTLFwiPSckMSddXCIpLGMubWF0Y2hlc1NlbGVjdG9yJiZwJiYhQVtiK1wiIFwiXSYmKCFyfHwhci50ZXN0KGIpKSYmKCFxfHwhcS50ZXN0KGIpKSl0cnl7dmFyIGQ9cy5jYWxsKGEsYik7aWYoZHx8Yy5kaXNjb25uZWN0ZWRNYXRjaHx8YS5kb2N1bWVudCYmMTEhPT1hLmRvY3VtZW50Lm5vZGVUeXBlKXJldHVybiBkfWNhdGNoKGUpe31yZXR1cm4gZ2EoYixuLG51bGwsW2FdKS5sZW5ndGg+MH0sZ2EuY29udGFpbnM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4oYS5vd25lckRvY3VtZW50fHxhKSE9PW4mJm0oYSksdChhLGIpfSxnYS5hdHRyPWZ1bmN0aW9uKGEsYil7KGEub3duZXJEb2N1bWVudHx8YSkhPT1uJiZtKGEpO3ZhciBlPWQuYXR0ckhhbmRsZVtiLnRvTG93ZXJDYXNlKCldLGY9ZSYmQy5jYWxsKGQuYXR0ckhhbmRsZSxiLnRvTG93ZXJDYXNlKCkpP2UoYSxiLCFwKTp2b2lkIDA7cmV0dXJuIHZvaWQgMCE9PWY/ZjpjLmF0dHJpYnV0ZXN8fCFwP2EuZ2V0QXR0cmlidXRlKGIpOihmPWEuZ2V0QXR0cmlidXRlTm9kZShiKSkmJmYuc3BlY2lmaWVkP2YudmFsdWU6bnVsbH0sZ2EuZXNjYXBlPWZ1bmN0aW9uKGEpe3JldHVybihhK1wiXCIpLnJlcGxhY2UoYmEsY2EpfSxnYS5lcnJvcj1mdW5jdGlvbihhKXt0aHJvdyBuZXcgRXJyb3IoXCJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiBcIithKX0sZ2EudW5pcXVlU29ydD1mdW5jdGlvbihhKXt2YXIgYixkPVtdLGU9MCxmPTA7aWYobD0hYy5kZXRlY3REdXBsaWNhdGVzLGs9IWMuc29ydFN0YWJsZSYmYS5zbGljZSgwKSxhLnNvcnQoQiksbCl7d2hpbGUoYj1hW2YrK10pYj09PWFbZl0mJihlPWQucHVzaChmKSk7d2hpbGUoZS0tKWEuc3BsaWNlKGRbZV0sMSl9cmV0dXJuIGs9bnVsbCxhfSxlPWdhLmdldFRleHQ9ZnVuY3Rpb24oYSl7dmFyIGIsYz1cIlwiLGQ9MCxmPWEubm9kZVR5cGU7aWYoZil7aWYoMT09PWZ8fDk9PT1mfHwxMT09PWYpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBhLnRleHRDb250ZW50KXJldHVybiBhLnRleHRDb250ZW50O2ZvcihhPWEuZmlyc3RDaGlsZDthO2E9YS5uZXh0U2libGluZyljKz1lKGEpfWVsc2UgaWYoMz09PWZ8fDQ9PT1mKXJldHVybiBhLm5vZGVWYWx1ZX1lbHNlIHdoaWxlKGI9YVtkKytdKWMrPWUoYik7cmV0dXJuIGN9LGQ9Z2Euc2VsZWN0b3JzPXtjYWNoZUxlbmd0aDo1MCxjcmVhdGVQc2V1ZG86aWEsbWF0Y2g6VixhdHRySGFuZGxlOnt9LGZpbmQ6e30scmVsYXRpdmU6e1wiPlwiOntkaXI6XCJwYXJlbnROb2RlXCIsZmlyc3Q6ITB9LFwiIFwiOntkaXI6XCJwYXJlbnROb2RlXCJ9LFwiK1wiOntkaXI6XCJwcmV2aW91c1NpYmxpbmdcIixmaXJzdDohMH0sXCJ+XCI6e2RpcjpcInByZXZpb3VzU2libGluZ1wifX0scHJlRmlsdGVyOntBVFRSOmZ1bmN0aW9uKGEpe3JldHVybiBhWzFdPWFbMV0ucmVwbGFjZShfLGFhKSxhWzNdPShhWzNdfHxhWzRdfHxhWzVdfHxcIlwiKS5yZXBsYWNlKF8sYWEpLFwifj1cIj09PWFbMl0mJihhWzNdPVwiIFwiK2FbM10rXCIgXCIpLGEuc2xpY2UoMCw0KX0sQ0hJTEQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGFbMV09YVsxXS50b0xvd2VyQ2FzZSgpLFwibnRoXCI9PT1hWzFdLnNsaWNlKDAsMyk/KGFbM118fGdhLmVycm9yKGFbMF0pLGFbNF09KyhhWzRdP2FbNV0rKGFbNl18fDEpOjIqKFwiZXZlblwiPT09YVszXXx8XCJvZGRcIj09PWFbM10pKSxhWzVdPSsoYVs3XSthWzhdfHxcIm9kZFwiPT09YVszXSkpOmFbM10mJmdhLmVycm9yKGFbMF0pLGF9LFBTRVVETzpmdW5jdGlvbihhKXt2YXIgYixjPSFhWzZdJiZhWzJdO3JldHVybiBWLkNISUxELnRlc3QoYVswXSk/bnVsbDooYVszXT9hWzJdPWFbNF18fGFbNV18fFwiXCI6YyYmVC50ZXN0KGMpJiYoYj1nKGMsITApKSYmKGI9Yy5pbmRleE9mKFwiKVwiLGMubGVuZ3RoLWIpLWMubGVuZ3RoKSYmKGFbMF09YVswXS5zbGljZSgwLGIpLGFbMl09Yy5zbGljZSgwLGIpKSxhLnNsaWNlKDAsMykpfX0sZmlsdGVyOntUQUc6ZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKF8sYWEpLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCIqXCI9PT1hP2Z1bmN0aW9uKCl7cmV0dXJuITB9OmZ1bmN0aW9uKGEpe3JldHVybiBhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1ifX0sQ0xBU1M6ZnVuY3Rpb24oYSl7dmFyIGI9eVthK1wiIFwiXTtyZXR1cm4gYnx8KGI9bmV3IFJlZ0V4cChcIihefFwiK0srXCIpXCIrYStcIihcIitLK1wifCQpXCIpKSYmeShhLGZ1bmN0aW9uKGEpe3JldHVybiBiLnRlc3QoXCJzdHJpbmdcIj09dHlwZW9mIGEuY2xhc3NOYW1lJiZhLmNsYXNzTmFtZXx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEuZ2V0QXR0cmlidXRlJiZhLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwiKX0pfSxBVFRSOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZnVuY3Rpb24oZCl7dmFyIGU9Z2EuYXR0cihkLGEpO3JldHVybiBudWxsPT1lP1wiIT1cIj09PWI6IWJ8fChlKz1cIlwiLFwiPVwiPT09Yj9lPT09YzpcIiE9XCI9PT1iP2UhPT1jOlwiXj1cIj09PWI/YyYmMD09PWUuaW5kZXhPZihjKTpcIio9XCI9PT1iP2MmJmUuaW5kZXhPZihjKT4tMTpcIiQ9XCI9PT1iP2MmJmUuc2xpY2UoLWMubGVuZ3RoKT09PWM6XCJ+PVwiPT09Yj8oXCIgXCIrZS5yZXBsYWNlKE8sXCIgXCIpK1wiIFwiKS5pbmRleE9mKGMpPi0xOlwifD1cIj09PWImJihlPT09Y3x8ZS5zbGljZSgwLGMubGVuZ3RoKzEpPT09YytcIi1cIikpfX0sQ0hJTEQ6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1cIm50aFwiIT09YS5zbGljZSgwLDMpLGc9XCJsYXN0XCIhPT1hLnNsaWNlKC00KSxoPVwib2YtdHlwZVwiPT09YjtyZXR1cm4gMT09PWQmJjA9PT1lP2Z1bmN0aW9uKGEpe3JldHVybiEhYS5wYXJlbnROb2RlfTpmdW5jdGlvbihiLGMsaSl7dmFyIGosayxsLG0sbixvLHA9ZiE9PWc/XCJuZXh0U2libGluZ1wiOlwicHJldmlvdXNTaWJsaW5nXCIscT1iLnBhcmVudE5vZGUscj1oJiZiLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkscz0haSYmIWgsdD0hMTtpZihxKXtpZihmKXt3aGlsZShwKXttPWI7d2hpbGUobT1tW3BdKWlmKGg/bS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09cjoxPT09bS5ub2RlVHlwZSlyZXR1cm4hMTtvPXA9XCJvbmx5XCI9PT1hJiYhbyYmXCJuZXh0U2libGluZ1wifXJldHVybiEwfWlmKG89W2c/cS5maXJzdENoaWxkOnEubGFzdENoaWxkXSxnJiZzKXttPXEsbD1tW3VdfHwobVt1XT17fSksaz1sW20udW5pcXVlSURdfHwobFttLnVuaXF1ZUlEXT17fSksaj1rW2FdfHxbXSxuPWpbMF09PT13JiZqWzFdLHQ9biYmalsyXSxtPW4mJnEuY2hpbGROb2Rlc1tuXTt3aGlsZShtPSsrbiYmbSYmbVtwXXx8KHQ9bj0wKXx8by5wb3AoKSlpZigxPT09bS5ub2RlVHlwZSYmKyt0JiZtPT09Yil7a1thXT1bdyxuLHRdO2JyZWFrfX1lbHNlIGlmKHMmJihtPWIsbD1tW3VdfHwobVt1XT17fSksaz1sW20udW5pcXVlSURdfHwobFttLnVuaXF1ZUlEXT17fSksaj1rW2FdfHxbXSxuPWpbMF09PT13JiZqWzFdLHQ9biksdD09PSExKXdoaWxlKG09KytuJiZtJiZtW3BdfHwodD1uPTApfHxvLnBvcCgpKWlmKChoP20ubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PXI6MT09PW0ubm9kZVR5cGUpJiYrK3QmJihzJiYobD1tW3VdfHwobVt1XT17fSksaz1sW20udW5pcXVlSURdfHwobFttLnVuaXF1ZUlEXT17fSksa1thXT1bdyx0XSksbT09PWIpKWJyZWFrO3JldHVybiB0LT1lLHQ9PT1kfHx0JWQ9PT0wJiZ0L2Q+PTB9fX0sUFNFVURPOmZ1bmN0aW9uKGEsYil7dmFyIGMsZT1kLnBzZXVkb3NbYV18fGQuc2V0RmlsdGVyc1thLnRvTG93ZXJDYXNlKCldfHxnYS5lcnJvcihcInVuc3VwcG9ydGVkIHBzZXVkbzogXCIrYSk7cmV0dXJuIGVbdV0/ZShiKTplLmxlbmd0aD4xPyhjPVthLGEsXCJcIixiXSxkLnNldEZpbHRlcnMuaGFzT3duUHJvcGVydHkoYS50b0xvd2VyQ2FzZSgpKT9pYShmdW5jdGlvbihhLGMpe3ZhciBkLGY9ZShhLGIpLGc9Zi5sZW5ndGg7d2hpbGUoZy0tKWQ9SShhLGZbZ10pLGFbZF09IShjW2RdPWZbZ10pfSk6ZnVuY3Rpb24oYSl7cmV0dXJuIGUoYSwwLGMpfSk6ZX19LHBzZXVkb3M6e25vdDppYShmdW5jdGlvbihhKXt2YXIgYj1bXSxjPVtdLGQ9aChhLnJlcGxhY2UoUCxcIiQxXCIpKTtyZXR1cm4gZFt1XT9pYShmdW5jdGlvbihhLGIsYyxlKXt2YXIgZixnPWQoYSxudWxsLGUsW10pLGg9YS5sZW5ndGg7d2hpbGUoaC0tKShmPWdbaF0pJiYoYVtoXT0hKGJbaF09ZikpfSk6ZnVuY3Rpb24oYSxlLGYpe3JldHVybiBiWzBdPWEsZChiLG51bGwsZixjKSxiWzBdPW51bGwsIWMucG9wKCl9fSksaGFzOmlhKGZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4gZ2EoYSxiKS5sZW5ndGg+MH19KSxjb250YWluczppYShmdW5jdGlvbihhKXtyZXR1cm4gYT1hLnJlcGxhY2UoXyxhYSksZnVuY3Rpb24oYil7cmV0dXJuKGIudGV4dENvbnRlbnR8fGIuaW5uZXJUZXh0fHxlKGIpKS5pbmRleE9mKGEpPi0xfX0pLGxhbmc6aWEoZnVuY3Rpb24oYSl7cmV0dXJuIFUudGVzdChhfHxcIlwiKXx8Z2EuZXJyb3IoXCJ1bnN1cHBvcnRlZCBsYW5nOiBcIithKSxhPWEucmVwbGFjZShfLGFhKS50b0xvd2VyQ2FzZSgpLGZ1bmN0aW9uKGIpe3ZhciBjO2RvIGlmKGM9cD9iLmxhbmc6Yi5nZXRBdHRyaWJ1dGUoXCJ4bWw6bGFuZ1wiKXx8Yi5nZXRBdHRyaWJ1dGUoXCJsYW5nXCIpKXJldHVybiBjPWMudG9Mb3dlckNhc2UoKSxjPT09YXx8MD09PWMuaW5kZXhPZihhK1wiLVwiKTt3aGlsZSgoYj1iLnBhcmVudE5vZGUpJiYxPT09Yi5ub2RlVHlwZSk7cmV0dXJuITF9fSksdGFyZ2V0OmZ1bmN0aW9uKGIpe3ZhciBjPWEubG9jYXRpb24mJmEubG9jYXRpb24uaGFzaDtyZXR1cm4gYyYmYy5zbGljZSgxKT09PWIuaWR9LHJvb3Q6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT1vfSxmb2N1czpmdW5jdGlvbihhKXtyZXR1cm4gYT09PW4uYWN0aXZlRWxlbWVudCYmKCFuLmhhc0ZvY3VzfHxuLmhhc0ZvY3VzKCkpJiYhIShhLnR5cGV8fGEuaHJlZnx8fmEudGFiSW5kZXgpfSxlbmFibGVkOm9hKCExKSxkaXNhYmxlZDpvYSghMCksY2hlY2tlZDpmdW5jdGlvbihhKXt2YXIgYj1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09YiYmISFhLmNoZWNrZWR8fFwib3B0aW9uXCI9PT1iJiYhIWEuc2VsZWN0ZWR9LHNlbGVjdGVkOmZ1bmN0aW9uKGEpe3JldHVybiBhLnBhcmVudE5vZGUmJmEucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4LGEuc2VsZWN0ZWQ9PT0hMH0sZW1wdHk6ZnVuY3Rpb24oYSl7Zm9yKGE9YS5maXJzdENoaWxkO2E7YT1hLm5leHRTaWJsaW5nKWlmKGEubm9kZVR5cGU8NilyZXR1cm4hMTtyZXR1cm4hMH0scGFyZW50OmZ1bmN0aW9uKGEpe3JldHVybiFkLnBzZXVkb3MuZW1wdHkoYSl9LGhlYWRlcjpmdW5jdGlvbihhKXtyZXR1cm4gWC50ZXN0KGEubm9kZU5hbWUpfSxpbnB1dDpmdW5jdGlvbihhKXtyZXR1cm4gVy50ZXN0KGEubm9kZU5hbWUpfSxidXR0b246ZnVuY3Rpb24oYSl7dmFyIGI9YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWImJlwiYnV0dG9uXCI9PT1hLnR5cGV8fFwiYnV0dG9uXCI9PT1ifSx0ZXh0OmZ1bmN0aW9uKGEpe3ZhciBiO3JldHVyblwiaW5wdXRcIj09PWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmXCJ0ZXh0XCI9PT1hLnR5cGUmJihudWxsPT0oYj1hLmdldEF0dHJpYnV0ZShcInR5cGVcIikpfHxcInRleHRcIj09PWIudG9Mb3dlckNhc2UoKSl9LGZpcnN0OnBhKGZ1bmN0aW9uKCl7cmV0dXJuWzBdfSksbGFzdDpwYShmdW5jdGlvbihhLGIpe3JldHVybltiLTFdfSksZXE6cGEoZnVuY3Rpb24oYSxiLGMpe3JldHVybltjPDA/YytiOmNdfSksZXZlbjpwYShmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz0wO2M8YjtjKz0yKWEucHVzaChjKTtyZXR1cm4gYX0pLG9kZDpwYShmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz0xO2M8YjtjKz0yKWEucHVzaChjKTtyZXR1cm4gYX0pLGx0OnBhKGZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9YzwwP2MrYjpjOy0tZD49MDspYS5wdXNoKGQpO3JldHVybiBhfSksZ3Q6cGEoZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD1jPDA/YytiOmM7KytkPGI7KWEucHVzaChkKTtyZXR1cm4gYX0pfX0sZC5wc2V1ZG9zLm50aD1kLnBzZXVkb3MuZXE7Zm9yKGIgaW57cmFkaW86ITAsY2hlY2tib3g6ITAsZmlsZTohMCxwYXNzd29yZDohMCxpbWFnZTohMH0pZC5wc2V1ZG9zW2JdPW1hKGIpO2ZvcihiIGlue3N1Ym1pdDohMCxyZXNldDohMH0pZC5wc2V1ZG9zW2JdPW5hKGIpO2Z1bmN0aW9uIHJhKCl7fXJhLnByb3RvdHlwZT1kLmZpbHRlcnM9ZC5wc2V1ZG9zLGQuc2V0RmlsdGVycz1uZXcgcmEsZz1nYS50b2tlbml6ZT1mdW5jdGlvbihhLGIpe3ZhciBjLGUsZixnLGgsaSxqLGs9elthK1wiIFwiXTtpZihrKXJldHVybiBiPzA6ay5zbGljZSgwKTtoPWEsaT1bXSxqPWQucHJlRmlsdGVyO3doaWxlKGgpe2MmJiEoZT1RLmV4ZWMoaCkpfHwoZSYmKGg9aC5zbGljZShlWzBdLmxlbmd0aCl8fGgpLGkucHVzaChmPVtdKSksYz0hMSwoZT1SLmV4ZWMoaCkpJiYoYz1lLnNoaWZ0KCksZi5wdXNoKHt2YWx1ZTpjLHR5cGU6ZVswXS5yZXBsYWNlKFAsXCIgXCIpfSksaD1oLnNsaWNlKGMubGVuZ3RoKSk7Zm9yKGcgaW4gZC5maWx0ZXIpIShlPVZbZ10uZXhlYyhoKSl8fGpbZ10mJiEoZT1qW2ddKGUpKXx8KGM9ZS5zaGlmdCgpLGYucHVzaCh7dmFsdWU6Yyx0eXBlOmcsbWF0Y2hlczplfSksaD1oLnNsaWNlKGMubGVuZ3RoKSk7aWYoIWMpYnJlYWt9cmV0dXJuIGI/aC5sZW5ndGg6aD9nYS5lcnJvcihhKTp6KGEsaSkuc2xpY2UoMCl9O2Z1bmN0aW9uIHNhKGEpe2Zvcih2YXIgYj0wLGM9YS5sZW5ndGgsZD1cIlwiO2I8YztiKyspZCs9YVtiXS52YWx1ZTtyZXR1cm4gZH1mdW5jdGlvbiB0YShhLGIsYyl7dmFyIGQ9Yi5kaXIsZT1iLm5leHQsZj1lfHxkLGc9YyYmXCJwYXJlbnROb2RlXCI9PT1mLGg9eCsrO3JldHVybiBiLmZpcnN0P2Z1bmN0aW9uKGIsYyxlKXt3aGlsZShiPWJbZF0paWYoMT09PWIubm9kZVR5cGV8fGcpcmV0dXJuIGEoYixjLGUpO3JldHVybiExfTpmdW5jdGlvbihiLGMsaSl7dmFyIGosayxsLG09W3csaF07aWYoaSl7d2hpbGUoYj1iW2RdKWlmKCgxPT09Yi5ub2RlVHlwZXx8ZykmJmEoYixjLGkpKXJldHVybiEwfWVsc2Ugd2hpbGUoYj1iW2RdKWlmKDE9PT1iLm5vZGVUeXBlfHxnKWlmKGw9Ylt1XXx8KGJbdV09e30pLGs9bFtiLnVuaXF1ZUlEXXx8KGxbYi51bmlxdWVJRF09e30pLGUmJmU9PT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpYj1iW2RdfHxiO2Vsc2V7aWYoKGo9a1tmXSkmJmpbMF09PT13JiZqWzFdPT09aClyZXR1cm4gbVsyXT1qWzJdO2lmKGtbZl09bSxtWzJdPWEoYixjLGkpKXJldHVybiEwfXJldHVybiExfX1mdW5jdGlvbiB1YShhKXtyZXR1cm4gYS5sZW5ndGg+MT9mdW5jdGlvbihiLGMsZCl7dmFyIGU9YS5sZW5ndGg7d2hpbGUoZS0tKWlmKCFhW2VdKGIsYyxkKSlyZXR1cm4hMTtyZXR1cm4hMH06YVswXX1mdW5jdGlvbiB2YShhLGIsYyl7Zm9yKHZhciBkPTAsZT1iLmxlbmd0aDtkPGU7ZCsrKWdhKGEsYltkXSxjKTtyZXR1cm4gY31mdW5jdGlvbiB3YShhLGIsYyxkLGUpe2Zvcih2YXIgZixnPVtdLGg9MCxpPWEubGVuZ3RoLGo9bnVsbCE9YjtoPGk7aCsrKShmPWFbaF0pJiYoYyYmIWMoZixkLGUpfHwoZy5wdXNoKGYpLGomJmIucHVzaChoKSkpO3JldHVybiBnfWZ1bmN0aW9uIHhhKGEsYixjLGQsZSxmKXtyZXR1cm4gZCYmIWRbdV0mJihkPXhhKGQpKSxlJiYhZVt1XSYmKGU9eGEoZSxmKSksaWEoZnVuY3Rpb24oZixnLGgsaSl7dmFyIGosayxsLG09W10sbj1bXSxvPWcubGVuZ3RoLHA9Znx8dmEoYnx8XCIqXCIsaC5ub2RlVHlwZT9baF06aCxbXSkscT0hYXx8IWYmJmI/cDp3YShwLG0sYSxoLGkpLHI9Yz9lfHwoZj9hOm98fGQpP1tdOmc6cTtpZihjJiZjKHEscixoLGkpLGQpe2o9d2EocixuKSxkKGosW10saCxpKSxrPWoubGVuZ3RoO3doaWxlKGstLSkobD1qW2tdKSYmKHJbbltrXV09IShxW25ba11dPWwpKX1pZihmKXtpZihlfHxhKXtpZihlKXtqPVtdLGs9ci5sZW5ndGg7d2hpbGUoay0tKShsPXJba10pJiZqLnB1c2gocVtrXT1sKTtlKG51bGwscj1bXSxqLGkpfWs9ci5sZW5ndGg7d2hpbGUoay0tKShsPXJba10pJiYoaj1lP0koZixsKTptW2tdKT4tMSYmKGZbal09IShnW2pdPWwpKX19ZWxzZSByPXdhKHI9PT1nP3Iuc3BsaWNlKG8sci5sZW5ndGgpOnIpLGU/ZShudWxsLGcscixpKTpHLmFwcGx5KGcscil9KX1mdW5jdGlvbiB5YShhKXtmb3IodmFyIGIsYyxlLGY9YS5sZW5ndGgsZz1kLnJlbGF0aXZlW2FbMF0udHlwZV0saD1nfHxkLnJlbGF0aXZlW1wiIFwiXSxpPWc/MTowLGs9dGEoZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT1ifSxoLCEwKSxsPXRhKGZ1bmN0aW9uKGEpe3JldHVybiBJKGIsYSk+LTF9LGgsITApLG09W2Z1bmN0aW9uKGEsYyxkKXt2YXIgZT0hZyYmKGR8fGMhPT1qKXx8KChiPWMpLm5vZGVUeXBlP2soYSxjLGQpOmwoYSxjLGQpKTtyZXR1cm4gYj1udWxsLGV9XTtpPGY7aSsrKWlmKGM9ZC5yZWxhdGl2ZVthW2ldLnR5cGVdKW09W3RhKHVhKG0pLGMpXTtlbHNle2lmKGM9ZC5maWx0ZXJbYVtpXS50eXBlXS5hcHBseShudWxsLGFbaV0ubWF0Y2hlcyksY1t1XSl7Zm9yKGU9KytpO2U8ZjtlKyspaWYoZC5yZWxhdGl2ZVthW2VdLnR5cGVdKWJyZWFrO3JldHVybiB4YShpPjEmJnVhKG0pLGk+MSYmc2EoYS5zbGljZSgwLGktMSkuY29uY2F0KHt2YWx1ZTpcIiBcIj09PWFbaS0yXS50eXBlP1wiKlwiOlwiXCJ9KSkucmVwbGFjZShQLFwiJDFcIiksYyxpPGUmJnlhKGEuc2xpY2UoaSxlKSksZTxmJiZ5YShhPWEuc2xpY2UoZSkpLGU8ZiYmc2EoYSkpfW0ucHVzaChjKX1yZXR1cm4gdWEobSl9ZnVuY3Rpb24gemEoYSxiKXt2YXIgYz1iLmxlbmd0aD4wLGU9YS5sZW5ndGg+MCxmPWZ1bmN0aW9uKGYsZyxoLGksayl7dmFyIGwsbyxxLHI9MCxzPVwiMFwiLHQ9ZiYmW10sdT1bXSx2PWoseD1mfHxlJiZkLmZpbmQuVEFHKFwiKlwiLGspLHk9dys9bnVsbD09dj8xOk1hdGgucmFuZG9tKCl8fC4xLHo9eC5sZW5ndGg7Zm9yKGsmJihqPWc9PT1ufHxnfHxrKTtzIT09eiYmbnVsbCE9KGw9eFtzXSk7cysrKXtpZihlJiZsKXtvPTAsZ3x8bC5vd25lckRvY3VtZW50PT09bnx8KG0obCksaD0hcCk7d2hpbGUocT1hW28rK10paWYocShsLGd8fG4saCkpe2kucHVzaChsKTticmVha31rJiYodz15KX1jJiYoKGw9IXEmJmwpJiZyLS0sZiYmdC5wdXNoKGwpKX1pZihyKz1zLGMmJnMhPT1yKXtvPTA7d2hpbGUocT1iW28rK10pcSh0LHUsZyxoKTtpZihmKXtpZihyPjApd2hpbGUocy0tKXRbc118fHVbc118fCh1W3NdPUUuY2FsbChpKSk7dT13YSh1KX1HLmFwcGx5KGksdSksayYmIWYmJnUubGVuZ3RoPjAmJnIrYi5sZW5ndGg+MSYmZ2EudW5pcXVlU29ydChpKX1yZXR1cm4gayYmKHc9eSxqPXYpLHR9O3JldHVybiBjP2lhKGYpOmZ9cmV0dXJuIGg9Z2EuY29tcGlsZT1mdW5jdGlvbihhLGIpe3ZhciBjLGQ9W10sZT1bXSxmPUFbYStcIiBcIl07aWYoIWYpe2J8fChiPWcoYSkpLGM9Yi5sZW5ndGg7d2hpbGUoYy0tKWY9eWEoYltjXSksZlt1XT9kLnB1c2goZik6ZS5wdXNoKGYpO2Y9QShhLHphKGUsZCkpLGYuc2VsZWN0b3I9YX1yZXR1cm4gZn0saT1nYS5zZWxlY3Q9ZnVuY3Rpb24oYSxiLGMsZSl7dmFyIGYsaSxqLGssbCxtPVwiZnVuY3Rpb25cIj09dHlwZW9mIGEmJmEsbj0hZSYmZyhhPW0uc2VsZWN0b3J8fGEpO2lmKGM9Y3x8W10sMT09PW4ubGVuZ3RoKXtpZihpPW5bMF09blswXS5zbGljZSgwKSxpLmxlbmd0aD4yJiZcIklEXCI9PT0oaj1pWzBdKS50eXBlJiY5PT09Yi5ub2RlVHlwZSYmcCYmZC5yZWxhdGl2ZVtpWzFdLnR5cGVdKXtpZihiPShkLmZpbmQuSUQoai5tYXRjaGVzWzBdLnJlcGxhY2UoXyxhYSksYil8fFtdKVswXSwhYilyZXR1cm4gYzttJiYoYj1iLnBhcmVudE5vZGUpLGE9YS5zbGljZShpLnNoaWZ0KCkudmFsdWUubGVuZ3RoKX1mPVYubmVlZHNDb250ZXh0LnRlc3QoYSk/MDppLmxlbmd0aDt3aGlsZShmLS0pe2lmKGo9aVtmXSxkLnJlbGF0aXZlW2s9ai50eXBlXSlicmVhaztpZigobD1kLmZpbmRba10pJiYoZT1sKGoubWF0Y2hlc1swXS5yZXBsYWNlKF8sYWEpLCQudGVzdChpWzBdLnR5cGUpJiZxYShiLnBhcmVudE5vZGUpfHxiKSkpe2lmKGkuc3BsaWNlKGYsMSksYT1lLmxlbmd0aCYmc2EoaSksIWEpcmV0dXJuIEcuYXBwbHkoYyxlKSxjO2JyZWFrfX19cmV0dXJuKG18fGgoYSxuKSkoZSxiLCFwLGMsIWJ8fCQudGVzdChhKSYmcWEoYi5wYXJlbnROb2RlKXx8YiksY30sYy5zb3J0U3RhYmxlPXUuc3BsaXQoXCJcIikuc29ydChCKS5qb2luKFwiXCIpPT09dSxjLmRldGVjdER1cGxpY2F0ZXM9ISFsLG0oKSxjLnNvcnREZXRhY2hlZD1qYShmdW5jdGlvbihhKXtyZXR1cm4gMSZhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKG4uY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpKX0pLGphKGZ1bmN0aW9uKGEpe3JldHVybiBhLmlubmVySFRNTD1cIjxhIGhyZWY9JyMnPjwvYT5cIixcIiNcIj09PWEuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpfSl8fGthKFwidHlwZXxocmVmfGhlaWdodHx3aWR0aFwiLGZ1bmN0aW9uKGEsYixjKXtpZighYylyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoYixcInR5cGVcIj09PWIudG9Mb3dlckNhc2UoKT8xOjIpfSksYy5hdHRyaWJ1dGVzJiZqYShmdW5jdGlvbihhKXtyZXR1cm4gYS5pbm5lckhUTUw9XCI8aW5wdXQvPlwiLGEuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIpLFwiXCI9PT1hLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKFwidmFsdWVcIil9KXx8a2EoXCJ2YWx1ZVwiLGZ1bmN0aW9uKGEsYixjKXtpZighYyYmXCJpbnB1dFwiPT09YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKXJldHVybiBhLmRlZmF1bHRWYWx1ZX0pLGphKGZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hLmdldEF0dHJpYnV0ZShcImRpc2FibGVkXCIpfSl8fGthKEosZnVuY3Rpb24oYSxiLGMpe3ZhciBkO2lmKCFjKXJldHVybiBhW2JdPT09ITA/Yi50b0xvd2VyQ2FzZSgpOihkPWEuZ2V0QXR0cmlidXRlTm9kZShiKSkmJmQuc3BlY2lmaWVkP2QudmFsdWU6bnVsbH0pLGdhfShhKTtyLmZpbmQ9eCxyLmV4cHI9eC5zZWxlY3RvcnMsci5leHByW1wiOlwiXT1yLmV4cHIucHNldWRvcyxyLnVuaXF1ZVNvcnQ9ci51bmlxdWU9eC51bmlxdWVTb3J0LHIudGV4dD14LmdldFRleHQsci5pc1hNTERvYz14LmlzWE1MLHIuY29udGFpbnM9eC5jb250YWlucyxyLmVzY2FwZVNlbGVjdG9yPXguZXNjYXBlO3ZhciB5PWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1bXSxlPXZvaWQgMCE9PWM7d2hpbGUoKGE9YVtiXSkmJjkhPT1hLm5vZGVUeXBlKWlmKDE9PT1hLm5vZGVUeXBlKXtpZihlJiZyKGEpLmlzKGMpKWJyZWFrO2QucHVzaChhKX1yZXR1cm4gZH0sej1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1bXTthO2E9YS5uZXh0U2libGluZykxPT09YS5ub2RlVHlwZSYmYSE9PWImJmMucHVzaChhKTtyZXR1cm4gY30sQT1yLmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LEI9L148KFthLXpdW15cXC9cXDA+OlxceDIwXFx0XFxyXFxuXFxmXSopW1xceDIwXFx0XFxyXFxuXFxmXSpcXC8/Pig/OjxcXC9cXDE+fCkkL2ksQz0vXi5bXjojXFxbXFwuLF0qJC87ZnVuY3Rpb24gRChhLGIsYyl7cmV0dXJuIHIuaXNGdW5jdGlvbihiKT9yLmdyZXAoYSxmdW5jdGlvbihhLGQpe3JldHVybiEhYi5jYWxsKGEsZCxhKSE9PWN9KTpiLm5vZGVUeXBlP3IuZ3JlcChhLGZ1bmN0aW9uKGEpe3JldHVybiBhPT09YiE9PWN9KTpcInN0cmluZ1wiIT10eXBlb2YgYj9yLmdyZXAoYSxmdW5jdGlvbihhKXtyZXR1cm4gaS5jYWxsKGIsYSk+LTEhPT1jfSk6Qy50ZXN0KGIpP3IuZmlsdGVyKGIsYSxjKTooYj1yLmZpbHRlcihiLGEpLHIuZ3JlcChhLGZ1bmN0aW9uKGEpe3JldHVybiBpLmNhbGwoYixhKT4tMSE9PWMmJjE9PT1hLm5vZGVUeXBlfSkpfXIuZmlsdGVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iWzBdO3JldHVybiBjJiYoYT1cIjpub3QoXCIrYStcIilcIiksMT09PWIubGVuZ3RoJiYxPT09ZC5ub2RlVHlwZT9yLmZpbmQubWF0Y2hlc1NlbGVjdG9yKGQsYSk/W2RdOltdOnIuZmluZC5tYXRjaGVzKGEsci5ncmVwKGIsZnVuY3Rpb24oYSl7cmV0dXJuIDE9PT1hLm5vZGVUeXBlfSkpfSxyLmZuLmV4dGVuZCh7ZmluZDpmdW5jdGlvbihhKXt2YXIgYixjLGQ9dGhpcy5sZW5ndGgsZT10aGlzO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBhKXJldHVybiB0aGlzLnB1c2hTdGFjayhyKGEpLmZpbHRlcihmdW5jdGlvbigpe2ZvcihiPTA7YjxkO2IrKylpZihyLmNvbnRhaW5zKGVbYl0sdGhpcykpcmV0dXJuITB9KSk7Zm9yKGM9dGhpcy5wdXNoU3RhY2soW10pLGI9MDtiPGQ7YisrKXIuZmluZChhLGVbYl0sYyk7cmV0dXJuIGQ+MT9yLnVuaXF1ZVNvcnQoYyk6Y30sZmlsdGVyOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnB1c2hTdGFjayhEKHRoaXMsYXx8W10sITEpKX0sbm90OmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnB1c2hTdGFjayhEKHRoaXMsYXx8W10sITApKX0saXM6ZnVuY3Rpb24oYSl7cmV0dXJuISFEKHRoaXMsXCJzdHJpbmdcIj09dHlwZW9mIGEmJkEudGVzdChhKT9yKGEpOmF8fFtdLCExKS5sZW5ndGh9fSk7dmFyIEUsRj0vXig/OlxccyooPFtcXHdcXFddKz4pW14+XSp8IyhbXFx3LV0rKSkkLyxHPXIuZm4uaW5pdD1mdW5jdGlvbihhLGIsYyl7dmFyIGUsZjtpZighYSlyZXR1cm4gdGhpcztpZihjPWN8fEUsXCJzdHJpbmdcIj09dHlwZW9mIGEpe2lmKGU9XCI8XCI9PT1hWzBdJiZcIj5cIj09PWFbYS5sZW5ndGgtMV0mJmEubGVuZ3RoPj0zP1tudWxsLGEsbnVsbF06Ri5leGVjKGEpLCFlfHwhZVsxXSYmYilyZXR1cm4hYnx8Yi5qcXVlcnk/KGJ8fGMpLmZpbmQoYSk6dGhpcy5jb25zdHJ1Y3RvcihiKS5maW5kKGEpO2lmKGVbMV0pe2lmKGI9YiBpbnN0YW5jZW9mIHI/YlswXTpiLHIubWVyZ2UodGhpcyxyLnBhcnNlSFRNTChlWzFdLGImJmIubm9kZVR5cGU/Yi5vd25lckRvY3VtZW50fHxiOmQsITApKSxCLnRlc3QoZVsxXSkmJnIuaXNQbGFpbk9iamVjdChiKSlmb3IoZSBpbiBiKXIuaXNGdW5jdGlvbih0aGlzW2VdKT90aGlzW2VdKGJbZV0pOnRoaXMuYXR0cihlLGJbZV0pO3JldHVybiB0aGlzfXJldHVybiBmPWQuZ2V0RWxlbWVudEJ5SWQoZVsyXSksZiYmKHRoaXNbMF09Zix0aGlzLmxlbmd0aD0xKSx0aGlzfXJldHVybiBhLm5vZGVUeXBlPyh0aGlzWzBdPWEsdGhpcy5sZW5ndGg9MSx0aGlzKTpyLmlzRnVuY3Rpb24oYSk/dm9pZCAwIT09Yy5yZWFkeT9jLnJlYWR5KGEpOmEocik6ci5tYWtlQXJyYXkoYSx0aGlzKX07Ry5wcm90b3R5cGU9ci5mbixFPXIoZCk7dmFyIEg9L14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8sST17Y2hpbGRyZW46ITAsY29udGVudHM6ITAsbmV4dDohMCxwcmV2OiEwfTtyLmZuLmV4dGVuZCh7aGFzOmZ1bmN0aW9uKGEpe3ZhciBiPXIoYSx0aGlzKSxjPWIubGVuZ3RoO3JldHVybiB0aGlzLmZpbHRlcihmdW5jdGlvbigpe2Zvcih2YXIgYT0wO2E8YzthKyspaWYoci5jb250YWlucyh0aGlzLGJbYV0pKXJldHVybiEwfSl9LGNsb3Nlc3Q6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPTAsZT10aGlzLmxlbmd0aCxmPVtdLGc9XCJzdHJpbmdcIiE9dHlwZW9mIGEmJnIoYSk7aWYoIUEudGVzdChhKSlmb3IoO2Q8ZTtkKyspZm9yKGM9dGhpc1tkXTtjJiZjIT09YjtjPWMucGFyZW50Tm9kZSlpZihjLm5vZGVUeXBlPDExJiYoZz9nLmluZGV4KGMpPi0xOjE9PT1jLm5vZGVUeXBlJiZyLmZpbmQubWF0Y2hlc1NlbGVjdG9yKGMsYSkpKXtmLnB1c2goYyk7YnJlYWt9cmV0dXJuIHRoaXMucHVzaFN0YWNrKGYubGVuZ3RoPjE/ci51bmlxdWVTb3J0KGYpOmYpfSxpbmRleDpmdW5jdGlvbihhKXtyZXR1cm4gYT9cInN0cmluZ1wiPT10eXBlb2YgYT9pLmNhbGwocihhKSx0aGlzWzBdKTppLmNhbGwodGhpcyxhLmpxdWVyeT9hWzBdOmEpOnRoaXNbMF0mJnRoaXNbMF0ucGFyZW50Tm9kZT90aGlzLmZpcnN0KCkucHJldkFsbCgpLmxlbmd0aDotMX0sYWRkOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMucHVzaFN0YWNrKHIudW5pcXVlU29ydChyLm1lcmdlKHRoaXMuZ2V0KCkscihhLGIpKSkpfSxhZGRCYWNrOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmFkZChudWxsPT1hP3RoaXMucHJldk9iamVjdDp0aGlzLnByZXZPYmplY3QuZmlsdGVyKGEpKX19KTtmdW5jdGlvbiBKKGEsYil7d2hpbGUoKGE9YVtiXSkmJjEhPT1hLm5vZGVUeXBlKTtyZXR1cm4gYX1yLmVhY2goe3BhcmVudDpmdW5jdGlvbihhKXt2YXIgYj1hLnBhcmVudE5vZGU7cmV0dXJuIGImJjExIT09Yi5ub2RlVHlwZT9iOm51bGx9LHBhcmVudHM6ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSxcInBhcmVudE5vZGVcIil9LHBhcmVudHNVbnRpbDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHkoYSxcInBhcmVudE5vZGVcIixjKX0sbmV4dDpmdW5jdGlvbihhKXtyZXR1cm4gSihhLFwibmV4dFNpYmxpbmdcIil9LHByZXY6ZnVuY3Rpb24oYSl7cmV0dXJuIEooYSxcInByZXZpb3VzU2libGluZ1wiKX0sbmV4dEFsbDpmdW5jdGlvbihhKXtyZXR1cm4geShhLFwibmV4dFNpYmxpbmdcIil9LHByZXZBbGw6ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSxcInByZXZpb3VzU2libGluZ1wiKX0sbmV4dFVudGlsOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4geShhLFwibmV4dFNpYmxpbmdcIixjKX0scHJldlVudGlsOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4geShhLFwicHJldmlvdXNTaWJsaW5nXCIsYyl9LHNpYmxpbmdzOmZ1bmN0aW9uKGEpe3JldHVybiB6KChhLnBhcmVudE5vZGV8fHt9KS5maXJzdENoaWxkLGEpfSxjaGlsZHJlbjpmdW5jdGlvbihhKXtyZXR1cm4geihhLmZpcnN0Q2hpbGQpfSxjb250ZW50czpmdW5jdGlvbihhKXtyZXR1cm4gYS5jb250ZW50RG9jdW1lbnR8fHIubWVyZ2UoW10sYS5jaGlsZE5vZGVzKX19LGZ1bmN0aW9uKGEsYil7ci5mblthXT1mdW5jdGlvbihjLGQpe3ZhciBlPXIubWFwKHRoaXMsYixjKTtyZXR1cm5cIlVudGlsXCIhPT1hLnNsaWNlKC01KSYmKGQ9YyksZCYmXCJzdHJpbmdcIj09dHlwZW9mIGQmJihlPXIuZmlsdGVyKGQsZSkpLHRoaXMubGVuZ3RoPjEmJihJW2FdfHxyLnVuaXF1ZVNvcnQoZSksSC50ZXN0KGEpJiZlLnJldmVyc2UoKSksdGhpcy5wdXNoU3RhY2soZSl9fSk7dmFyIEs9L1teXFx4MjBcXHRcXHJcXG5cXGZdKy9nO2Z1bmN0aW9uIEwoYSl7dmFyIGI9e307cmV0dXJuIHIuZWFjaChhLm1hdGNoKEspfHxbXSxmdW5jdGlvbihhLGMpe2JbY109ITB9KSxifXIuQ2FsbGJhY2tzPWZ1bmN0aW9uKGEpe2E9XCJzdHJpbmdcIj09dHlwZW9mIGE/TChhKTpyLmV4dGVuZCh7fSxhKTt2YXIgYixjLGQsZSxmPVtdLGc9W10saD0tMSxpPWZ1bmN0aW9uKCl7Zm9yKGU9YS5vbmNlLGQ9Yj0hMDtnLmxlbmd0aDtoPS0xKXtjPWcuc2hpZnQoKTt3aGlsZSgrK2g8Zi5sZW5ndGgpZltoXS5hcHBseShjWzBdLGNbMV0pPT09ITEmJmEuc3RvcE9uRmFsc2UmJihoPWYubGVuZ3RoLGM9ITEpfWEubWVtb3J5fHwoYz0hMSksYj0hMSxlJiYoZj1jP1tdOlwiXCIpfSxqPXthZGQ6ZnVuY3Rpb24oKXtyZXR1cm4gZiYmKGMmJiFiJiYoaD1mLmxlbmd0aC0xLGcucHVzaChjKSksZnVuY3Rpb24gZChiKXtyLmVhY2goYixmdW5jdGlvbihiLGMpe3IuaXNGdW5jdGlvbihjKT9hLnVuaXF1ZSYmai5oYXMoYyl8fGYucHVzaChjKTpjJiZjLmxlbmd0aCYmXCJzdHJpbmdcIiE9PXIudHlwZShjKSYmZChjKX0pfShhcmd1bWVudHMpLGMmJiFiJiZpKCkpLHRoaXN9LHJlbW92ZTpmdW5jdGlvbigpe3JldHVybiByLmVhY2goYXJndW1lbnRzLGZ1bmN0aW9uKGEsYil7dmFyIGM7d2hpbGUoKGM9ci5pbkFycmF5KGIsZixjKSk+LTEpZi5zcGxpY2UoYywxKSxjPD1oJiZoLS19KSx0aGlzfSxoYXM6ZnVuY3Rpb24oYSl7cmV0dXJuIGE/ci5pbkFycmF5KGEsZik+LTE6Zi5sZW5ndGg+MH0sZW1wdHk6ZnVuY3Rpb24oKXtyZXR1cm4gZiYmKGY9W10pLHRoaXN9LGRpc2FibGU6ZnVuY3Rpb24oKXtyZXR1cm4gZT1nPVtdLGY9Yz1cIlwiLHRoaXN9LGRpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIWZ9LGxvY2s6ZnVuY3Rpb24oKXtyZXR1cm4gZT1nPVtdLGN8fGJ8fChmPWM9XCJcIiksdGhpc30sbG9ja2VkOmZ1bmN0aW9uKCl7cmV0dXJuISFlfSxmaXJlV2l0aDpmdW5jdGlvbihhLGMpe3JldHVybiBlfHwoYz1jfHxbXSxjPVthLGMuc2xpY2U/Yy5zbGljZSgpOmNdLGcucHVzaChjKSxifHxpKCkpLHRoaXN9LGZpcmU6ZnVuY3Rpb24oKXtyZXR1cm4gai5maXJlV2l0aCh0aGlzLGFyZ3VtZW50cyksdGhpc30sZmlyZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hIWR9fTtyZXR1cm4gan07ZnVuY3Rpb24gTShhKXtyZXR1cm4gYX1mdW5jdGlvbiBOKGEpe3Rocm93IGF9ZnVuY3Rpb24gTyhhLGIsYyl7dmFyIGQ7dHJ5e2EmJnIuaXNGdW5jdGlvbihkPWEucHJvbWlzZSk/ZC5jYWxsKGEpLmRvbmUoYikuZmFpbChjKTphJiZyLmlzRnVuY3Rpb24oZD1hLnRoZW4pP2QuY2FsbChhLGIsYyk6Yi5jYWxsKHZvaWQgMCxhKX1jYXRjaChhKXtjLmNhbGwodm9pZCAwLGEpfX1yLmV4dGVuZCh7RGVmZXJyZWQ6ZnVuY3Rpb24oYil7dmFyIGM9W1tcIm5vdGlmeVwiLFwicHJvZ3Jlc3NcIixyLkNhbGxiYWNrcyhcIm1lbW9yeVwiKSxyLkNhbGxiYWNrcyhcIm1lbW9yeVwiKSwyXSxbXCJyZXNvbHZlXCIsXCJkb25lXCIsci5DYWxsYmFja3MoXCJvbmNlIG1lbW9yeVwiKSxyLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLDAsXCJyZXNvbHZlZFwiXSxbXCJyZWplY3RcIixcImZhaWxcIixyLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLHIuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIiksMSxcInJlamVjdGVkXCJdXSxkPVwicGVuZGluZ1wiLGU9e3N0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LGFsd2F5czpmdW5jdGlvbigpe3JldHVybiBmLmRvbmUoYXJndW1lbnRzKS5mYWlsKGFyZ3VtZW50cyksdGhpc30sXCJjYXRjaFwiOmZ1bmN0aW9uKGEpe3JldHVybiBlLnRoZW4obnVsbCxhKX0scGlwZTpmdW5jdGlvbigpe3ZhciBhPWFyZ3VtZW50cztyZXR1cm4gci5EZWZlcnJlZChmdW5jdGlvbihiKXtyLmVhY2goYyxmdW5jdGlvbihjLGQpe3ZhciBlPXIuaXNGdW5jdGlvbihhW2RbNF1dKSYmYVtkWzRdXTtmW2RbMV1dKGZ1bmN0aW9uKCl7dmFyIGE9ZSYmZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7YSYmci5pc0Z1bmN0aW9uKGEucHJvbWlzZSk/YS5wcm9taXNlKCkucHJvZ3Jlc3MoYi5ub3RpZnkpLmRvbmUoYi5yZXNvbHZlKS5mYWlsKGIucmVqZWN0KTpiW2RbMF0rXCJXaXRoXCJdKHRoaXMsZT9bYV06YXJndW1lbnRzKX0pfSksYT1udWxsfSkucHJvbWlzZSgpfSx0aGVuOmZ1bmN0aW9uKGIsZCxlKXt2YXIgZj0wO2Z1bmN0aW9uIGcoYixjLGQsZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGg9dGhpcyxpPWFyZ3VtZW50cyxqPWZ1bmN0aW9uKCl7dmFyIGEsajtpZighKGI8Zikpe2lmKGE9ZC5hcHBseShoLGkpLGE9PT1jLnByb21pc2UoKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlbmFibGUgc2VsZi1yZXNvbHV0aW9uXCIpO2o9YSYmKFwib2JqZWN0XCI9PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhKSYmYS50aGVuLHIuaXNGdW5jdGlvbihqKT9lP2ouY2FsbChhLGcoZixjLE0sZSksZyhmLGMsTixlKSk6KGYrKyxqLmNhbGwoYSxnKGYsYyxNLGUpLGcoZixjLE4sZSksZyhmLGMsTSxjLm5vdGlmeVdpdGgpKSk6KGQhPT1NJiYoaD12b2lkIDAsaT1bYV0pLChlfHxjLnJlc29sdmVXaXRoKShoLGkpKX19LGs9ZT9qOmZ1bmN0aW9uKCl7dHJ5e2ooKX1jYXRjaChhKXtyLkRlZmVycmVkLmV4Y2VwdGlvbkhvb2smJnIuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayhhLGsuc3RhY2tUcmFjZSksYisxPj1mJiYoZCE9PU4mJihoPXZvaWQgMCxpPVthXSksYy5yZWplY3RXaXRoKGgsaSkpfX07Yj9rKCk6KHIuRGVmZXJyZWQuZ2V0U3RhY2tIb29rJiYoay5zdGFja1RyYWNlPXIuRGVmZXJyZWQuZ2V0U3RhY2tIb29rKCkpLGEuc2V0VGltZW91dChrKSl9fXJldHVybiByLkRlZmVycmVkKGZ1bmN0aW9uKGEpe2NbMF1bM10uYWRkKGcoMCxhLHIuaXNGdW5jdGlvbihlKT9lOk0sYS5ub3RpZnlXaXRoKSksY1sxXVszXS5hZGQoZygwLGEsci5pc0Z1bmN0aW9uKGIpP2I6TSkpLGNbMl1bM10uYWRkKGcoMCxhLHIuaXNGdW5jdGlvbihkKT9kOk4pKX0pLnByb21pc2UoKX0scHJvbWlzZTpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbCE9YT9yLmV4dGVuZChhLGUpOmV9fSxmPXt9O3JldHVybiByLmVhY2goYyxmdW5jdGlvbihhLGIpe3ZhciBnPWJbMl0saD1iWzVdO2VbYlsxXV09Zy5hZGQsaCYmZy5hZGQoZnVuY3Rpb24oKXtkPWh9LGNbMy1hXVsyXS5kaXNhYmxlLGNbMF1bMl0ubG9jayksZy5hZGQoYlszXS5maXJlKSxmW2JbMF1dPWZ1bmN0aW9uKCl7cmV0dXJuIGZbYlswXStcIldpdGhcIl0odGhpcz09PWY/dm9pZCAwOnRoaXMsYXJndW1lbnRzKSx0aGlzfSxmW2JbMF0rXCJXaXRoXCJdPWcuZmlyZVdpdGh9KSxlLnByb21pc2UoZiksYiYmYi5jYWxsKGYsZiksZn0sd2hlbjpmdW5jdGlvbihhKXt2YXIgYj1hcmd1bWVudHMubGVuZ3RoLGM9YixkPUFycmF5KGMpLGU9Zi5jYWxsKGFyZ3VtZW50cyksZz1yLkRlZmVycmVkKCksaD1mdW5jdGlvbihhKXtyZXR1cm4gZnVuY3Rpb24oYyl7ZFthXT10aGlzLGVbYV09YXJndW1lbnRzLmxlbmd0aD4xP2YuY2FsbChhcmd1bWVudHMpOmMsLS1ifHxnLnJlc29sdmVXaXRoKGQsZSl9fTtpZihiPD0xJiYoTyhhLGcuZG9uZShoKGMpKS5yZXNvbHZlLGcucmVqZWN0KSxcInBlbmRpbmdcIj09PWcuc3RhdGUoKXx8ci5pc0Z1bmN0aW9uKGVbY10mJmVbY10udGhlbikpKXJldHVybiBnLnRoZW4oKTt3aGlsZShjLS0pTyhlW2NdLGgoYyksZy5yZWplY3QpO3JldHVybiBnLnByb21pc2UoKX19KTt2YXIgUD0vXihFdmFsfEludGVybmFsfFJhbmdlfFJlZmVyZW5jZXxTeW50YXh8VHlwZXxVUkkpRXJyb3IkLztyLkRlZmVycmVkLmV4Y2VwdGlvbkhvb2s9ZnVuY3Rpb24oYixjKXthLmNvbnNvbGUmJmEuY29uc29sZS53YXJuJiZiJiZQLnRlc3QoYi5uYW1lKSYmYS5jb25zb2xlLndhcm4oXCJqUXVlcnkuRGVmZXJyZWQgZXhjZXB0aW9uOiBcIitiLm1lc3NhZ2UsYi5zdGFjayxjKX0sci5yZWFkeUV4Y2VwdGlvbj1mdW5jdGlvbihiKXthLnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBifSl9O3ZhciBRPXIuRGVmZXJyZWQoKTtyLmZuLnJlYWR5PWZ1bmN0aW9uKGEpe3JldHVybiBRLnRoZW4oYSlbXCJjYXRjaFwiXShmdW5jdGlvbihhKXtyLnJlYWR5RXhjZXB0aW9uKGEpfSksdGhpc30sci5leHRlbmQoe2lzUmVhZHk6ITEscmVhZHlXYWl0OjEsXG5ob2xkUmVhZHk6ZnVuY3Rpb24oYSl7YT9yLnJlYWR5V2FpdCsrOnIucmVhZHkoITApfSxyZWFkeTpmdW5jdGlvbihhKXsoYT09PSEwPy0tci5yZWFkeVdhaXQ6ci5pc1JlYWR5KXx8KHIuaXNSZWFkeT0hMCxhIT09ITAmJi0tci5yZWFkeVdhaXQ+MHx8US5yZXNvbHZlV2l0aChkLFtyXSkpfX0pLHIucmVhZHkudGhlbj1RLnRoZW47ZnVuY3Rpb24gUigpe2QucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixSKSxhLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsUiksci5yZWFkeSgpfVwiY29tcGxldGVcIj09PWQucmVhZHlTdGF0ZXx8XCJsb2FkaW5nXCIhPT1kLnJlYWR5U3RhdGUmJiFkLmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbD9hLnNldFRpbWVvdXQoci5yZWFkeSk6KGQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixSKSxhLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsUikpO3ZhciBTPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcpe3ZhciBoPTAsaT1hLmxlbmd0aCxqPW51bGw9PWM7aWYoXCJvYmplY3RcIj09PXIudHlwZShjKSl7ZT0hMDtmb3IoaCBpbiBjKVMoYSxiLGgsY1toXSwhMCxmLGcpfWVsc2UgaWYodm9pZCAwIT09ZCYmKGU9ITAsci5pc0Z1bmN0aW9uKGQpfHwoZz0hMCksaiYmKGc/KGIuY2FsbChhLGQpLGI9bnVsbCk6KGo9YixiPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gai5jYWxsKHIoYSksYyl9KSksYikpZm9yKDtoPGk7aCsrKWIoYVtoXSxjLGc/ZDpkLmNhbGwoYVtoXSxoLGIoYVtoXSxjKSkpO3JldHVybiBlP2E6aj9iLmNhbGwoYSk6aT9iKGFbMF0sYyk6Zn0sVD1mdW5jdGlvbihhKXtyZXR1cm4gMT09PWEubm9kZVR5cGV8fDk9PT1hLm5vZGVUeXBlfHwhK2Eubm9kZVR5cGV9O2Z1bmN0aW9uIFUoKXt0aGlzLmV4cGFuZG89ci5leHBhbmRvK1UudWlkKyt9VS51aWQ9MSxVLnByb3RvdHlwZT17Y2FjaGU6ZnVuY3Rpb24oYSl7dmFyIGI9YVt0aGlzLmV4cGFuZG9dO3JldHVybiBifHwoYj17fSxUKGEpJiYoYS5ub2RlVHlwZT9hW3RoaXMuZXhwYW5kb109YjpPYmplY3QuZGVmaW5lUHJvcGVydHkoYSx0aGlzLmV4cGFuZG8se3ZhbHVlOmIsY29uZmlndXJhYmxlOiEwfSkpKSxifSxzZXQ6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGU9dGhpcy5jYWNoZShhKTtpZihcInN0cmluZ1wiPT10eXBlb2YgYillW3IuY2FtZWxDYXNlKGIpXT1jO2Vsc2UgZm9yKGQgaW4gYillW3IuY2FtZWxDYXNlKGQpXT1iW2RdO3JldHVybiBlfSxnZXQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdm9pZCAwPT09Yj90aGlzLmNhY2hlKGEpOmFbdGhpcy5leHBhbmRvXSYmYVt0aGlzLmV4cGFuZG9dW3IuY2FtZWxDYXNlKGIpXX0sYWNjZXNzOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gdm9pZCAwPT09Ynx8YiYmXCJzdHJpbmdcIj09dHlwZW9mIGImJnZvaWQgMD09PWM/dGhpcy5nZXQoYSxiKToodGhpcy5zZXQoYSxiLGMpLHZvaWQgMCE9PWM/YzpiKX0scmVtb3ZlOmZ1bmN0aW9uKGEsYil7dmFyIGMsZD1hW3RoaXMuZXhwYW5kb107aWYodm9pZCAwIT09ZCl7aWYodm9pZCAwIT09Yil7ci5pc0FycmF5KGIpP2I9Yi5tYXAoci5jYW1lbENhc2UpOihiPXIuY2FtZWxDYXNlKGIpLGI9YiBpbiBkP1tiXTpiLm1hdGNoKEspfHxbXSksYz1iLmxlbmd0aDt3aGlsZShjLS0pZGVsZXRlIGRbYltjXV19KHZvaWQgMD09PWJ8fHIuaXNFbXB0eU9iamVjdChkKSkmJihhLm5vZGVUeXBlP2FbdGhpcy5leHBhbmRvXT12b2lkIDA6ZGVsZXRlIGFbdGhpcy5leHBhbmRvXSl9fSxoYXNEYXRhOmZ1bmN0aW9uKGEpe3ZhciBiPWFbdGhpcy5leHBhbmRvXTtyZXR1cm4gdm9pZCAwIT09YiYmIXIuaXNFbXB0eU9iamVjdChiKX19O3ZhciBWPW5ldyBVLFc9bmV3IFUsWD0vXig/Olxce1tcXHdcXFddKlxcfXxcXFtbXFx3XFxXXSpcXF0pJC8sWT0vW0EtWl0vZztmdW5jdGlvbiBaKGEpe3JldHVyblwidHJ1ZVwiPT09YXx8XCJmYWxzZVwiIT09YSYmKFwibnVsbFwiPT09YT9udWxsOmE9PT0rYStcIlwiPythOlgudGVzdChhKT9KU09OLnBhcnNlKGEpOmEpfWZ1bmN0aW9uICQoYSxiLGMpe3ZhciBkO2lmKHZvaWQgMD09PWMmJjE9PT1hLm5vZGVUeXBlKWlmKGQ9XCJkYXRhLVwiK2IucmVwbGFjZShZLFwiLSQmXCIpLnRvTG93ZXJDYXNlKCksYz1hLmdldEF0dHJpYnV0ZShkKSxcInN0cmluZ1wiPT10eXBlb2YgYyl7dHJ5e2M9WihjKX1jYXRjaChlKXt9Vy5zZXQoYSxiLGMpfWVsc2UgYz12b2lkIDA7cmV0dXJuIGN9ci5leHRlbmQoe2hhc0RhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuIFcuaGFzRGF0YShhKXx8Vi5oYXNEYXRhKGEpfSxkYXRhOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gVy5hY2Nlc3MoYSxiLGMpfSxyZW1vdmVEYXRhOmZ1bmN0aW9uKGEsYil7Vy5yZW1vdmUoYSxiKX0sX2RhdGE6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBWLmFjY2VzcyhhLGIsYyl9LF9yZW1vdmVEYXRhOmZ1bmN0aW9uKGEsYil7Vi5yZW1vdmUoYSxiKX19KSxyLmZuLmV4dGVuZCh7ZGF0YTpmdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmPXRoaXNbMF0sZz1mJiZmLmF0dHJpYnV0ZXM7aWYodm9pZCAwPT09YSl7aWYodGhpcy5sZW5ndGgmJihlPVcuZ2V0KGYpLDE9PT1mLm5vZGVUeXBlJiYhVi5nZXQoZixcImhhc0RhdGFBdHRyc1wiKSkpe2M9Zy5sZW5ndGg7d2hpbGUoYy0tKWdbY10mJihkPWdbY10ubmFtZSwwPT09ZC5pbmRleE9mKFwiZGF0YS1cIikmJihkPXIuY2FtZWxDYXNlKGQuc2xpY2UoNSkpLCQoZixkLGVbZF0pKSk7Vi5zZXQoZixcImhhc0RhdGFBdHRyc1wiLCEwKX1yZXR1cm4gZX1yZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgYT90aGlzLmVhY2goZnVuY3Rpb24oKXtXLnNldCh0aGlzLGEpfSk6Uyh0aGlzLGZ1bmN0aW9uKGIpe3ZhciBjO2lmKGYmJnZvaWQgMD09PWIpe2lmKGM9Vy5nZXQoZixhKSx2b2lkIDAhPT1jKXJldHVybiBjO2lmKGM9JChmLGEpLHZvaWQgMCE9PWMpcmV0dXJuIGN9ZWxzZSB0aGlzLmVhY2goZnVuY3Rpb24oKXtXLnNldCh0aGlzLGEsYil9KX0sbnVsbCxiLGFyZ3VtZW50cy5sZW5ndGg+MSxudWxsLCEwKX0scmVtb3ZlRGF0YTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Vy5yZW1vdmUodGhpcyxhKX0pfX0pLHIuZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ7aWYoYSlyZXR1cm4gYj0oYnx8XCJmeFwiKStcInF1ZXVlXCIsZD1WLmdldChhLGIpLGMmJighZHx8ci5pc0FycmF5KGMpP2Q9Vi5hY2Nlc3MoYSxiLHIubWFrZUFycmF5KGMpKTpkLnB1c2goYykpLGR8fFtdfSxkZXF1ZXVlOmZ1bmN0aW9uKGEsYil7Yj1ifHxcImZ4XCI7dmFyIGM9ci5xdWV1ZShhLGIpLGQ9Yy5sZW5ndGgsZT1jLnNoaWZ0KCksZj1yLl9xdWV1ZUhvb2tzKGEsYiksZz1mdW5jdGlvbigpe3IuZGVxdWV1ZShhLGIpfTtcImlucHJvZ3Jlc3NcIj09PWUmJihlPWMuc2hpZnQoKSxkLS0pLGUmJihcImZ4XCI9PT1iJiZjLnVuc2hpZnQoXCJpbnByb2dyZXNzXCIpLGRlbGV0ZSBmLnN0b3AsZS5jYWxsKGEsZyxmKSksIWQmJmYmJmYuZW1wdHkuZmlyZSgpfSxfcXVldWVIb29rczpmdW5jdGlvbihhLGIpe3ZhciBjPWIrXCJxdWV1ZUhvb2tzXCI7cmV0dXJuIFYuZ2V0KGEsYyl8fFYuYWNjZXNzKGEsYyx7ZW1wdHk6ci5DYWxsYmFja3MoXCJvbmNlIG1lbW9yeVwiKS5hZGQoZnVuY3Rpb24oKXtWLnJlbW92ZShhLFtiK1wicXVldWVcIixjXSl9KX0pfX0pLHIuZm4uZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPTI7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGEmJihiPWEsYT1cImZ4XCIsYy0tKSxhcmd1bWVudHMubGVuZ3RoPGM/ci5xdWV1ZSh0aGlzWzBdLGEpOnZvaWQgMD09PWI/dGhpczp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYz1yLnF1ZXVlKHRoaXMsYSxiKTtyLl9xdWV1ZUhvb2tzKHRoaXMsYSksXCJmeFwiPT09YSYmXCJpbnByb2dyZXNzXCIhPT1jWzBdJiZyLmRlcXVldWUodGhpcyxhKX0pfSxkZXF1ZXVlOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtyLmRlcXVldWUodGhpcyxhKX0pfSxjbGVhclF1ZXVlOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnF1ZXVlKGF8fFwiZnhcIixbXSl9LHByb21pc2U6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPTEsZT1yLkRlZmVycmVkKCksZj10aGlzLGc9dGhpcy5sZW5ndGgsaD1mdW5jdGlvbigpey0tZHx8ZS5yZXNvbHZlV2l0aChmLFtmXSl9O1wic3RyaW5nXCIhPXR5cGVvZiBhJiYoYj1hLGE9dm9pZCAwKSxhPWF8fFwiZnhcIjt3aGlsZShnLS0pYz1WLmdldChmW2ddLGErXCJxdWV1ZUhvb2tzXCIpLGMmJmMuZW1wdHkmJihkKyssYy5lbXB0eS5hZGQoaCkpO3JldHVybiBoKCksZS5wcm9taXNlKGIpfX0pO3ZhciBfPS9bKy1dPyg/OlxcZCpcXC58KVxcZCsoPzpbZUVdWystXT9cXGQrfCkvLnNvdXJjZSxhYT1uZXcgUmVnRXhwKFwiXig/OihbKy1dKT18KShcIitfK1wiKShbYS16JV0qKSRcIixcImlcIiksYmE9W1wiVG9wXCIsXCJSaWdodFwiLFwiQm90dG9tXCIsXCJMZWZ0XCJdLGNhPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9Ynx8YSxcIm5vbmVcIj09PWEuc3R5bGUuZGlzcGxheXx8XCJcIj09PWEuc3R5bGUuZGlzcGxheSYmci5jb250YWlucyhhLm93bmVyRG9jdW1lbnQsYSkmJlwibm9uZVwiPT09ci5jc3MoYSxcImRpc3BsYXlcIil9LGRhPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlLGYsZz17fTtmb3IoZiBpbiBiKWdbZl09YS5zdHlsZVtmXSxhLnN0eWxlW2ZdPWJbZl07ZT1jLmFwcGx5KGEsZHx8W10pO2ZvcihmIGluIGIpYS5zdHlsZVtmXT1nW2ZdO3JldHVybiBlfTtmdW5jdGlvbiBlYShhLGIsYyxkKXt2YXIgZSxmPTEsZz0yMCxoPWQ/ZnVuY3Rpb24oKXtyZXR1cm4gZC5jdXIoKX06ZnVuY3Rpb24oKXtyZXR1cm4gci5jc3MoYSxiLFwiXCIpfSxpPWgoKSxqPWMmJmNbM118fChyLmNzc051bWJlcltiXT9cIlwiOlwicHhcIiksaz0oci5jc3NOdW1iZXJbYl18fFwicHhcIiE9PWomJitpKSYmYWEuZXhlYyhyLmNzcyhhLGIpKTtpZihrJiZrWzNdIT09ail7aj1qfHxrWzNdLGM9Y3x8W10saz0raXx8MTtkbyBmPWZ8fFwiLjVcIixrLz1mLHIuc3R5bGUoYSxiLGsraik7d2hpbGUoZiE9PShmPWgoKS9pKSYmMSE9PWYmJi0tZyl9cmV0dXJuIGMmJihrPStrfHwraXx8MCxlPWNbMV0/aysoY1sxXSsxKSpjWzJdOitjWzJdLGQmJihkLnVuaXQ9aixkLnN0YXJ0PWssZC5lbmQ9ZSkpLGV9dmFyIGZhPXt9O2Z1bmN0aW9uIGdhKGEpe3ZhciBiLGM9YS5vd25lckRvY3VtZW50LGQ9YS5ub2RlTmFtZSxlPWZhW2RdO3JldHVybiBlP2U6KGI9Yy5ib2R5LmFwcGVuZENoaWxkKGMuY3JlYXRlRWxlbWVudChkKSksZT1yLmNzcyhiLFwiZGlzcGxheVwiKSxiLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYiksXCJub25lXCI9PT1lJiYoZT1cImJsb2NrXCIpLGZhW2RdPWUsZSl9ZnVuY3Rpb24gaGEoYSxiKXtmb3IodmFyIGMsZCxlPVtdLGY9MCxnPWEubGVuZ3RoO2Y8ZztmKyspZD1hW2ZdLGQuc3R5bGUmJihjPWQuc3R5bGUuZGlzcGxheSxiPyhcIm5vbmVcIj09PWMmJihlW2ZdPVYuZ2V0KGQsXCJkaXNwbGF5XCIpfHxudWxsLGVbZl18fChkLnN0eWxlLmRpc3BsYXk9XCJcIikpLFwiXCI9PT1kLnN0eWxlLmRpc3BsYXkmJmNhKGQpJiYoZVtmXT1nYShkKSkpOlwibm9uZVwiIT09YyYmKGVbZl09XCJub25lXCIsVi5zZXQoZCxcImRpc3BsYXlcIixjKSkpO2ZvcihmPTA7ZjxnO2YrKyludWxsIT1lW2ZdJiYoYVtmXS5zdHlsZS5kaXNwbGF5PWVbZl0pO3JldHVybiBhfXIuZm4uZXh0ZW5kKHtzaG93OmZ1bmN0aW9uKCl7cmV0dXJuIGhhKHRoaXMsITApfSxoaWRlOmZ1bmN0aW9uKCl7cmV0dXJuIGhhKHRoaXMpfSx0b2dnbGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiBhP2E/dGhpcy5zaG93KCk6dGhpcy5oaWRlKCk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7Y2EodGhpcyk/cih0aGlzKS5zaG93KCk6cih0aGlzKS5oaWRlKCl9KX19KTt2YXIgaWE9L14oPzpjaGVja2JveHxyYWRpbykkL2ksamE9LzwoW2Etel1bXlxcL1xcMD5cXHgyMFxcdFxcclxcblxcZl0rKS9pLGthPS9eJHxcXC8oPzpqYXZhfGVjbWEpc2NyaXB0L2ksbGE9e29wdGlvbjpbMSxcIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz5cIixcIjwvc2VsZWN0PlwiXSx0aGVhZDpbMSxcIjx0YWJsZT5cIixcIjwvdGFibGU+XCJdLGNvbDpbMixcIjx0YWJsZT48Y29sZ3JvdXA+XCIsXCI8L2NvbGdyb3VwPjwvdGFibGU+XCJdLHRyOlsyLFwiPHRhYmxlPjx0Ym9keT5cIixcIjwvdGJvZHk+PC90YWJsZT5cIl0sdGQ6WzMsXCI8dGFibGU+PHRib2R5Pjx0cj5cIixcIjwvdHI+PC90Ym9keT48L3RhYmxlPlwiXSxfZGVmYXVsdDpbMCxcIlwiLFwiXCJdfTtsYS5vcHRncm91cD1sYS5vcHRpb24sbGEudGJvZHk9bGEudGZvb3Q9bGEuY29sZ3JvdXA9bGEuY2FwdGlvbj1sYS50aGVhZCxsYS50aD1sYS50ZDtmdW5jdGlvbiBtYShhLGIpe3ZhciBjO3JldHVybiBjPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBhLmdldEVsZW1lbnRzQnlUYWdOYW1lP2EuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYnx8XCIqXCIpOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBhLnF1ZXJ5U2VsZWN0b3JBbGw/YS5xdWVyeVNlbGVjdG9yQWxsKGJ8fFwiKlwiKTpbXSx2b2lkIDA9PT1ifHxiJiZyLm5vZGVOYW1lKGEsYik/ci5tZXJnZShbYV0sYyk6Y31mdW5jdGlvbiBuYShhLGIpe2Zvcih2YXIgYz0wLGQ9YS5sZW5ndGg7YzxkO2MrKylWLnNldChhW2NdLFwiZ2xvYmFsRXZhbFwiLCFifHxWLmdldChiW2NdLFwiZ2xvYmFsRXZhbFwiKSl9dmFyIG9hPS88fCYjP1xcdys7LztmdW5jdGlvbiBwYShhLGIsYyxkLGUpe2Zvcih2YXIgZixnLGgsaSxqLGssbD1iLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxtPVtdLG49MCxvPWEubGVuZ3RoO248bztuKyspaWYoZj1hW25dLGZ8fDA9PT1mKWlmKFwib2JqZWN0XCI9PT1yLnR5cGUoZikpci5tZXJnZShtLGYubm9kZVR5cGU/W2ZdOmYpO2Vsc2UgaWYob2EudGVzdChmKSl7Zz1nfHxsLmFwcGVuZENoaWxkKGIuY3JlYXRlRWxlbWVudChcImRpdlwiKSksaD0oamEuZXhlYyhmKXx8W1wiXCIsXCJcIl0pWzFdLnRvTG93ZXJDYXNlKCksaT1sYVtoXXx8bGEuX2RlZmF1bHQsZy5pbm5lckhUTUw9aVsxXStyLmh0bWxQcmVmaWx0ZXIoZikraVsyXSxrPWlbMF07d2hpbGUoay0tKWc9Zy5sYXN0Q2hpbGQ7ci5tZXJnZShtLGcuY2hpbGROb2RlcyksZz1sLmZpcnN0Q2hpbGQsZy50ZXh0Q29udGVudD1cIlwifWVsc2UgbS5wdXNoKGIuY3JlYXRlVGV4dE5vZGUoZikpO2wudGV4dENvbnRlbnQ9XCJcIixuPTA7d2hpbGUoZj1tW24rK10paWYoZCYmci5pbkFycmF5KGYsZCk+LTEpZSYmZS5wdXNoKGYpO2Vsc2UgaWYoaj1yLmNvbnRhaW5zKGYub3duZXJEb2N1bWVudCxmKSxnPW1hKGwuYXBwZW5kQ2hpbGQoZiksXCJzY3JpcHRcIiksaiYmbmEoZyksYyl7az0wO3doaWxlKGY9Z1trKytdKWthLnRlc3QoZi50eXBlfHxcIlwiKSYmYy5wdXNoKGYpfXJldHVybiBsfSFmdW5jdGlvbigpe3ZhciBhPWQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLGI9YS5hcHBlbmRDaGlsZChkLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLGM9ZC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7Yy5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsXCJyYWRpb1wiKSxjLnNldEF0dHJpYnV0ZShcImNoZWNrZWRcIixcImNoZWNrZWRcIiksYy5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsXCJ0XCIpLGIuYXBwZW5kQ2hpbGQoYyksby5jaGVja0Nsb25lPWIuY2xvbmVOb2RlKCEwKS5jbG9uZU5vZGUoITApLmxhc3RDaGlsZC5jaGVja2VkLGIuaW5uZXJIVE1MPVwiPHRleHRhcmVhPng8L3RleHRhcmVhPlwiLG8ubm9DbG9uZUNoZWNrZWQ9ISFiLmNsb25lTm9kZSghMCkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZX0oKTt2YXIgcWE9ZC5kb2N1bWVudEVsZW1lbnQscmE9L15rZXkvLHNhPS9eKD86bW91c2V8cG9pbnRlcnxjb250ZXh0bWVudXxkcmFnfGRyb3ApfGNsaWNrLyx0YT0vXihbXi5dKikoPzpcXC4oLispfCkvO2Z1bmN0aW9uIHVhKCl7cmV0dXJuITB9ZnVuY3Rpb24gdmEoKXtyZXR1cm4hMX1mdW5jdGlvbiB3YSgpe3RyeXtyZXR1cm4gZC5hY3RpdmVFbGVtZW50fWNhdGNoKGEpe319ZnVuY3Rpb24geGEoYSxiLGMsZCxlLGYpe3ZhciBnLGg7aWYoXCJvYmplY3RcIj09dHlwZW9mIGIpe1wic3RyaW5nXCIhPXR5cGVvZiBjJiYoZD1kfHxjLGM9dm9pZCAwKTtmb3IoaCBpbiBiKXhhKGEsaCxjLGQsYltoXSxmKTtyZXR1cm4gYX1pZihudWxsPT1kJiZudWxsPT1lPyhlPWMsZD1jPXZvaWQgMCk6bnVsbD09ZSYmKFwic3RyaW5nXCI9PXR5cGVvZiBjPyhlPWQsZD12b2lkIDApOihlPWQsZD1jLGM9dm9pZCAwKSksZT09PSExKWU9dmE7ZWxzZSBpZighZSlyZXR1cm4gYTtyZXR1cm4gMT09PWYmJihnPWUsZT1mdW5jdGlvbihhKXtyZXR1cm4gcigpLm9mZihhKSxnLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZS5ndWlkPWcuZ3VpZHx8KGcuZ3VpZD1yLmd1aWQrKykpLGEuZWFjaChmdW5jdGlvbigpe3IuZXZlbnQuYWRkKHRoaXMsYixlLGQsYyl9KX1yLmV2ZW50PXtnbG9iYWw6e30sYWRkOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGYsZyxoLGksaixrLGwsbSxuLG8scCxxPVYuZ2V0KGEpO2lmKHEpe2MuaGFuZGxlciYmKGY9YyxjPWYuaGFuZGxlcixlPWYuc2VsZWN0b3IpLGUmJnIuZmluZC5tYXRjaGVzU2VsZWN0b3IocWEsZSksYy5ndWlkfHwoYy5ndWlkPXIuZ3VpZCsrKSwoaT1xLmV2ZW50cyl8fChpPXEuZXZlbnRzPXt9KSwoZz1xLmhhbmRsZSl8fChnPXEuaGFuZGxlPWZ1bmN0aW9uKGIpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiByJiZyLmV2ZW50LnRyaWdnZXJlZCE9PWIudHlwZT9yLmV2ZW50LmRpc3BhdGNoLmFwcGx5KGEsYXJndW1lbnRzKTp2b2lkIDB9KSxiPShifHxcIlwiKS5tYXRjaChLKXx8W1wiXCJdLGo9Yi5sZW5ndGg7d2hpbGUoai0tKWg9dGEuZXhlYyhiW2pdKXx8W10sbj1wPWhbMV0sbz0oaFsyXXx8XCJcIikuc3BsaXQoXCIuXCIpLnNvcnQoKSxuJiYobD1yLmV2ZW50LnNwZWNpYWxbbl18fHt9LG49KGU/bC5kZWxlZ2F0ZVR5cGU6bC5iaW5kVHlwZSl8fG4sbD1yLmV2ZW50LnNwZWNpYWxbbl18fHt9LGs9ci5leHRlbmQoe3R5cGU6bixvcmlnVHlwZTpwLGRhdGE6ZCxoYW5kbGVyOmMsZ3VpZDpjLmd1aWQsc2VsZWN0b3I6ZSxuZWVkc0NvbnRleHQ6ZSYmci5leHByLm1hdGNoLm5lZWRzQ29udGV4dC50ZXN0KGUpLG5hbWVzcGFjZTpvLmpvaW4oXCIuXCIpfSxmKSwobT1pW25dKXx8KG09aVtuXT1bXSxtLmRlbGVnYXRlQ291bnQ9MCxsLnNldHVwJiZsLnNldHVwLmNhbGwoYSxkLG8sZykhPT0hMXx8YS5hZGRFdmVudExpc3RlbmVyJiZhLmFkZEV2ZW50TGlzdGVuZXIobixnKSksbC5hZGQmJihsLmFkZC5jYWxsKGEsayksay5oYW5kbGVyLmd1aWR8fChrLmhhbmRsZXIuZ3VpZD1jLmd1aWQpKSxlP20uc3BsaWNlKG0uZGVsZWdhdGVDb3VudCsrLDAsayk6bS5wdXNoKGspLHIuZXZlbnQuZ2xvYmFsW25dPSEwKX19LHJlbW92ZTpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmLGcsaCxpLGosayxsLG0sbixvLHAscT1WLmhhc0RhdGEoYSkmJlYuZ2V0KGEpO2lmKHEmJihpPXEuZXZlbnRzKSl7Yj0oYnx8XCJcIikubWF0Y2goSyl8fFtcIlwiXSxqPWIubGVuZ3RoO3doaWxlKGotLSlpZihoPXRhLmV4ZWMoYltqXSl8fFtdLG49cD1oWzFdLG89KGhbMl18fFwiXCIpLnNwbGl0KFwiLlwiKS5zb3J0KCksbil7bD1yLmV2ZW50LnNwZWNpYWxbbl18fHt9LG49KGQ/bC5kZWxlZ2F0ZVR5cGU6bC5iaW5kVHlwZSl8fG4sbT1pW25dfHxbXSxoPWhbMl0mJm5ldyBSZWdFeHAoXCIoXnxcXFxcLilcIitvLmpvaW4oXCJcXFxcLig/Oi4qXFxcXC58KVwiKStcIihcXFxcLnwkKVwiKSxnPWY9bS5sZW5ndGg7d2hpbGUoZi0tKWs9bVtmXSwhZSYmcCE9PWsub3JpZ1R5cGV8fGMmJmMuZ3VpZCE9PWsuZ3VpZHx8aCYmIWgudGVzdChrLm5hbWVzcGFjZSl8fGQmJmQhPT1rLnNlbGVjdG9yJiYoXCIqKlwiIT09ZHx8IWsuc2VsZWN0b3IpfHwobS5zcGxpY2UoZiwxKSxrLnNlbGVjdG9yJiZtLmRlbGVnYXRlQ291bnQtLSxsLnJlbW92ZSYmbC5yZW1vdmUuY2FsbChhLGspKTtnJiYhbS5sZW5ndGgmJihsLnRlYXJkb3duJiZsLnRlYXJkb3duLmNhbGwoYSxvLHEuaGFuZGxlKSE9PSExfHxyLnJlbW92ZUV2ZW50KGEsbixxLmhhbmRsZSksZGVsZXRlIGlbbl0pfWVsc2UgZm9yKG4gaW4gaSlyLmV2ZW50LnJlbW92ZShhLG4rYltqXSxjLGQsITApO3IuaXNFbXB0eU9iamVjdChpKSYmVi5yZW1vdmUoYSxcImhhbmRsZSBldmVudHNcIil9fSxkaXNwYXRjaDpmdW5jdGlvbihhKXt2YXIgYj1yLmV2ZW50LmZpeChhKSxjLGQsZSxmLGcsaCxpPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKSxqPShWLmdldCh0aGlzLFwiZXZlbnRzXCIpfHx7fSlbYi50eXBlXXx8W10saz1yLmV2ZW50LnNwZWNpYWxbYi50eXBlXXx8e307Zm9yKGlbMF09YixjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKylpW2NdPWFyZ3VtZW50c1tjXTtpZihiLmRlbGVnYXRlVGFyZ2V0PXRoaXMsIWsucHJlRGlzcGF0Y2h8fGsucHJlRGlzcGF0Y2guY2FsbCh0aGlzLGIpIT09ITEpe2g9ci5ldmVudC5oYW5kbGVycy5jYWxsKHRoaXMsYixqKSxjPTA7d2hpbGUoKGY9aFtjKytdKSYmIWIuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSl7Yi5jdXJyZW50VGFyZ2V0PWYuZWxlbSxkPTA7d2hpbGUoKGc9Zi5oYW5kbGVyc1tkKytdKSYmIWIuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSliLnJuYW1lc3BhY2UmJiFiLnJuYW1lc3BhY2UudGVzdChnLm5hbWVzcGFjZSl8fChiLmhhbmRsZU9iaj1nLGIuZGF0YT1nLmRhdGEsZT0oKHIuZXZlbnQuc3BlY2lhbFtnLm9yaWdUeXBlXXx8e30pLmhhbmRsZXx8Zy5oYW5kbGVyKS5hcHBseShmLmVsZW0saSksdm9pZCAwIT09ZSYmKGIucmVzdWx0PWUpPT09ITEmJihiLnByZXZlbnREZWZhdWx0KCksYi5zdG9wUHJvcGFnYXRpb24oKSkpfXJldHVybiBrLnBvc3REaXNwYXRjaCYmay5wb3N0RGlzcGF0Y2guY2FsbCh0aGlzLGIpLGIucmVzdWx0fX0saGFuZGxlcnM6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZixnLGg9W10saT1iLmRlbGVnYXRlQ291bnQsaj1hLnRhcmdldDtpZihpJiZqLm5vZGVUeXBlJiYhKFwiY2xpY2tcIj09PWEudHlwZSYmYS5idXR0b24+PTEpKWZvcig7aiE9PXRoaXM7aj1qLnBhcmVudE5vZGV8fHRoaXMpaWYoMT09PWoubm9kZVR5cGUmJihcImNsaWNrXCIhPT1hLnR5cGV8fGouZGlzYWJsZWQhPT0hMCkpe2ZvcihmPVtdLGc9e30sYz0wO2M8aTtjKyspZD1iW2NdLGU9ZC5zZWxlY3RvcitcIiBcIix2b2lkIDA9PT1nW2VdJiYoZ1tlXT1kLm5lZWRzQ29udGV4dD9yKGUsdGhpcykuaW5kZXgoaik+LTE6ci5maW5kKGUsdGhpcyxudWxsLFtqXSkubGVuZ3RoKSxnW2VdJiZmLnB1c2goZCk7Zi5sZW5ndGgmJmgucHVzaCh7ZWxlbTpqLGhhbmRsZXJzOmZ9KX1yZXR1cm4gaj10aGlzLGk8Yi5sZW5ndGgmJmgucHVzaCh7ZWxlbTpqLGhhbmRsZXJzOmIuc2xpY2UoaSl9KSxofSxhZGRQcm9wOmZ1bmN0aW9uKGEsYil7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIuRXZlbnQucHJvdG90eXBlLGEse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpyLmlzRnVuY3Rpb24oYik/ZnVuY3Rpb24oKXtpZih0aGlzLm9yaWdpbmFsRXZlbnQpcmV0dXJuIGIodGhpcy5vcmlnaW5hbEV2ZW50KX06ZnVuY3Rpb24oKXtpZih0aGlzLm9yaWdpbmFsRXZlbnQpcmV0dXJuIHRoaXMub3JpZ2luYWxFdmVudFthXX0sc2V0OmZ1bmN0aW9uKGIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLGEse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOmJ9KX19KX0sZml4OmZ1bmN0aW9uKGEpe3JldHVybiBhW3IuZXhwYW5kb10/YTpuZXcgci5FdmVudChhKX0sc3BlY2lhbDp7bG9hZDp7bm9CdWJibGU6ITB9LGZvY3VzOnt0cmlnZ2VyOmZ1bmN0aW9uKCl7aWYodGhpcyE9PXdhKCkmJnRoaXMuZm9jdXMpcmV0dXJuIHRoaXMuZm9jdXMoKSwhMX0sZGVsZWdhdGVUeXBlOlwiZm9jdXNpblwifSxibHVyOnt0cmlnZ2VyOmZ1bmN0aW9uKCl7aWYodGhpcz09PXdhKCkmJnRoaXMuYmx1cilyZXR1cm4gdGhpcy5ibHVyKCksITF9LGRlbGVnYXRlVHlwZTpcImZvY3Vzb3V0XCJ9LGNsaWNrOnt0cmlnZ2VyOmZ1bmN0aW9uKCl7aWYoXCJjaGVja2JveFwiPT09dGhpcy50eXBlJiZ0aGlzLmNsaWNrJiZyLm5vZGVOYW1lKHRoaXMsXCJpbnB1dFwiKSlyZXR1cm4gdGhpcy5jbGljaygpLCExfSxfZGVmYXVsdDpmdW5jdGlvbihhKXtyZXR1cm4gci5ub2RlTmFtZShhLnRhcmdldCxcImFcIil9fSxiZWZvcmV1bmxvYWQ6e3Bvc3REaXNwYXRjaDpmdW5jdGlvbihhKXt2b2lkIDAhPT1hLnJlc3VsdCYmYS5vcmlnaW5hbEV2ZW50JiYoYS5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlPWEucmVzdWx0KX19fX0sci5yZW1vdmVFdmVudD1mdW5jdGlvbihhLGIsYyl7YS5yZW1vdmVFdmVudExpc3RlbmVyJiZhLnJlbW92ZUV2ZW50TGlzdGVuZXIoYixjKX0sci5FdmVudD1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzIGluc3RhbmNlb2Ygci5FdmVudD8oYSYmYS50eXBlPyh0aGlzLm9yaWdpbmFsRXZlbnQ9YSx0aGlzLnR5cGU9YS50eXBlLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWEuZGVmYXVsdFByZXZlbnRlZHx8dm9pZCAwPT09YS5kZWZhdWx0UHJldmVudGVkJiZhLnJldHVyblZhbHVlPT09ITE/dWE6dmEsdGhpcy50YXJnZXQ9YS50YXJnZXQmJjM9PT1hLnRhcmdldC5ub2RlVHlwZT9hLnRhcmdldC5wYXJlbnROb2RlOmEudGFyZ2V0LHRoaXMuY3VycmVudFRhcmdldD1hLmN1cnJlbnRUYXJnZXQsdGhpcy5yZWxhdGVkVGFyZ2V0PWEucmVsYXRlZFRhcmdldCk6dGhpcy50eXBlPWEsYiYmci5leHRlbmQodGhpcyxiKSx0aGlzLnRpbWVTdGFtcD1hJiZhLnRpbWVTdGFtcHx8ci5ub3coKSx2b2lkKHRoaXNbci5leHBhbmRvXT0hMCkpOm5ldyByLkV2ZW50KGEsYil9LHIuRXZlbnQucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpyLkV2ZW50LGlzRGVmYXVsdFByZXZlbnRlZDp2YSxpc1Byb3BhZ2F0aW9uU3RvcHBlZDp2YSxpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDp2YSxpc1NpbXVsYXRlZDohMSxwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3ZhciBhPXRoaXMub3JpZ2luYWxFdmVudDt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD11YSxhJiYhdGhpcy5pc1NpbXVsYXRlZCYmYS5wcmV2ZW50RGVmYXVsdCgpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD11YSxhJiYhdGhpcy5pc1NpbXVsYXRlZCYmYS5zdG9wUHJvcGFnYXRpb24oKX0sc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5vcmlnaW5hbEV2ZW50O3RoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ9dWEsYSYmIXRoaXMuaXNTaW11bGF0ZWQmJmEuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdGhpcy5zdG9wUHJvcGFnYXRpb24oKX19LHIuZWFjaCh7YWx0S2V5OiEwLGJ1YmJsZXM6ITAsY2FuY2VsYWJsZTohMCxjaGFuZ2VkVG91Y2hlczohMCxjdHJsS2V5OiEwLGRldGFpbDohMCxldmVudFBoYXNlOiEwLG1ldGFLZXk6ITAscGFnZVg6ITAscGFnZVk6ITAsc2hpZnRLZXk6ITAsdmlldzohMCxcImNoYXJcIjohMCxjaGFyQ29kZTohMCxrZXk6ITAsa2V5Q29kZTohMCxidXR0b246ITAsYnV0dG9uczohMCxjbGllbnRYOiEwLGNsaWVudFk6ITAsb2Zmc2V0WDohMCxvZmZzZXRZOiEwLHBvaW50ZXJJZDohMCxwb2ludGVyVHlwZTohMCxzY3JlZW5YOiEwLHNjcmVlblk6ITAsdGFyZ2V0VG91Y2hlczohMCx0b0VsZW1lbnQ6ITAsdG91Y2hlczohMCx3aGljaDpmdW5jdGlvbihhKXt2YXIgYj1hLmJ1dHRvbjtyZXR1cm4gbnVsbD09YS53aGljaCYmcmEudGVzdChhLnR5cGUpP251bGwhPWEuY2hhckNvZGU/YS5jaGFyQ29kZTphLmtleUNvZGU6IWEud2hpY2gmJnZvaWQgMCE9PWImJnNhLnRlc3QoYS50eXBlKT8xJmI/MToyJmI/Mzo0JmI/MjowOmEud2hpY2h9fSxyLmV2ZW50LmFkZFByb3ApLHIuZWFjaCh7bW91c2VlbnRlcjpcIm1vdXNlb3ZlclwiLG1vdXNlbGVhdmU6XCJtb3VzZW91dFwiLHBvaW50ZXJlbnRlcjpcInBvaW50ZXJvdmVyXCIscG9pbnRlcmxlYXZlOlwicG9pbnRlcm91dFwifSxmdW5jdGlvbihhLGIpe3IuZXZlbnQuc3BlY2lhbFthXT17ZGVsZWdhdGVUeXBlOmIsYmluZFR5cGU6YixoYW5kbGU6ZnVuY3Rpb24oYSl7dmFyIGMsZD10aGlzLGU9YS5yZWxhdGVkVGFyZ2V0LGY9YS5oYW5kbGVPYmo7cmV0dXJuIGUmJihlPT09ZHx8ci5jb250YWlucyhkLGUpKXx8KGEudHlwZT1mLm9yaWdUeXBlLGM9Zi5oYW5kbGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxhLnR5cGU9YiksY319fSksci5mbi5leHRlbmQoe29uOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiB4YSh0aGlzLGEsYixjLGQpfSxvbmU6ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIHhhKHRoaXMsYSxiLGMsZCwxKX0sb2ZmOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlO2lmKGEmJmEucHJldmVudERlZmF1bHQmJmEuaGFuZGxlT2JqKXJldHVybiBkPWEuaGFuZGxlT2JqLHIoYS5kZWxlZ2F0ZVRhcmdldCkub2ZmKGQubmFtZXNwYWNlP2Qub3JpZ1R5cGUrXCIuXCIrZC5uYW1lc3BhY2U6ZC5vcmlnVHlwZSxkLnNlbGVjdG9yLGQuaGFuZGxlciksdGhpcztpZihcIm9iamVjdFwiPT10eXBlb2YgYSl7Zm9yKGUgaW4gYSl0aGlzLm9mZihlLGIsYVtlXSk7cmV0dXJuIHRoaXN9cmV0dXJuIGIhPT0hMSYmXCJmdW5jdGlvblwiIT10eXBlb2YgYnx8KGM9YixiPXZvaWQgMCksYz09PSExJiYoYz12YSksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ci5ldmVudC5yZW1vdmUodGhpcyxhLGMsYil9KX19KTt2YXIgeWE9LzwoPyFhcmVhfGJyfGNvbHxlbWJlZHxocnxpbWd8aW5wdXR8bGlua3xtZXRhfHBhcmFtKSgoW2Etel1bXlxcL1xcMD5cXHgyMFxcdFxcclxcblxcZl0qKVtePl0qKVxcLz4vZ2ksemE9LzxzY3JpcHR8PHN0eWxlfDxsaW5rL2ksQWE9L2NoZWNrZWRcXHMqKD86W149XXw9XFxzKi5jaGVja2VkLikvaSxCYT0vXnRydWVcXC8oLiopLyxDYT0vXlxccyo8ISg/OlxcW0NEQVRBXFxbfC0tKXwoPzpcXF1cXF18LS0pPlxccyokL2c7ZnVuY3Rpb24gRGEoYSxiKXtyZXR1cm4gci5ub2RlTmFtZShhLFwidGFibGVcIikmJnIubm9kZU5hbWUoMTEhPT1iLm5vZGVUeXBlP2I6Yi5maXJzdENoaWxkLFwidHJcIik/YS5nZXRFbGVtZW50c0J5VGFnTmFtZShcInRib2R5XCIpWzBdfHxhOmF9ZnVuY3Rpb24gRWEoYSl7cmV0dXJuIGEudHlwZT0obnVsbCE9PWEuZ2V0QXR0cmlidXRlKFwidHlwZVwiKSkrXCIvXCIrYS50eXBlLGF9ZnVuY3Rpb24gRmEoYSl7dmFyIGI9QmEuZXhlYyhhLnR5cGUpO3JldHVybiBiP2EudHlwZT1iWzFdOmEucmVtb3ZlQXR0cmlidXRlKFwidHlwZVwiKSxhfWZ1bmN0aW9uIEdhKGEsYil7dmFyIGMsZCxlLGYsZyxoLGksajtpZigxPT09Yi5ub2RlVHlwZSl7aWYoVi5oYXNEYXRhKGEpJiYoZj1WLmFjY2VzcyhhKSxnPVYuc2V0KGIsZiksaj1mLmV2ZW50cykpe2RlbGV0ZSBnLmhhbmRsZSxnLmV2ZW50cz17fTtmb3IoZSBpbiBqKWZvcihjPTAsZD1qW2VdLmxlbmd0aDtjPGQ7YysrKXIuZXZlbnQuYWRkKGIsZSxqW2VdW2NdKX1XLmhhc0RhdGEoYSkmJihoPVcuYWNjZXNzKGEpLGk9ci5leHRlbmQoe30saCksVy5zZXQoYixpKSl9fWZ1bmN0aW9uIEhhKGEsYil7dmFyIGM9Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wiaW5wdXRcIj09PWMmJmlhLnRlc3QoYS50eXBlKT9iLmNoZWNrZWQ9YS5jaGVja2VkOlwiaW5wdXRcIiE9PWMmJlwidGV4dGFyZWFcIiE9PWN8fChiLmRlZmF1bHRWYWx1ZT1hLmRlZmF1bHRWYWx1ZSl9ZnVuY3Rpb24gSWEoYSxiLGMsZCl7Yj1nLmFwcGx5KFtdLGIpO3ZhciBlLGYsaCxpLGosayxsPTAsbT1hLmxlbmd0aCxuPW0tMSxxPWJbMF0scz1yLmlzRnVuY3Rpb24ocSk7aWYoc3x8bT4xJiZcInN0cmluZ1wiPT10eXBlb2YgcSYmIW8uY2hlY2tDbG9uZSYmQWEudGVzdChxKSlyZXR1cm4gYS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBmPWEuZXEoZSk7cyYmKGJbMF09cS5jYWxsKHRoaXMsZSxmLmh0bWwoKSkpLElhKGYsYixjLGQpfSk7aWYobSYmKGU9cGEoYixhWzBdLm93bmVyRG9jdW1lbnQsITEsYSxkKSxmPWUuZmlyc3RDaGlsZCwxPT09ZS5jaGlsZE5vZGVzLmxlbmd0aCYmKGU9ZiksZnx8ZCkpe2ZvcihoPXIubWFwKG1hKGUsXCJzY3JpcHRcIiksRWEpLGk9aC5sZW5ndGg7bDxtO2wrKylqPWUsbCE9PW4mJihqPXIuY2xvbmUoaiwhMCwhMCksaSYmci5tZXJnZShoLG1hKGosXCJzY3JpcHRcIikpKSxjLmNhbGwoYVtsXSxqLGwpO2lmKGkpZm9yKGs9aFtoLmxlbmd0aC0xXS5vd25lckRvY3VtZW50LHIubWFwKGgsRmEpLGw9MDtsPGk7bCsrKWo9aFtsXSxrYS50ZXN0KGoudHlwZXx8XCJcIikmJiFWLmFjY2VzcyhqLFwiZ2xvYmFsRXZhbFwiKSYmci5jb250YWlucyhrLGopJiYoai5zcmM/ci5fZXZhbFVybCYmci5fZXZhbFVybChqLnNyYyk6cChqLnRleHRDb250ZW50LnJlcGxhY2UoQ2EsXCJcIiksaykpfXJldHVybiBhfWZ1bmN0aW9uIEphKGEsYixjKXtmb3IodmFyIGQsZT1iP3IuZmlsdGVyKGIsYSk6YSxmPTA7bnVsbCE9KGQ9ZVtmXSk7ZisrKWN8fDEhPT1kLm5vZGVUeXBlfHxyLmNsZWFuRGF0YShtYShkKSksZC5wYXJlbnROb2RlJiYoYyYmci5jb250YWlucyhkLm93bmVyRG9jdW1lbnQsZCkmJm5hKG1hKGQsXCJzY3JpcHRcIikpLGQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChkKSk7cmV0dXJuIGF9ci5leHRlbmQoe2h0bWxQcmVmaWx0ZXI6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZSh5YSxcIjwkMT48LyQyPlwiKX0sY2xvbmU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnLGg9YS5jbG9uZU5vZGUoITApLGk9ci5jb250YWlucyhhLm93bmVyRG9jdW1lbnQsYSk7aWYoIShvLm5vQ2xvbmVDaGVja2VkfHwxIT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlfHxyLmlzWE1MRG9jKGEpKSlmb3IoZz1tYShoKSxmPW1hKGEpLGQ9MCxlPWYubGVuZ3RoO2Q8ZTtkKyspSGEoZltkXSxnW2RdKTtpZihiKWlmKGMpZm9yKGY9Znx8bWEoYSksZz1nfHxtYShoKSxkPTAsZT1mLmxlbmd0aDtkPGU7ZCsrKUdhKGZbZF0sZ1tkXSk7ZWxzZSBHYShhLGgpO3JldHVybiBnPW1hKGgsXCJzY3JpcHRcIiksZy5sZW5ndGg+MCYmbmEoZywhaSYmbWEoYSxcInNjcmlwdFwiKSksaH0sY2xlYW5EYXRhOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjLGQsZT1yLmV2ZW50LnNwZWNpYWwsZj0wO3ZvaWQgMCE9PShjPWFbZl0pO2YrKylpZihUKGMpKXtpZihiPWNbVi5leHBhbmRvXSl7aWYoYi5ldmVudHMpZm9yKGQgaW4gYi5ldmVudHMpZVtkXT9yLmV2ZW50LnJlbW92ZShjLGQpOnIucmVtb3ZlRXZlbnQoYyxkLGIuaGFuZGxlKTtjW1YuZXhwYW5kb109dm9pZCAwfWNbVy5leHBhbmRvXSYmKGNbVy5leHBhbmRvXT12b2lkIDApfX19KSxyLmZuLmV4dGVuZCh7ZGV0YWNoOmZ1bmN0aW9uKGEpe3JldHVybiBKYSh0aGlzLGEsITApfSxyZW1vdmU6ZnVuY3Rpb24oYSl7cmV0dXJuIEphKHRoaXMsYSl9LHRleHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFModGhpcyxmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YT9yLnRleHQodGhpcyk6dGhpcy5lbXB0eSgpLmVhY2goZnVuY3Rpb24oKXsxIT09dGhpcy5ub2RlVHlwZSYmMTEhPT10aGlzLm5vZGVUeXBlJiY5IT09dGhpcy5ub2RlVHlwZXx8KHRoaXMudGV4dENvbnRlbnQ9YSl9KX0sbnVsbCxhLGFyZ3VtZW50cy5sZW5ndGgpfSxhcHBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gSWEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYSl7aWYoMT09PXRoaXMubm9kZVR5cGV8fDExPT09dGhpcy5ub2RlVHlwZXx8OT09PXRoaXMubm9kZVR5cGUpe3ZhciBiPURhKHRoaXMsYSk7Yi5hcHBlbmRDaGlsZChhKX19KX0scHJlcGVuZDpmdW5jdGlvbigpe3JldHVybiBJYSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihhKXtpZigxPT09dGhpcy5ub2RlVHlwZXx8MTE9PT10aGlzLm5vZGVUeXBlfHw5PT09dGhpcy5ub2RlVHlwZSl7dmFyIGI9RGEodGhpcyxhKTtiLmluc2VydEJlZm9yZShhLGIuZmlyc3RDaGlsZCl9fSl9LGJlZm9yZTpmdW5jdGlvbigpe3JldHVybiBJYSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihhKXt0aGlzLnBhcmVudE5vZGUmJnRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSx0aGlzKX0pfSxhZnRlcjpmdW5jdGlvbigpe3JldHVybiBJYSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihhKXt0aGlzLnBhcmVudE5vZGUmJnRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSx0aGlzLm5leHRTaWJsaW5nKX0pfSxlbXB0eTpmdW5jdGlvbigpe2Zvcih2YXIgYSxiPTA7bnVsbCE9KGE9dGhpc1tiXSk7YisrKTE9PT1hLm5vZGVUeXBlJiYoci5jbGVhbkRhdGEobWEoYSwhMSkpLGEudGV4dENvbnRlbnQ9XCJcIik7cmV0dXJuIHRoaXN9LGNsb25lOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9bnVsbCE9YSYmYSxiPW51bGw9PWI/YTpiLHRoaXMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIHIuY2xvbmUodGhpcyxhLGIpfSl9LGh0bWw6ZnVuY3Rpb24oYSl7cmV0dXJuIFModGhpcyxmdW5jdGlvbihhKXt2YXIgYj10aGlzWzBdfHx7fSxjPTAsZD10aGlzLmxlbmd0aDtpZih2b2lkIDA9PT1hJiYxPT09Yi5ub2RlVHlwZSlyZXR1cm4gYi5pbm5lckhUTUw7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGEmJiF6YS50ZXN0KGEpJiYhbGFbKGphLmV4ZWMoYSl8fFtcIlwiLFwiXCJdKVsxXS50b0xvd2VyQ2FzZSgpXSl7YT1yLmh0bWxQcmVmaWx0ZXIoYSk7dHJ5e2Zvcig7YzxkO2MrKyliPXRoaXNbY118fHt9LDE9PT1iLm5vZGVUeXBlJiYoci5jbGVhbkRhdGEobWEoYiwhMSkpLGIuaW5uZXJIVE1MPWEpO2I9MH1jYXRjaChlKXt9fWImJnRoaXMuZW1wdHkoKS5hcHBlbmQoYSl9LG51bGwsYSxhcmd1bWVudHMubGVuZ3RoKX0scmVwbGFjZVdpdGg6ZnVuY3Rpb24oKXt2YXIgYT1bXTtyZXR1cm4gSWEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYil7dmFyIGM9dGhpcy5wYXJlbnROb2RlO3IuaW5BcnJheSh0aGlzLGEpPDAmJihyLmNsZWFuRGF0YShtYSh0aGlzKSksYyYmYy5yZXBsYWNlQ2hpbGQoYix0aGlzKSl9LGEpfX0pLHIuZWFjaCh7YXBwZW5kVG86XCJhcHBlbmRcIixwcmVwZW5kVG86XCJwcmVwZW5kXCIsaW5zZXJ0QmVmb3JlOlwiYmVmb3JlXCIsaW5zZXJ0QWZ0ZXI6XCJhZnRlclwiLHJlcGxhY2VBbGw6XCJyZXBsYWNlV2l0aFwifSxmdW5jdGlvbihhLGIpe3IuZm5bYV09ZnVuY3Rpb24oYSl7Zm9yKHZhciBjLGQ9W10sZT1yKGEpLGY9ZS5sZW5ndGgtMSxnPTA7Zzw9ZjtnKyspYz1nPT09Zj90aGlzOnRoaXMuY2xvbmUoITApLHIoZVtnXSlbYl0oYyksaC5hcHBseShkLGMuZ2V0KCkpO3JldHVybiB0aGlzLnB1c2hTdGFjayhkKX19KTt2YXIgS2E9L15tYXJnaW4vLExhPW5ldyBSZWdFeHAoXCJeKFwiK18rXCIpKD8hcHgpW2EteiVdKyRcIixcImlcIiksTWE9ZnVuY3Rpb24oYil7dmFyIGM9Yi5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O3JldHVybiBjJiZjLm9wZW5lcnx8KGM9YSksYy5nZXRDb21wdXRlZFN0eWxlKGIpfTshZnVuY3Rpb24oKXtmdW5jdGlvbiBiKCl7aWYoaSl7aS5zdHlsZS5jc3NUZXh0PVwiYm94LXNpemluZzpib3JkZXItYm94O3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7bWFyZ2luOmF1dG87Ym9yZGVyOjFweDtwYWRkaW5nOjFweDt0b3A6MSU7d2lkdGg6NTAlXCIsaS5pbm5lckhUTUw9XCJcIixxYS5hcHBlbmRDaGlsZChoKTt2YXIgYj1hLmdldENvbXB1dGVkU3R5bGUoaSk7Yz1cIjElXCIhPT1iLnRvcCxnPVwiMnB4XCI9PT1iLm1hcmdpbkxlZnQsZT1cIjRweFwiPT09Yi53aWR0aCxpLnN0eWxlLm1hcmdpblJpZ2h0PVwiNTAlXCIsZj1cIjRweFwiPT09Yi5tYXJnaW5SaWdodCxxYS5yZW1vdmVDaGlsZChoKSxpPW51bGx9fXZhciBjLGUsZixnLGg9ZC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGk9ZC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2kuc3R5bGUmJihpLnN0eWxlLmJhY2tncm91bmRDbGlwPVwiY29udGVudC1ib3hcIixpLmNsb25lTm9kZSghMCkuc3R5bGUuYmFja2dyb3VuZENsaXA9XCJcIixvLmNsZWFyQ2xvbmVTdHlsZT1cImNvbnRlbnQtYm94XCI9PT1pLnN0eWxlLmJhY2tncm91bmRDbGlwLGguc3R5bGUuY3NzVGV4dD1cImJvcmRlcjowO3dpZHRoOjhweDtoZWlnaHQ6MDt0b3A6MDtsZWZ0Oi05OTk5cHg7cGFkZGluZzowO21hcmdpbi10b3A6MXB4O3Bvc2l0aW9uOmFic29sdXRlXCIsaC5hcHBlbmRDaGlsZChpKSxyLmV4dGVuZChvLHtwaXhlbFBvc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIGIoKSxjfSxib3hTaXppbmdSZWxpYWJsZTpmdW5jdGlvbigpe3JldHVybiBiKCksZX0scGl4ZWxNYXJnaW5SaWdodDpmdW5jdGlvbigpe3JldHVybiBiKCksZn0scmVsaWFibGVNYXJnaW5MZWZ0OmZ1bmN0aW9uKCl7cmV0dXJuIGIoKSxnfX0pKX0oKTtmdW5jdGlvbiBOYShhLGIsYyl7dmFyIGQsZSxmLGcsaD1hLnN0eWxlO3JldHVybiBjPWN8fE1hKGEpLGMmJihnPWMuZ2V0UHJvcGVydHlWYWx1ZShiKXx8Y1tiXSxcIlwiIT09Z3x8ci5jb250YWlucyhhLm93bmVyRG9jdW1lbnQsYSl8fChnPXIuc3R5bGUoYSxiKSksIW8ucGl4ZWxNYXJnaW5SaWdodCgpJiZMYS50ZXN0KGcpJiZLYS50ZXN0KGIpJiYoZD1oLndpZHRoLGU9aC5taW5XaWR0aCxmPWgubWF4V2lkdGgsaC5taW5XaWR0aD1oLm1heFdpZHRoPWgud2lkdGg9ZyxnPWMud2lkdGgsaC53aWR0aD1kLGgubWluV2lkdGg9ZSxoLm1heFdpZHRoPWYpKSx2b2lkIDAhPT1nP2crXCJcIjpnfWZ1bmN0aW9uIE9hKGEsYil7cmV0dXJue2dldDpmdW5jdGlvbigpe3JldHVybiBhKCk/dm9pZCBkZWxldGUgdGhpcy5nZXQ6KHRoaXMuZ2V0PWIpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19fXZhciBQYT0vXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8sUWE9e3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix2aXNpYmlsaXR5OlwiaGlkZGVuXCIsZGlzcGxheTpcImJsb2NrXCJ9LFJhPXtsZXR0ZXJTcGFjaW5nOlwiMFwiLGZvbnRXZWlnaHQ6XCI0MDBcIn0sU2E9W1wiV2Via2l0XCIsXCJNb3pcIixcIm1zXCJdLFRhPWQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZTtmdW5jdGlvbiBVYShhKXtpZihhIGluIFRhKXJldHVybiBhO3ZhciBiPWFbMF0udG9VcHBlckNhc2UoKSthLnNsaWNlKDEpLGM9U2EubGVuZ3RoO3doaWxlKGMtLSlpZihhPVNhW2NdK2IsYSBpbiBUYSlyZXR1cm4gYX1mdW5jdGlvbiBWYShhLGIsYyl7dmFyIGQ9YWEuZXhlYyhiKTtyZXR1cm4gZD9NYXRoLm1heCgwLGRbMl0tKGN8fDApKSsoZFszXXx8XCJweFwiKTpifWZ1bmN0aW9uIFdhKGEsYixjLGQsZSl7dmFyIGYsZz0wO2ZvcihmPWM9PT0oZD9cImJvcmRlclwiOlwiY29udGVudFwiKT80Olwid2lkdGhcIj09PWI/MTowO2Y8NDtmKz0yKVwibWFyZ2luXCI9PT1jJiYoZys9ci5jc3MoYSxjK2JhW2ZdLCEwLGUpKSxkPyhcImNvbnRlbnRcIj09PWMmJihnLT1yLmNzcyhhLFwicGFkZGluZ1wiK2JhW2ZdLCEwLGUpKSxcIm1hcmdpblwiIT09YyYmKGctPXIuY3NzKGEsXCJib3JkZXJcIitiYVtmXStcIldpZHRoXCIsITAsZSkpKTooZys9ci5jc3MoYSxcInBhZGRpbmdcIitiYVtmXSwhMCxlKSxcInBhZGRpbmdcIiE9PWMmJihnKz1yLmNzcyhhLFwiYm9yZGVyXCIrYmFbZl0rXCJXaWR0aFwiLCEwLGUpKSk7cmV0dXJuIGd9ZnVuY3Rpb24gWGEoYSxiLGMpe3ZhciBkLGU9ITAsZj1NYShhKSxnPVwiYm9yZGVyLWJveFwiPT09ci5jc3MoYSxcImJveFNpemluZ1wiLCExLGYpO2lmKGEuZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGgmJihkPWEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClbYl0pLGQ8PTB8fG51bGw9PWQpe2lmKGQ9TmEoYSxiLGYpLChkPDB8fG51bGw9PWQpJiYoZD1hLnN0eWxlW2JdKSxMYS50ZXN0KGQpKXJldHVybiBkO2U9ZyYmKG8uYm94U2l6aW5nUmVsaWFibGUoKXx8ZD09PWEuc3R5bGVbYl0pLGQ9cGFyc2VGbG9hdChkKXx8MH1yZXR1cm4gZCtXYShhLGIsY3x8KGc/XCJib3JkZXJcIjpcImNvbnRlbnRcIiksZSxmKStcInB4XCJ9ci5leHRlbmQoe2Nzc0hvb2tzOntvcGFjaXR5OntnZXQ6ZnVuY3Rpb24oYSxiKXtpZihiKXt2YXIgYz1OYShhLFwib3BhY2l0eVwiKTtyZXR1cm5cIlwiPT09Yz9cIjFcIjpjfX19fSxjc3NOdW1iZXI6e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGNvbHVtbkNvdW50OiEwLGZpbGxPcGFjaXR5OiEwLGZsZXhHcm93OiEwLGZsZXhTaHJpbms6ITAsZm9udFdlaWdodDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITB9LGNzc1Byb3BzOntcImZsb2F0XCI6XCJjc3NGbG9hdFwifSxzdHlsZTpmdW5jdGlvbihhLGIsYyxkKXtpZihhJiYzIT09YS5ub2RlVHlwZSYmOCE9PWEubm9kZVR5cGUmJmEuc3R5bGUpe3ZhciBlLGYsZyxoPXIuY2FtZWxDYXNlKGIpLGk9YS5zdHlsZTtyZXR1cm4gYj1yLmNzc1Byb3BzW2hdfHwoci5jc3NQcm9wc1toXT1VYShoKXx8aCksZz1yLmNzc0hvb2tzW2JdfHxyLmNzc0hvb2tzW2hdLHZvaWQgMD09PWM/ZyYmXCJnZXRcImluIGcmJnZvaWQgMCE9PShlPWcuZ2V0KGEsITEsZCkpP2U6aVtiXTooZj10eXBlb2YgYyxcInN0cmluZ1wiPT09ZiYmKGU9YWEuZXhlYyhjKSkmJmVbMV0mJihjPWVhKGEsYixlKSxmPVwibnVtYmVyXCIpLG51bGwhPWMmJmM9PT1jJiYoXCJudW1iZXJcIj09PWYmJihjKz1lJiZlWzNdfHwoci5jc3NOdW1iZXJbaF0/XCJcIjpcInB4XCIpKSxvLmNsZWFyQ2xvbmVTdHlsZXx8XCJcIiE9PWN8fDAhPT1iLmluZGV4T2YoXCJiYWNrZ3JvdW5kXCIpfHwoaVtiXT1cImluaGVyaXRcIiksZyYmXCJzZXRcImluIGcmJnZvaWQgMD09PShjPWcuc2V0KGEsYyxkKSl8fChpW2JdPWMpKSx2b2lkIDApfX0sY3NzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlLGYsZyxoPXIuY2FtZWxDYXNlKGIpO3JldHVybiBiPXIuY3NzUHJvcHNbaF18fChyLmNzc1Byb3BzW2hdPVVhKGgpfHxoKSxnPXIuY3NzSG9va3NbYl18fHIuY3NzSG9va3NbaF0sZyYmXCJnZXRcImluIGcmJihlPWcuZ2V0KGEsITAsYykpLHZvaWQgMD09PWUmJihlPU5hKGEsYixkKSksXCJub3JtYWxcIj09PWUmJmIgaW4gUmEmJihlPVJhW2JdKSxcIlwiPT09Y3x8Yz8oZj1wYXJzZUZsb2F0KGUpLGM9PT0hMHx8aXNGaW5pdGUoZik/Znx8MDplKTplfX0pLHIuZWFjaChbXCJoZWlnaHRcIixcIndpZHRoXCJdLGZ1bmN0aW9uKGEsYil7ci5jc3NIb29rc1tiXT17Z2V0OmZ1bmN0aW9uKGEsYyxkKXtpZihjKXJldHVybiFQYS50ZXN0KHIuY3NzKGEsXCJkaXNwbGF5XCIpKXx8YS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCYmYS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aD9YYShhLGIsZCk6ZGEoYSxRYSxmdW5jdGlvbigpe3JldHVybiBYYShhLGIsZCl9KX0sc2V0OmZ1bmN0aW9uKGEsYyxkKXt2YXIgZSxmPWQmJk1hKGEpLGc9ZCYmV2EoYSxiLGQsXCJib3JkZXItYm94XCI9PT1yLmNzcyhhLFwiYm94U2l6aW5nXCIsITEsZiksZik7cmV0dXJuIGcmJihlPWFhLmV4ZWMoYykpJiZcInB4XCIhPT0oZVszXXx8XCJweFwiKSYmKGEuc3R5bGVbYl09YyxjPXIuY3NzKGEsYikpLFZhKGEsYyxnKX19fSksci5jc3NIb29rcy5tYXJnaW5MZWZ0PU9hKG8ucmVsaWFibGVNYXJnaW5MZWZ0LGZ1bmN0aW9uKGEsYil7aWYoYilyZXR1cm4ocGFyc2VGbG9hdChOYShhLFwibWFyZ2luTGVmdFwiKSl8fGEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdC1kYShhLHttYXJnaW5MZWZ0OjB9LGZ1bmN0aW9uKCl7cmV0dXJuIGEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdH0pKStcInB4XCJ9KSxyLmVhY2goe21hcmdpbjpcIlwiLHBhZGRpbmc6XCJcIixib3JkZXI6XCJXaWR0aFwifSxmdW5jdGlvbihhLGIpe3IuY3NzSG9va3NbYStiXT17ZXhwYW5kOmZ1bmN0aW9uKGMpe2Zvcih2YXIgZD0wLGU9e30sZj1cInN0cmluZ1wiPT10eXBlb2YgYz9jLnNwbGl0KFwiIFwiKTpbY107ZDw0O2QrKyllW2ErYmFbZF0rYl09ZltkXXx8ZltkLTJdfHxmWzBdO3JldHVybiBlfX0sS2EudGVzdChhKXx8KHIuY3NzSG9va3NbYStiXS5zZXQ9VmEpfSksci5mbi5leHRlbmQoe2NzczpmdW5jdGlvbihhLGIpe3JldHVybiBTKHRoaXMsZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj17fSxnPTA7aWYoci5pc0FycmF5KGIpKXtmb3IoZD1NYShhKSxlPWIubGVuZ3RoO2c8ZTtnKyspZltiW2ddXT1yLmNzcyhhLGJbZ10sITEsZCk7cmV0dXJuIGZ9cmV0dXJuIHZvaWQgMCE9PWM/ci5zdHlsZShhLGIsYyk6ci5jc3MoYSxiKX0sYSxiLGFyZ3VtZW50cy5sZW5ndGg+MSl9fSksci5mbi5kZWxheT1mdW5jdGlvbihiLGMpe3JldHVybiBiPXIuZng/ci5meC5zcGVlZHNbYl18fGI6YixjPWN8fFwiZnhcIix0aGlzLnF1ZXVlKGMsZnVuY3Rpb24oYyxkKXt2YXIgZT1hLnNldFRpbWVvdXQoYyxiKTtkLnN0b3A9ZnVuY3Rpb24oKXthLmNsZWFyVGltZW91dChlKX19KX0sZnVuY3Rpb24oKXt2YXIgYT1kLmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKSxiPWQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKSxjPWIuYXBwZW5kQ2hpbGQoZC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpKTthLnR5cGU9XCJjaGVja2JveFwiLG8uY2hlY2tPbj1cIlwiIT09YS52YWx1ZSxvLm9wdFNlbGVjdGVkPWMuc2VsZWN0ZWQsYT1kLmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKSxhLnZhbHVlPVwidFwiLGEudHlwZT1cInJhZGlvXCIsby5yYWRpb1ZhbHVlPVwidFwiPT09YS52YWx1ZX0oKTt2YXIgWWEsWmE9ci5leHByLmF0dHJIYW5kbGU7ci5mbi5leHRlbmQoe2F0dHI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUyh0aGlzLHIuYXR0cixhLGIsYXJndW1lbnRzLmxlbmd0aD4xKX0scmVtb3ZlQXR0cjpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ci5yZW1vdmVBdHRyKHRoaXMsYSl9KX19KSxyLmV4dGVuZCh7YXR0cjpmdW5jdGlvbihhLGIsYyl7dmFyIGQsZSxmPWEubm9kZVR5cGU7aWYoMyE9PWYmJjghPT1mJiYyIT09ZilyZXR1cm5cInVuZGVmaW5lZFwiPT10eXBlb2YgYS5nZXRBdHRyaWJ1dGU/ci5wcm9wKGEsYixjKTooMT09PWYmJnIuaXNYTUxEb2MoYSl8fChlPXIuYXR0ckhvb2tzW2IudG9Mb3dlckNhc2UoKV18fChyLmV4cHIubWF0Y2guYm9vbC50ZXN0KGIpP1lhOnZvaWQgMCkpLHZvaWQgMCE9PWM/bnVsbD09PWM/dm9pZCByLnJlbW92ZUF0dHIoYSxiKTplJiZcInNldFwiaW4gZSYmdm9pZCAwIT09KGQ9ZS5zZXQoYSxjLGIpKT9kOihhLnNldEF0dHJpYnV0ZShiLGMrXCJcIiksYyk6ZSYmXCJnZXRcImluIGUmJm51bGwhPT0oZD1lLmdldChhLGIpKT9kOihkPXIuZmluZC5hdHRyKGEsYiksbnVsbD09ZD92b2lkIDA6ZCkpfSxhdHRySG9va3M6e3R5cGU6e3NldDpmdW5jdGlvbihhLGIpe2lmKCFvLnJhZGlvVmFsdWUmJlwicmFkaW9cIj09PWImJnIubm9kZU5hbWUoYSxcImlucHV0XCIpKXt2YXIgYz1hLnZhbHVlO3JldHVybiBhLnNldEF0dHJpYnV0ZShcInR5cGVcIixiKSxjJiYoYS52YWx1ZT1jKSxifX19fSxyZW1vdmVBdHRyOmZ1bmN0aW9uKGEsYil7dmFyIGMsZD0wLGU9YiYmYi5tYXRjaChLKTtpZihlJiYxPT09YS5ub2RlVHlwZSl3aGlsZShjPWVbZCsrXSlhLnJlbW92ZUF0dHJpYnV0ZShjKX19KSxZYT17c2V0OmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYj09PSExP3IucmVtb3ZlQXR0cihhLGMpOmEuc2V0QXR0cmlidXRlKGMsYyksY319LHIuZWFjaChyLmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goL1xcdysvZyksZnVuY3Rpb24oYSxiKXt2YXIgYz1aYVtiXXx8ci5maW5kLmF0dHI7WmFbYl09ZnVuY3Rpb24oYSxiLGQpe3ZhciBlLGYsZz1iLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGR8fChmPVphW2ddLFphW2ddPWUsZT1udWxsIT1jKGEsYixkKT9nOm51bGwsWmFbZ109ZiksZX19KTt2YXIgJGE9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxfYT0vXig/OmF8YXJlYSkkL2k7ci5mbi5leHRlbmQoe3Byb3A6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUyh0aGlzLHIucHJvcCxhLGIsYXJndW1lbnRzLmxlbmd0aD4xKX0scmVtb3ZlUHJvcDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXNbci5wcm9wRml4W2FdfHxhXX0pfX0pLHIuZXh0ZW5kKHtwcm9wOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGY9YS5ub2RlVHlwZTtpZigzIT09ZiYmOCE9PWYmJjIhPT1mKXJldHVybiAxPT09ZiYmci5pc1hNTERvYyhhKXx8KGI9ci5wcm9wRml4W2JdfHxiLGU9ci5wcm9wSG9va3NbYl0pLHZvaWQgMCE9PWM/ZSYmXCJzZXRcImluIGUmJnZvaWQgMCE9PShkPWUuc2V0KGEsYyxiKSk/ZDphW2JdPWM6ZSYmXCJnZXRcImluIGUmJm51bGwhPT0oZD1lLmdldChhLGIpKT9kOmFbYl19LHByb3BIb29rczp7dGFiSW5kZXg6e2dldDpmdW5jdGlvbihhKXt2YXIgYj1yLmZpbmQuYXR0cihhLFwidGFiaW5kZXhcIik7cmV0dXJuIGI/cGFyc2VJbnQoYiwxMCk6JGEudGVzdChhLm5vZGVOYW1lKXx8X2EudGVzdChhLm5vZGVOYW1lKSYmYS5ocmVmPzA6LTF9fX0scHJvcEZpeDp7XCJmb3JcIjpcImh0bWxGb3JcIixcImNsYXNzXCI6XCJjbGFzc05hbWVcIn19KSxvLm9wdFNlbGVjdGVkfHwoci5wcm9wSG9va3Muc2VsZWN0ZWQ9e2dldDpmdW5jdGlvbihhKXt2YXIgYj1hLnBhcmVudE5vZGU7cmV0dXJuIGImJmIucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXgsbnVsbH0sc2V0OmZ1bmN0aW9uKGEpe3ZhciBiPWEucGFyZW50Tm9kZTtiJiYoYi5zZWxlY3RlZEluZGV4LGIucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXgpfX0pLHIuZWFjaChbXCJ0YWJJbmRleFwiLFwicmVhZE9ubHlcIixcIm1heExlbmd0aFwiLFwiY2VsbFNwYWNpbmdcIixcImNlbGxQYWRkaW5nXCIsXCJyb3dTcGFuXCIsXCJjb2xTcGFuXCIsXCJ1c2VNYXBcIixcImZyYW1lQm9yZGVyXCIsXCJjb250ZW50RWRpdGFibGVcIl0sZnVuY3Rpb24oKXtyLnByb3BGaXhbdGhpcy50b0xvd2VyQ2FzZSgpXT10aGlzfSk7ZnVuY3Rpb24gYWIoYSl7dmFyIGI9YS5tYXRjaChLKXx8W107cmV0dXJuIGIuam9pbihcIiBcIil9ZnVuY3Rpb24gYmIoYSl7cmV0dXJuIGEuZ2V0QXR0cmlidXRlJiZhLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwifXIuZm4uZXh0ZW5kKHthZGRDbGFzczpmdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpPTA7aWYoci5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7cih0aGlzKS5hZGRDbGFzcyhhLmNhbGwodGhpcyxiLGJiKHRoaXMpKSl9KTtpZihcInN0cmluZ1wiPT10eXBlb2YgYSYmYSl7Yj1hLm1hdGNoKEspfHxbXTt3aGlsZShjPXRoaXNbaSsrXSlpZihlPWJiKGMpLGQ9MT09PWMubm9kZVR5cGUmJlwiIFwiK2FiKGUpK1wiIFwiKXtnPTA7d2hpbGUoZj1iW2crK10pZC5pbmRleE9mKFwiIFwiK2YrXCIgXCIpPDAmJihkKz1mK1wiIFwiKTtoPWFiKGQpLGUhPT1oJiZjLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsaCl9fXJldHVybiB0aGlzfSxyZW1vdmVDbGFzczpmdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpPTA7aWYoci5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7cih0aGlzKS5yZW1vdmVDbGFzcyhhLmNhbGwodGhpcyxiLGJiKHRoaXMpKSl9KTtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5hdHRyKFwiY2xhc3NcIixcIlwiKTtpZihcInN0cmluZ1wiPT10eXBlb2YgYSYmYSl7Yj1hLm1hdGNoKEspfHxbXTt3aGlsZShjPXRoaXNbaSsrXSlpZihlPWJiKGMpLGQ9MT09PWMubm9kZVR5cGUmJlwiIFwiK2FiKGUpK1wiIFwiKXtnPTA7d2hpbGUoZj1iW2crK10pd2hpbGUoZC5pbmRleE9mKFwiIFwiK2YrXCIgXCIpPi0xKWQ9ZC5yZXBsYWNlKFwiIFwiK2YrXCIgXCIsXCIgXCIpO2g9YWIoZCksZSE9PWgmJmMuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixoKX19cmV0dXJuIHRoaXN9LHRvZ2dsZUNsYXNzOmZ1bmN0aW9uKGEsYil7dmFyIGM9dHlwZW9mIGE7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiBiJiZcInN0cmluZ1wiPT09Yz9iP3RoaXMuYWRkQ2xhc3MoYSk6dGhpcy5yZW1vdmVDbGFzcyhhKTpyLmlzRnVuY3Rpb24oYSk/dGhpcy5lYWNoKGZ1bmN0aW9uKGMpe3IodGhpcykudG9nZ2xlQ2xhc3MoYS5jYWxsKHRoaXMsYyxiYih0aGlzKSxiKSxiKX0pOnRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBiLGQsZSxmO2lmKFwic3RyaW5nXCI9PT1jKXtkPTAsZT1yKHRoaXMpLGY9YS5tYXRjaChLKXx8W107d2hpbGUoYj1mW2QrK10pZS5oYXNDbGFzcyhiKT9lLnJlbW92ZUNsYXNzKGIpOmUuYWRkQ2xhc3MoYil9ZWxzZSB2b2lkIDAhPT1hJiZcImJvb2xlYW5cIiE9PWN8fChiPWJiKHRoaXMpLGImJlYuc2V0KHRoaXMsXCJfX2NsYXNzTmFtZV9fXCIsYiksdGhpcy5zZXRBdHRyaWJ1dGUmJnRoaXMuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixifHxhPT09ITE/XCJcIjpWLmdldCh0aGlzLFwiX19jbGFzc05hbWVfX1wiKXx8XCJcIikpfSl9LGhhc0NsYXNzOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZD0wO2I9XCIgXCIrYStcIiBcIjt3aGlsZShjPXRoaXNbZCsrXSlpZigxPT09Yy5ub2RlVHlwZSYmKFwiIFwiK2FiKGJiKGMpKStcIiBcIikuaW5kZXhPZihiKT4tMSlyZXR1cm4hMDtyZXR1cm4hMX19KTt2YXIgY2I9L1xcci9nO3IuZm4uZXh0ZW5kKHt2YWw6ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU9dGhpc1swXTt7aWYoYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZD1yLmlzRnVuY3Rpb24oYSksdGhpcy5lYWNoKGZ1bmN0aW9uKGMpe3ZhciBlOzE9PT10aGlzLm5vZGVUeXBlJiYoZT1kP2EuY2FsbCh0aGlzLGMscih0aGlzKS52YWwoKSk6YSxudWxsPT1lP2U9XCJcIjpcIm51bWJlclwiPT10eXBlb2YgZT9lKz1cIlwiOnIuaXNBcnJheShlKSYmKGU9ci5tYXAoZSxmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT9cIlwiOmErXCJcIn0pKSxiPXIudmFsSG9va3NbdGhpcy50eXBlXXx8ci52YWxIb29rc1t0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCldLGImJlwic2V0XCJpbiBiJiZ2b2lkIDAhPT1iLnNldCh0aGlzLGUsXCJ2YWx1ZVwiKXx8KHRoaXMudmFsdWU9ZSkpfSk7aWYoZSlyZXR1cm4gYj1yLnZhbEhvb2tzW2UudHlwZV18fHIudmFsSG9va3NbZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpXSxiJiZcImdldFwiaW4gYiYmdm9pZCAwIT09KGM9Yi5nZXQoZSxcInZhbHVlXCIpKT9jOihjPWUudmFsdWUsXCJzdHJpbmdcIj09dHlwZW9mIGM/Yy5yZXBsYWNlKGNiLFwiXCIpOm51bGw9PWM/XCJcIjpjKX19fSksci5leHRlbmQoe3ZhbEhvb2tzOntvcHRpb246e2dldDpmdW5jdGlvbihhKXt2YXIgYj1yLmZpbmQuYXR0cihhLFwidmFsdWVcIik7cmV0dXJuIG51bGwhPWI/YjphYihyLnRleHQoYSkpfX0sc2VsZWN0OntnZXQ6ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU9YS5vcHRpb25zLGY9YS5zZWxlY3RlZEluZGV4LGc9XCJzZWxlY3Qtb25lXCI9PT1hLnR5cGUsaD1nP251bGw6W10saT1nP2YrMTplLmxlbmd0aDtmb3IoZD1mPDA/aTpnP2Y6MDtkPGk7ZCsrKWlmKGM9ZVtkXSwoYy5zZWxlY3RlZHx8ZD09PWYpJiYhYy5kaXNhYmxlZCYmKCFjLnBhcmVudE5vZGUuZGlzYWJsZWR8fCFyLm5vZGVOYW1lKGMucGFyZW50Tm9kZSxcIm9wdGdyb3VwXCIpKSl7aWYoYj1yKGMpLnZhbCgpLGcpcmV0dXJuIGI7aC5wdXNoKGIpfXJldHVybiBofSxzZXQ6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGU9YS5vcHRpb25zLGY9ci5tYWtlQXJyYXkoYiksZz1lLmxlbmd0aDt3aGlsZShnLS0pZD1lW2ddLChkLnNlbGVjdGVkPXIuaW5BcnJheShyLnZhbEhvb2tzLm9wdGlvbi5nZXQoZCksZik+LTEpJiYoYz0hMCk7cmV0dXJuIGN8fChhLnNlbGVjdGVkSW5kZXg9LTEpLGZ9fX19KSxyLmVhY2goW1wicmFkaW9cIixcImNoZWNrYm94XCJdLGZ1bmN0aW9uKCl7ci52YWxIb29rc1t0aGlzXT17c2V0OmZ1bmN0aW9uKGEsYil7aWYoci5pc0FycmF5KGIpKXJldHVybiBhLmNoZWNrZWQ9ci5pbkFycmF5KHIoYSkudmFsKCksYik+LTF9fSxvLmNoZWNrT258fChyLnZhbEhvb2tzW3RoaXNdLmdldD1mdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09PWEuZ2V0QXR0cmlidXRlKFwidmFsdWVcIik/XCJvblwiOmEudmFsdWV9KX0pO3ZhciBkYj0vXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC87ci5leHRlbmQoci5ldmVudCx7dHJpZ2dlcjpmdW5jdGlvbihiLGMsZSxmKXt2YXIgZyxoLGksaixrLG0sbixvPVtlfHxkXSxwPWwuY2FsbChiLFwidHlwZVwiKT9iLnR5cGU6YixxPWwuY2FsbChiLFwibmFtZXNwYWNlXCIpP2IubmFtZXNwYWNlLnNwbGl0KFwiLlwiKTpbXTtpZihoPWk9ZT1lfHxkLDMhPT1lLm5vZGVUeXBlJiY4IT09ZS5ub2RlVHlwZSYmIWRiLnRlc3QocCtyLmV2ZW50LnRyaWdnZXJlZCkmJihwLmluZGV4T2YoXCIuXCIpPi0xJiYocT1wLnNwbGl0KFwiLlwiKSxwPXEuc2hpZnQoKSxxLnNvcnQoKSksaz1wLmluZGV4T2YoXCI6XCIpPDAmJlwib25cIitwLGI9YltyLmV4cGFuZG9dP2I6bmV3IHIuRXZlbnQocCxcIm9iamVjdFwiPT10eXBlb2YgYiYmYiksYi5pc1RyaWdnZXI9Zj8yOjMsYi5uYW1lc3BhY2U9cS5qb2luKFwiLlwiKSxiLnJuYW1lc3BhY2U9Yi5uYW1lc3BhY2U/bmV3IFJlZ0V4cChcIihefFxcXFwuKVwiK3Euam9pbihcIlxcXFwuKD86LipcXFxcLnwpXCIpK1wiKFxcXFwufCQpXCIpOm51bGwsYi5yZXN1bHQ9dm9pZCAwLGIudGFyZ2V0fHwoYi50YXJnZXQ9ZSksYz1udWxsPT1jP1tiXTpyLm1ha2VBcnJheShjLFtiXSksbj1yLmV2ZW50LnNwZWNpYWxbcF18fHt9LGZ8fCFuLnRyaWdnZXJ8fG4udHJpZ2dlci5hcHBseShlLGMpIT09ITEpKXtpZighZiYmIW4ubm9CdWJibGUmJiFyLmlzV2luZG93KGUpKXtmb3Ioaj1uLmRlbGVnYXRlVHlwZXx8cCxkYi50ZXN0KGorcCl8fChoPWgucGFyZW50Tm9kZSk7aDtoPWgucGFyZW50Tm9kZSlvLnB1c2goaCksaT1oO2k9PT0oZS5vd25lckRvY3VtZW50fHxkKSYmby5wdXNoKGkuZGVmYXVsdFZpZXd8fGkucGFyZW50V2luZG93fHxhKX1nPTA7d2hpbGUoKGg9b1tnKytdKSYmIWIuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSliLnR5cGU9Zz4xP2o6bi5iaW5kVHlwZXx8cCxtPShWLmdldChoLFwiZXZlbnRzXCIpfHx7fSlbYi50eXBlXSYmVi5nZXQoaCxcImhhbmRsZVwiKSxtJiZtLmFwcGx5KGgsYyksbT1rJiZoW2tdLG0mJm0uYXBwbHkmJlQoaCkmJihiLnJlc3VsdD1tLmFwcGx5KGgsYyksYi5yZXN1bHQ9PT0hMSYmYi5wcmV2ZW50RGVmYXVsdCgpKTtyZXR1cm4gYi50eXBlPXAsZnx8Yi5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8bi5fZGVmYXVsdCYmbi5fZGVmYXVsdC5hcHBseShvLnBvcCgpLGMpIT09ITF8fCFUKGUpfHxrJiZyLmlzRnVuY3Rpb24oZVtwXSkmJiFyLmlzV2luZG93KGUpJiYoaT1lW2tdLGkmJihlW2tdPW51bGwpLHIuZXZlbnQudHJpZ2dlcmVkPXAsZVtwXSgpLHIuZXZlbnQudHJpZ2dlcmVkPXZvaWQgMCxpJiYoZVtrXT1pKSksYi5yZXN1bHR9fSxzaW11bGF0ZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9ci5leHRlbmQobmV3IHIuRXZlbnQsYyx7dHlwZTphLGlzU2ltdWxhdGVkOiEwfSk7ci5ldmVudC50cmlnZ2VyKGQsbnVsbCxiKX19KSxyLmZuLmV4dGVuZCh7dHJpZ2dlcjpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtyLmV2ZW50LnRyaWdnZXIoYSxiLHRoaXMpfSl9LHRyaWdnZXJIYW5kbGVyOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpc1swXTtpZihjKXJldHVybiByLmV2ZW50LnRyaWdnZXIoYSxiLGMsITApfX0pLHIuZWFjaChcImJsdXIgZm9jdXMgZm9jdXNpbiBmb2N1c291dCByZXNpemUgc2Nyb2xsIGNsaWNrIGRibGNsaWNrIG1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIGNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgY29udGV4dG1lbnVcIi5zcGxpdChcIiBcIiksZnVuY3Rpb24oYSxiKXtyLmZuW2JdPWZ1bmN0aW9uKGEsYyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+MD90aGlzLm9uKGIsbnVsbCxhLGMpOnRoaXMudHJpZ2dlcihiKX19KSxyLmZuLmV4dGVuZCh7aG92ZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5tb3VzZWVudGVyKGEpLm1vdXNlbGVhdmUoYnx8YSl9fSksby5mb2N1c2luPVwib25mb2N1c2luXCJpbiBhLG8uZm9jdXNpbnx8ci5lYWNoKHtmb2N1czpcImZvY3VzaW5cIixibHVyOlwiZm9jdXNvdXRcIn0sZnVuY3Rpb24oYSxiKXt2YXIgYz1mdW5jdGlvbihhKXtyLmV2ZW50LnNpbXVsYXRlKGIsYS50YXJnZXQsci5ldmVudC5maXgoYSkpfTtyLmV2ZW50LnNwZWNpYWxbYl09e3NldHVwOmZ1bmN0aW9uKCl7dmFyIGQ9dGhpcy5vd25lckRvY3VtZW50fHx0aGlzLGU9Vi5hY2Nlc3MoZCxiKTtlfHxkLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKSxWLmFjY2VzcyhkLGIsKGV8fDApKzEpfSx0ZWFyZG93bjpmdW5jdGlvbigpe3ZhciBkPXRoaXMub3duZXJEb2N1bWVudHx8dGhpcyxlPVYuYWNjZXNzKGQsYiktMTtlP1YuYWNjZXNzKGQsYixlKTooZC5yZW1vdmVFdmVudExpc3RlbmVyKGEsYywhMCksVi5yZW1vdmUoZCxiKSl9fX0pO3ZhciBlYj0vXFxbXFxdJC8sZmI9L1xccj9cXG4vZyxnYj0vXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksaGI9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO2Z1bmN0aW9uIGliKGEsYixjLGQpe3ZhciBlO2lmKHIuaXNBcnJheShiKSlyLmVhY2goYixmdW5jdGlvbihiLGUpe2N8fGViLnRlc3QoYSk/ZChhLGUpOmliKGErXCJbXCIrKFwib2JqZWN0XCI9PXR5cGVvZiBlJiZudWxsIT1lP2I6XCJcIikrXCJdXCIsZSxjLGQpO1xufSk7ZWxzZSBpZihjfHxcIm9iamVjdFwiIT09ci50eXBlKGIpKWQoYSxiKTtlbHNlIGZvcihlIGluIGIpaWIoYStcIltcIitlK1wiXVwiLGJbZV0sYyxkKX1yLnBhcmFtPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD1bXSxlPWZ1bmN0aW9uKGEsYil7dmFyIGM9ci5pc0Z1bmN0aW9uKGIpP2IoKTpiO2RbZC5sZW5ndGhdPWVuY29kZVVSSUNvbXBvbmVudChhKStcIj1cIitlbmNvZGVVUklDb21wb25lbnQobnVsbD09Yz9cIlwiOmMpfTtpZihyLmlzQXJyYXkoYSl8fGEuanF1ZXJ5JiYhci5pc1BsYWluT2JqZWN0KGEpKXIuZWFjaChhLGZ1bmN0aW9uKCl7ZSh0aGlzLm5hbWUsdGhpcy52YWx1ZSl9KTtlbHNlIGZvcihjIGluIGEpaWIoYyxhW2NdLGIsZSk7cmV0dXJuIGQuam9pbihcIiZcIil9LHIuZm4uZXh0ZW5kKHtzZXJpYWxpemU6ZnVuY3Rpb24oKXtyZXR1cm4gci5wYXJhbSh0aGlzLnNlcmlhbGl6ZUFycmF5KCkpfSxzZXJpYWxpemVBcnJheTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe3ZhciBhPXIucHJvcCh0aGlzLFwiZWxlbWVudHNcIik7cmV0dXJuIGE/ci5tYWtlQXJyYXkoYSk6dGhpc30pLmZpbHRlcihmdW5jdGlvbigpe3ZhciBhPXRoaXMudHlwZTtyZXR1cm4gdGhpcy5uYW1lJiYhcih0aGlzKS5pcyhcIjpkaXNhYmxlZFwiKSYmaGIudGVzdCh0aGlzLm5vZGVOYW1lKSYmIWdiLnRlc3QoYSkmJih0aGlzLmNoZWNrZWR8fCFpYS50ZXN0KGEpKX0pLm1hcChmdW5jdGlvbihhLGIpe3ZhciBjPXIodGhpcykudmFsKCk7cmV0dXJuIG51bGw9PWM/bnVsbDpyLmlzQXJyYXkoYyk/ci5tYXAoYyxmdW5jdGlvbihhKXtyZXR1cm57bmFtZTpiLm5hbWUsdmFsdWU6YS5yZXBsYWNlKGZiLFwiXFxyXFxuXCIpfX0pOntuYW1lOmIubmFtZSx2YWx1ZTpjLnJlcGxhY2UoZmIsXCJcXHJcXG5cIil9fSkuZ2V0KCl9fSksci5mbi5leHRlbmQoe3dyYXBBbGw6ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuIHRoaXNbMF0mJihyLmlzRnVuY3Rpb24oYSkmJihhPWEuY2FsbCh0aGlzWzBdKSksYj1yKGEsdGhpc1swXS5vd25lckRvY3VtZW50KS5lcSgwKS5jbG9uZSghMCksdGhpc1swXS5wYXJlbnROb2RlJiZiLmluc2VydEJlZm9yZSh0aGlzWzBdKSxiLm1hcChmdW5jdGlvbigpe3ZhciBhPXRoaXM7d2hpbGUoYS5maXJzdEVsZW1lbnRDaGlsZClhPWEuZmlyc3RFbGVtZW50Q2hpbGQ7cmV0dXJuIGF9KS5hcHBlbmQodGhpcykpLHRoaXN9LHdyYXBJbm5lcjpmdW5jdGlvbihhKXtyZXR1cm4gci5pc0Z1bmN0aW9uKGEpP3RoaXMuZWFjaChmdW5jdGlvbihiKXtyKHRoaXMpLndyYXBJbm5lcihhLmNhbGwodGhpcyxiKSl9KTp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYj1yKHRoaXMpLGM9Yi5jb250ZW50cygpO2MubGVuZ3RoP2Mud3JhcEFsbChhKTpiLmFwcGVuZChhKX0pfSx3cmFwOmZ1bmN0aW9uKGEpe3ZhciBiPXIuaXNGdW5jdGlvbihhKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGMpe3IodGhpcykud3JhcEFsbChiP2EuY2FsbCh0aGlzLGMpOmEpfSl9LHVud3JhcDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5wYXJlbnQoYSkubm90KFwiYm9keVwiKS5lYWNoKGZ1bmN0aW9uKCl7cih0aGlzKS5yZXBsYWNlV2l0aCh0aGlzLmNoaWxkTm9kZXMpfSksdGhpc319KSxyLmV4cHIucHNldWRvcy5oaWRkZW49ZnVuY3Rpb24oYSl7cmV0dXJuIXIuZXhwci5wc2V1ZG9zLnZpc2libGUoYSl9LHIuZXhwci5wc2V1ZG9zLnZpc2libGU9ZnVuY3Rpb24oYSl7cmV0dXJuISEoYS5vZmZzZXRXaWR0aHx8YS5vZmZzZXRIZWlnaHR8fGEuZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGgpfSxvLmNyZWF0ZUhUTUxEb2N1bWVudD1mdW5jdGlvbigpe3ZhciBhPWQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KFwiXCIpLmJvZHk7cmV0dXJuIGEuaW5uZXJIVE1MPVwiPGZvcm0+PC9mb3JtPjxmb3JtPjwvZm9ybT5cIiwyPT09YS5jaGlsZE5vZGVzLmxlbmd0aH0oKSxyLnBhcnNlSFRNTD1mdW5jdGlvbihhLGIsYyl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGEpcmV0dXJuW107XCJib29sZWFuXCI9PXR5cGVvZiBiJiYoYz1iLGI9ITEpO3ZhciBlLGYsZztyZXR1cm4gYnx8KG8uY3JlYXRlSFRNTERvY3VtZW50PyhiPWQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KFwiXCIpLGU9Yi5jcmVhdGVFbGVtZW50KFwiYmFzZVwiKSxlLmhyZWY9ZC5sb2NhdGlvbi5ocmVmLGIuaGVhZC5hcHBlbmRDaGlsZChlKSk6Yj1kKSxmPUIuZXhlYyhhKSxnPSFjJiZbXSxmP1tiLmNyZWF0ZUVsZW1lbnQoZlsxXSldOihmPXBhKFthXSxiLGcpLGcmJmcubGVuZ3RoJiZyKGcpLnJlbW92ZSgpLHIubWVyZ2UoW10sZi5jaGlsZE5vZGVzKSl9O2Z1bmN0aW9uIGpiKGEpe3JldHVybiByLmlzV2luZG93KGEpP2E6OT09PWEubm9kZVR5cGUmJmEuZGVmYXVsdFZpZXd9ci5vZmZzZXQ9e3NldE9mZnNldDpmdW5jdGlvbihhLGIsYyl7dmFyIGQsZSxmLGcsaCxpLGosaz1yLmNzcyhhLFwicG9zaXRpb25cIiksbD1yKGEpLG09e307XCJzdGF0aWNcIj09PWsmJihhLnN0eWxlLnBvc2l0aW9uPVwicmVsYXRpdmVcIiksaD1sLm9mZnNldCgpLGY9ci5jc3MoYSxcInRvcFwiKSxpPXIuY3NzKGEsXCJsZWZ0XCIpLGo9KFwiYWJzb2x1dGVcIj09PWt8fFwiZml4ZWRcIj09PWspJiYoZitpKS5pbmRleE9mKFwiYXV0b1wiKT4tMSxqPyhkPWwucG9zaXRpb24oKSxnPWQudG9wLGU9ZC5sZWZ0KTooZz1wYXJzZUZsb2F0KGYpfHwwLGU9cGFyc2VGbG9hdChpKXx8MCksci5pc0Z1bmN0aW9uKGIpJiYoYj1iLmNhbGwoYSxjLHIuZXh0ZW5kKHt9LGgpKSksbnVsbCE9Yi50b3AmJihtLnRvcD1iLnRvcC1oLnRvcCtnKSxudWxsIT1iLmxlZnQmJihtLmxlZnQ9Yi5sZWZ0LWgubGVmdCtlKSxcInVzaW5nXCJpbiBiP2IudXNpbmcuY2FsbChhLG0pOmwuY3NzKG0pfX0sci5mbi5leHRlbmQoe29mZnNldDpmdW5jdGlvbihhKXtpZihhcmd1bWVudHMubGVuZ3RoKXJldHVybiB2b2lkIDA9PT1hP3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKGIpe3Iub2Zmc2V0LnNldE9mZnNldCh0aGlzLGEsYil9KTt2YXIgYixjLGQsZSxmPXRoaXNbMF07aWYoZilyZXR1cm4gZi5nZXRDbGllbnRSZWN0cygpLmxlbmd0aD8oZD1mLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGQud2lkdGh8fGQuaGVpZ2h0PyhlPWYub3duZXJEb2N1bWVudCxjPWpiKGUpLGI9ZS5kb2N1bWVudEVsZW1lbnQse3RvcDpkLnRvcCtjLnBhZ2VZT2Zmc2V0LWIuY2xpZW50VG9wLGxlZnQ6ZC5sZWZ0K2MucGFnZVhPZmZzZXQtYi5jbGllbnRMZWZ0fSk6ZCk6e3RvcDowLGxlZnQ6MH19LHBvc2l0aW9uOmZ1bmN0aW9uKCl7aWYodGhpc1swXSl7dmFyIGEsYixjPXRoaXNbMF0sZD17dG9wOjAsbGVmdDowfTtyZXR1cm5cImZpeGVkXCI9PT1yLmNzcyhjLFwicG9zaXRpb25cIik/Yj1jLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOihhPXRoaXMub2Zmc2V0UGFyZW50KCksYj10aGlzLm9mZnNldCgpLHIubm9kZU5hbWUoYVswXSxcImh0bWxcIil8fChkPWEub2Zmc2V0KCkpLGQ9e3RvcDpkLnRvcCtyLmNzcyhhWzBdLFwiYm9yZGVyVG9wV2lkdGhcIiwhMCksbGVmdDpkLmxlZnQrci5jc3MoYVswXSxcImJvcmRlckxlZnRXaWR0aFwiLCEwKX0pLHt0b3A6Yi50b3AtZC50b3Atci5jc3MoYyxcIm1hcmdpblRvcFwiLCEwKSxsZWZ0OmIubGVmdC1kLmxlZnQtci5jc3MoYyxcIm1hcmdpbkxlZnRcIiwhMCl9fX0sb2Zmc2V0UGFyZW50OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5vZmZzZXRQYXJlbnQ7d2hpbGUoYSYmXCJzdGF0aWNcIj09PXIuY3NzKGEsXCJwb3NpdGlvblwiKSlhPWEub2Zmc2V0UGFyZW50O3JldHVybiBhfHxxYX0pfX0pLHIuZWFjaCh7c2Nyb2xsTGVmdDpcInBhZ2VYT2Zmc2V0XCIsc2Nyb2xsVG9wOlwicGFnZVlPZmZzZXRcIn0sZnVuY3Rpb24oYSxiKXt2YXIgYz1cInBhZ2VZT2Zmc2V0XCI9PT1iO3IuZm5bYV09ZnVuY3Rpb24oZCl7cmV0dXJuIFModGhpcyxmdW5jdGlvbihhLGQsZSl7dmFyIGY9amIoYSk7cmV0dXJuIHZvaWQgMD09PWU/Zj9mW2JdOmFbZF06dm9pZChmP2Yuc2Nyb2xsVG8oYz9mLnBhZ2VYT2Zmc2V0OmUsYz9lOmYucGFnZVlPZmZzZXQpOmFbZF09ZSl9LGEsZCxhcmd1bWVudHMubGVuZ3RoKX19KSxyLmVhY2goW1widG9wXCIsXCJsZWZ0XCJdLGZ1bmN0aW9uKGEsYil7ci5jc3NIb29rc1tiXT1PYShvLnBpeGVsUG9zaXRpb24sZnVuY3Rpb24oYSxjKXtpZihjKXJldHVybiBjPU5hKGEsYiksTGEudGVzdChjKT9yKGEpLnBvc2l0aW9uKClbYl0rXCJweFwiOmN9KX0pLHIuZWFjaCh7SGVpZ2h0OlwiaGVpZ2h0XCIsV2lkdGg6XCJ3aWR0aFwifSxmdW5jdGlvbihhLGIpe3IuZWFjaCh7cGFkZGluZzpcImlubmVyXCIrYSxjb250ZW50OmIsXCJcIjpcIm91dGVyXCIrYX0sZnVuY3Rpb24oYyxkKXtyLmZuW2RdPWZ1bmN0aW9uKGUsZil7dmFyIGc9YXJndW1lbnRzLmxlbmd0aCYmKGN8fFwiYm9vbGVhblwiIT10eXBlb2YgZSksaD1jfHwoZT09PSEwfHxmPT09ITA/XCJtYXJnaW5cIjpcImJvcmRlclwiKTtyZXR1cm4gUyh0aGlzLGZ1bmN0aW9uKGIsYyxlKXt2YXIgZjtyZXR1cm4gci5pc1dpbmRvdyhiKT8wPT09ZC5pbmRleE9mKFwib3V0ZXJcIik/YltcImlubmVyXCIrYV06Yi5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbXCJjbGllbnRcIithXTo5PT09Yi5ub2RlVHlwZT8oZj1iLmRvY3VtZW50RWxlbWVudCxNYXRoLm1heChiLmJvZHlbXCJzY3JvbGxcIithXSxmW1wic2Nyb2xsXCIrYV0sYi5ib2R5W1wib2Zmc2V0XCIrYV0sZltcIm9mZnNldFwiK2FdLGZbXCJjbGllbnRcIithXSkpOnZvaWQgMD09PWU/ci5jc3MoYixjLGgpOnIuc3R5bGUoYixjLGUsaCl9LGIsZz9lOnZvaWQgMCxnKX19KX0pLFwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZCYmZGVmaW5lKFwianF1ZXJ5XCIsW10sZnVuY3Rpb24oKXtyZXR1cm4gcn0pO3ZhciBrYj1hLmpRdWVyeSxsYj1hLiQ7cmV0dXJuIHIubm9Db25mbGljdD1mdW5jdGlvbihiKXtyZXR1cm4gYS4kPT09ciYmKGEuJD1sYiksYiYmYS5qUXVlcnk9PT1yJiYoYS5qUXVlcnk9a2IpLHJ9LGJ8fChhLmpRdWVyeT1hLiQ9cikscn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgJCA9IHJlcXVpcmUoJy4vbGlicy9qcXVlcnkvZGlzdC9qcXVlcnkuc2xpbS5taW4uanMnKTtcbnZhciBUd2Vlbk1heCA9IHJlcXVpcmUoJy4vbGlicy9nc2FwL3NyYy91bmNvbXByZXNzZWQvVHdlZW5NYXguanMnKTtcblxuJChmdW5jdGlvbigpe1xuXG4gICAgd2luZG93LnJlcXVlc3RBbmltRnJhbWUgPSByZXF1aXJlKCcuL3JlcXVlc3RBbmltRnJhbWUuanMnKTtcbiAgICB2YXIgdGhyb3R0bGUgPSByZXF1aXJlKCcuL3Rocm90dGxlLmpzJyk7XG5cbiAgICB2YXIgd2luZG93V2lkdGggPSAkKHdpbmRvdykub3V0ZXJXaWR0aCgpLCB3aW5kb3dIZWlnaHQgPSAkKHdpbmRvdykuaGVpZ2h0KCksIGRvY0hlaWdodCA9ICQoZG9jdW1lbnQpLmhlaWdodCgpO1xuICAgIHZhciBteVNjcm9sbCwgc2Nyb2xsUGVyY2VudCwgc2Nyb2xsUHJvZ3Jlc3M7XG5cbiAgICB2YXIgYm9keSA9ICQoJ2JvZHknKSwgaGVhZGVyID0gJCgnI2hlYWRlcicpO1xuICAgIHZhciBsb2dvID0gJCgnI2xvZ28nKSwgbG9nb08gPSBsb2dvLmZpbmQoJyNsb2dvLW8nKSwgbG9nb08xID0gbG9nby5maW5kKCcjbG9nby1vMScpO1xuXG5cblxuICAgIC8vIGlzTW9iaWxlLmFueSA/IGJvZHkuYWRkQ2xhc3MoJ2lzLW1vYmlsZScpIDogYm9keS5hZGRDbGFzcygnaXMtZGVza3RvcCcpO1xuXG5cbiAgICBmdW5jdGlvbiBzaG93U2Nyb2xsSW5kaWMoKXtcbiAgICAgICAgaWYoIWxvZ28uaGFzQ2xhc3MoJ29uJykpe1xuICAgICAgICAgICAgbG9nby5hZGRDbGFzcygnb24nKTtcbiAgICAgICAgICAgIFR3ZWVuTWF4LnRvKGxvZ29PLCAwLjMsIHtvcGFjaXR5OiAxfSk7XG4gICAgICAgICAgICBUd2Vlbk1heC5zZXQobG9nb08xLCB7b3BhY2l0eTogMH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGhpZGVTY3JvbGxJbmRpYygpe1xuICAgICAgICBpZihsb2dvLmhhc0NsYXNzKCdvbicpKXtcbiAgICAgICAgICAgIGxvZ28ucmVtb3ZlQ2xhc3MoJ29uJyk7XG4gICAgICAgICAgICBUd2Vlbk1heC50byhsb2dvTywgMC4zLCB7b3BhY2l0eTogMH0pO1xuICAgICAgICAgICAgVHdlZW5NYXguc2V0KGxvZ29PMSwge29wYWNpdHk6IDF9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhlYWRlci5vbignbW91c2VlbnRlcicsIGhpZGVTY3JvbGxJbmRpYykub24oJ21vdXNlbGVhdmUnLCBmdW5jdGlvbigpe1xuICAgICAgICBpZihteVNjcm9sbCA+IDEwKXtcbiAgICAgICAgICAgIHNob3dTY3JvbGxJbmRpYygpO1xuICAgICAgICB9XG4gICAgfSk7XG5cblxuICAgICQoZG9jdW1lbnQpLm9uKCdzY3JvbGwnLCB0aHJvdHRsZShmdW5jdGlvbigpe1xuXG4gICAgICAgIG15U2Nyb2xsID0gJChkb2N1bWVudCkuc2Nyb2xsVG9wKCk7XG4gICAgICAgIHNjcm9sbFBlcmNlbnQgPSAobXlTY3JvbGwtMTApIC8gKGRvY0hlaWdodC13aW5kb3dIZWlnaHQpO1xuICAgICAgICBzY3JvbGxQcm9ncmVzcyA9IHNjcm9sbFBlcmNlbnQqMzUzO1xuXG4gICAgICAgIGlmKG15U2Nyb2xsID4gMTApe1xuICAgICAgICAgICAgc2hvd1Njcm9sbEluZGljKCk7XG4gICAgICAgICAgICBUd2Vlbk1heC5zZXQobG9nb08sIHt4OiBzY3JvbGxQcm9ncmVzcyArICdweCd9KTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICBoaWRlU2Nyb2xsSW5kaWMoKTtcbiAgICAgICAgfVxuXG4gICAgfSwgMTApKTtcblxuXG4gICAgJCh3aW5kb3cpLm9uKCdyZXNpemUnLCB0aHJvdHRsZShmdW5jdGlvbigpe1xuXG4gICAgICAgIHdpbmRvd1dpZHRoID0gJCh3aW5kb3cpLm91dGVyV2lkdGgoKTtcbiAgICAgICAgd2luZG93SGVpZ2h0ID0gJCh3aW5kb3cpLmhlaWdodCgpO1xuICAgICAgICBkb2NIZWlnaHQgPSAkKGRvY3VtZW50KS5oZWlnaHQoKTtcblxuICAgIH0sIDYwKSk7XG5cbn0pO1xuIiwibW9kdWxlLmV4cG9ydHMgPSAoZnVuY3Rpb24oKXtcbiAgICByZXR1cm4gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSAgICAgICB8fFxuICAgICAgICAgICB3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICAgICAgIHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgICAgfHxcbiAgICAgICAgICAgd2luZG93Lm9SZXF1ZXN0QW5pbWF0aW9uRnJhbWUgICAgICB8fFxuICAgICAgICAgICB3aW5kb3cubXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgICAgIHx8XG4gICAgICAgICAgIGZ1bmN0aW9uKGNhbGxiYWNrKXsgd2luZG93LnNldFRpbWVvdXQoY2FsbGJhY2ssIDEwMDAvNjApOyB9O1xufSkoKTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY2FsbGJhY2ssIGRlbGF5KXtcbiAgICB2YXIgbGFzdCwgdGltZXI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpe1xuICAgICAgICB2YXIgY29udGV4dCA9IHRoaXMsIG5vdyA9ICtuZXcgRGF0ZSgpLCBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICBpZihsYXN0ICYmIG5vdyA8IGxhc3QgKyBkZWxheSl7XG4gICAgICAgICAgICAvLyBsZSBkw6lsYWkgbidlc3QgcGFzIMOpY291bMOpIG9uIHJlc2V0IGxlIHRpbWVyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpe1xuICAgICAgICAgICAgICAgIGxhc3QgPSBub3c7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2suYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgICAgICAgICB9LCBkZWxheSk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgbGFzdCA9IG5vdztcbiAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgICB9XG4gICAgfTtcbn1cbiJdfQ==
