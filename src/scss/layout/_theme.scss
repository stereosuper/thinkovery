/* Theme */
@each $color, $theme in $themes{
	$colorprimary: map-get($theme, color);
	$colorsecondary: map-get($theme, color-secondary);
    .theme-#{$color}{
        .theme-color, h1, .lang span, a, h2 > span, h1 > strong, .baseline > span > span, .baseline-second > span > span{
        	color: $colorprimary;
        }
        ol{
            > li{
                &:before{
                    color: $colorprimary;
                }
            }
        }
        blockquote{
            p{
                &:before, &:after{
                    color: $colorprimary;
                }
            }
        }
        #bloc-revelation{
            p{
                strong{
                    color: $colorprimary;
                }
            }
        }
        #header .lang, #footer ul{
            a{
                &:hover, &:focus{
                    color: $colorprimary;
                }
            }
        }

        .post-img{
            &:before{
				background-color: $colorprimary;
            }
        }

        #logo-o, input:focus, textarea:focus{
            border-color: $colorprimary;
        }
        ul{
            > li{
                &:before{
                    border-color: $colorprimary;
                }
            }
        }

        .btn{
            background: $colorprimary;
            i:before{
                background: radial-gradient(ellipse at center, $colorsecondary 0, rgba($colorsecondary, 0) 65%);
            }
        }

        .menu-main{
            a{
                &:before{
                    background: $colorprimary;
                }
                > i:after{
                    background: radial-gradient(ellipse at center, $colorsecondary 0, rgba($colorsecondary, 0) 65%);
                }
            }
        }

        a{
            &:hover, &:focus{
                color: $colorsecondary;
            }
        }
        a, .logo{
            &:hover, &:focus{
                .theme-color{
                    color: $colorsecondary;
                }
            }
        }
        .hoop{
            fill: url(#gradient-hoop);
        }
        .title-picto{
            border-color: $colorprimary;
        }
        .title-picto{
            .icon{
                fill: $colorprimary;
            }
        }
        .slide-desc{
            .slide-title{
                color: $colorprimary;
            }
        }
        .wrapper-video{
            .cover-video{
                &:after{
                    border-left-color: $colorprimary;
                }
            }
        }
        .post{
            time{
                color: $colorprimary;
            }
            h2{
                &:before{
                    background: $colorprimary;
                }
            }
        }
    }

    .theme-yellow{
        .btn{
            color: $black!important;
            i:before{
                background: radial-gradient(ellipse at center, rgba($colorsecondary, 0.5) 0, rgba($colorsecondary, 0) 65%);
            }
        }
        .menu-main{
            a{
                &:hover, &:focus{
                    color: $black!important;
                }
                > i:after{
                    background: radial-gradient(ellipse at center, rgba($colorsecondary, 0.5) 0, rgba($colorsecondary, 0) 65%);
                }
            }
        }
    }

    @media (max-width: $desktop-small){
        .theme-#{$color}{
            #header .menu-main{
                a{
                    &:hover, &:focus{
                        color: $colorprimary;
                    }
                }
            }
        }
    }

    @media (max-width: $tablet){
        .theme-#{$color}{
            #header .link-contact a{
                color: $colorprimary;
                &:hover, &:focus{
                    color: $colorsecondary;
                }
            }
        }
    }
}
